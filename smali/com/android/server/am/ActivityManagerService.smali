.class public Lcom/android/server/am/ActivityManagerService;
.super Landroid/app/IActivityManager$Stub;
.source "ActivityManagerService.java"

# interfaces
.implements Lcom/android/server/Watchdog$Monitor;
.implements Lcom/android/internal/os/BatteryStatsImpl$BatteryCallback;


# annotations
.annotation system Ldalvik/annotation/MemberClasses;
    value = {
        Lcom/android/server/am/ActivityManagerService$SwipeToScreenshotObserver;,
        Lcom/android/server/am/ActivityManagerService$Injector;,
        Lcom/android/server/am/ActivityManagerService$LocalService;,
        Lcom/android/server/am/ActivityManagerService$MemoryUsageDumpOptions;,
        Lcom/android/server/am/ActivityManagerService$MemItem;,
        Lcom/android/server/am/ActivityManagerService$ItemMatcher;,
        Lcom/android/server/am/ActivityManagerService$NeededUriGrants;,
        Lcom/android/server/am/ActivityManagerService$IntentFirewallInterface;,
        Lcom/android/server/am/ActivityManagerService$PermissionController;,
        Lcom/android/server/am/ActivityManagerService$ProcessInfoService;,
        Lcom/android/server/am/ActivityManagerService$DumpStackFileObserver;,
        Lcom/android/server/am/ActivityManagerService$HiddenApiSettings;,
        Lcom/android/server/am/ActivityManagerService$Lifecycle;,
        Lcom/android/server/am/ActivityManagerService$CpuBinder;,
        Lcom/android/server/am/ActivityManagerService$DbBinder;,
        Lcom/android/server/am/ActivityManagerService$GraphicsBinder;,
        Lcom/android/server/am/ActivityManagerService$MemBinder;,
        Lcom/android/server/am/ActivityManagerService$MainHandler;,
        Lcom/android/server/am/ActivityManagerService$UiHandler;,
        Lcom/android/server/am/ActivityManagerService$KillHandler;,
        Lcom/android/server/am/ActivityManagerService$AppDeathRecipient;,
        Lcom/android/server/am/ActivityManagerService$OomAdjObserver;,
        Lcom/android/server/am/ActivityManagerService$UidObserverRegistration;,
        Lcom/android/server/am/ActivityManagerService$ProcessChangeItem;,
        Lcom/android/server/am/ActivityManagerService$UpdateConfigurationResult;,
        Lcom/android/server/am/ActivityManagerService$PendingTempWhitelist;,
        Lcom/android/server/am/ActivityManagerService$Identity;,
        Lcom/android/server/am/ActivityManagerService$FontScaleSettingObserver;,
        Lcom/android/server/am/ActivityManagerService$GrantUri;,
        Lcom/android/server/am/ActivityManagerService$Association;,
        Lcom/android/server/am/ActivityManagerService$ImportanceToken;,
        Lcom/android/server/am/ActivityManagerService$PendingAssistExtras;
    }
.end annotation


# static fields
.field public static final ACTION_TRIGGER_IDLE:Ljava/lang/String; = "com.android.server.ACTION_TRIGGER_IDLE"

.field static final ALLOW_FULL_ONLY:I = 0x2

.field static final ALLOW_NON_FULL:I = 0x0

.field static final ALLOW_NON_FULL_IN_PROFILE:I = 0x1

.field static final ANIMATE:Z = true

.field static final APP_SWITCH_DELAY_TIME:J = 0x3e8L

.field private static final ATTR_CREATED_TIME:Ljava/lang/String; = "createdTime"

.field private static final ATTR_MODE_FLAGS:Ljava/lang/String; = "modeFlags"

.field private static final ATTR_PREFIX:Ljava/lang/String; = "prefix"

.field private static final ATTR_SOURCE_PKG:Ljava/lang/String; = "sourcePkg"

.field private static final ATTR_SOURCE_USER_ID:Ljava/lang/String; = "sourceUserId"

.field private static final ATTR_TARGET_PKG:Ljava/lang/String; = "targetPkg"

.field private static final ATTR_TARGET_USER_ID:Ljava/lang/String; = "targetUserId"

.field private static final ATTR_URI:Ljava/lang/String; = "uri"

.field private static final ATTR_USER_HANDLE:Ljava/lang/String; = "userHandle"

.field static final BATTERY_STATS_TIME:J = 0x2932e0L

.field static final BROADCAST_BG_TIMEOUT:I = 0xea60

.field static final BROADCAST_FG_TIMEOUT:I = 0x2710

.field static final CANCEL_HEAVY_NOTIFICATION_MSG:I = 0x19

.field static final CANCEL_PRIVACY_NOTIFICATION_MSG:I = 0x5b

.field static final CHECK_EXCESSIVE_POWER_USE_MSG:I = 0x1b

.field static final CLEAR_DNS_CACHE_MSG:I = 0x1c

.field static final COLLECT_PSS_BG_MSG:I = 0x1

.field static final CONTENT_PROVIDER_PUBLISH_TIMEOUT:I = 0x2710

.field static final CONTENT_PROVIDER_PUBLISH_TIMEOUT_MSG:I = 0x39

.field static final CONTENT_PROVIDER_WAIT_TIMEOUT:I = 0x4e20

.field static final DELETE_DUMPHEAP_MSG:I = 0x33

.field static final DISMISS_DIALOG_UI_MSG:I = 0x30

.field static final DISPATCH_OOM_ADJ_OBSERVER_MSG:I = 0x46

.field static final DISPATCH_PENDING_INTENT_CANCEL_MSG:I = 0x43

.field static final DISPATCH_PROCESSES_CHANGED_UI_MSG:I = 0x1f

.field static final DISPATCH_PROCESS_DIED_UI_MSG:I = 0x20

.field static final DISPATCH_SCREEN_AWAKE_MSG:I = 0x40

.field static final DISPATCH_SCREEN_KEYGUARD_MSG:I = 0x41

.field static final DISPATCH_UIDS_CHANGED_UI_MSG:I = 0x35

.field static final DROPBOX_MAX_SIZE:I = 0x30000

.field static final DUMP_MEM_BUCKETS:[J

.field static final DUMP_MEM_OOM_ADJ:[I

.field static final DUMP_MEM_OOM_COMPACT_LABEL:[Ljava/lang/String;

.field static final DUMP_MEM_OOM_LABEL:[Ljava/lang/String;

.field static final EMPTY_STRING_ARRAY:[Ljava/lang/String;

.field static final ENTER_ANIMATION_COMPLETE_MSG:I = 0x2c

.field static final FINALIZE_PENDING_INTENT_MSG:I = 0x17

.field static final FINISH_BOOTING_MSG:I = 0x2d

.field static final FIRST_ACTIVITY_STACK_MSG:I = 0x64

.field static final FIRST_BROADCAST_QUEUE_MSG:I = 0xc8

.field static final FIRST_COMPAT_MODE_MSG:I = 0x12c

.field static final FIRST_SUPERVISOR_STACK_MSG:I = 0x64

.field static final GC_BACKGROUND_PROCESSES_MSG:I = 0x5

.field static final HANDLE_TRUST_STORAGE_UPDATE_MSG:I = 0x3f

.field static final IDLE_UIDS_MSG:I = 0x3a

.field static final IMMERSIVE_MODE_LOCK_MSG:I = 0x25

.field private static final INSTRUMENTATION_FLAG_DISABLE_HIDDEN_API_CHECKS:I = 0x1

.field static final INSTRUMENTATION_KEY_DISPATCHING_TIMEOUT:I = 0xea60

.field private static final INTENT_REMOTE_BUGREPORT_FINISHED:Ljava/lang/String; = "com.android.internal.intent.action.REMOTE_BUGREPORT_FINISHED"

.field static final KEY_DISPATCHING_TIMEOUT:I = 0x1388

.field static final KILL_APPLICATION_MSG:I = 0x16

.field private static final KSM_SHARED:I = 0x0

.field private static final KSM_SHARING:I = 0x1

.field private static final KSM_UNSHARED:I = 0x2

.field private static final KSM_VOLATILE:I = 0x3

.field static final LOG_STACK_STATE:I = 0x3c

.field private static final MAX_BUGREPORT_TITLE_SIZE:I = 0x32

.field private static final MAX_DUP_SUPPRESSED_STACKS:I = 0x1388

.field static final MAX_PERSISTED_URI_GRANTS:I = 0x80

.field private static final MAX_RECEIVERS_ALLOWED_PER_APP:I = 0x3e8

.field private static final MEMINFO_COMPACT_VERSION:I = 0x1

.field static final MONITOR_CPU_MAX_TIME:J = 0xfffffffL

.field static final MONITOR_CPU_MIN_TIME:J = 0x2710L

.field static final MONITOR_CPU_USAGE:Z = true

.field static final MONITOR_THREAD_CPU_USAGE:Z = false

.field static final MY_PID:I

.field private static final NATIVE_DUMP_TIMEOUT_MS:I = 0x7d0

.field private static final NETWORK_ACCESS_TIMEOUT_DEFAULT_MS:J = 0xc8L

.field static final NETWORK_STATE_BLOCK:I = 0x1
    .annotation build Lcom/android/internal/annotations/VisibleForTesting;
    .end annotation
.end field

.field static final NETWORK_STATE_NO_CHANGE:I = 0x0
    .annotation build Lcom/android/internal/annotations/VisibleForTesting;
    .end annotation
.end field

.field static final NETWORK_STATE_UNBLOCK:I = 0x2
    .annotation build Lcom/android/internal/annotations/VisibleForTesting;
    .end annotation
.end field

.field static final NOTIFY_CLEARTEXT_NETWORK_MSG:I = 0x31

.field static final PENDING_ASSIST_EXTRAS_LONG_TIMEOUT:I = 0x7d0

.field static final PENDING_ASSIST_EXTRAS_TIMEOUT:I = 0x1f4

.field static final PENDING_AUTOFILL_ASSIST_STRUCTURE_TIMEOUT:I = 0x7d0

.field private static final PERSISTENT_MASK:I = 0x9

.field static final PERSIST_URI_GRANTS_MSG:I = 0x26

.field static final POST_DUMP_HEAP_NOTIFICATION_MSG:I = 0x32

.field static final POST_HEAVY_NOTIFICATION_MSG:I = 0x18

.field static final POST_PRIVACY_NOTIFICATION_MSG:I = 0x5a

.field private static final PROCESS_STATE_STATS_FORMAT:[I

.field static final PROC_START_TIMEOUT:I = 0x2710

.field static final PROC_START_TIMEOUT_MSG:I = 0x14

.field static final PROC_START_TIMEOUT_WITH_WRAPPER:I = 0x124f80

.field static final PROP_REFRESH_THEME:Ljava/lang/String; = "sys.refresh_theme"

.field static final PUSH_TEMP_WHITELIST_UI_MSG:I = 0x44

.field static final REPORT_MEM_USAGE_MSG:I = 0x21

.field static final REPORT_TIME_TRACKER_MSG:I = 0x36

.field static final RESERVED_BYTES_PER_LOGCAT_LINE:I = 0x64

.field static final SEND_LOCALE_TO_MOUNT_DAEMON_MSG:I = 0x2f

.field static final SERVICE_FOREGROUND_CRASH_MSG:I = 0x45

.field static final SERVICE_FOREGROUND_TIMEOUT_MSG:I = 0x42

.field static final SERVICE_RECORD_KEY:Ljava/lang/String; = "servicerecord"

.field static final SERVICE_TIMEOUT_MSG:I = 0xc

.field static final SHOW_COMPAT_MODE_DIALOG_UI_MSG:I = 0x1e

.field static final SHOW_ERROR_UI_MSG:I = 0x1

.field static final SHOW_FACTORY_ERROR_UI_MSG:I = 0x3

.field static final SHOW_FINGERPRINT_ERROR_UI_MSG:I = 0xf

.field static final SHOW_NOT_RESPONDING_UI_MSG:I = 0x2

.field static final SHOW_STRICT_MODE_VIOLATION_UI_MSG:I = 0x1a

.field static final SHOW_UID_ERROR_UI_MSG:I = 0xe

.field static final SHUTDOWN_UI_AUTOMATION_CONNECTION_MSG:I = 0x38

.field private static final SLOW_UID_OBSERVER_THRESHOLD_MS:I = 0x14

.field static final STOCK_PM_FLAGS:I = 0x400

.field static final SYSTEM_DEBUGGABLE:Ljava/lang/String; = "ro.debuggable"

.field private static final SYSUI_COMPONENT_NAME:Ljava/lang/String; = "com.android.systemui/.SystemUIService"

.field private static final TAG:Ljava/lang/String; = "ActivityManager"

.field private static final TAG_BACKUP:Ljava/lang/String; = "ActivityManager"

.field private static final TAG_BROADCAST:Ljava/lang/String; = "ActivityManager"

.field private static final TAG_CLEANUP:Ljava/lang/String; = "ActivityManager"

.field private static final TAG_CONFIGURATION:Ljava/lang/String; = "ActivityManager"

.field private static final TAG_FOCUS:Ljava/lang/String; = "ActivityManager"

.field private static final TAG_IMMERSIVE:Ljava/lang/String; = "ActivityManager"

.field private static final TAG_LOCKTASK:Ljava/lang/String; = "ActivityManager"

.field private static final TAG_LRU:Ljava/lang/String; = "ActivityManager"

.field private static final TAG_MU:Ljava/lang/String; = "ActivityManager_MU"

.field private static final TAG_NETWORK:Ljava/lang/String; = "ActivityManager_Network"

.field private static final TAG_OOM_ADJ:Ljava/lang/String; = "ActivityManager"

.field private static final TAG_POWER:Ljava/lang/String; = "ActivityManager"

.field private static final TAG_PROCESSES:Ljava/lang/String; = "ActivityManager"

.field private static final TAG_PROCESS_OBSERVERS:Ljava/lang/String; = "ActivityManager"

.field private static final TAG_PROVIDER:Ljava/lang/String; = "ActivityManager"

.field private static final TAG_PSS:Ljava/lang/String; = "ActivityManager"

.field private static final TAG_RECENTS:Ljava/lang/String; = "ActivityManager"

.field private static final TAG_SERVICE:Ljava/lang/String; = "ActivityManager"

.field private static final TAG_STACK:Ljava/lang/String; = "ActivityManager"

.field private static final TAG_SWITCH:Ljava/lang/String; = "ActivityManager"

.field private static final TAG_UID_OBSERVERS:Ljava/lang/String; = "ActivityManager"

.field private static final TAG_URI_GRANT:Ljava/lang/String; = "uri-grant"

.field private static final TAG_URI_GRANTS:Ljava/lang/String; = "uri-grants"

.field private static final TAG_URI_PERMISSION:Ljava/lang/String; = "ActivityManager"

.field private static final TAG_VISIBILITY:Ljava/lang/String; = "ActivityManager"

.field static final TAKE_FULLSCREEN_SCREENSHOTS:Z = true

.field public static final TOP_APP_PRIORITY_BOOST:I = -0xa

.field static final UPDATE_CONFIGURATION_MSG:I = 0x4

.field static final UPDATE_HTTP_PROXY_MSG:I = 0x1d

.field static final UPDATE_TIME_PREFERENCE_MSG:I = 0x29

.field static final UPDATE_TIME_ZONE:I = 0xd

.field static final VALIDATE_UID_STATES:Z = true

.field static final VR_MODE_CHANGE_MSG:I = 0x3d

.field static final WAIT_FOR_DEBUGGER_UI_MSG:I = 0x6

.field public static mPerfServiceStartHint:Landroid/util/BoostFramework;

.field public static mUxPerf:Landroid/util/BoostFramework;

.field private static sAnrFileDateFormat:Ljava/text/SimpleDateFormat;
    .annotation build Lcom/android/internal/annotations/GuardedBy;
        value = "ActivityManagerService.class"
    .end annotation
.end field

.field private static final sCallerIdentity:Ljava/lang/ThreadLocal;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Ljava/lang/ThreadLocal<",
            "Lcom/android/server/am/ActivityManagerService$Identity;",
            ">;"
        }
    .end annotation
.end field

.field static sKillHandler:Lcom/android/server/am/ActivityManagerService$KillHandler;

.field static sKillThread:Lcom/android/server/ServiceThread;

.field private static sTheRealBuildSerial:Ljava/lang/String;

.field private static sThreadPriorityBooster:Lcom/android/server/ThreadPriorityBooster;


# instance fields
.field final GL_ES_VERSION:I

.field final mActiveInstrumentation:Ljava/util/ArrayList;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Ljava/util/ArrayList<",
            "Lcom/android/server/am/ActiveInstrumentation;",
            ">;"
        }
    .end annotation
.end field

.field mActiveProcessChanges:[Lcom/android/server/am/ActivityManagerService$ProcessChangeItem;

.field mActiveUidChanges:[Lcom/android/server/am/UidRecord$ChangeItem;

.field final mActiveUids:Landroid/util/SparseArray;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Landroid/util/SparseArray<",
            "Lcom/android/server/am/UidRecord;",
            ">;"
        }
    .end annotation
.end field

.field mActiveVoiceInteractionServiceComponent:Landroid/content/ComponentName;

.field private final mActivityStartController:Lcom/android/server/am/ActivityStartController;

.field mAdjSeq:I

.field final mAllowAppSwitchUids:Landroid/util/SparseArray;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Landroid/util/SparseArray<",
            "Landroid/util/ArrayMap<",
            "Ljava/lang/String;",
            "Ljava/lang/Integer;",
            ">;>;"
        }
    .end annotation
.end field

.field mAllowLowerMemLevel:Z

.field private final mAlreadyLoggedViolatedStacks:Ljava/util/HashSet;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Ljava/util/HashSet<",
            "Ljava/lang/Integer;",
            ">;"
        }
    .end annotation
.end field

.field mAlwaysFinishActivities:Z

.field private mAppAgentMap:Ljava/util/Map;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Ljava/util/Map<",
            "Ljava/lang/String;",
            "Ljava/lang/String;",
            ">;"
        }
    .end annotation
.end field

.field mAppBindArgs:Landroid/util/ArrayMap;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Landroid/util/ArrayMap<",
            "Ljava/lang/String;",
            "Landroid/os/IBinder;",
            ">;"
        }
    .end annotation
.end field

.field final mAppErrors:Lcom/android/server/am/AppErrors;

.field final mAppOpsService:Lcom/android/server/AppOpsService;

.field mAppSwitchesAllowedTime:J

.field final mAppWarnings:Lcom/android/server/am/AppWarnings;

.field private mAssistUtils:Lcom/android/internal/app/AssistUtils;

.field final mAssociations:Landroid/util/SparseArray;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Landroid/util/SparseArray<",
            "Landroid/util/ArrayMap<",
            "Landroid/content/ComponentName;",
            "Landroid/util/SparseArray<",
            "Landroid/util/ArrayMap<",
            "Ljava/lang/String;",
            "Lcom/android/server/am/ActivityManagerService$Association;",
            ">;>;>;>;"
        }
    .end annotation
.end field

.field final mAvailProcessChanges:Ljava/util/ArrayList;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Ljava/util/ArrayList<",
            "Lcom/android/server/am/ActivityManagerService$ProcessChangeItem;",
            ">;"
        }
    .end annotation
.end field

.field final mAvailUidChanges:Ljava/util/ArrayList;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Ljava/util/ArrayList<",
            "Lcom/android/server/am/UidRecord$ChangeItem;",
            ">;"
        }
    .end annotation
.end field

.field mBServiceAppThreshold:I

.field mBackgroundAppIdWhitelist:[I

.field mBackgroundLaunchBroadcasts:Landroid/util/ArraySet;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Landroid/util/ArraySet<",
            "Ljava/lang/String;",
            ">;"
        }
    .end annotation
.end field

.field mBackupAppName:Ljava/lang/String;

.field mBackupTarget:Lcom/android/server/am/BackupRecord;

.field final mBatteryStatsService:Lcom/android/server/am/BatteryStatsService;

.field mBgBroadcastQueue:Lcom/android/server/am/BroadcastQueue;

.field final mBgHandler:Landroid/os/Handler;

.field private mBinderTransactionTrackingEnabled:Z

.field mBootAnimationComplete:Z
    .annotation build Lcom/android/internal/annotations/GuardedBy;
        value = "this"
    .end annotation
.end field

.field mBootPhase:I

.field mBooted:Z

.field mBooting:Z
    .annotation build Lcom/android/internal/annotations/GuardedBy;
        value = "this"
    .end annotation
.end field

.field final mBroadcastQueues:[Lcom/android/server/am/BroadcastQueue;

.field mCallFinishBooting:Z
    .annotation build Lcom/android/internal/annotations/GuardedBy;
        value = "this"
    .end annotation
.end field

.field private mCheckedForSetup:Z
    .annotation build Lcom/android/internal/annotations/GuardedBy;
        value = "this"
    .end annotation
.end field

.field mCompatModeDialog:Lcom/android/server/am/CompatModeDialog;

.field final mCompatModePackages:Lcom/android/server/am/CompatModePackages;

.field private mConfigurationSeq:I

.field final mConstants:Lcom/android/server/am/ActivityManagerConstants;

.field final mContext:Landroid/content/Context;

.field mController:Landroid/app/IActivityController;

.field mControllerIsAMonkey:Z

.field mCoreSettingsObserver:Lcom/android/server/am/CoreSettingsObserver;

.field private mCurAppTimeTracker:Lcom/android/server/am/AppTimeTracker;

.field mCurBroadcastStats:Lcom/android/server/am/BroadcastStats;

.field mCurOomAdjObserver:Lcom/android/server/am/ActivityManagerService$OomAdjObserver;

.field mCurOomAdjUid:I

.field private mCurResumedPackage:Ljava/lang/String;

.field private mCurResumedUid:I

.field private mCutoutFullscreenController:Lcom/android/internal/util/custom/cutout/CutoutFullscreenController;

.field mDebugApp:Ljava/lang/String;

.field mDebugTransient:Z

.field mDeviceIdleExceptIdleWhitelist:[I

.field mDeviceIdleTempWhitelist:[I

.field mDeviceIdleWhitelist:[I

.field mDeviceOwnerName:Ljava/lang/String;

.field mDidAppSwitch:Z

.field mEnableBServicePropagation:Z

.field mEnableProcessGroupCgroupFollow:Z

.field volatile mFactoryTest:I

.field mFgBroadcastQueue:Lcom/android/server/am/BroadcastQueue;

.field mFontScaleSettingObserver:Lcom/android/server/am/ActivityManagerService$FontScaleSettingObserver;

.field mForceBackgroundCheck:Z

.field mForceResizableActivities:Z

.field final mForegroundPackages:Lcom/android/internal/app/ProcessMap;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Lcom/android/internal/app/ProcessMap<",
            "Ljava/util/ArrayList<",
            "Lcom/android/server/am/ProcessRecord;",
            ">;>;"
        }
    .end annotation
.end field

.field mFullPssPending:Z

.field mFullscreenThumbnailScale:F

.field private mGamingModeController:Lcom/android/internal/util/aospextended/GamingModeController;

.field private final mGrantFile:Landroid/util/AtomicFile;

.field private final mGrantedUriPermissions:Landroid/util/SparseArray;
    .annotation build Lcom/android/internal/annotations/GuardedBy;
        value = "this"
    .end annotation

    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Landroid/util/SparseArray<",
            "Landroid/util/ArrayMap<",
            "Lcom/android/server/am/ActivityManagerService$GrantUri;",
            "Lcom/android/server/am/UriPermission;",
            ">;>;"
        }
    .end annotation
.end field

.field final mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

.field final mHandlerThread:Lcom/android/server/ServiceThread;

.field mHasHeavyWeightFeature:Z

.field mHeavyWeightProcess:Lcom/android/server/am/ProcessRecord;

.field final mHiddenApiBlacklist:Lcom/android/server/am/ActivityManagerService$HiddenApiSettings;

.field mHomeProcess:Lcom/android/server/am/ProcessRecord;

.field final mImportantProcesses:Landroid/util/SparseArray;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Landroid/util/SparseArray<",
            "Lcom/android/server/am/ActivityManagerService$ImportanceToken;",
            ">;"
        }
    .end annotation
.end field

.field private final mInjector:Lcom/android/server/am/ActivityManagerService$Injector;

.field private mInstaller:Lcom/android/server/pm/Installer;

.field final mInstrumentationReporter:Lcom/android/server/am/InstrumentationReporter;

.field public final mIntentFirewall:Lcom/android/server/firewall/IntentFirewall;

.field final mIntentSenderRecords:Ljava/util/HashMap;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Ljava/util/HashMap<",
            "Lcom/android/server/am/PendingIntentRecord$Key;",
            "Ljava/lang/ref/WeakReference<",
            "Lcom/android/server/am/PendingIntentRecord;",
            ">;>;"
        }
    .end annotation
.end field

.field private mIsSwipeToScrenshotEnabled:Z

.field mIsolatedAppBindArgs:Landroid/util/ArrayMap;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Landroid/util/ArrayMap<",
            "Ljava/lang/String;",
            "Landroid/os/IBinder;",
            ">;"
        }
    .end annotation
.end field

.field final mIsolatedProcesses:Landroid/util/SparseArray;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Landroid/util/SparseArray<",
            "Lcom/android/server/am/ProcessRecord;",
            ">;"
        }
    .end annotation
.end field

.field private final mKeyguardController:Lcom/android/server/am/KeyguardController;

.field private mKeyguardShown:Z

.field mLastANRState:Ljava/lang/String;

.field mLastBroadcastStats:Lcom/android/server/am/BroadcastStats;

.field final mLastCpuTime:Ljava/util/concurrent/atomic/AtomicLong;

.field mLastFullPssTime:J

.field mLastIdleTime:J

.field mLastMemUsageReportTime:J

.field mLastMemoryLevel:I

.field mLastNumProcesses:I

.field mLastPowerCheckUptime:J

.field private mLastResumedActivity:Lcom/android/server/am/ActivityRecord;

.field mLastWriteTime:J

.field mLaunchWarningShown:Z
    .annotation build Lcom/android/internal/annotations/GuardedBy;
        value = "this"
    .end annotation
.end field

.field final mLaunchingProviders:Ljava/util/ArrayList;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Ljava/util/ArrayList<",
            "Lcom/android/server/am/ContentProviderRecord;",
            ">;"
        }
    .end annotation
.end field

.field private final mLifecycleManager:Lcom/android/server/am/ClientLifecycleManager;

.field mLocalDeviceIdleController:Lcom/android/server/DeviceIdleController$LocalService;

.field mLocalPowerManager:Landroid/os/PowerManagerInternal;

.field private final mLockTaskController:Lcom/android/server/am/LockTaskController;

.field mLowRamStartTime:J

.field mLowRamTimeSinceLastIdle:J

.field mLruProcessActivityStart:I

.field mLruProcessServiceStart:I

.field final mLruProcesses:Ljava/util/ArrayList;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Ljava/util/ArrayList<",
            "Lcom/android/server/am/ProcessRecord;",
            ">;"
        }
    .end annotation
.end field

.field mLruSeq:I

.field mMemWatchDumpFile:Ljava/lang/String;

.field mMemWatchDumpPid:I

.field mMemWatchDumpProcName:Ljava/lang/String;

.field mMemWatchDumpUid:I

.field final mMemWatchProcesses:Lcom/android/internal/app/ProcessMap;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Lcom/android/internal/app/ProcessMap<",
            "Landroid/util/Pair<",
            "Ljava/lang/Long;",
            "Ljava/lang/String;",
            ">;>;"
        }
    .end annotation
.end field

.field mMinBServiceAgingTime:I

.field mNativeDebuggingApp:Ljava/lang/String;

.field mNewNumAServiceProcs:I

.field mNewNumServiceProcs:I

.field mNextIsolatedProcessUid:I

.field mNumCachedHiddenProcs:I

.field mNumNonCachedProcs:I

.field mNumServiceProcs:I

.field volatile mOnBattery:Z

.field mOrigDebugApp:Ljava/lang/String;

.field mOrigWaitForDebugger:Z

.field mPackageManagerInt:Landroid/content/pm/PackageManagerInternal;

.field final mPendingAssistExtras:Ljava/util/ArrayList;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Ljava/util/ArrayList<",
            "Lcom/android/server/am/ActivityManagerService$PendingAssistExtras;",
            ">;"
        }
    .end annotation
.end field

.field final mPendingProcessChanges:Ljava/util/ArrayList;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Ljava/util/ArrayList<",
            "Lcom/android/server/am/ActivityManagerService$ProcessChangeItem;",
            ">;"
        }
    .end annotation
.end field

.field final mPendingPssProcesses:Ljava/util/ArrayList;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Ljava/util/ArrayList<",
            "Lcom/android/server/am/ProcessRecord;",
            ">;"
        }
    .end annotation
.end field

.field private final mPendingStarts:Landroid/util/LongSparseArray;
    .annotation build Lcom/android/internal/annotations/GuardedBy;
        value = "this"
    .end annotation

    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Landroid/util/LongSparseArray<",
            "Lcom/android/server/am/ProcessRecord;",
            ">;"
        }
    .end annotation
.end field

.field final mPendingTempWhitelist:Landroid/util/SparseArray;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Landroid/util/SparseArray<",
            "Lcom/android/server/am/ActivityManagerService$PendingTempWhitelist;",
            ">;"
        }
    .end annotation
.end field

.field final mPendingUidChanges:Ljava/util/ArrayList;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Ljava/util/ArrayList<",
            "Lcom/android/server/am/UidRecord$ChangeItem;",
            ">;"
        }
    .end annotation
.end field

.field final mPermissionReviewRequired:Z

.field final mPersistentStartingProcesses:Ljava/util/ArrayList;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Ljava/util/ArrayList<",
            "Lcom/android/server/am/ProcessRecord;",
            ">;"
        }
    .end annotation
.end field

.field final mPidsSelfLocked:Landroid/util/SparseArray;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Landroid/util/SparseArray<",
            "Lcom/android/server/am/ProcessRecord;",
            ">;"
        }
    .end annotation
.end field

.field mPreviousProcess:Lcom/android/server/am/ProcessRecord;

.field mPreviousProcessVisibleTime:J

.field private final mPriorityDumper:Lcom/android/server/utils/PriorityDump$PriorityDumper;

.field final mProcStartHandler:Landroid/os/Handler;

.field final mProcStartHandlerThread:Lcom/android/server/ServiceThread;

.field private mProcStartSeqCounter:J
    .annotation build Lcom/android/internal/annotations/GuardedBy;
        value = "this"
    .end annotation
.end field

.field mProcStateSeqCounter:J
    .annotation build Lcom/android/internal/annotations/GuardedBy;
        value = "this"
    .end annotation

    .annotation build Lcom/android/internal/annotations/VisibleForTesting;
    .end annotation
.end field

.field final mProcessCpuInitLatch:Ljava/util/concurrent/CountDownLatch;

.field final mProcessCpuMutexFree:Ljava/util/concurrent/atomic/AtomicBoolean;

.field final mProcessCpuThread:Ljava/lang/Thread;

.field final mProcessCpuTracker:Lcom/android/internal/os/ProcessCpuTracker;

.field final mProcessList:Lcom/android/server/am/ProcessList;

.field final mProcessNames:Lcom/android/internal/app/ProcessMap;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Lcom/android/internal/app/ProcessMap<",
            "Lcom/android/server/am/ProcessRecord;",
            ">;"
        }
    .end annotation
.end field

.field final mProcessObservers:Landroid/os/RemoteCallbackList;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Landroid/os/RemoteCallbackList<",
            "Landroid/app/IProcessObserver;",
            ">;"
        }
    .end annotation
.end field

.field private final mProcessStateStatsLongs:[J

.field final mProcessStats:Lcom/android/server/am/ProcessStatsService;

.field final mProcessesOnHold:Ljava/util/ArrayList;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Ljava/util/ArrayList<",
            "Lcom/android/server/am/ProcessRecord;",
            ">;"
        }
    .end annotation
.end field

.field volatile mProcessesReady:Z

.field final mProcessesToGc:Ljava/util/ArrayList;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Ljava/util/ArrayList<",
            "Lcom/android/server/am/ProcessRecord;",
            ">;"
        }
    .end annotation
.end field

.field mProfileApp:Ljava/lang/String;

.field mProfileProc:Lcom/android/server/am/ProcessRecord;

.field mProfileType:I

.field mProfilerInfo:Landroid/app/ProfilerInfo;

.field final mProviderMap:Lcom/android/server/am/ProviderMap;

.field final mReceiverResolver:Lcom/android/server/IntentResolver;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Lcom/android/server/IntentResolver<",
            "Lcom/android/server/am/BroadcastFilter;",
            "Lcom/android/server/am/BroadcastFilter;",
            ">;"
        }
    .end annotation
.end field

.field private final mRecentTasks:Lcom/android/server/am/RecentTasks;

.field final mRegisteredReceivers:Ljava/util/HashMap;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Ljava/util/HashMap<",
            "Landroid/os/IBinder;",
            "Lcom/android/server/am/ReceiverList;",
            ">;"
        }
    .end annotation
.end field

.field final mRemovedProcesses:Ljava/util/ArrayList;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Ljava/util/ArrayList<",
            "Lcom/android/server/am/ProcessRecord;",
            ">;"
        }
    .end annotation
.end field

.field mRunningVoice:Landroid/service/voice/IVoiceInteractionSession;

.field mSafeMode:Z

.field final mScreenObservers:Ljava/util/List;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Ljava/util/List<",
            "Landroid/app/ActivityManagerInternal$ScreenObserver;",
            ">;"
        }
    .end annotation
.end field

.field final mServices:Lcom/android/server/am/ActiveServices;

.field private mShowDialogs:Z

.field mShuttingDown:Z

.field private mSleeping:Z

.field final mStackSupervisor:Lcom/android/server/am/ActivityStackSupervisor;

.field final mStickyBroadcasts:Landroid/util/SparseArray;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Landroid/util/SparseArray<",
            "Landroid/util/ArrayMap<",
            "Ljava/lang/String;",
            "Ljava/util/ArrayList<",
            "Landroid/content/Intent;",
            ">;>;>;"
        }
    .end annotation
.end field

.field final mStringBuilder:Ljava/lang/StringBuilder;

.field private mSupportedSystemLocales:[Ljava/lang/String;

.field mSupportsFreeformWindowManagement:Z

.field mSupportsLeanbackOnly:Z

.field mSupportsMultiDisplay:Z

.field mSupportsMultiWindow:Z

.field mSupportsPictureInPicture:Z

.field mSupportsSplitScreenMultiWindow:Z

.field mSuppressResizeConfigChanges:Z

.field final mSwipeToScreenshotObserver:Lcom/android/server/am/ActivityManagerService$SwipeToScreenshotObserver;

.field mSystemProvidersInstalled:Z

.field volatile mSystemReady:Z

.field mSystemServiceManager:Lcom/android/server/SystemServiceManager;

.field final mSystemThread:Landroid/app/ActivityThread;

.field final mTaskChangeNotificationController:Lcom/android/server/am/TaskChangeNotificationController;

.field private mTempConfig:Landroid/content/res/Configuration;

.field mTestPssMode:Z

.field mThumbnailHeight:I

.field mThumbnailWidth:I

.field private final mTmpBroadcastQueue:Landroid/util/ArraySet;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Landroid/util/ArraySet<",
            "Lcom/android/server/am/BroadcastQueue;",
            ">;"
        }
    .end annotation
.end field

.field final mTmpLong:[J

.field private final mTmpUpdateConfigurationResult:Lcom/android/server/am/ActivityManagerService$UpdateConfigurationResult;

.field mTopAction:Ljava/lang/String;

.field mTopComponent:Landroid/content/ComponentName;

.field mTopData:Ljava/lang/String;

.field mTopProcessState:I

.field private mTracedResumedActivity:Lcom/android/server/am/ActivityRecord;

.field mTrackAllocationApp:Ljava/lang/String;

.field mTrackingAssociations:Z

.field final mUiContext:Landroid/content/Context;

.field final mUiHandler:Landroid/os/Handler;

.field mUidChangeDispatchCount:I

.field final mUidObservers:Landroid/os/RemoteCallbackList;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Landroid/os/RemoteCallbackList<",
            "Landroid/app/IUidObserver;",
            ">;"
        }
    .end annotation
.end field

.field final mUpdateLock:Landroid/os/UpdateLock;

.field mUsageStatsService:Landroid/app/usage/UsageStatsManagerInternal;

.field private mUseFifoUiScheduling:Z

.field final mUserController:Lcom/android/server/am/UserController;

.field private mUserIsMonkey:Z

.field final mValidateUids:Landroid/util/SparseArray;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Landroid/util/SparseArray<",
            "Lcom/android/server/am/UidRecord;",
            ">;"
        }
    .end annotation
.end field

.field private mViSessionId:I

.field mVoiceWakeLock:Landroid/os/PowerManager$WakeLock;

.field mVr2dDisplayId:I

.field private final mVrController:Lcom/android/server/am/VrController;

.field mWaitForDebugger:Z

.field mWaitForNetworkTimeoutMs:J
    .annotation build Lcom/android/internal/annotations/VisibleForTesting;
    .end annotation
.end field

.field private mWakefulness:I

.field mWindowManager:Lcom/android/server/wm/WindowManagerService;

.field private volatile mWtfClusterCount:I

.field private volatile mWtfClusterStart:J


# direct methods
.method static constructor <clinit>()V
    .locals 15

    .line 632
    invoke-static {}, Landroid/os/Process;->myPid()I

    move-result v0

    sput v0, Lcom/android/server/am/ActivityManagerService;->MY_PID:I

    .line 634
    const/4 v0, 0x0

    new-array v0, v0, [Ljava/lang/String;

    sput-object v0, Lcom/android/server/am/ActivityManagerService;->EMPTY_STRING_ARRAY:[Ljava/lang/String;

    .line 696
    const/4 v0, 0x0

    sput-object v0, Lcom/android/server/am/ActivityManagerService;->mPerfServiceStartHint:Landroid/util/BoostFramework;

    .line 698
    new-instance v1, Landroid/util/BoostFramework;

    invoke-direct {v1}, Landroid/util/BoostFramework;-><init>()V

    sput-object v1, Lcom/android/server/am/ActivityManagerService;->mUxPerf:Landroid/util/BoostFramework;

    .line 857
    new-instance v1, Lcom/android/server/ThreadPriorityBooster;

    const/4 v2, -0x2

    const/4 v3, 0x6

    invoke-direct {v1, v2, v3}, Lcom/android/server/ThreadPriorityBooster;-><init>(II)V

    sput-object v1, Lcom/android/server/am/ActivityManagerService;->sThreadPriorityBooster:Lcom/android/server/ThreadPriorityBooster;

    .line 1386
    new-instance v1, Ljava/lang/ThreadLocal;

    invoke-direct {v1}, Ljava/lang/ThreadLocal;-><init>()V

    sput-object v1, Lcom/android/server/am/ActivityManagerService;->sCallerIdentity:Ljava/lang/ThreadLocal;

    .line 1975
    sput-object v0, Lcom/android/server/am/ActivityManagerService;->sKillThread:Lcom/android/server/ServiceThread;

    .line 1976
    sput-object v0, Lcom/android/server/am/ActivityManagerService;->sKillHandler:Lcom/android/server/am/ActivityManagerService$KillHandler;

    .line 2032
    const-string/jumbo v0, "unknown"

    sput-object v0, Lcom/android/server/am/ActivityManagerService;->sTheRealBuildSerial:Ljava/lang/String;

    .line 12351
    const/4 v0, 0x3

    new-array v0, v0, [I

    fill-array-data v0, :array_0

    sput-object v0, Lcom/android/server/am/ActivityManagerService;->PROCESS_STATE_STATS_FORMAT:[I

    .line 18911
    const/16 v0, 0x17

    new-array v0, v0, [J

    fill-array-data v0, :array_1

    sput-object v0, Lcom/android/server/am/ActivityManagerService;->DUMP_MEM_BUCKETS:[J

    .line 18938
    const/16 v0, 0xe

    new-array v0, v0, [I

    fill-array-data v0, :array_2

    sput-object v0, Lcom/android/server/am/ActivityManagerService;->DUMP_MEM_OOM_ADJ:[I

    .line 18947
    const-string v1, "Native"

    const-string v2, "System"

    const-string v3, "Persistent"

    const-string v4, "Persistent Service"

    const-string v5, "Foreground"

    const-string v6, "Visible"

    const-string v7, "Perceptible"

    const-string v8, "Heavy Weight"

    const-string v9, "Backup"

    const-string v10, "A Services"

    const-string v11, "Home"

    const-string v12, "Previous"

    const-string v13, "B Services"

    const-string v14, "Cached"

    filled-new-array/range {v1 .. v14}, [Ljava/lang/String;

    move-result-object v0

    sput-object v0, Lcom/android/server/am/ActivityManagerService;->DUMP_MEM_OOM_LABEL:[Ljava/lang/String;

    .line 18955
    const-string v1, "native"

    const-string/jumbo v2, "sys"

    const-string/jumbo v3, "pers"

    const-string/jumbo v4, "persvc"

    const-string v5, "fore"

    const-string/jumbo v6, "vis"

    const-string/jumbo v7, "percept"

    const-string v8, "heavy"

    const-string v9, "backup"

    const-string/jumbo v10, "servicea"

    const-string v11, "home"

    const-string/jumbo v12, "prev"

    const-string/jumbo v13, "serviceb"

    const-string v14, "cached"

    filled-new-array/range {v1 .. v14}, [Ljava/lang/String;

    move-result-object v0

    sput-object v0, Lcom/android/server/am/ActivityManagerService;->DUMP_MEM_OOM_COMPACT_LABEL:[Ljava/lang/String;

    return-void

    nop

    :array_0
    .array-data 4
        0x20
        0x220
        0x2820
    .end array-data

    :array_1
    .array-data 8
        0x1400
        0x1c00
        0x2800
        0x3c00
        0x5000
        0x7800
        0xa000
        0x14000
        0x1e000
        0x28000
        0x32000
        0x3e800
        0x4b000
        0x57800
        0x64000
        0x7d000
        0x96000
        0xc8000
        0x100000
        0x200000
        0x500000
        0xa00000
        0x1400000
    .end array-data

    :array_2
    .array-data 4
        -0x3e8
        -0x384
        -0x320
        -0x2bc
        0x0
        0x64
        0xc8
        0x12c
        0x190
        0x1f4
        0x258
        0x2bc
        0x320
        0x384
    .end array-data
.end method

.method public constructor <init>(Landroid/content/Context;)V
    .locals 11

    .line 3162
    invoke-direct {p0}, Landroid/app/IActivityManager$Stub;-><init>()V

    .line 722
    new-instance v1, Lcom/android/server/am/InstrumentationReporter;

    invoke-direct {v1}, Lcom/android/server/am/InstrumentationReporter;-><init>()V

    iput-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mInstrumentationReporter:Lcom/android/server/am/InstrumentationReporter;

    .line 724
    new-instance v1, Ljava/util/ArrayList;

    invoke-direct {v1}, Ljava/util/ArrayList;-><init>()V

    iput-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mActiveInstrumentation:Ljava/util/ArrayList;

    .line 731
    const/4 v8, 0x1

    iput-boolean v8, p0, Lcom/android/server/am/ActivityManagerService;->mShowDialogs:Z

    .line 736
    const/4 v1, -0x1

    iput v1, p0, Lcom/android/server/am/ActivityManagerService;->mVr2dDisplayId:I

    .line 739
    const/4 v9, 0x0

    iput-boolean v9, p0, Lcom/android/server/am/ActivityManagerService;->mUseFifoUiScheduling:Z

    .line 747
    const/4 v2, 0x2

    new-array v3, v2, [Lcom/android/server/am/BroadcastQueue;

    iput-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mBroadcastQueues:[Lcom/android/server/am/BroadcastQueue;

    .line 800
    new-instance v3, Landroid/util/SparseArray;

    invoke-direct {v3}, Landroid/util/SparseArray;-><init>()V

    iput-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mAllowAppSwitchUids:Landroid/util/SparseArray;

    .line 828
    new-instance v3, Lcom/android/server/am/ActivityManagerService$1;

    invoke-direct {v3, p0}, Lcom/android/server/am/ActivityManagerService$1;-><init>(Lcom/android/server/am/ActivityManagerService;)V

    iput-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mPriorityDumper:Lcom/android/server/utils/PriorityDump$PriorityDumper;

    .line 905
    new-instance v3, Ljava/util/ArrayList;

    invoke-direct {v3}, Ljava/util/ArrayList;-><init>()V

    iput-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mPendingAssistExtras:Ljava/util/ArrayList;

    .line 910
    new-instance v3, Lcom/android/server/am/ProcessList;

    invoke-direct {v3}, Lcom/android/server/am/ProcessList;-><init>()V

    iput-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mProcessList:Lcom/android/server/am/ProcessList;

    .line 918
    new-instance v3, Lcom/android/internal/app/ProcessMap;

    invoke-direct {v3}, Lcom/android/internal/app/ProcessMap;-><init>()V

    iput-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mProcessNames:Lcom/android/internal/app/ProcessMap;

    .line 929
    new-instance v3, Landroid/util/SparseArray;

    invoke-direct {v3}, Landroid/util/SparseArray;-><init>()V

    iput-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mIsolatedProcesses:Landroid/util/SparseArray;

    .line 935
    iput v9, p0, Lcom/android/server/am/ActivityManagerService;->mNextIsolatedProcessUid:I

    .line 940
    const/4 v3, 0x0

    iput-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mHeavyWeightProcess:Lcom/android/server/am/ProcessRecord;

    .line 945
    new-array v4, v8, [I

    const/16 v5, 0x3ea

    aput v5, v4, v9

    iput-object v4, p0, Lcom/android/server/am/ActivityManagerService;->mBackgroundAppIdWhitelist:[I

    .line 961
    new-instance v4, Landroid/util/SparseArray;

    invoke-direct {v4}, Landroid/util/SparseArray;-><init>()V

    iput-object v4, p0, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Landroid/util/SparseArray;

    .line 995
    new-instance v4, Landroid/util/SparseArray;

    invoke-direct {v4}, Landroid/util/SparseArray;-><init>()V

    iput-object v4, p0, Lcom/android/server/am/ActivityManagerService;->mImportantProcesses:Landroid/util/SparseArray;

    .line 1002
    new-instance v4, Ljava/util/ArrayList;

    invoke-direct {v4}, Ljava/util/ArrayList;-><init>()V

    iput-object v4, p0, Lcom/android/server/am/ActivityManagerService;->mProcessesOnHold:Ljava/util/ArrayList;

    .line 1008
    new-instance v4, Ljava/util/ArrayList;

    invoke-direct {v4}, Ljava/util/ArrayList;-><init>()V

    iput-object v4, p0, Lcom/android/server/am/ActivityManagerService;->mPersistentStartingProcesses:Ljava/util/ArrayList;

    .line 1013
    new-instance v4, Ljava/util/ArrayList;

    invoke-direct {v4}, Ljava/util/ArrayList;-><init>()V

    iput-object v4, p0, Lcom/android/server/am/ActivityManagerService;->mRemovedProcesses:Ljava/util/ArrayList;

    .line 1019
    new-instance v4, Ljava/util/ArrayList;

    invoke-direct {v4}, Ljava/util/ArrayList;-><init>()V

    iput-object v4, p0, Lcom/android/server/am/ActivityManagerService;->mLruProcesses:Ljava/util/ArrayList;

    .line 1024
    iput v9, p0, Lcom/android/server/am/ActivityManagerService;->mLruProcessActivityStart:I

    .line 1030
    iput v9, p0, Lcom/android/server/am/ActivityManagerService;->mLruProcessServiceStart:I

    .line 1035
    new-instance v4, Ljava/util/ArrayList;

    invoke-direct {v4}, Ljava/util/ArrayList;-><init>()V

    iput-object v4, p0, Lcom/android/server/am/ActivityManagerService;->mProcessesToGc:Ljava/util/ArrayList;

    .line 1040
    new-instance v4, Ljava/util/ArrayList;

    invoke-direct {v4}, Ljava/util/ArrayList;-><init>()V

    iput-object v4, p0, Lcom/android/server/am/ActivityManagerService;->mPendingPssProcesses:Ljava/util/ArrayList;

    .line 1042
    iput-boolean v9, p0, Lcom/android/server/am/ActivityManagerService;->mBinderTransactionTrackingEnabled:Z

    .line 1047
    invoke-static {}, Landroid/os/SystemClock;->uptimeMillis()J

    move-result-wide v4

    iput-wide v4, p0, Lcom/android/server/am/ActivityManagerService;->mLastFullPssTime:J

    .line 1053
    iput-boolean v9, p0, Lcom/android/server/am/ActivityManagerService;->mFullPssPending:Z

    .line 1075
    new-instance v4, Landroid/util/SparseArray;

    invoke-direct {v4}, Landroid/util/SparseArray;-><init>()V

    iput-object v4, p0, Lcom/android/server/am/ActivityManagerService;->mActiveUids:Landroid/util/SparseArray;

    .line 1081
    new-instance v4, Landroid/util/SparseArray;

    invoke-direct {v4}, Landroid/util/SparseArray;-><init>()V

    iput-object v4, p0, Lcom/android/server/am/ActivityManagerService;->mValidateUids:Landroid/util/SparseArray;

    .line 1092
    new-instance v4, Ljava/util/HashMap;

    invoke-direct {v4}, Ljava/util/HashMap;-><init>()V

    iput-object v4, p0, Lcom/android/server/am/ActivityManagerService;->mIntentSenderRecords:Ljava/util/HashMap;

    .line 1101
    new-instance v4, Ljava/util/HashSet;

    invoke-direct {v4}, Ljava/util/HashSet;-><init>()V

    iput-object v4, p0, Lcom/android/server/am/ActivityManagerService;->mAlreadyLoggedViolatedStacks:Ljava/util/HashSet;

    .line 1108
    new-instance v4, Ljava/util/HashMap;

    invoke-direct {v4}, Ljava/util/HashMap;-><init>()V

    iput-object v4, p0, Lcom/android/server/am/ActivityManagerService;->mRegisteredReceivers:Ljava/util/HashMap;

    .line 1114
    new-instance v4, Lcom/android/server/am/ActivityManagerService$2;

    invoke-direct {v4, p0}, Lcom/android/server/am/ActivityManagerService$2;-><init>(Lcom/android/server/am/ActivityManagerService;)V

    iput-object v4, p0, Lcom/android/server/am/ActivityManagerService;->mReceiverResolver:Lcom/android/server/IntentResolver;

    .line 1160
    new-instance v4, Landroid/util/SparseArray;

    invoke-direct {v4}, Landroid/util/SparseArray;-><init>()V

    iput-object v4, p0, Lcom/android/server/am/ActivityManagerService;->mStickyBroadcasts:Landroid/util/SparseArray;

    .line 1199
    new-instance v4, Landroid/util/SparseArray;

    invoke-direct {v4}, Landroid/util/SparseArray;-><init>()V

    iput-object v4, p0, Lcom/android/server/am/ActivityManagerService;->mAssociations:Landroid/util/SparseArray;

    .line 1206
    iput-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mBackupAppName:Ljava/lang/String;

    .line 1207
    iput-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mBackupTarget:Lcom/android/server/am/BackupRecord;

    .line 1216
    new-instance v4, Ljava/util/ArrayList;

    invoke-direct {v4}, Ljava/util/ArrayList;-><init>()V

    iput-object v4, p0, Lcom/android/server/am/ActivityManagerService;->mLaunchingProviders:Ljava/util/ArrayList;

    .line 1242
    new-instance v4, Landroid/util/SparseArray;

    invoke-direct {v4}, Landroid/util/SparseArray;-><init>()V

    iput-object v4, p0, Lcom/android/server/am/ActivityManagerService;->mGrantedUriPermissions:Landroid/util/SparseArray;

    .line 1407
    new-array v4, v9, [I

    iput-object v4, p0, Lcom/android/server/am/ActivityManagerService;->mDeviceIdleWhitelist:[I

    .line 1412
    new-array v4, v9, [I

    iput-object v4, p0, Lcom/android/server/am/ActivityManagerService;->mDeviceIdleExceptIdleWhitelist:[I

    .line 1417
    new-array v4, v9, [I

    iput-object v4, p0, Lcom/android/server/am/ActivityManagerService;->mDeviceIdleTempWhitelist:[I

    .line 1439
    new-instance v4, Landroid/util/SparseArray;

    invoke-direct {v4}, Landroid/util/SparseArray;-><init>()V

    iput-object v4, p0, Lcom/android/server/am/ActivityManagerService;->mPendingTempWhitelist:Landroid/util/SparseArray;

    .line 1454
    new-instance v4, Landroid/content/res/Configuration;

    invoke-direct {v4}, Landroid/content/res/Configuration;-><init>()V

    iput-object v4, p0, Lcom/android/server/am/ActivityManagerService;->mTempConfig:Landroid/content/res/Configuration;

    .line 1456
    new-instance v4, Lcom/android/server/am/ActivityManagerService$UpdateConfigurationResult;

    invoke-direct {v4, v3}, Lcom/android/server/am/ActivityManagerService$UpdateConfigurationResult;-><init>(Lcom/android/server/am/ActivityManagerService$1;)V

    iput-object v4, p0, Lcom/android/server/am/ActivityManagerService;->mTmpUpdateConfigurationResult:Lcom/android/server/am/ActivityManagerService$UpdateConfigurationResult;

    .line 1487
    new-instance v4, Ljava/lang/StringBuilder;

    const/16 v5, 0x100

    invoke-direct {v4, v5}, Ljava/lang/StringBuilder;-><init>(I)V

    iput-object v4, p0, Lcom/android/server/am/ActivityManagerService;->mStringBuilder:Ljava/lang/StringBuilder;

    .line 1493
    const-string v4, "android.intent.action.MAIN"

    iput-object v4, p0, Lcom/android/server/am/ActivityManagerService;->mTopAction:Ljava/lang/String;

    .line 1496
    iput-boolean v9, p0, Lcom/android/server/am/ActivityManagerService;->mProcessesReady:Z

    .line 1497
    iput-boolean v9, p0, Lcom/android/server/am/ActivityManagerService;->mSystemReady:Z

    .line 1498
    iput-boolean v9, p0, Lcom/android/server/am/ActivityManagerService;->mOnBattery:Z

    .line 1501
    iput-boolean v9, p0, Lcom/android/server/am/ActivityManagerService;->mBooting:Z

    .line 1502
    iput-boolean v9, p0, Lcom/android/server/am/ActivityManagerService;->mCallFinishBooting:Z

    .line 1503
    iput-boolean v9, p0, Lcom/android/server/am/ActivityManagerService;->mBootAnimationComplete:Z

    .line 1504
    iput-boolean v9, p0, Lcom/android/server/am/ActivityManagerService;->mLaunchWarningShown:Z

    .line 1505
    iput-boolean v9, p0, Lcom/android/server/am/ActivityManagerService;->mCheckedForSetup:Z

    .line 1545
    iput-boolean v9, p0, Lcom/android/server/am/ActivityManagerService;->mSleeping:Z

    .line 1551
    iput v2, p0, Lcom/android/server/am/ActivityManagerService;->mTopProcessState:I

    .line 1574
    iput v8, p0, Lcom/android/server/am/ActivityManagerService;->mWakefulness:I

    .line 1579
    iput-boolean v9, p0, Lcom/android/server/am/ActivityManagerService;->mKeyguardShown:Z

    .line 1584
    iput-boolean v9, p0, Lcom/android/server/am/ActivityManagerService;->mShuttingDown:Z

    .line 1589
    iput v9, p0, Lcom/android/server/am/ActivityManagerService;->mAdjSeq:I

    .line 1594
    iput v9, p0, Lcom/android/server/am/ActivityManagerService;->mLruSeq:I

    .line 1600
    iput v9, p0, Lcom/android/server/am/ActivityManagerService;->mNumNonCachedProcs:I

    .line 1606
    iput v9, p0, Lcom/android/server/am/ActivityManagerService;->mNumCachedHiddenProcs:I

    .line 1612
    iput v9, p0, Lcom/android/server/am/ActivityManagerService;->mNumServiceProcs:I

    .line 1613
    iput v9, p0, Lcom/android/server/am/ActivityManagerService;->mNewNumAServiceProcs:I

    .line 1614
    iput v9, p0, Lcom/android/server/am/ActivityManagerService;->mNewNumServiceProcs:I

    .line 1622
    iput-boolean v9, p0, Lcom/android/server/am/ActivityManagerService;->mAllowLowerMemLevel:Z

    .line 1628
    iput v9, p0, Lcom/android/server/am/ActivityManagerService;->mLastMemoryLevel:I

    .line 1639
    invoke-static {}, Landroid/os/SystemClock;->uptimeMillis()J

    move-result-wide v4

    iput-wide v4, p0, Lcom/android/server/am/ActivityManagerService;->mLastIdleTime:J

    .line 1644
    const-wide/16 v4, 0x0

    iput-wide v4, p0, Lcom/android/server/am/ActivityManagerService;->mLowRamTimeSinceLastIdle:J

    .line 1649
    iput-wide v4, p0, Lcom/android/server/am/ActivityManagerService;->mLowRamStartTime:J

    .line 1654
    iput-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mCurResumedPackage:Ljava/lang/String;

    .line 1655
    iput v1, p0, Lcom/android/server/am/ActivityManagerService;->mCurResumedUid:I

    .line 1662
    new-instance v1, Lcom/android/internal/app/ProcessMap;

    invoke-direct {v1}, Lcom/android/internal/app/ProcessMap;-><init>()V

    iput-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mForegroundPackages:Lcom/android/internal/app/ProcessMap;

    .line 1675
    iput-boolean v9, p0, Lcom/android/server/am/ActivityManagerService;->mTestPssMode:Z

    .line 1677
    iput-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mDebugApp:Ljava/lang/String;

    .line 1678
    iput-boolean v9, p0, Lcom/android/server/am/ActivityManagerService;->mWaitForDebugger:Z

    .line 1679
    iput-boolean v9, p0, Lcom/android/server/am/ActivityManagerService;->mDebugTransient:Z

    .line 1680
    iput-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mOrigDebugApp:Ljava/lang/String;

    .line 1681
    iput-boolean v9, p0, Lcom/android/server/am/ActivityManagerService;->mOrigWaitForDebugger:Z

    .line 1682
    iput-boolean v9, p0, Lcom/android/server/am/ActivityManagerService;->mAlwaysFinishActivities:Z

    .line 1704
    iput-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mController:Landroid/app/IActivityController;

    .line 1705
    iput-boolean v9, p0, Lcom/android/server/am/ActivityManagerService;->mControllerIsAMonkey:Z

    .line 1706
    iput-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mProfileApp:Ljava/lang/String;

    .line 1707
    iput-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mProfileProc:Lcom/android/server/am/ProcessRecord;

    .line 1708
    iput-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mProfilerInfo:Landroid/app/ProfilerInfo;

    .line 1715
    iput-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mAppAgentMap:Ljava/util/Map;

    .line 1717
    iput v9, p0, Lcom/android/server/am/ActivityManagerService;->mProfileType:I

    .line 1718
    new-instance v1, Lcom/android/internal/app/ProcessMap;

    invoke-direct {v1}, Lcom/android/internal/app/ProcessMap;-><init>()V

    iput-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mMemWatchProcesses:Lcom/android/internal/app/ProcessMap;

    .line 1723
    iput-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mTrackAllocationApp:Ljava/lang/String;

    .line 1724
    iput-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mNativeDebuggingApp:Ljava/lang/String;

    .line 1726
    const/4 v1, 0x3

    new-array v1, v1, [J

    iput-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mTmpLong:[J

    .line 1728
    new-instance v1, Landroid/util/ArraySet;

    invoke-direct {v1}, Landroid/util/ArraySet;-><init>()V

    iput-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mTmpBroadcastQueue:Landroid/util/ArraySet;

    .line 1737
    iput-wide v4, p0, Lcom/android/server/am/ActivityManagerService;->mProcStateSeqCounter:J

    .line 1744
    iput-wide v4, p0, Lcom/android/server/am/ActivityManagerService;->mProcStartSeqCounter:J

    .line 1752
    new-instance v1, Landroid/util/LongSparseArray;

    invoke-direct {v1}, Landroid/util/LongSparseArray;-><init>()V

    iput-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mPendingStarts:Landroid/util/LongSparseArray;

    .line 1829
    new-instance v1, Ljava/util/ArrayList;

    invoke-direct {v1}, Ljava/util/ArrayList;-><init>()V

    iput-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mScreenObservers:Ljava/util/List;

    .line 1831
    new-instance v1, Landroid/os/RemoteCallbackList;

    invoke-direct {v1}, Landroid/os/RemoteCallbackList;-><init>()V

    iput-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mProcessObservers:Landroid/os/RemoteCallbackList;

    .line 1832
    const/4 v1, 0x5

    new-array v2, v1, [Lcom/android/server/am/ActivityManagerService$ProcessChangeItem;

    iput-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mActiveProcessChanges:[Lcom/android/server/am/ActivityManagerService$ProcessChangeItem;

    .line 1834
    new-instance v2, Ljava/util/ArrayList;

    invoke-direct {v2}, Ljava/util/ArrayList;-><init>()V

    iput-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mPendingProcessChanges:Ljava/util/ArrayList;

    .line 1835
    new-instance v2, Ljava/util/ArrayList;

    invoke-direct {v2}, Ljava/util/ArrayList;-><init>()V

    iput-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mAvailProcessChanges:Ljava/util/ArrayList;

    .line 1837
    new-instance v2, Landroid/os/RemoteCallbackList;

    invoke-direct {v2}, Landroid/os/RemoteCallbackList;-><init>()V

    iput-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mUidObservers:Landroid/os/RemoteCallbackList;

    .line 1838
    new-array v2, v1, [Lcom/android/server/am/UidRecord$ChangeItem;

    iput-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mActiveUidChanges:[Lcom/android/server/am/UidRecord$ChangeItem;

    .line 1840
    new-instance v2, Ljava/util/ArrayList;

    invoke-direct {v2}, Ljava/util/ArrayList;-><init>()V

    iput-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mPendingUidChanges:Ljava/util/ArrayList;

    .line 1841
    new-instance v2, Ljava/util/ArrayList;

    invoke-direct {v2}, Ljava/util/ArrayList;-><init>()V

    iput-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mAvailUidChanges:Ljava/util/ArrayList;

    .line 1863
    new-instance v2, Lcom/android/internal/os/ProcessCpuTracker;

    invoke-direct {v2, v9}, Lcom/android/internal/os/ProcessCpuTracker;-><init>(Z)V

    iput-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mProcessCpuTracker:Lcom/android/internal/os/ProcessCpuTracker;

    .line 1865
    new-instance v2, Ljava/util/concurrent/atomic/AtomicLong;

    invoke-direct {v2, v4, v5}, Ljava/util/concurrent/atomic/AtomicLong;-><init>(J)V

    iput-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mLastCpuTime:Ljava/util/concurrent/atomic/AtomicLong;

    .line 1866
    new-instance v2, Ljava/util/concurrent/atomic/AtomicBoolean;

    invoke-direct {v2, v8}, Ljava/util/concurrent/atomic/AtomicBoolean;-><init>(Z)V

    iput-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mProcessCpuMutexFree:Ljava/util/concurrent/atomic/AtomicBoolean;

    .line 1867
    new-instance v2, Ljava/util/concurrent/CountDownLatch;

    invoke-direct {v2, v8}, Ljava/util/concurrent/CountDownLatch;-><init>(I)V

    iput-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mProcessCpuInitLatch:Ljava/util/concurrent/CountDownLatch;

    .line 1869
    iput-wide v4, p0, Lcom/android/server/am/ActivityManagerService;->mLastWriteTime:J

    .line 1875
    new-instance v2, Landroid/os/UpdateLock;

    const-string v6, "immersive"

    invoke-direct {v2, v6}, Landroid/os/UpdateLock;-><init>(Ljava/lang/String;)V

    iput-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mUpdateLock:Landroid/os/UpdateLock;

    .line 1880
    iput-boolean v9, p0, Lcom/android/server/am/ActivityManagerService;->mBooted:Z

    .line 1979
    iput-wide v4, p0, Lcom/android/server/am/ActivityManagerService;->mLastMemUsageReportTime:J

    .line 1982
    const-string/jumbo v2, "ro.vendor.qti.sys.fw.bservice_age"

    .line 1983
    const/16 v4, 0x1388

    invoke-static {v2, v4}, Landroid/os/SystemProperties;->getInt(Ljava/lang/String;I)I

    move-result v2

    iput v2, p0, Lcom/android/server/am/ActivityManagerService;->mMinBServiceAgingTime:I

    .line 1985
    const-string/jumbo v2, "ro.vendor.qti.sys.fw.bservice_limit"

    .line 1986
    invoke-static {v2, v1}, Landroid/os/SystemProperties;->getInt(Ljava/lang/String;I)I

    move-result v1

    iput v1, p0, Lcom/android/server/am/ActivityManagerService;->mBServiceAppThreshold:I

    .line 1988
    const-string/jumbo v1, "ro.vendor.qti.sys.fw.bservice_enable"

    .line 1989
    invoke-static {v1, v9}, Landroid/os/SystemProperties;->getBoolean(Ljava/lang/String;Z)Z

    move-result v1

    iput-boolean v1, p0, Lcom/android/server/am/ActivityManagerService;->mEnableBServicePropagation:Z

    .line 1992
    const-string/jumbo v1, "ro.vendor.qti.cgroup_follow.enable"

    .line 1993
    invoke-static {v1, v9}, Landroid/os/SystemProperties;->getBoolean(Ljava/lang/String;Z)Z

    move-result v1

    iput-boolean v1, p0, Lcom/android/server/am/ActivityManagerService;->mEnableProcessGroupCgroupFollow:Z

    .line 2021
    const/16 v1, 0x3e8

    iput v1, p0, Lcom/android/server/am/ActivityManagerService;->mViSessionId:I

    .line 2724
    new-instance v1, Lcom/android/server/am/ActivityManagerService$3;

    invoke-static {}, Lcom/android/internal/os/BackgroundThread;->getHandler()Landroid/os/Handler;

    move-result-object v2

    invoke-virtual {v2}, Landroid/os/Handler;->getLooper()Landroid/os/Looper;

    move-result-object v2

    invoke-direct {v1, p0, v2}, Lcom/android/server/am/ActivityManagerService$3;-><init>(Lcom/android/server/am/ActivityManagerService;Landroid/os/Looper;)V

    iput-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mBgHandler:Landroid/os/Handler;

    .line 12357
    new-array v1, v8, [J

    iput-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mProcessStateStatsLongs:[J

    .line 22784
    iput-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mSupportedSystemLocales:[Ljava/lang/String;

    .line 3163
    const/4 v1, 0x6

    invoke-static {p0, v1}, Lcom/android/server/LockGuard;->installLock(Ljava/lang/Object;I)Ljava/lang/Object;

    .line 3164
    new-instance v1, Lcom/android/server/am/ActivityManagerService$Injector;

    invoke-direct {v1}, Lcom/android/server/am/ActivityManagerService$Injector;-><init>()V

    iput-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mInjector:Lcom/android/server/am/ActivityManagerService$Injector;

    .line 3165
    iput-object p1, p0, Lcom/android/server/am/ActivityManagerService;->mContext:Landroid/content/Context;

    .line 3167
    invoke-static {}, Landroid/os/FactoryTest;->getMode()I

    move-result v1

    iput v1, p0, Lcom/android/server/am/ActivityManagerService;->mFactoryTest:I

    .line 3168
    invoke-static {}, Landroid/app/ActivityThread;->currentActivityThread()Landroid/app/ActivityThread;

    move-result-object v1

    iput-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mSystemThread:Landroid/app/ActivityThread;

    .line 3169
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mSystemThread:Landroid/app/ActivityThread;

    invoke-virtual {v1}, Landroid/app/ActivityThread;->getSystemUiContext()Landroid/app/ContextImpl;

    move-result-object v1

    iput-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mUiContext:Landroid/content/Context;

    .line 3171
    const-string v1, "ActivityManager"

    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    const-string v3, "Memory class: "

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-static {}, Landroid/app/ActivityManager;->staticGetMemoryClass()I

    move-result v3

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v2

    invoke-static {v1, v2}, Landroid/util/Slog;->i(Ljava/lang/String;Ljava/lang/String;)I

    .line 3173
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mContext:Landroid/content/Context;

    invoke-virtual {v1}, Landroid/content/Context;->getResources()Landroid/content/res/Resources;

    move-result-object v1

    const v2, 0x11200a7

    invoke-virtual {v1, v2}, Landroid/content/res/Resources;->getBoolean(I)Z

    move-result v1

    iput-boolean v1, p0, Lcom/android/server/am/ActivityManagerService;->mPermissionReviewRequired:Z

    .line 3176
    new-instance v1, Lcom/android/server/ServiceThread;

    const-string v2, "ActivityManager"

    const/4 v3, -0x2

    invoke-direct {v1, v2, v3, v9}, Lcom/android/server/ServiceThread;-><init>(Ljava/lang/String;IZ)V

    iput-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mHandlerThread:Lcom/android/server/ServiceThread;

    .line 3178
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mHandlerThread:Lcom/android/server/ServiceThread;

    invoke-virtual {v1}, Lcom/android/server/ServiceThread;->start()V

    .line 3179
    new-instance v1, Lcom/android/server/am/ActivityManagerService$MainHandler;

    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mHandlerThread:Lcom/android/server/ServiceThread;

    invoke-virtual {v2}, Lcom/android/server/ServiceThread;->getLooper()Landroid/os/Looper;

    move-result-object v2

    invoke-direct {v1, p0, v2}, Lcom/android/server/am/ActivityManagerService$MainHandler;-><init>(Lcom/android/server/am/ActivityManagerService;Landroid/os/Looper;)V

    iput-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    .line 3180
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mInjector:Lcom/android/server/am/ActivityManagerService$Injector;

    invoke-virtual {v1, p0}, Lcom/android/server/am/ActivityManagerService$Injector;->getUiHandler(Lcom/android/server/am/ActivityManagerService;)Landroid/os/Handler;

    move-result-object v1

    iput-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mUiHandler:Landroid/os/Handler;

    .line 3182
    new-instance v1, Lcom/android/server/ServiceThread;

    const-string v2, "ActivityManager:procStart"

    invoke-direct {v1, v2, v3, v9}, Lcom/android/server/ServiceThread;-><init>(Ljava/lang/String;IZ)V

    iput-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mProcStartHandlerThread:Lcom/android/server/ServiceThread;

    .line 3184
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mProcStartHandlerThread:Lcom/android/server/ServiceThread;

    invoke-virtual {v1}, Lcom/android/server/ServiceThread;->start()V

    .line 3185
    new-instance v1, Landroid/os/Handler;

    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mProcStartHandlerThread:Lcom/android/server/ServiceThread;

    invoke-virtual {v2}, Lcom/android/server/ServiceThread;->getLooper()Landroid/os/Looper;

    move-result-object v2

    invoke-direct {v1, v2}, Landroid/os/Handler;-><init>(Landroid/os/Looper;)V

    iput-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mProcStartHandler:Landroid/os/Handler;

    .line 3187
    new-instance v1, Lcom/android/server/am/ActivityManagerConstants;

    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    invoke-direct {v1, p0, v2}, Lcom/android/server/am/ActivityManagerConstants;-><init>(Lcom/android/server/am/ActivityManagerService;Landroid/os/Handler;)V

    iput-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mConstants:Lcom/android/server/am/ActivityManagerConstants;

    .line 3190
    sget-object v1, Lcom/android/server/am/ActivityManagerService;->sKillHandler:Lcom/android/server/am/ActivityManagerService$KillHandler;

    if-nez v1, :cond_0

    .line 3191
    new-instance v1, Lcom/android/server/ServiceThread;

    const-string v2, "ActivityManager:kill"

    const/16 v3, 0xa

    invoke-direct {v1, v2, v3, v8}, Lcom/android/server/ServiceThread;-><init>(Ljava/lang/String;IZ)V

    sput-object v1, Lcom/android/server/am/ActivityManagerService;->sKillThread:Lcom/android/server/ServiceThread;

    .line 3193
    sget-object v1, Lcom/android/server/am/ActivityManagerService;->sKillThread:Lcom/android/server/ServiceThread;

    invoke-virtual {v1}, Lcom/android/server/ServiceThread;->start()V

    .line 3194
    new-instance v1, Lcom/android/server/am/ActivityManagerService$KillHandler;

    sget-object v2, Lcom/android/server/am/ActivityManagerService;->sKillThread:Lcom/android/server/ServiceThread;

    invoke-virtual {v2}, Lcom/android/server/ServiceThread;->getLooper()Landroid/os/Looper;

    move-result-object v2

    invoke-direct {v1, p0, v2}, Lcom/android/server/am/ActivityManagerService$KillHandler;-><init>(Lcom/android/server/am/ActivityManagerService;Landroid/os/Looper;)V

    sput-object v1, Lcom/android/server/am/ActivityManagerService;->sKillHandler:Lcom/android/server/am/ActivityManagerService$KillHandler;

    .line 3197
    :cond_0
    new-instance v10, Lcom/android/server/am/BroadcastQueue;

    iget-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    const-string v4, "foreground"

    const-wide/16 v5, 0x2710

    const/4 v7, 0x0

    move-object v1, v10

    move-object v2, p0

    invoke-direct/range {v1 .. v7}, Lcom/android/server/am/BroadcastQueue;-><init>(Lcom/android/server/am/ActivityManagerService;Landroid/os/Handler;Ljava/lang/String;JZ)V

    iput-object v10, p0, Lcom/android/server/am/ActivityManagerService;->mFgBroadcastQueue:Lcom/android/server/am/BroadcastQueue;

    .line 3199
    new-instance v10, Lcom/android/server/am/BroadcastQueue;

    iget-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    const-string v4, "background"

    const-wide/32 v5, 0xea60

    const/4 v7, 0x1

    move-object v1, v10

    invoke-direct/range {v1 .. v7}, Lcom/android/server/am/BroadcastQueue;-><init>(Lcom/android/server/am/ActivityManagerService;Landroid/os/Handler;Ljava/lang/String;JZ)V

    iput-object v10, p0, Lcom/android/server/am/ActivityManagerService;->mBgBroadcastQueue:Lcom/android/server/am/BroadcastQueue;

    .line 3201
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mBroadcastQueues:[Lcom/android/server/am/BroadcastQueue;

    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mFgBroadcastQueue:Lcom/android/server/am/BroadcastQueue;

    aput-object v2, v1, v9

    .line 3202
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mBroadcastQueues:[Lcom/android/server/am/BroadcastQueue;

    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mBgBroadcastQueue:Lcom/android/server/am/BroadcastQueue;

    aput-object v2, v1, v8

    .line 3204
    new-instance v1, Lcom/android/server/am/ActiveServices;

    invoke-direct {v1, p0}, Lcom/android/server/am/ActiveServices;-><init>(Lcom/android/server/am/ActivityManagerService;)V

    iput-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mServices:Lcom/android/server/am/ActiveServices;

    .line 3205
    new-instance v1, Lcom/android/server/am/ProviderMap;

    invoke-direct {v1, p0}, Lcom/android/server/am/ProviderMap;-><init>(Lcom/android/server/am/ActivityManagerService;)V

    iput-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mProviderMap:Lcom/android/server/am/ProviderMap;

    .line 3206
    new-instance v1, Lcom/android/server/am/AppErrors;

    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mUiContext:Landroid/content/Context;

    invoke-direct {v1, v2, p0}, Lcom/android/server/am/AppErrors;-><init>(Landroid/content/Context;Lcom/android/server/am/ActivityManagerService;)V

    iput-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mAppErrors:Lcom/android/server/am/AppErrors;

    .line 3208
    invoke-static {}, Landroid/os/Environment;->getDataDirectory()Ljava/io/File;

    move-result-object v1

    .line 3209
    new-instance v7, Ljava/io/File;

    const-string/jumbo v2, "system"

    invoke-direct {v7, v1, v2}, Ljava/io/File;-><init>(Ljava/io/File;Ljava/lang/String;)V

    .line 3210
    invoke-virtual {v7}, Ljava/io/File;->mkdirs()Z

    .line 3212
    new-instance v10, Lcom/android/server/am/AppWarnings;

    iget-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mUiContext:Landroid/content/Context;

    iget-object v4, p0, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    iget-object v5, p0, Lcom/android/server/am/ActivityManagerService;->mUiHandler:Landroid/os/Handler;

    move-object v1, v10

    move-object v2, p0

    move-object v6, v7

    invoke-direct/range {v1 .. v6}, Lcom/android/server/am/AppWarnings;-><init>(Lcom/android/server/am/ActivityManagerService;Landroid/content/Context;Landroid/os/Handler;Landroid/os/Handler;Ljava/io/File;)V

    iput-object v10, p0, Lcom/android/server/am/ActivityManagerService;->mAppWarnings:Lcom/android/server/am/AppWarnings;

    .line 3215
    new-instance v1, Lcom/android/server/am/BatteryStatsService;

    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    invoke-direct {v1, p1, v7, v2}, Lcom/android/server/am/BatteryStatsService;-><init>(Landroid/content/Context;Ljava/io/File;Landroid/os/Handler;)V

    iput-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mBatteryStatsService:Lcom/android/server/am/BatteryStatsService;

    .line 3216
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mBatteryStatsService:Lcom/android/server/am/BatteryStatsService;

    invoke-virtual {v0}, Lcom/android/server/am/BatteryStatsService;->getActiveStatistics()Lcom/android/internal/os/BatteryStatsImpl;

    move-result-object v0

    invoke-virtual {v0}, Lcom/android/internal/os/BatteryStatsImpl;->readLocked()V

    .line 3217
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mBatteryStatsService:Lcom/android/server/am/BatteryStatsService;

    invoke-virtual {v0}, Lcom/android/server/am/BatteryStatsService;->scheduleWriteToDisk()V

    .line 3218
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mBatteryStatsService:Lcom/android/server/am/BatteryStatsService;

    .line 3219
    invoke-virtual {v0}, Lcom/android/server/am/BatteryStatsService;->getActiveStatistics()Lcom/android/internal/os/BatteryStatsImpl;

    move-result-object v0

    invoke-virtual {v0}, Lcom/android/internal/os/BatteryStatsImpl;->getIsOnBattery()Z

    move-result v0

    iput-boolean v0, p0, Lcom/android/server/am/ActivityManagerService;->mOnBattery:Z

    .line 3220
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mBatteryStatsService:Lcom/android/server/am/BatteryStatsService;

    invoke-virtual {v0}, Lcom/android/server/am/BatteryStatsService;->getActiveStatistics()Lcom/android/internal/os/BatteryStatsImpl;

    move-result-object v0

    invoke-virtual {v0, p0}, Lcom/android/internal/os/BatteryStatsImpl;->setCallback(Lcom/android/internal/os/BatteryStatsImpl$BatteryCallback;)V

    .line 3222
    new-instance v0, Lcom/android/server/am/ProcessStatsService;

    new-instance v1, Ljava/io/File;

    const-string/jumbo v2, "procstats"

    invoke-direct {v1, v7, v2}, Ljava/io/File;-><init>(Ljava/io/File;Ljava/lang/String;)V

    invoke-direct {v0, p0, v1}, Lcom/android/server/am/ProcessStatsService;-><init>(Lcom/android/server/am/ActivityManagerService;Ljava/io/File;)V

    iput-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mProcessStats:Lcom/android/server/am/ProcessStatsService;

    .line 3224
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mInjector:Lcom/android/server/am/ActivityManagerService$Injector;

    new-instance v1, Ljava/io/File;

    const-string v2, "appops.xml"

    invoke-direct {v1, v7, v2}, Ljava/io/File;-><init>(Ljava/io/File;Ljava/lang/String;)V

    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    invoke-virtual {v0, v1, v2, p0}, Lcom/android/server/am/ActivityManagerService$Injector;->getAppOpsService(Ljava/io/File;Landroid/os/Handler;Lcom/android/server/am/ActivityManagerService;)Lcom/android/server/AppOpsService;

    move-result-object v0

    iput-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mAppOpsService:Lcom/android/server/AppOpsService;

    .line 3227
    new-instance v0, Landroid/util/AtomicFile;

    new-instance v1, Ljava/io/File;

    const-string/jumbo v2, "urigrants.xml"

    invoke-direct {v1, v7, v2}, Ljava/io/File;-><init>(Ljava/io/File;Ljava/lang/String;)V

    const-string/jumbo v2, "uri-grants"

    invoke-direct {v0, v1, v2}, Landroid/util/AtomicFile;-><init>(Ljava/io/File;Ljava/lang/String;)V

    iput-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mGrantFile:Landroid/util/AtomicFile;

    .line 3229
    new-instance v0, Lcom/android/server/am/UserController;

    invoke-direct {v0, p0}, Lcom/android/server/am/UserController;-><init>(Lcom/android/server/am/ActivityManagerService;)V

    iput-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mUserController:Lcom/android/server/am/UserController;

    .line 3231
    new-instance v0, Lcom/android/server/am/VrController;

    invoke-direct {v0, p0}, Lcom/android/server/am/VrController;-><init>(Ljava/lang/Object;)V

    iput-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mVrController:Lcom/android/server/am/VrController;

    .line 3233
    const-string/jumbo v0, "ro.opengles.version"

    invoke-static {v0, v9}, Landroid/os/SystemProperties;->getInt(Ljava/lang/String;I)I

    move-result v0

    iput v0, p0, Lcom/android/server/am/ActivityManagerService;->GL_ES_VERSION:I

    .line 3236
    const-string/jumbo v0, "sys.use_fifo_ui"

    invoke-static {v0, v9}, Landroid/os/SystemProperties;->getInt(Ljava/lang/String;I)I

    move-result v0

    if-eqz v0, :cond_1

    .line 3237
    iput-boolean v8, p0, Lcom/android/server/am/ActivityManagerService;->mUseFifoUiScheduling:Z

    .line 3240
    :cond_1
    const-string v0, "1"

    const-string v1, "debug.track-associations"

    invoke-static {v1}, Landroid/os/SystemProperties;->get(Ljava/lang/String;)Ljava/lang/String;

    move-result-object v1

    invoke-virtual {v0, v1}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v0

    iput-boolean v0, p0, Lcom/android/server/am/ActivityManagerService;->mTrackingAssociations:Z

    .line 3241
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mTempConfig:Landroid/content/res/Configuration;

    invoke-virtual {v0}, Landroid/content/res/Configuration;->setToDefaults()V

    .line 3242
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mTempConfig:Landroid/content/res/Configuration;

    invoke-static {}, Landroid/os/LocaleList;->getDefault()Landroid/os/LocaleList;

    move-result-object v1

    invoke-virtual {v0, v1}, Landroid/content/res/Configuration;->setLocales(Landroid/os/LocaleList;)V

    .line 3243
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mTempConfig:Landroid/content/res/Configuration;

    iput v8, v0, Landroid/content/res/Configuration;->seq:I

    iput v8, p0, Lcom/android/server/am/ActivityManagerService;->mConfigurationSeq:I

    .line 3244
    invoke-virtual {p0}, Lcom/android/server/am/ActivityManagerService;->createStackSupervisor()Lcom/android/server/am/ActivityStackSupervisor;

    move-result-object v0

    iput-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mStackSupervisor:Lcom/android/server/am/ActivityStackSupervisor;

    .line 3245
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mStackSupervisor:Lcom/android/server/am/ActivityStackSupervisor;

    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mTempConfig:Landroid/content/res/Configuration;

    invoke-virtual {v0, v1}, Lcom/android/server/am/ActivityStackSupervisor;->onConfigurationChanged(Landroid/content/res/Configuration;)V

    .line 3246
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mStackSupervisor:Lcom/android/server/am/ActivityStackSupervisor;

    invoke-virtual {v0}, Lcom/android/server/am/ActivityStackSupervisor;->getKeyguardController()Lcom/android/server/am/KeyguardController;

    move-result-object v0

    iput-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mKeyguardController:Lcom/android/server/am/KeyguardController;

    .line 3247
    new-instance v0, Lcom/android/server/am/CompatModePackages;

    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    invoke-direct {v0, p0, v7, v1}, Lcom/android/server/am/CompatModePackages;-><init>(Lcom/android/server/am/ActivityManagerService;Ljava/io/File;Landroid/os/Handler;)V

    iput-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mCompatModePackages:Lcom/android/server/am/CompatModePackages;

    .line 3248
    new-instance v0, Lcom/android/server/firewall/IntentFirewall;

    new-instance v1, Lcom/android/server/am/ActivityManagerService$IntentFirewallInterface;

    invoke-direct {v1, p0}, Lcom/android/server/am/ActivityManagerService$IntentFirewallInterface;-><init>(Lcom/android/server/am/ActivityManagerService;)V

    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    invoke-direct {v0, v1, v2}, Lcom/android/server/firewall/IntentFirewall;-><init>(Lcom/android/server/firewall/IntentFirewall$AMSInterface;Landroid/os/Handler;)V

    iput-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mIntentFirewall:Lcom/android/server/firewall/IntentFirewall;

    .line 3249
    new-instance v0, Lcom/android/server/am/TaskChangeNotificationController;

    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mStackSupervisor:Lcom/android/server/am/ActivityStackSupervisor;

    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    invoke-direct {v0, p0, v1, v2}, Lcom/android/server/am/TaskChangeNotificationController;-><init>(Lcom/android/server/am/ActivityManagerService;Lcom/android/server/am/ActivityStackSupervisor;Landroid/os/Handler;)V

    iput-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mTaskChangeNotificationController:Lcom/android/server/am/TaskChangeNotificationController;

    .line 3251
    new-instance v0, Lcom/android/server/am/ActivityStartController;

    invoke-direct {v0, p0}, Lcom/android/server/am/ActivityStartController;-><init>(Lcom/android/server/am/ActivityManagerService;)V

    iput-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mActivityStartController:Lcom/android/server/am/ActivityStartController;

    .line 3252
    invoke-virtual {p0}, Lcom/android/server/am/ActivityManagerService;->createRecentTasks()Lcom/android/server/am/RecentTasks;

    move-result-object v0

    iput-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mRecentTasks:Lcom/android/server/am/RecentTasks;

    .line 3253
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mStackSupervisor:Lcom/android/server/am/ActivityStackSupervisor;

    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mRecentTasks:Lcom/android/server/am/RecentTasks;

    invoke-virtual {v0, v1}, Lcom/android/server/am/ActivityStackSupervisor;->setRecentTasks(Lcom/android/server/am/RecentTasks;)V

    .line 3254
    new-instance v0, Lcom/android/server/am/LockTaskController;

    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mContext:Landroid/content/Context;

    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mStackSupervisor:Lcom/android/server/am/ActivityStackSupervisor;

    iget-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    invoke-direct {v0, v1, v2, v3}, Lcom/android/server/am/LockTaskController;-><init>(Landroid/content/Context;Lcom/android/server/am/ActivityStackSupervisor;Landroid/os/Handler;)V

    iput-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mLockTaskController:Lcom/android/server/am/LockTaskController;

    .line 3255
    new-instance v0, Lcom/android/server/am/ClientLifecycleManager;

    invoke-direct {v0}, Lcom/android/server/am/ClientLifecycleManager;-><init>()V

    iput-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mLifecycleManager:Lcom/android/server/am/ClientLifecycleManager;

    .line 3257
    new-instance v0, Lcom/android/server/am/ActivityManagerService$5;

    const-string v1, "CpuTracker"

    invoke-direct {v0, p0, v1}, Lcom/android/server/am/ActivityManagerService$5;-><init>(Lcom/android/server/am/ActivityManagerService;Ljava/lang/String;)V

    iput-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mProcessCpuThread:Ljava/lang/Thread;

    .line 3291
    new-instance v0, Lcom/android/server/am/ActivityManagerService$HiddenApiSettings;

    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mContext:Landroid/content/Context;

    invoke-direct {v0, v1, v2}, Lcom/android/server/am/ActivityManagerService$HiddenApiSettings;-><init>(Landroid/os/Handler;Landroid/content/Context;)V

    iput-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mHiddenApiBlacklist:Lcom/android/server/am/ActivityManagerService$HiddenApiSettings;

    .line 3293
    invoke-static {}, Lcom/android/server/Watchdog;->getInstance()Lcom/android/server/Watchdog;

    move-result-object v0

    invoke-virtual {v0, p0}, Lcom/android/server/Watchdog;->addMonitor(Lcom/android/server/Watchdog$Monitor;)V

    .line 3294
    invoke-static {}, Lcom/android/server/Watchdog;->getInstance()Lcom/android/server/Watchdog;

    move-result-object v0

    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    invoke-virtual {v0, v1}, Lcom/android/server/Watchdog;->addThread(Landroid/os/Handler;)V

    .line 3299
    invoke-virtual {p0}, Lcom/android/server/am/ActivityManagerService;->updateOomAdjLocked()V

    .line 3301
    :try_start_0
    invoke-static {}, Lcom/android/internal/os/BackgroundThread;->get()Lcom/android/internal/os/BackgroundThread;

    move-result-object v0

    invoke-virtual {v0}, Lcom/android/internal/os/BackgroundThread;->getThreadId()I

    move-result v0

    invoke-static {v0, v9}, Landroid/os/Process;->setThreadGroupAndCpuset(II)V
    :try_end_0
    .catch Ljava/lang/Exception; {:try_start_0 .. :try_end_0} :catch_0

    .line 3305
    goto :goto_0

    .line 3303
    :catch_0
    move-exception v0

    .line 3304
    const-string v0, "ActivityManager"

    const-string v1, "Setting background thread cpuset failed"

    invoke-static {v0, v1}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 3307
    :goto_0
    new-instance v0, Lcom/android/server/am/ActivityManagerService$SwipeToScreenshotObserver;

    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mContext:Landroid/content/Context;

    invoke-direct {v0, p0, v1, v2}, Lcom/android/server/am/ActivityManagerService$SwipeToScreenshotObserver;-><init>(Lcom/android/server/am/ActivityManagerService;Landroid/os/Handler;Landroid/content/Context;)V

    iput-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mSwipeToScreenshotObserver:Lcom/android/server/am/ActivityManagerService$SwipeToScreenshotObserver;

    .line 3308
    return-void
.end method

.method public constructor <init>(Lcom/android/server/am/ActivityManagerService$Injector;)V
    .locals 8
    .annotation build Lcom/android/internal/annotations/VisibleForTesting;
    .end annotation

    .line 3123
    invoke-direct {p0}, Landroid/app/IActivityManager$Stub;-><init>()V

    .line 722
    new-instance v0, Lcom/android/server/am/InstrumentationReporter;

    invoke-direct {v0}, Lcom/android/server/am/InstrumentationReporter;-><init>()V

    iput-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mInstrumentationReporter:Lcom/android/server/am/InstrumentationReporter;

    .line 724
    new-instance v0, Ljava/util/ArrayList;

    invoke-direct {v0}, Ljava/util/ArrayList;-><init>()V

    iput-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mActiveInstrumentation:Ljava/util/ArrayList;

    .line 731
    const/4 v0, 0x1

    iput-boolean v0, p0, Lcom/android/server/am/ActivityManagerService;->mShowDialogs:Z

    .line 736
    const/4 v1, -0x1

    iput v1, p0, Lcom/android/server/am/ActivityManagerService;->mVr2dDisplayId:I

    .line 739
    const/4 v2, 0x0

    iput-boolean v2, p0, Lcom/android/server/am/ActivityManagerService;->mUseFifoUiScheduling:Z

    .line 747
    const/4 v3, 0x2

    new-array v4, v3, [Lcom/android/server/am/BroadcastQueue;

    iput-object v4, p0, Lcom/android/server/am/ActivityManagerService;->mBroadcastQueues:[Lcom/android/server/am/BroadcastQueue;

    .line 800
    new-instance v4, Landroid/util/SparseArray;

    invoke-direct {v4}, Landroid/util/SparseArray;-><init>()V

    iput-object v4, p0, Lcom/android/server/am/ActivityManagerService;->mAllowAppSwitchUids:Landroid/util/SparseArray;

    .line 828
    new-instance v4, Lcom/android/server/am/ActivityManagerService$1;

    invoke-direct {v4, p0}, Lcom/android/server/am/ActivityManagerService$1;-><init>(Lcom/android/server/am/ActivityManagerService;)V

    iput-object v4, p0, Lcom/android/server/am/ActivityManagerService;->mPriorityDumper:Lcom/android/server/utils/PriorityDump$PriorityDumper;

    .line 905
    new-instance v4, Ljava/util/ArrayList;

    invoke-direct {v4}, Ljava/util/ArrayList;-><init>()V

    iput-object v4, p0, Lcom/android/server/am/ActivityManagerService;->mPendingAssistExtras:Ljava/util/ArrayList;

    .line 910
    new-instance v4, Lcom/android/server/am/ProcessList;

    invoke-direct {v4}, Lcom/android/server/am/ProcessList;-><init>()V

    iput-object v4, p0, Lcom/android/server/am/ActivityManagerService;->mProcessList:Lcom/android/server/am/ProcessList;

    .line 918
    new-instance v4, Lcom/android/internal/app/ProcessMap;

    invoke-direct {v4}, Lcom/android/internal/app/ProcessMap;-><init>()V

    iput-object v4, p0, Lcom/android/server/am/ActivityManagerService;->mProcessNames:Lcom/android/internal/app/ProcessMap;

    .line 929
    new-instance v4, Landroid/util/SparseArray;

    invoke-direct {v4}, Landroid/util/SparseArray;-><init>()V

    iput-object v4, p0, Lcom/android/server/am/ActivityManagerService;->mIsolatedProcesses:Landroid/util/SparseArray;

    .line 935
    iput v2, p0, Lcom/android/server/am/ActivityManagerService;->mNextIsolatedProcessUid:I

    .line 940
    const/4 v4, 0x0

    iput-object v4, p0, Lcom/android/server/am/ActivityManagerService;->mHeavyWeightProcess:Lcom/android/server/am/ProcessRecord;

    .line 945
    new-array v5, v0, [I

    const/16 v6, 0x3ea

    aput v6, v5, v2

    iput-object v5, p0, Lcom/android/server/am/ActivityManagerService;->mBackgroundAppIdWhitelist:[I

    .line 961
    new-instance v5, Landroid/util/SparseArray;

    invoke-direct {v5}, Landroid/util/SparseArray;-><init>()V

    iput-object v5, p0, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Landroid/util/SparseArray;

    .line 995
    new-instance v5, Landroid/util/SparseArray;

    invoke-direct {v5}, Landroid/util/SparseArray;-><init>()V

    iput-object v5, p0, Lcom/android/server/am/ActivityManagerService;->mImportantProcesses:Landroid/util/SparseArray;

    .line 1002
    new-instance v5, Ljava/util/ArrayList;

    invoke-direct {v5}, Ljava/util/ArrayList;-><init>()V

    iput-object v5, p0, Lcom/android/server/am/ActivityManagerService;->mProcessesOnHold:Ljava/util/ArrayList;

    .line 1008
    new-instance v5, Ljava/util/ArrayList;

    invoke-direct {v5}, Ljava/util/ArrayList;-><init>()V

    iput-object v5, p0, Lcom/android/server/am/ActivityManagerService;->mPersistentStartingProcesses:Ljava/util/ArrayList;

    .line 1013
    new-instance v5, Ljava/util/ArrayList;

    invoke-direct {v5}, Ljava/util/ArrayList;-><init>()V

    iput-object v5, p0, Lcom/android/server/am/ActivityManagerService;->mRemovedProcesses:Ljava/util/ArrayList;

    .line 1019
    new-instance v5, Ljava/util/ArrayList;

    invoke-direct {v5}, Ljava/util/ArrayList;-><init>()V

    iput-object v5, p0, Lcom/android/server/am/ActivityManagerService;->mLruProcesses:Ljava/util/ArrayList;

    .line 1024
    iput v2, p0, Lcom/android/server/am/ActivityManagerService;->mLruProcessActivityStart:I

    .line 1030
    iput v2, p0, Lcom/android/server/am/ActivityManagerService;->mLruProcessServiceStart:I

    .line 1035
    new-instance v5, Ljava/util/ArrayList;

    invoke-direct {v5}, Ljava/util/ArrayList;-><init>()V

    iput-object v5, p0, Lcom/android/server/am/ActivityManagerService;->mProcessesToGc:Ljava/util/ArrayList;

    .line 1040
    new-instance v5, Ljava/util/ArrayList;

    invoke-direct {v5}, Ljava/util/ArrayList;-><init>()V

    iput-object v5, p0, Lcom/android/server/am/ActivityManagerService;->mPendingPssProcesses:Ljava/util/ArrayList;

    .line 1042
    iput-boolean v2, p0, Lcom/android/server/am/ActivityManagerService;->mBinderTransactionTrackingEnabled:Z

    .line 1047
    invoke-static {}, Landroid/os/SystemClock;->uptimeMillis()J

    move-result-wide v5

    iput-wide v5, p0, Lcom/android/server/am/ActivityManagerService;->mLastFullPssTime:J

    .line 1053
    iput-boolean v2, p0, Lcom/android/server/am/ActivityManagerService;->mFullPssPending:Z

    .line 1075
    new-instance v5, Landroid/util/SparseArray;

    invoke-direct {v5}, Landroid/util/SparseArray;-><init>()V

    iput-object v5, p0, Lcom/android/server/am/ActivityManagerService;->mActiveUids:Landroid/util/SparseArray;

    .line 1081
    new-instance v5, Landroid/util/SparseArray;

    invoke-direct {v5}, Landroid/util/SparseArray;-><init>()V

    iput-object v5, p0, Lcom/android/server/am/ActivityManagerService;->mValidateUids:Landroid/util/SparseArray;

    .line 1092
    new-instance v5, Ljava/util/HashMap;

    invoke-direct {v5}, Ljava/util/HashMap;-><init>()V

    iput-object v5, p0, Lcom/android/server/am/ActivityManagerService;->mIntentSenderRecords:Ljava/util/HashMap;

    .line 1101
    new-instance v5, Ljava/util/HashSet;

    invoke-direct {v5}, Ljava/util/HashSet;-><init>()V

    iput-object v5, p0, Lcom/android/server/am/ActivityManagerService;->mAlreadyLoggedViolatedStacks:Ljava/util/HashSet;

    .line 1108
    new-instance v5, Ljava/util/HashMap;

    invoke-direct {v5}, Ljava/util/HashMap;-><init>()V

    iput-object v5, p0, Lcom/android/server/am/ActivityManagerService;->mRegisteredReceivers:Ljava/util/HashMap;

    .line 1114
    new-instance v5, Lcom/android/server/am/ActivityManagerService$2;

    invoke-direct {v5, p0}, Lcom/android/server/am/ActivityManagerService$2;-><init>(Lcom/android/server/am/ActivityManagerService;)V

    iput-object v5, p0, Lcom/android/server/am/ActivityManagerService;->mReceiverResolver:Lcom/android/server/IntentResolver;

    .line 1160
    new-instance v5, Landroid/util/SparseArray;

    invoke-direct {v5}, Landroid/util/SparseArray;-><init>()V

    iput-object v5, p0, Lcom/android/server/am/ActivityManagerService;->mStickyBroadcasts:Landroid/util/SparseArray;

    .line 1199
    new-instance v5, Landroid/util/SparseArray;

    invoke-direct {v5}, Landroid/util/SparseArray;-><init>()V

    iput-object v5, p0, Lcom/android/server/am/ActivityManagerService;->mAssociations:Landroid/util/SparseArray;

    .line 1206
    iput-object v4, p0, Lcom/android/server/am/ActivityManagerService;->mBackupAppName:Ljava/lang/String;

    .line 1207
    iput-object v4, p0, Lcom/android/server/am/ActivityManagerService;->mBackupTarget:Lcom/android/server/am/BackupRecord;

    .line 1216
    new-instance v5, Ljava/util/ArrayList;

    invoke-direct {v5}, Ljava/util/ArrayList;-><init>()V

    iput-object v5, p0, Lcom/android/server/am/ActivityManagerService;->mLaunchingProviders:Ljava/util/ArrayList;

    .line 1242
    new-instance v5, Landroid/util/SparseArray;

    invoke-direct {v5}, Landroid/util/SparseArray;-><init>()V

    iput-object v5, p0, Lcom/android/server/am/ActivityManagerService;->mGrantedUriPermissions:Landroid/util/SparseArray;

    .line 1407
    new-array v5, v2, [I

    iput-object v5, p0, Lcom/android/server/am/ActivityManagerService;->mDeviceIdleWhitelist:[I

    .line 1412
    new-array v5, v2, [I

    iput-object v5, p0, Lcom/android/server/am/ActivityManagerService;->mDeviceIdleExceptIdleWhitelist:[I

    .line 1417
    new-array v5, v2, [I

    iput-object v5, p0, Lcom/android/server/am/ActivityManagerService;->mDeviceIdleTempWhitelist:[I

    .line 1439
    new-instance v5, Landroid/util/SparseArray;

    invoke-direct {v5}, Landroid/util/SparseArray;-><init>()V

    iput-object v5, p0, Lcom/android/server/am/ActivityManagerService;->mPendingTempWhitelist:Landroid/util/SparseArray;

    .line 1454
    new-instance v5, Landroid/content/res/Configuration;

    invoke-direct {v5}, Landroid/content/res/Configuration;-><init>()V

    iput-object v5, p0, Lcom/android/server/am/ActivityManagerService;->mTempConfig:Landroid/content/res/Configuration;

    .line 1456
    new-instance v5, Lcom/android/server/am/ActivityManagerService$UpdateConfigurationResult;

    invoke-direct {v5, v4}, Lcom/android/server/am/ActivityManagerService$UpdateConfigurationResult;-><init>(Lcom/android/server/am/ActivityManagerService$1;)V

    iput-object v5, p0, Lcom/android/server/am/ActivityManagerService;->mTmpUpdateConfigurationResult:Lcom/android/server/am/ActivityManagerService$UpdateConfigurationResult;

    .line 1487
    new-instance v5, Ljava/lang/StringBuilder;

    const/16 v6, 0x100

    invoke-direct {v5, v6}, Ljava/lang/StringBuilder;-><init>(I)V

    iput-object v5, p0, Lcom/android/server/am/ActivityManagerService;->mStringBuilder:Ljava/lang/StringBuilder;

    .line 1493
    const-string v5, "android.intent.action.MAIN"

    iput-object v5, p0, Lcom/android/server/am/ActivityManagerService;->mTopAction:Ljava/lang/String;

    .line 1496
    iput-boolean v2, p0, Lcom/android/server/am/ActivityManagerService;->mProcessesReady:Z

    .line 1497
    iput-boolean v2, p0, Lcom/android/server/am/ActivityManagerService;->mSystemReady:Z

    .line 1498
    iput-boolean v2, p0, Lcom/android/server/am/ActivityManagerService;->mOnBattery:Z

    .line 1501
    iput-boolean v2, p0, Lcom/android/server/am/ActivityManagerService;->mBooting:Z

    .line 1502
    iput-boolean v2, p0, Lcom/android/server/am/ActivityManagerService;->mCallFinishBooting:Z

    .line 1503
    iput-boolean v2, p0, Lcom/android/server/am/ActivityManagerService;->mBootAnimationComplete:Z

    .line 1504
    iput-boolean v2, p0, Lcom/android/server/am/ActivityManagerService;->mLaunchWarningShown:Z

    .line 1505
    iput-boolean v2, p0, Lcom/android/server/am/ActivityManagerService;->mCheckedForSetup:Z

    .line 1545
    iput-boolean v2, p0, Lcom/android/server/am/ActivityManagerService;->mSleeping:Z

    .line 1551
    iput v3, p0, Lcom/android/server/am/ActivityManagerService;->mTopProcessState:I

    .line 1574
    iput v0, p0, Lcom/android/server/am/ActivityManagerService;->mWakefulness:I

    .line 1579
    iput-boolean v2, p0, Lcom/android/server/am/ActivityManagerService;->mKeyguardShown:Z

    .line 1584
    iput-boolean v2, p0, Lcom/android/server/am/ActivityManagerService;->mShuttingDown:Z

    .line 1589
    iput v2, p0, Lcom/android/server/am/ActivityManagerService;->mAdjSeq:I

    .line 1594
    iput v2, p0, Lcom/android/server/am/ActivityManagerService;->mLruSeq:I

    .line 1600
    iput v2, p0, Lcom/android/server/am/ActivityManagerService;->mNumNonCachedProcs:I

    .line 1606
    iput v2, p0, Lcom/android/server/am/ActivityManagerService;->mNumCachedHiddenProcs:I

    .line 1612
    iput v2, p0, Lcom/android/server/am/ActivityManagerService;->mNumServiceProcs:I

    .line 1613
    iput v2, p0, Lcom/android/server/am/ActivityManagerService;->mNewNumAServiceProcs:I

    .line 1614
    iput v2, p0, Lcom/android/server/am/ActivityManagerService;->mNewNumServiceProcs:I

    .line 1622
    iput-boolean v2, p0, Lcom/android/server/am/ActivityManagerService;->mAllowLowerMemLevel:Z

    .line 1628
    iput v2, p0, Lcom/android/server/am/ActivityManagerService;->mLastMemoryLevel:I

    .line 1639
    invoke-static {}, Landroid/os/SystemClock;->uptimeMillis()J

    move-result-wide v5

    iput-wide v5, p0, Lcom/android/server/am/ActivityManagerService;->mLastIdleTime:J

    .line 1644
    const-wide/16 v5, 0x0

    iput-wide v5, p0, Lcom/android/server/am/ActivityManagerService;->mLowRamTimeSinceLastIdle:J

    .line 1649
    iput-wide v5, p0, Lcom/android/server/am/ActivityManagerService;->mLowRamStartTime:J

    .line 1654
    iput-object v4, p0, Lcom/android/server/am/ActivityManagerService;->mCurResumedPackage:Ljava/lang/String;

    .line 1655
    iput v1, p0, Lcom/android/server/am/ActivityManagerService;->mCurResumedUid:I

    .line 1662
    new-instance v1, Lcom/android/internal/app/ProcessMap;

    invoke-direct {v1}, Lcom/android/internal/app/ProcessMap;-><init>()V

    iput-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mForegroundPackages:Lcom/android/internal/app/ProcessMap;

    .line 1675
    iput-boolean v2, p0, Lcom/android/server/am/ActivityManagerService;->mTestPssMode:Z

    .line 1677
    iput-object v4, p0, Lcom/android/server/am/ActivityManagerService;->mDebugApp:Ljava/lang/String;

    .line 1678
    iput-boolean v2, p0, Lcom/android/server/am/ActivityManagerService;->mWaitForDebugger:Z

    .line 1679
    iput-boolean v2, p0, Lcom/android/server/am/ActivityManagerService;->mDebugTransient:Z

    .line 1680
    iput-object v4, p0, Lcom/android/server/am/ActivityManagerService;->mOrigDebugApp:Ljava/lang/String;

    .line 1681
    iput-boolean v2, p0, Lcom/android/server/am/ActivityManagerService;->mOrigWaitForDebugger:Z

    .line 1682
    iput-boolean v2, p0, Lcom/android/server/am/ActivityManagerService;->mAlwaysFinishActivities:Z

    .line 1704
    iput-object v4, p0, Lcom/android/server/am/ActivityManagerService;->mController:Landroid/app/IActivityController;

    .line 1705
    iput-boolean v2, p0, Lcom/android/server/am/ActivityManagerService;->mControllerIsAMonkey:Z

    .line 1706
    iput-object v4, p0, Lcom/android/server/am/ActivityManagerService;->mProfileApp:Ljava/lang/String;

    .line 1707
    iput-object v4, p0, Lcom/android/server/am/ActivityManagerService;->mProfileProc:Lcom/android/server/am/ProcessRecord;

    .line 1708
    iput-object v4, p0, Lcom/android/server/am/ActivityManagerService;->mProfilerInfo:Landroid/app/ProfilerInfo;

    .line 1715
    iput-object v4, p0, Lcom/android/server/am/ActivityManagerService;->mAppAgentMap:Ljava/util/Map;

    .line 1717
    iput v2, p0, Lcom/android/server/am/ActivityManagerService;->mProfileType:I

    .line 1718
    new-instance v1, Lcom/android/internal/app/ProcessMap;

    invoke-direct {v1}, Lcom/android/internal/app/ProcessMap;-><init>()V

    iput-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mMemWatchProcesses:Lcom/android/internal/app/ProcessMap;

    .line 1723
    iput-object v4, p0, Lcom/android/server/am/ActivityManagerService;->mTrackAllocationApp:Ljava/lang/String;

    .line 1724
    iput-object v4, p0, Lcom/android/server/am/ActivityManagerService;->mNativeDebuggingApp:Ljava/lang/String;

    .line 1726
    const/4 v1, 0x3

    new-array v1, v1, [J

    iput-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mTmpLong:[J

    .line 1728
    new-instance v1, Landroid/util/ArraySet;

    invoke-direct {v1}, Landroid/util/ArraySet;-><init>()V

    iput-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mTmpBroadcastQueue:Landroid/util/ArraySet;

    .line 1737
    iput-wide v5, p0, Lcom/android/server/am/ActivityManagerService;->mProcStateSeqCounter:J

    .line 1744
    iput-wide v5, p0, Lcom/android/server/am/ActivityManagerService;->mProcStartSeqCounter:J

    .line 1752
    new-instance v1, Landroid/util/LongSparseArray;

    invoke-direct {v1}, Landroid/util/LongSparseArray;-><init>()V

    iput-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mPendingStarts:Landroid/util/LongSparseArray;

    .line 1829
    new-instance v1, Ljava/util/ArrayList;

    invoke-direct {v1}, Ljava/util/ArrayList;-><init>()V

    iput-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mScreenObservers:Ljava/util/List;

    .line 1831
    new-instance v1, Landroid/os/RemoteCallbackList;

    invoke-direct {v1}, Landroid/os/RemoteCallbackList;-><init>()V

    iput-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mProcessObservers:Landroid/os/RemoteCallbackList;

    .line 1832
    const/4 v1, 0x5

    new-array v3, v1, [Lcom/android/server/am/ActivityManagerService$ProcessChangeItem;

    iput-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mActiveProcessChanges:[Lcom/android/server/am/ActivityManagerService$ProcessChangeItem;

    .line 1834
    new-instance v3, Ljava/util/ArrayList;

    invoke-direct {v3}, Ljava/util/ArrayList;-><init>()V

    iput-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mPendingProcessChanges:Ljava/util/ArrayList;

    .line 1835
    new-instance v3, Ljava/util/ArrayList;

    invoke-direct {v3}, Ljava/util/ArrayList;-><init>()V

    iput-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mAvailProcessChanges:Ljava/util/ArrayList;

    .line 1837
    new-instance v3, Landroid/os/RemoteCallbackList;

    invoke-direct {v3}, Landroid/os/RemoteCallbackList;-><init>()V

    iput-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mUidObservers:Landroid/os/RemoteCallbackList;

    .line 1838
    new-array v3, v1, [Lcom/android/server/am/UidRecord$ChangeItem;

    iput-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mActiveUidChanges:[Lcom/android/server/am/UidRecord$ChangeItem;

    .line 1840
    new-instance v3, Ljava/util/ArrayList;

    invoke-direct {v3}, Ljava/util/ArrayList;-><init>()V

    iput-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mPendingUidChanges:Ljava/util/ArrayList;

    .line 1841
    new-instance v3, Ljava/util/ArrayList;

    invoke-direct {v3}, Ljava/util/ArrayList;-><init>()V

    iput-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mAvailUidChanges:Ljava/util/ArrayList;

    .line 1863
    new-instance v3, Lcom/android/internal/os/ProcessCpuTracker;

    invoke-direct {v3, v2}, Lcom/android/internal/os/ProcessCpuTracker;-><init>(Z)V

    iput-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mProcessCpuTracker:Lcom/android/internal/os/ProcessCpuTracker;

    .line 1865
    new-instance v3, Ljava/util/concurrent/atomic/AtomicLong;

    invoke-direct {v3, v5, v6}, Ljava/util/concurrent/atomic/AtomicLong;-><init>(J)V

    iput-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mLastCpuTime:Ljava/util/concurrent/atomic/AtomicLong;

    .line 1866
    new-instance v3, Ljava/util/concurrent/atomic/AtomicBoolean;

    invoke-direct {v3, v0}, Ljava/util/concurrent/atomic/AtomicBoolean;-><init>(Z)V

    iput-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mProcessCpuMutexFree:Ljava/util/concurrent/atomic/AtomicBoolean;

    .line 1867
    new-instance v3, Ljava/util/concurrent/CountDownLatch;

    invoke-direct {v3, v0}, Ljava/util/concurrent/CountDownLatch;-><init>(I)V

    iput-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mProcessCpuInitLatch:Ljava/util/concurrent/CountDownLatch;

    .line 1869
    iput-wide v5, p0, Lcom/android/server/am/ActivityManagerService;->mLastWriteTime:J

    .line 1875
    new-instance v3, Landroid/os/UpdateLock;

    const-string v7, "immersive"

    invoke-direct {v3, v7}, Landroid/os/UpdateLock;-><init>(Ljava/lang/String;)V

    iput-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mUpdateLock:Landroid/os/UpdateLock;

    .line 1880
    iput-boolean v2, p0, Lcom/android/server/am/ActivityManagerService;->mBooted:Z

    .line 1979
    iput-wide v5, p0, Lcom/android/server/am/ActivityManagerService;->mLastMemUsageReportTime:J

    .line 1982
    const-string/jumbo v3, "ro.vendor.qti.sys.fw.bservice_age"

    .line 1983
    const/16 v5, 0x1388

    invoke-static {v3, v5}, Landroid/os/SystemProperties;->getInt(Ljava/lang/String;I)I

    move-result v3

    iput v3, p0, Lcom/android/server/am/ActivityManagerService;->mMinBServiceAgingTime:I

    .line 1985
    const-string/jumbo v3, "ro.vendor.qti.sys.fw.bservice_limit"

    .line 1986
    invoke-static {v3, v1}, Landroid/os/SystemProperties;->getInt(Ljava/lang/String;I)I

    move-result v1

    iput v1, p0, Lcom/android/server/am/ActivityManagerService;->mBServiceAppThreshold:I

    .line 1988
    const-string/jumbo v1, "ro.vendor.qti.sys.fw.bservice_enable"

    .line 1989
    invoke-static {v1, v2}, Landroid/os/SystemProperties;->getBoolean(Ljava/lang/String;Z)Z

    move-result v1

    iput-boolean v1, p0, Lcom/android/server/am/ActivityManagerService;->mEnableBServicePropagation:Z

    .line 1992
    const-string/jumbo v1, "ro.vendor.qti.cgroup_follow.enable"

    .line 1993
    invoke-static {v1, v2}, Landroid/os/SystemProperties;->getBoolean(Ljava/lang/String;Z)Z

    move-result v1

    iput-boolean v1, p0, Lcom/android/server/am/ActivityManagerService;->mEnableProcessGroupCgroupFollow:Z

    .line 2021
    const/16 v1, 0x3e8

    iput v1, p0, Lcom/android/server/am/ActivityManagerService;->mViSessionId:I

    .line 2724
    new-instance v1, Lcom/android/server/am/ActivityManagerService$3;

    invoke-static {}, Lcom/android/internal/os/BackgroundThread;->getHandler()Landroid/os/Handler;

    move-result-object v3

    invoke-virtual {v3}, Landroid/os/Handler;->getLooper()Landroid/os/Looper;

    move-result-object v3

    invoke-direct {v1, p0, v3}, Lcom/android/server/am/ActivityManagerService$3;-><init>(Lcom/android/server/am/ActivityManagerService;Landroid/os/Looper;)V

    iput-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mBgHandler:Landroid/os/Handler;

    .line 12357
    new-array v0, v0, [J

    iput-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mProcessStateStatsLongs:[J

    .line 22784
    iput-object v4, p0, Lcom/android/server/am/ActivityManagerService;->mSupportedSystemLocales:[Ljava/lang/String;

    .line 3124
    iput-object p1, p0, Lcom/android/server/am/ActivityManagerService;->mInjector:Lcom/android/server/am/ActivityManagerService$Injector;

    .line 3125
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mInjector:Lcom/android/server/am/ActivityManagerService$Injector;

    invoke-virtual {v0}, Lcom/android/server/am/ActivityManagerService$Injector;->getContext()Landroid/content/Context;

    move-result-object v0

    iput-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mContext:Landroid/content/Context;

    .line 3126
    iput-object v4, p0, Lcom/android/server/am/ActivityManagerService;->mUiContext:Landroid/content/Context;

    .line 3127
    iput v2, p0, Lcom/android/server/am/ActivityManagerService;->GL_ES_VERSION:I

    .line 3128
    iput-object v4, p0, Lcom/android/server/am/ActivityManagerService;->mActivityStartController:Lcom/android/server/am/ActivityStartController;

    .line 3129
    iput-object v4, p0, Lcom/android/server/am/ActivityManagerService;->mAppErrors:Lcom/android/server/am/AppErrors;

    .line 3130
    iput-object v4, p0, Lcom/android/server/am/ActivityManagerService;->mAppWarnings:Lcom/android/server/am/AppWarnings;

    .line 3131
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mInjector:Lcom/android/server/am/ActivityManagerService$Injector;

    invoke-virtual {v0, v4, v4, p0}, Lcom/android/server/am/ActivityManagerService$Injector;->getAppOpsService(Ljava/io/File;Landroid/os/Handler;Lcom/android/server/am/ActivityManagerService;)Lcom/android/server/AppOpsService;

    move-result-object v0

    iput-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mAppOpsService:Lcom/android/server/AppOpsService;

    .line 3132
    iput-object v4, p0, Lcom/android/server/am/ActivityManagerService;->mBatteryStatsService:Lcom/android/server/am/BatteryStatsService;

    .line 3133
    iput-object v4, p0, Lcom/android/server/am/ActivityManagerService;->mCompatModePackages:Lcom/android/server/am/CompatModePackages;

    .line 3134
    iput-object v4, p0, Lcom/android/server/am/ActivityManagerService;->mConstants:Lcom/android/server/am/ActivityManagerConstants;

    .line 3135
    iput-object v4, p0, Lcom/android/server/am/ActivityManagerService;->mGrantFile:Landroid/util/AtomicFile;

    .line 3136
    iput-object v4, p0, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    .line 3137
    iput-object v4, p0, Lcom/android/server/am/ActivityManagerService;->mHandlerThread:Lcom/android/server/ServiceThread;

    .line 3138
    iput-object v4, p0, Lcom/android/server/am/ActivityManagerService;->mIntentFirewall:Lcom/android/server/firewall/IntentFirewall;

    .line 3139
    iput-object v4, p0, Lcom/android/server/am/ActivityManagerService;->mKeyguardController:Lcom/android/server/am/KeyguardController;

    .line 3140
    iput-boolean v2, p0, Lcom/android/server/am/ActivityManagerService;->mPermissionReviewRequired:Z

    .line 3141
    iput-object v4, p0, Lcom/android/server/am/ActivityManagerService;->mProcessCpuThread:Ljava/lang/Thread;

    .line 3142
    iput-object v4, p0, Lcom/android/server/am/ActivityManagerService;->mProcessStats:Lcom/android/server/am/ProcessStatsService;

    .line 3143
    iput-object v4, p0, Lcom/android/server/am/ActivityManagerService;->mProviderMap:Lcom/android/server/am/ProviderMap;

    .line 3144
    iput-object v4, p0, Lcom/android/server/am/ActivityManagerService;->mRecentTasks:Lcom/android/server/am/RecentTasks;

    .line 3145
    iput-object v4, p0, Lcom/android/server/am/ActivityManagerService;->mServices:Lcom/android/server/am/ActiveServices;

    .line 3146
    iput-object v4, p0, Lcom/android/server/am/ActivityManagerService;->mStackSupervisor:Lcom/android/server/am/ActivityStackSupervisor;

    .line 3147
    iput-object v4, p0, Lcom/android/server/am/ActivityManagerService;->mSystemThread:Landroid/app/ActivityThread;

    .line 3148
    iput-object v4, p0, Lcom/android/server/am/ActivityManagerService;->mTaskChangeNotificationController:Lcom/android/server/am/TaskChangeNotificationController;

    .line 3149
    invoke-virtual {p1, v4}, Lcom/android/server/am/ActivityManagerService$Injector;->getUiHandler(Lcom/android/server/am/ActivityManagerService;)Landroid/os/Handler;

    move-result-object p1

    iput-object p1, p0, Lcom/android/server/am/ActivityManagerService;->mUiHandler:Landroid/os/Handler;

    .line 3150
    iput-object v4, p0, Lcom/android/server/am/ActivityManagerService;->mUserController:Lcom/android/server/am/UserController;

    .line 3151
    iput-object v4, p0, Lcom/android/server/am/ActivityManagerService;->mVrController:Lcom/android/server/am/VrController;

    .line 3152
    iput-object v4, p0, Lcom/android/server/am/ActivityManagerService;->mLockTaskController:Lcom/android/server/am/LockTaskController;

    .line 3153
    iput-object v4, p0, Lcom/android/server/am/ActivityManagerService;->mLifecycleManager:Lcom/android/server/am/ClientLifecycleManager;

    .line 3154
    iput-object v4, p0, Lcom/android/server/am/ActivityManagerService;->mProcStartHandlerThread:Lcom/android/server/ServiceThread;

    .line 3155
    iput-object v4, p0, Lcom/android/server/am/ActivityManagerService;->mProcStartHandler:Landroid/os/Handler;

    .line 3156
    iput-object v4, p0, Lcom/android/server/am/ActivityManagerService;->mHiddenApiBlacklist:Lcom/android/server/am/ActivityManagerService$HiddenApiSettings;

    .line 3157
    iput-object v4, p0, Lcom/android/server/am/ActivityManagerService;->mSwipeToScreenshotObserver:Lcom/android/server/am/ActivityManagerService$SwipeToScreenshotObserver;

    .line 3158
    return-void
.end method

.method static synthetic access$000(Lcom/android/server/am/ActivityManagerService;Ljava/io/FileDescriptor;Ljava/io/PrintWriter;[Ljava/lang/String;Z)V
    .locals 0

    .line 525
    invoke-direct {p0, p1, p2, p3, p4}, Lcom/android/server/am/ActivityManagerService;->doDump(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;[Ljava/lang/String;Z)V

    return-void
.end method

.method static synthetic access$100(Lcom/android/server/am/ActivityManagerService;I)V
    .locals 0

    .line 525
    invoke-direct {p0, p1}, Lcom/android/server/am/ActivityManagerService;->updateFontScaleIfNeeded(I)V

    return-void
.end method

.method static synthetic access$1000(Lcom/android/server/am/ActivityManagerService;)V
    .locals 0

    .line 525
    invoke-direct {p0}, Lcom/android/server/am/ActivityManagerService;->writeGrantedUriPermissions()V

    return-void
.end method

.method static synthetic access$1102(Lcom/android/server/am/ActivityManagerService;Z)Z
    .locals 0

    .line 525
    iput-boolean p1, p0, Lcom/android/server/am/ActivityManagerService;->mUserIsMonkey:Z

    return p1
.end method

.method static synthetic access$1200(Lcom/android/server/am/ActivityManagerService;)Lcom/android/server/am/VrController;
    .locals 0

    .line 525
    iget-object p0, p0, Lcom/android/server/am/ActivityManagerService;->mVrController:Lcom/android/server/am/VrController;

    return-object p0
.end method

.method static synthetic access$1300(Lcom/android/server/am/ActivityManagerService;)V
    .locals 0

    .line 525
    invoke-direct {p0}, Lcom/android/server/am/ActivityManagerService;->start()V

    return-void
.end method

.method static synthetic access$1400(Lcom/android/server/am/ActivityManagerService;Ljava/lang/String;I)V
    .locals 0

    .line 525
    invoke-direct {p0, p1, p2}, Lcom/android/server/am/ActivityManagerService;->finishForceStopPackageLocked(Ljava/lang/String;I)V

    return-void
.end method

.method static synthetic access$1600(Lcom/android/server/am/ActivityManagerService;Landroid/content/res/Configuration;Lcom/android/server/am/ActivityRecord;ZZIZ)Z
    .locals 0

    .line 525
    invoke-direct/range {p0 .. p6}, Lcom/android/server/am/ActivityManagerService;->updateConfigurationLocked(Landroid/content/res/Configuration;Lcom/android/server/am/ActivityRecord;ZZIZ)Z

    move-result p0

    return p0
.end method

.method static synthetic access$1700(Lcom/android/server/am/ActivityManagerService;)Lcom/android/server/am/ActivityStartController;
    .locals 0

    .line 525
    iget-object p0, p0, Lcom/android/server/am/ActivityManagerService;->mActivityStartController:Lcom/android/server/am/ActivityStartController;

    return-object p0
.end method

.method static synthetic access$1800(Lcom/android/server/am/ActivityManagerService;)Lcom/android/server/am/KeyguardController;
    .locals 0

    .line 525
    iget-object p0, p0, Lcom/android/server/am/ActivityManagerService;->mKeyguardController:Lcom/android/server/am/KeyguardController;

    return-object p0
.end method

.method static synthetic access$1902(Lcom/android/server/am/ActivityManagerService;Z)Z
    .locals 0

    .line 525
    iput-boolean p1, p0, Lcom/android/server/am/ActivityManagerService;->mIsSwipeToScrenshotEnabled:Z

    return p1
.end method

.method static synthetic access$200(Lcom/android/server/am/ActivityManagerService;Landroid/content/res/Configuration;)V
    .locals 0

    .line 525
    invoke-direct {p0, p1}, Lcom/android/server/am/ActivityManagerService;->updateShouldShowDialogsLocked(Landroid/content/res/Configuration;)V

    return-void
.end method

.method static synthetic access$400(Lcom/android/server/am/ActivityManagerService;)Z
    .locals 0

    .line 525
    iget-boolean p0, p0, Lcom/android/server/am/ActivityManagerService;->mShowDialogs:Z

    return p0
.end method

.method static synthetic access$500(Lcom/android/server/am/ActivityManagerService;)Z
    .locals 0

    .line 525
    iget-boolean p0, p0, Lcom/android/server/am/ActivityManagerService;->mSleeping:Z

    return p0
.end method

.method static synthetic access$600(Lcom/android/server/am/ActivityManagerService;)V
    .locals 0

    .line 525
    invoke-direct {p0}, Lcom/android/server/am/ActivityManagerService;->dispatchProcessesChanged()V

    return-void
.end method

.method static synthetic access$700(Lcom/android/server/am/ActivityManagerService;II)V
    .locals 0

    .line 525
    invoke-direct {p0, p1, p2}, Lcom/android/server/am/ActivityManagerService;->dispatchProcessDied(II)V

    return-void
.end method

.method static synthetic access$800(Lcom/android/server/am/ActivityManagerService;Lcom/android/server/am/ProcessRecord;)V
    .locals 0

    .line 525
    invoke-direct {p0, p1}, Lcom/android/server/am/ActivityManagerService;->processStartTimedOutLocked(Lcom/android/server/am/ProcessRecord;)V

    return-void
.end method

.method static synthetic access$900(Lcom/android/server/am/ActivityManagerService;Lcom/android/server/am/ProcessRecord;)V
    .locals 0

    .line 525
    invoke-direct {p0, p1}, Lcom/android/server/am/ActivityManagerService;->processContentProviderPublishTimedOutLocked(Lcom/android/server/am/ProcessRecord;)V

    return-void
.end method

.method private final addProcessNameLocked(Lcom/android/server/am/ProcessRecord;)V
    .locals 4

    .line 7616
    iget-object v0, p1, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;

    iget v1, p1, Lcom/android/server/am/ProcessRecord;->uid:I

    invoke-direct {p0, v0, v1}, Lcom/android/server/am/ActivityManagerService;->removeProcessNameLocked(Ljava/lang/String;I)Lcom/android/server/am/ProcessRecord;

    move-result-object v0

    .line 7617
    if-ne v0, p1, :cond_0

    iget-boolean v1, p1, Lcom/android/server/am/ProcessRecord;->persistent:Z

    if-eqz v1, :cond_0

    .line 7619
    const-string v0, "ActivityManager"

    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string v2, "Re-adding persistent process "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v1, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-static {v0, v1}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    goto :goto_0

    .line 7620
    :cond_0
    if-eqz v0, :cond_1

    .line 7621
    const-string v1, "ActivityManager"

    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    const-string v3, "Already have existing proc "

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v2, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    const-string v0, " when adding "

    invoke-virtual {v2, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v2, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    invoke-static {v1, v0}, Landroid/util/Slog;->wtf(Ljava/lang/String;Ljava/lang/String;)I

    .line 7623
    :cond_1
    :goto_0
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mActiveUids:Landroid/util/SparseArray;

    iget v1, p1, Lcom/android/server/am/ProcessRecord;->uid:I

    invoke-virtual {v0, v1}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Lcom/android/server/am/UidRecord;

    .line 7624
    const/4 v1, 0x1

    if-nez v0, :cond_4

    .line 7625
    new-instance v0, Lcom/android/server/am/UidRecord;

    iget v2, p1, Lcom/android/server/am/ProcessRecord;->uid:I

    invoke-direct {v0, v2}, Lcom/android/server/am/UidRecord;-><init>(I)V

    .line 7629
    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mDeviceIdleTempWhitelist:[I

    iget v3, p1, Lcom/android/server/am/ProcessRecord;->uid:I

    invoke-static {v3}, Landroid/os/UserHandle;->getAppId(I)I

    move-result v3

    invoke-static {v2, v3}, Ljava/util/Arrays;->binarySearch([II)I

    move-result v2

    if-gez v2, :cond_2

    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mPendingTempWhitelist:Landroid/util/SparseArray;

    iget v3, p1, Lcom/android/server/am/ProcessRecord;->uid:I

    .line 7630
    invoke-virtual {v2, v3}, Landroid/util/SparseArray;->indexOfKey(I)I

    move-result v2

    if-ltz v2, :cond_3

    .line 7631
    :cond_2
    iput-boolean v1, v0, Lcom/android/server/am/UidRecord;->curWhitelist:Z

    iput-boolean v1, v0, Lcom/android/server/am/UidRecord;->setWhitelist:Z

    .line 7633
    :cond_3
    invoke-virtual {v0}, Lcom/android/server/am/UidRecord;->updateHasInternetPermission()V

    .line 7634
    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mActiveUids:Landroid/util/SparseArray;

    iget v3, p1, Lcom/android/server/am/ProcessRecord;->uid:I

    invoke-virtual {v2, v3, v0}, Landroid/util/SparseArray;->put(ILjava/lang/Object;)V

    .line 7635
    iget v2, v0, Lcom/android/server/am/UidRecord;->uid:I

    invoke-static {v2}, Lcom/android/server/am/EventLogTags;->writeAmUidRunning(I)V

    .line 7636
    iget v2, v0, Lcom/android/server/am/UidRecord;->uid:I

    iget v3, v0, Lcom/android/server/am/UidRecord;->curProcState:I

    invoke-direct {p0, v2, v3}, Lcom/android/server/am/ActivityManagerService;->noteUidProcessState(II)V

    .line 7638
    :cond_4
    iput-object v0, p1, Lcom/android/server/am/ProcessRecord;->uidRecord:Lcom/android/server/am/UidRecord;

    .line 7641
    const/4 v2, 0x0

    iput v2, p1, Lcom/android/server/am/ProcessRecord;->renderThreadTid:I

    .line 7642
    iget v2, v0, Lcom/android/server/am/UidRecord;->numProcs:I

    add-int/2addr v2, v1

    iput v2, v0, Lcom/android/server/am/UidRecord;->numProcs:I

    .line 7643
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mProcessNames:Lcom/android/internal/app/ProcessMap;

    iget-object v1, p1, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;

    iget v2, p1, Lcom/android/server/am/ProcessRecord;->uid:I

    invoke-virtual {v0, v1, v2, p1}, Lcom/android/internal/app/ProcessMap;->put(Ljava/lang/String;ILjava/lang/Object;)Ljava/lang/Object;

    .line 7644
    iget-boolean v0, p1, Lcom/android/server/am/ProcessRecord;->isolated:Z

    if-eqz v0, :cond_5

    .line 7645
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mIsolatedProcesses:Landroid/util/SparseArray;

    iget v1, p1, Lcom/android/server/am/ProcessRecord;->uid:I

    invoke-virtual {v0, v1, p1}, Landroid/util/SparseArray;->put(ILjava/lang/Object;)V

    .line 7647
    :cond_5
    return-void
.end method

.method private static addServiceToMap(Landroid/util/ArrayMap;Ljava/lang/String;)V
    .locals 1
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "(",
            "Landroid/util/ArrayMap<",
            "Ljava/lang/String;",
            "Landroid/os/IBinder;",
            ">;",
            "Ljava/lang/String;",
            ")V"
        }
    .end annotation

    .line 3605
    invoke-static {p1}, Landroid/os/ServiceManager;->getService(Ljava/lang/String;)Landroid/os/IBinder;

    move-result-object v0

    .line 3606
    if-eqz v0, :cond_0

    .line 3607
    invoke-virtual {p0, p1, v0}, Landroid/util/ArrayMap;->put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    .line 3612
    :cond_0
    return-void
.end method

.method private appendBasicMemEntry(Ljava/lang/StringBuilder;IIJJLjava/lang/String;)V
    .locals 1

    .line 20033
    const-string v0, "  "

    invoke-virtual {p1, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 20034
    invoke-static {p2}, Lcom/android/server/am/ProcessList;->makeOomAdjString(I)Ljava/lang/String;

    move-result-object p2

    invoke-virtual {p1, p2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 20035
    const/16 p2, 0x20

    invoke-virtual {p1, p2}, Ljava/lang/StringBuilder;->append(C)Ljava/lang/StringBuilder;

    .line 20036
    invoke-static {p3}, Lcom/android/server/am/ProcessList;->makeProcStateString(I)Ljava/lang/String;

    move-result-object p3

    invoke-virtual {p1, p3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 20037
    invoke-virtual {p1, p2}, Ljava/lang/StringBuilder;->append(C)Ljava/lang/StringBuilder;

    .line 20038
    invoke-static {p1, p4, p5}, Lcom/android/server/am/ProcessList;->appendRamKb(Ljava/lang/StringBuilder;J)V

    .line 20039
    const-string p2, ": "

    invoke-virtual {p1, p2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 20040
    invoke-virtual {p1, p8}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 20041
    const-wide/16 p2, 0x0

    cmp-long p2, p6, p2

    if-lez p2, :cond_0

    .line 20042
    const-string p2, " ("

    invoke-virtual {p1, p2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 20043
    invoke-static {p6, p7}, Lcom/android/server/am/ActivityManagerService;->stringifyKBSize(J)Ljava/lang/String;

    move-result-object p2

    invoke-virtual {p1, p2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 20044
    const-string p2, " memtrack)"

    invoke-virtual {p1, p2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 20046
    :cond_0
    return-void
.end method

.method private appendDropBoxProcessHeaders(Lcom/android/server/am/ProcessRecord;Ljava/lang/String;Ljava/lang/StringBuilder;)V
    .locals 7

    .line 15938
    if-nez p1, :cond_0

    .line 15939
    const-string p1, "Process: "

    invoke-virtual {p3, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {p3, p2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string p1, "\n"

    invoke-virtual {p3, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 15940
    return-void

    .line 15945
    :cond_0
    monitor-enter p0

    :try_start_0
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    .line 15946
    const-string v0, "Process: "

    invoke-virtual {p3, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {p3, p2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string p2, "\n"

    invoke-virtual {p3, p2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 15947
    const-string p2, "PID: "

    invoke-virtual {p3, p2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget p2, p1, Lcom/android/server/am/ProcessRecord;->pid:I

    invoke-virtual {p3, p2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string p2, "\n"

    invoke-virtual {p3, p2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 15948
    iget-object p2, p1, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget p2, p2, Landroid/content/pm/ApplicationInfo;->flags:I

    .line 15949
    invoke-static {}, Landroid/app/AppGlobals;->getPackageManager()Landroid/content/pm/IPackageManager;

    move-result-object v0

    .line 15950
    const-string v1, "Flags: 0x"

    invoke-virtual {p3, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-static {p2}, Ljava/lang/Integer;->toHexString(I)Ljava/lang/String;

    move-result-object p2

    invoke-virtual {p3, p2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string p2, "\n"

    invoke-virtual {p3, p2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 15951
    const/4 p2, 0x0

    move v1, p2

    :goto_0
    iget-object v2, p1, Lcom/android/server/am/ProcessRecord;->pkgList:Landroid/util/ArrayMap;

    invoke-virtual {v2}, Landroid/util/ArrayMap;->size()I

    move-result v2

    if-ge v1, v2, :cond_2

    .line 15952
    iget-object v2, p1, Lcom/android/server/am/ProcessRecord;->pkgList:Landroid/util/ArrayMap;

    invoke-virtual {v2, v1}, Landroid/util/ArrayMap;->keyAt(I)Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Ljava/lang/String;

    .line 15953
    const-string v3, "Package: "

    invoke-virtual {p3, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {p3, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 15955
    :try_start_1
    invoke-static {}, Landroid/os/UserHandle;->getCallingUserId()I

    move-result v3

    invoke-interface {v0, v2, p2, v3}, Landroid/content/pm/IPackageManager;->getPackageInfo(Ljava/lang/String;II)Landroid/content/pm/PackageInfo;

    move-result-object v3

    .line 15956
    if-eqz v3, :cond_1

    .line 15957
    const-string v4, " v"

    invoke-virtual {p3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v3}, Landroid/content/pm/PackageInfo;->getLongVersionCode()J

    move-result-wide v4

    invoke-virtual {p3, v4, v5}, Ljava/lang/StringBuilder;->append(J)Ljava/lang/StringBuilder;

    .line 15958
    iget-object v4, v3, Landroid/content/pm/PackageInfo;->versionName:Ljava/lang/String;

    if-eqz v4, :cond_1

    .line 15959
    const-string v4, " ("

    invoke-virtual {p3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget-object v3, v3, Landroid/content/pm/PackageInfo;->versionName:Ljava/lang/String;

    invoke-virtual {p3, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v3, ")"

    invoke-virtual {p3, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
    :try_end_1
    .catch Landroid/os/RemoteException; {:try_start_1 .. :try_end_1} :catch_0
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 15964
    :cond_1
    goto :goto_1

    .line 15962
    :catch_0
    move-exception v3

    .line 15963
    :try_start_2
    const-string v4, "ActivityManager"

    new-instance v5, Ljava/lang/StringBuilder;

    invoke-direct {v5}, Ljava/lang/StringBuilder;-><init>()V

    const-string v6, "Error getting package info: "

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v5, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v5}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v2

    invoke-static {v4, v2, v3}, Landroid/util/Slog;->e(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I

    .line 15965
    :goto_1
    const-string v2, "\n"

    invoke-virtual {p3, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 15951
    add-int/lit8 v1, v1, 0x1

    goto :goto_0

    .line 15967
    :cond_2
    iget-object p1, p1, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    invoke-virtual {p1}, Landroid/content/pm/ApplicationInfo;->isInstantApp()Z

    move-result p1

    if-eqz p1, :cond_3

    .line 15968
    const-string p1, "Instant-App: true\n"

    invoke-virtual {p3, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 15970
    :cond_3
    monitor-exit p0
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    .line 15971
    return-void

    .line 15970
    :catchall_0
    move-exception p1

    :try_start_3
    monitor-exit p0
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw p1
.end method

.method static final appendMemBucket(Ljava/lang/StringBuilder;JLjava/lang/String;Z)V
    .locals 8

    .line 18920
    const/16 v0, 0x2e

    invoke-virtual {p3, v0}, Ljava/lang/String;->lastIndexOf(I)I

    move-result v0

    .line 18921
    const/4 v1, 0x0

    if-ltz v0, :cond_0

    add-int/lit8 v0, v0, 0x1

    goto :goto_0

    .line 18922
    :cond_0
    nop

    .line 18923
    move v0, v1

    :goto_0
    invoke-virtual {p3}, Ljava/lang/String;->length()I

    move-result v2

    .line 18924
    :goto_1
    sget-object v3, Lcom/android/server/am/ActivityManagerService;->DUMP_MEM_BUCKETS:[J

    array-length v3, v3

    const-wide/16 v4, 0x400

    if-ge v1, v3, :cond_3

    .line 18925
    sget-object v3, Lcom/android/server/am/ActivityManagerService;->DUMP_MEM_BUCKETS:[J

    aget-wide v6, v3, v1

    cmp-long v3, v6, p1

    if-ltz v3, :cond_2

    .line 18926
    sget-object p1, Lcom/android/server/am/ActivityManagerService;->DUMP_MEM_BUCKETS:[J

    aget-wide p1, p1, v1

    div-long/2addr p1, v4

    .line 18927
    invoke-virtual {p0, p1, p2}, Ljava/lang/StringBuilder;->append(J)Ljava/lang/StringBuilder;

    .line 18928
    if-eqz p4, :cond_1

    const-string p1, "MB."

    goto :goto_2

    :cond_1
    const-string p1, "MB "

    :goto_2
    invoke-virtual {p0, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 18929
    invoke-virtual {p0, p3, v0, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/CharSequence;II)Ljava/lang/StringBuilder;

    .line 18930
    return-void

    .line 18924
    :cond_2
    add-int/lit8 v1, v1, 0x1

    goto :goto_1

    .line 18933
    :cond_3
    div-long/2addr p1, v4

    invoke-virtual {p0, p1, p2}, Ljava/lang/StringBuilder;->append(J)Ljava/lang/StringBuilder;

    .line 18934
    if-eqz p4, :cond_4

    const-string p1, "MB."

    goto :goto_3

    :cond_4
    const-string p1, "MB "

    :goto_3
    invoke-virtual {p0, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 18935
    invoke-virtual {p0, p3, v0, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/CharSequence;II)Ljava/lang/StringBuilder;

    .line 18936
    return-void
.end method

.method private appendMemInfo(Ljava/lang/StringBuilder;Lcom/android/server/am/ProcessMemInfo;)V
    .locals 9

    .line 20049
    iget v2, p2, Lcom/android/server/am/ProcessMemInfo;->oomAdj:I

    iget v3, p2, Lcom/android/server/am/ProcessMemInfo;->procState:I

    iget-wide v4, p2, Lcom/android/server/am/ProcessMemInfo;->pss:J

    iget-wide v6, p2, Lcom/android/server/am/ProcessMemInfo;->memtrack:J

    iget-object v8, p2, Lcom/android/server/am/ProcessMemInfo;->name:Ljava/lang/String;

    move-object v0, p0

    move-object v1, p1

    invoke-direct/range {v0 .. v8}, Lcom/android/server/am/ActivityManagerService;->appendBasicMemEntry(Ljava/lang/StringBuilder;IIJJLjava/lang/String;)V

    .line 20050
    const-string v0, " (pid "

    invoke-virtual {p1, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 20051
    iget v0, p2, Lcom/android/server/am/ProcessMemInfo;->pid:I

    invoke-virtual {p1, v0}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    .line 20052
    const-string v0, ") "

    invoke-virtual {p1, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 20053
    iget-object v0, p2, Lcom/android/server/am/ProcessMemInfo;->adjType:Ljava/lang/String;

    invoke-virtual {p1, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 20054
    const/16 v0, 0xa

    invoke-virtual {p1, v0}, Ljava/lang/StringBuilder;->append(C)Ljava/lang/StringBuilder;

    .line 20055
    iget-object v1, p2, Lcom/android/server/am/ProcessMemInfo;->adjReason:Ljava/lang/String;

    if-eqz v1, :cond_0

    .line 20056
    const-string v1, "                      "

    invoke-virtual {p1, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 20057
    iget-object p2, p2, Lcom/android/server/am/ProcessMemInfo;->adjReason:Ljava/lang/String;

    invoke-virtual {p1, p2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 20058
    invoke-virtual {p1, v0}, Ljava/lang/StringBuilder;->append(C)Ljava/lang/StringBuilder;

    .line 20060
    :cond_0
    return-void
.end method

.method private final applyOomAdjLocked(Lcom/android/server/am/ProcessRecord;ZJJ)Z
    .locals 17

    move-object/from16 v1, p0

    move-object/from16 v2, p1

    move-wide/from16 v9, p3

    .line 24723
    move-wide/from16 v11, p5

    .line 24725
    iget v0, v2, Lcom/android/server/am/ProcessRecord;->curRawAdj:I

    iget v3, v2, Lcom/android/server/am/ProcessRecord;->setRawAdj:I

    if-eq v0, v3, :cond_0

    .line 24726
    new-instance v0, Ljava/lang/StringBuilder;

    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V

    const-string v3, "app_uid="

    invoke-virtual {v0, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget v3, v2, Lcom/android/server/am/ProcessRecord;->uid:I

    invoke-virtual {v0, v3}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v3, ",app_pid="

    invoke-virtual {v0, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget v3, v2, Lcom/android/server/am/ProcessRecord;->pid:I

    invoke-virtual {v0, v3}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v3, ",oom_adj="

    invoke-virtual {v0, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget v3, v2, Lcom/android/server/am/ProcessRecord;->curAdj:I

    invoke-virtual {v0, v3}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v3, ",setAdj="

    invoke-virtual {v0, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget v3, v2, Lcom/android/server/am/ProcessRecord;->setAdj:I

    invoke-virtual {v0, v3}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v3, ",hasShownUi="

    invoke-virtual {v0, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 24728
    iget-boolean v3, v2, Lcom/android/server/am/ProcessRecord;->hasShownUi:Z

    invoke-virtual {v0, v3}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v3, ",cached="

    invoke-virtual {v0, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 24729
    iget-boolean v3, v2, Lcom/android/server/am/ProcessRecord;->cached:Z

    invoke-virtual {v0, v3}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v3, ",fA="

    invoke-virtual {v0, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 24730
    iget-boolean v3, v2, Lcom/android/server/am/ProcessRecord;->foregroundActivities:Z

    invoke-virtual {v0, v3}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v3, ",fS="

    invoke-virtual {v0, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 24731
    iget-boolean v3, v2, Lcom/android/server/am/ProcessRecord;->foregroundServices:Z

    invoke-virtual {v0, v3}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v3, ",systemNoUi="

    invoke-virtual {v0, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 24732
    iget-boolean v3, v2, Lcom/android/server/am/ProcessRecord;->systemNoUi:Z

    invoke-virtual {v0, v3}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v3, ",curSchedGroup="

    invoke-virtual {v0, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget v3, v2, Lcom/android/server/am/ProcessRecord;->curSchedGroup:I

    invoke-virtual {v0, v3}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v3, ",curProcState="

    invoke-virtual {v0, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget v3, v2, Lcom/android/server/am/ProcessRecord;->curProcState:I

    invoke-virtual {v0, v3}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v3, ",setProcState="

    invoke-virtual {v0, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget v3, v2, Lcom/android/server/am/ProcessRecord;->setProcState:I

    invoke-virtual {v0, v3}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v3, ",killed="

    invoke-virtual {v0, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 24735
    iget-boolean v3, v2, Lcom/android/server/am/ProcessRecord;->killed:Z

    invoke-virtual {v0, v3}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v3, ",killedByAm="

    invoke-virtual {v0, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget-boolean v3, v2, Lcom/android/server/am/ProcessRecord;->killedByAm:Z

    invoke-virtual {v0, v3}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v3, ",debugging="

    invoke-virtual {v0, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 24736
    iget-boolean v3, v2, Lcom/android/server/am/ProcessRecord;->debugging:Z

    invoke-virtual {v0, v3}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    .line 24737
    const/16 v3, 0x181

    invoke-static {v3, v0}, Landroid/util/SeempLog;->record_str(ILjava/lang/String;)I

    .line 24738
    iget v0, v2, Lcom/android/server/am/ProcessRecord;->curRawAdj:I

    iput v0, v2, Lcom/android/server/am/ProcessRecord;->setRawAdj:I

    .line 24741
    :cond_0
    nop

    .line 24743
    iget v0, v2, Lcom/android/server/am/ProcessRecord;->curAdj:I

    iget v3, v2, Lcom/android/server/am/ProcessRecord;->setAdj:I

    if-eq v0, v3, :cond_2

    .line 24744
    iget v0, v2, Lcom/android/server/am/ProcessRecord;->pid:I

    iget v3, v2, Lcom/android/server/am/ProcessRecord;->uid:I

    iget v4, v2, Lcom/android/server/am/ProcessRecord;->curAdj:I

    invoke-static {v0, v3, v4}, Lcom/android/server/am/ProcessList;->setOomAdj(III)V

    .line 24745
    iget v0, v1, Lcom/android/server/am/ActivityManagerService;->mCurOomAdjUid:I

    iget-object v3, v2, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget v3, v3, Landroid/content/pm/ApplicationInfo;->uid:I

    if-ne v0, v3, :cond_1

    .line 24746
    new-instance v0, Ljava/lang/StringBuilder;

    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V

    const-string v3, "Set "

    invoke-virtual {v0, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget v3, v2, Lcom/android/server/am/ProcessRecord;->pid:I

    invoke-virtual {v0, v3}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v3, " "

    invoke-virtual {v0, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget-object v3, v2, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;

    invoke-virtual {v0, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v3, " adj "

    invoke-virtual {v0, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget v3, v2, Lcom/android/server/am/ProcessRecord;->curAdj:I

    invoke-virtual {v0, v3}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v3, ": "

    invoke-virtual {v0, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget-object v3, v2, Lcom/android/server/am/ProcessRecord;->adjType:Ljava/lang/String;

    invoke-virtual {v0, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    .line 24748
    const-string v3, "ActivityManager"

    invoke-virtual {v1, v3, v0}, Lcom/android/server/am/ActivityManagerService;->reportOomAdjMessageLocked(Ljava/lang/String;Ljava/lang/String;)V

    .line 24750
    :cond_1
    iget v0, v2, Lcom/android/server/am/ProcessRecord;->curAdj:I

    iput v0, v2, Lcom/android/server/am/ProcessRecord;->setAdj:I

    .line 24751
    const/16 v0, -0x2710

    iput v0, v2, Lcom/android/server/am/ProcessRecord;->verifiedAdj:I

    .line 24754
    :cond_2
    iget v0, v2, Lcom/android/server/am/ProcessRecord;->setSchedGroup:I

    iget v3, v2, Lcom/android/server/am/ProcessRecord;->curSchedGroup:I

    const/4 v13, 0x1

    const/4 v14, 0x0

    if-eq v0, v3, :cond_b

    .line 24755
    iget v0, v2, Lcom/android/server/am/ProcessRecord;->setSchedGroup:I

    .line 24756
    iget v3, v2, Lcom/android/server/am/ProcessRecord;->curSchedGroup:I

    iput v3, v2, Lcom/android/server/am/ProcessRecord;->setSchedGroup:I

    .line 24757
    iget v3, v1, Lcom/android/server/am/ActivityManagerService;->mCurOomAdjUid:I

    iget v4, v2, Lcom/android/server/am/ProcessRecord;->uid:I

    if-ne v3, v4, :cond_3

    .line 24758
    new-instance v3, Ljava/lang/StringBuilder;

    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V

    const-string v4, "Setting sched group of "

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget-object v4, v2, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v4, " to "

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget v4, v2, Lcom/android/server/am/ProcessRecord;->curSchedGroup:I

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v4, ": "

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget-object v4, v2, Lcom/android/server/am/ProcessRecord;->adjType:Ljava/lang/String;

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v3

    .line 24760
    const-string v4, "ActivityManager"

    invoke-virtual {v1, v4, v3}, Lcom/android/server/am/ActivityManagerService;->reportOomAdjMessageLocked(Ljava/lang/String;Ljava/lang/String;)V

    .line 24762
    :cond_3
    iget-object v3, v2, Lcom/android/server/am/ProcessRecord;->waitingToKill:Ljava/lang/String;

    if-eqz v3, :cond_4

    iget-object v3, v2, Lcom/android/server/am/ProcessRecord;->curReceivers:Landroid/util/ArraySet;

    invoke-virtual {v3}, Landroid/util/ArraySet;->isEmpty()Z

    move-result v3

    if-eqz v3, :cond_4

    iget v3, v2, Lcom/android/server/am/ProcessRecord;->setSchedGroup:I

    if-nez v3, :cond_4

    .line 24764
    iget-object v0, v2, Lcom/android/server/am/ProcessRecord;->waitingToKill:Ljava/lang/String;

    invoke-virtual {v2, v0, v13}, Lcom/android/server/am/ProcessRecord;->kill(Ljava/lang/String;Z)V

    .line 24765
    nop

    .line 24862
    move v15, v14

    goto/16 :goto_5

    .line 24768
    :cond_4
    iget v3, v2, Lcom/android/server/am/ProcessRecord;->curSchedGroup:I

    packed-switch v3, :pswitch_data_0

    .line 24780
    :pswitch_0
    nop

    .line 24783
    const/4 v3, -0x1

    goto :goto_0

    .line 24774
    :pswitch_1
    const/4 v3, 0x5

    .line 24775
    goto :goto_0

    .line 24777
    :pswitch_2
    const/4 v3, 0x7

    .line 24778
    goto :goto_0

    .line 24770
    :pswitch_3
    nop

    .line 24771
    nop

    .line 24783
    move v3, v14

    :goto_0
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v4

    .line 24785
    :try_start_0
    iget-boolean v6, v1, Lcom/android/server/am/ActivityManagerService;->mEnableProcessGroupCgroupFollow:Z

    if-eqz v6, :cond_5

    .line 24786
    iget-object v6, v2, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget v6, v6, Landroid/content/pm/ApplicationInfo;->uid:I

    iget v7, v2, Lcom/android/server/am/ProcessRecord;->pid:I

    invoke-static {v6, v7, v3}, Landroid/os/Process;->setCgroupProcsProcessGroup(III)V

    goto :goto_1

    .line 24788
    :cond_5
    iget v6, v2, Lcom/android/server/am/ProcessRecord;->pid:I

    invoke-static {v6, v3}, Landroid/os/Process;->setProcessGroup(II)V

    .line 24790
    :goto_1
    iget v3, v2, Lcom/android/server/am/ProcessRecord;->curSchedGroup:I

    const/4 v6, 0x3

    if-ne v3, v6, :cond_7

    .line 24792
    if-eq v0, v6, :cond_a

    .line 24793
    iget-object v0, v1, Lcom/android/server/am/ActivityManagerService;->mVrController:Lcom/android/server/am/VrController;

    invoke-virtual {v0, v2}, Lcom/android/server/am/VrController;->onTopProcChangedLocked(Lcom/android/server/am/ProcessRecord;)V

    .line 24794
    iget-boolean v0, v1, Lcom/android/server/am/ActivityManagerService;->mUseFifoUiScheduling:Z

    if-eqz v0, :cond_6

    .line 24796
    iget v0, v2, Lcom/android/server/am/ProcessRecord;->pid:I

    invoke-static {v0}, Landroid/os/Process;->getThreadPriority(I)I

    move-result v0

    iput v0, v2, Lcom/android/server/am/ProcessRecord;->savedPriority:I

    .line 24797
    iget v0, v2, Lcom/android/server/am/ProcessRecord;->pid:I

    invoke-static {v0, v13}, Lcom/android/server/am/ActivityManagerService;->scheduleAsFifoPriority(IZ)Z

    .line 24798
    iget v0, v2, Lcom/android/server/am/ProcessRecord;->renderThreadTid:I

    if-eqz v0, :cond_a

    .line 24799
    iget v0, v2, Lcom/android/server/am/ProcessRecord;->renderThreadTid:I

    invoke-static {v0, v13}, Lcom/android/server/am/ActivityManagerService;->scheduleAsFifoPriority(IZ)Z

    goto/16 :goto_4

    .line 24812
    :cond_6
    iget v0, v2, Lcom/android/server/am/ProcessRecord;->pid:I

    const/16 v3, -0xa

    invoke-static {v0, v3}, Landroid/os/Process;->setThreadPriority(II)V

    .line 24813
    iget v0, v2, Lcom/android/server/am/ProcessRecord;->renderThreadTid:I
    :try_end_0
    .catch Ljava/lang/Exception; {:try_start_0 .. :try_end_0} :catch_3
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    if-eqz v0, :cond_a

    .line 24815
    :try_start_1
    iget v0, v2, Lcom/android/server/am/ProcessRecord;->renderThreadTid:I

    invoke-static {v0, v3}, Landroid/os/Process;->setThreadPriority(II)V
    :try_end_1
    .catch Ljava/lang/IllegalArgumentException; {:try_start_1 .. :try_end_1} :catch_0
    .catch Ljava/lang/Exception; {:try_start_1 .. :try_end_1} :catch_3
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    goto :goto_2

    .line 24817
    :catch_0
    move-exception v0

    .line 24819
    :goto_2
    goto/16 :goto_4

    .line 24823
    :cond_7
    if-ne v0, v6, :cond_a

    :try_start_2
    iget v0, v2, Lcom/android/server/am/ProcessRecord;->curSchedGroup:I

    if-eq v0, v6, :cond_a

    .line 24825
    iget-object v0, v1, Lcom/android/server/am/ActivityManagerService;->mVrController:Lcom/android/server/am/VrController;

    invoke-virtual {v0, v2}, Lcom/android/server/am/VrController;->onTopProcChangedLocked(Lcom/android/server/am/ProcessRecord;)V

    .line 24826
    iget-boolean v0, v1, Lcom/android/server/am/ActivityManagerService;->mUseFifoUiScheduling:Z
    :try_end_2
    .catch Ljava/lang/Exception; {:try_start_2 .. :try_end_2} :catch_3
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    if-eqz v0, :cond_9

    .line 24829
    :try_start_3
    iget v0, v2, Lcom/android/server/am/ProcessRecord;->pid:I

    invoke-static {v0, v14, v14}, Landroid/os/Process;->setThreadScheduler(III)V

    .line 24830
    iget v0, v2, Lcom/android/server/am/ProcessRecord;->pid:I

    iget v3, v2, Lcom/android/server/am/ProcessRecord;->savedPriority:I

    invoke-static {v0, v3}, Landroid/os/Process;->setThreadPriority(II)V

    .line 24831
    iget v0, v2, Lcom/android/server/am/ProcessRecord;->renderThreadTid:I

    if-eqz v0, :cond_8

    .line 24832
    iget v0, v2, Lcom/android/server/am/ProcessRecord;->renderThreadTid:I

    invoke-static {v0, v14, v14}, Landroid/os/Process;->setThreadScheduler(III)V

    .line 24834
    iget v0, v2, Lcom/android/server/am/ProcessRecord;->renderThreadTid:I

    const/4 v3, -0x4

    invoke-static {v0, v3}, Landroid/os/Process;->setThreadPriority(II)V
    :try_end_3
    .catch Ljava/lang/IllegalArgumentException; {:try_start_3 .. :try_end_3} :catch_2
    .catch Ljava/lang/SecurityException; {:try_start_3 .. :try_end_3} :catch_1
    .catch Ljava/lang/Exception; {:try_start_3 .. :try_end_3} :catch_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_0

    .line 24842
    :cond_8
    :goto_3
    goto :goto_4

    .line 24840
    :catch_1
    move-exception v0

    .line 24841
    :try_start_4
    const-string v3, "ActivityManager"

    new-instance v6, Ljava/lang/StringBuilder;

    invoke-direct {v6}, Ljava/lang/StringBuilder;-><init>()V

    const-string v7, "Failed to set scheduling policy, not allowed:\n"

    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v6, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    invoke-virtual {v6}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    invoke-static {v3, v0}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    goto :goto_3

    .line 24836
    :catch_2
    move-exception v0

    .line 24837
    const-string v3, "ActivityManager"

    new-instance v6, Ljava/lang/StringBuilder;

    invoke-direct {v6}, Ljava/lang/StringBuilder;-><init>()V

    const-string v7, "Failed to set scheduling policy, thread does not exist:\n"

    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v6, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    invoke-virtual {v6}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    invoke-static {v3, v0}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    goto :goto_3

    .line 24845
    :cond_9
    iget v0, v2, Lcom/android/server/am/ProcessRecord;->pid:I

    invoke-static {v0, v14}, Landroid/os/Process;->setThreadPriority(II)V

    .line 24846
    iget v0, v2, Lcom/android/server/am/ProcessRecord;->renderThreadTid:I

    if-eqz v0, :cond_a

    .line 24847
    iget v0, v2, Lcom/android/server/am/ProcessRecord;->renderThreadTid:I

    invoke-static {v0, v14}, Landroid/os/Process;->setThreadPriority(II)V
    :try_end_4
    .catch Ljava/lang/Exception; {:try_start_4 .. :try_end_4} :catch_3
    .catchall {:try_start_4 .. :try_end_4} :catchall_0

    goto :goto_4

    .line 24858
    :catchall_0
    move-exception v0

    invoke-static {v4, v5}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    throw v0

    .line 24851
    :catch_3
    move-exception v0

    .line 24858
    :cond_a
    :goto_4
    invoke-static {v4, v5}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 24859
    nop

    .line 24862
    :cond_b
    move v15, v13

    :goto_5
    iget-boolean v0, v2, Lcom/android/server/am/ProcessRecord;->repForegroundActivities:Z

    iget-boolean v3, v2, Lcom/android/server/am/ProcessRecord;->foregroundActivities:Z

    if-eq v0, v3, :cond_c

    .line 24863
    iget-boolean v0, v2, Lcom/android/server/am/ProcessRecord;->foregroundActivities:Z

    iput-boolean v0, v2, Lcom/android/server/am/ProcessRecord;->repForegroundActivities:Z

    .line 24864
    nop

    .line 24866
    move/from16 v16, v13

    goto :goto_6

    :cond_c
    move/from16 v16, v14

    :goto_6
    iget v0, v2, Lcom/android/server/am/ProcessRecord;->repProcState:I

    iget v3, v2, Lcom/android/server/am/ProcessRecord;->curProcState:I

    if-eq v0, v3, :cond_d

    .line 24867
    iget v0, v2, Lcom/android/server/am/ProcessRecord;->curProcState:I

    iput v0, v2, Lcom/android/server/am/ProcessRecord;->repProcState:I

    .line 24868
    iget-object v0, v2, Lcom/android/server/am/ProcessRecord;->thread:Landroid/app/IApplicationThread;

    if-eqz v0, :cond_d

    .line 24875
    :try_start_5
    iget-object v0, v2, Lcom/android/server/am/ProcessRecord;->thread:Landroid/app/IApplicationThread;

    iget v3, v2, Lcom/android/server/am/ProcessRecord;->repProcState:I

    invoke-interface {v0, v3}, Landroid/app/IApplicationThread;->setProcessState(I)V
    :try_end_5
    .catch Landroid/os/RemoteException; {:try_start_5 .. :try_end_5} :catch_4

    .line 24877
    goto :goto_7

    .line 24876
    :catch_4
    move-exception v0

    .line 24880
    :cond_d
    :goto_7
    iget v0, v2, Lcom/android/server/am/ProcessRecord;->setProcState:I

    const/16 v3, 0x13

    if-eq v0, v3, :cond_10

    iget v0, v2, Lcom/android/server/am/ProcessRecord;->curProcState:I

    iget v3, v2, Lcom/android/server/am/ProcessRecord;->setProcState:I

    .line 24881
    invoke-static {v0, v3}, Lcom/android/server/am/ProcessList;->procStatesDifferForMem(II)Z

    move-result v0

    if-eqz v0, :cond_e

    goto :goto_8

    .line 24906
    :cond_e
    iget-wide v3, v2, Lcom/android/server/am/ProcessRecord;->nextPssTime:J

    cmp-long v0, v9, v3

    if-gtz v0, :cond_f

    iget-wide v3, v2, Lcom/android/server/am/ProcessRecord;->lastPssTime:J

    const-wide/32 v5, 0x36ee80

    add-long/2addr v3, v5

    cmp-long v0, v9, v3

    if-lez v0, :cond_11

    iget-wide v3, v2, Lcom/android/server/am/ProcessRecord;->lastStateTime:J

    iget-boolean v0, v1, Lcom/android/server/am/ActivityManagerService;->mTestPssMode:Z

    .line 24907
    invoke-static {v0}, Lcom/android/server/am/ProcessList;->minTimeFromStateChange(Z)J

    move-result-wide v5

    add-long/2addr v3, v5

    cmp-long v0, v9, v3

    if-lez v0, :cond_11

    .line 24909
    :cond_f
    iget v0, v2, Lcom/android/server/am/ProcessRecord;->setProcState:I

    invoke-virtual {v1, v2, v0}, Lcom/android/server/am/ActivityManagerService;->requestPssLocked(Lcom/android/server/am/ProcessRecord;I)Z

    move-result v0

    if-eqz v0, :cond_11

    .line 24910
    iget v3, v2, Lcom/android/server/am/ProcessRecord;->curProcState:I

    iget-object v4, v2, Lcom/android/server/am/ProcessRecord;->procStateMemTracker:Lcom/android/server/am/ProcessList$ProcStateMemTracker;

    iget-boolean v5, v1, Lcom/android/server/am/ActivityManagerService;->mTestPssMode:Z

    .line 24911
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/am/ActivityManagerService;->isSleepingLocked()Z

    move-result v6

    .line 24910
    move-wide v7, v9

    invoke-static/range {v3 .. v8}, Lcom/android/server/am/ProcessList;->computeNextPssTime(ILcom/android/server/am/ProcessList$ProcStateMemTracker;ZZJ)J

    move-result-wide v3

    iput-wide v3, v2, Lcom/android/server/am/ProcessRecord;->nextPssTime:J

    goto :goto_9

    .line 24898
    :cond_10
    :goto_8
    iput-wide v9, v2, Lcom/android/server/am/ProcessRecord;->lastStateTime:J

    .line 24899
    iget v3, v2, Lcom/android/server/am/ProcessRecord;->curProcState:I

    iget-object v4, v2, Lcom/android/server/am/ProcessRecord;->procStateMemTracker:Lcom/android/server/am/ProcessList$ProcStateMemTracker;

    iget-boolean v5, v1, Lcom/android/server/am/ActivityManagerService;->mTestPssMode:Z

    .line 24900
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/am/ActivityManagerService;->isSleepingLocked()Z

    move-result v6

    .line 24899
    move-wide v7, v9

    invoke-static/range {v3 .. v8}, Lcom/android/server/am/ProcessList;->computeNextPssTime(ILcom/android/server/am/ProcessList$ProcStateMemTracker;ZZJ)J

    move-result-wide v3

    iput-wide v3, v2, Lcom/android/server/am/ProcessRecord;->nextPssTime:J

    .line 24916
    :cond_11
    :goto_9
    iget v0, v2, Lcom/android/server/am/ProcessRecord;->setProcState:I

    iget v3, v2, Lcom/android/server/am/ProcessRecord;->curProcState:I

    if-eq v0, v3, :cond_18

    .line 24917
    iget v0, v1, Lcom/android/server/am/ActivityManagerService;->mCurOomAdjUid:I

    iget v3, v2, Lcom/android/server/am/ProcessRecord;->uid:I

    if-ne v0, v3, :cond_12

    .line 24918
    new-instance v0, Ljava/lang/StringBuilder;

    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V

    const-string v3, "Proc state change of "

    invoke-virtual {v0, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget-object v3, v2, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;

    invoke-virtual {v0, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v3, " to "

    invoke-virtual {v0, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget v3, v2, Lcom/android/server/am/ProcessRecord;->curProcState:I

    .line 24919
    invoke-static {v3}, Lcom/android/server/am/ProcessList;->makeProcStateString(I)Ljava/lang/String;

    move-result-object v3

    invoke-virtual {v0, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v3, " ("

    invoke-virtual {v0, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget v3, v2, Lcom/android/server/am/ProcessRecord;->curProcState:I

    invoke-virtual {v0, v3}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v3, "): "

    invoke-virtual {v0, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget-object v3, v2, Lcom/android/server/am/ProcessRecord;->adjType:Ljava/lang/String;

    invoke-virtual {v0, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    .line 24921
    const-string v3, "ActivityManager"

    invoke-virtual {v1, v3, v0}, Lcom/android/server/am/ActivityManagerService;->reportOomAdjMessageLocked(Ljava/lang/String;Ljava/lang/String;)V

    .line 24923
    :cond_12
    iget v0, v2, Lcom/android/server/am/ProcessRecord;->setProcState:I

    const/16 v3, 0x9

    if-ge v0, v3, :cond_13

    .line 24924
    move v0, v13

    goto :goto_a

    .line 24923
    :cond_13
    nop

    .line 24924
    move v0, v14

    :goto_a
    iget v4, v2, Lcom/android/server/am/ProcessRecord;->curProcState:I

    if-ge v4, v3, :cond_14

    .line 24925
    move v3, v13

    goto :goto_b

    .line 24924
    :cond_14
    nop

    .line 24925
    move v3, v14

    :goto_b
    if-eqz v0, :cond_15

    if-nez v3, :cond_15

    .line 24930
    iput-wide v9, v2, Lcom/android/server/am/ProcessRecord;->whenUnimportant:J

    .line 24931
    const-wide/16 v3, 0x0

    iput-wide v3, v2, Lcom/android/server/am/ProcessRecord;->lastCpuTime:J

    .line 24935
    :cond_15
    invoke-direct {v1, v2, v11, v12}, Lcom/android/server/am/ActivityManagerService;->maybeUpdateUsageStatsLocked(Lcom/android/server/am/ProcessRecord;J)V

    .line 24937
    invoke-direct {v1, v2, v9, v10}, Lcom/android/server/am/ActivityManagerService;->maybeUpdateLastTopTime(Lcom/android/server/am/ProcessRecord;J)V

    .line 24939
    iget v0, v2, Lcom/android/server/am/ProcessRecord;->curProcState:I

    iput v0, v2, Lcom/android/server/am/ProcessRecord;->setProcState:I

    .line 24940
    iget v0, v2, Lcom/android/server/am/ProcessRecord;->setProcState:I

    const/16 v3, 0xd

    if-lt v0, v3, :cond_16

    .line 24941
    iput-boolean v14, v2, Lcom/android/server/am/ProcessRecord;->notCachedSinceIdle:Z

    .line 24943
    :cond_16
    if-nez p2, :cond_17

    .line 24944
    iget-object v0, v1, Lcom/android/server/am/ActivityManagerService;->mProcessStats:Lcom/android/server/am/ProcessStatsService;

    invoke-virtual {v0}, Lcom/android/server/am/ProcessStatsService;->getMemFactorLocked()I

    move-result v0

    invoke-direct {v1, v2, v0, v9, v10}, Lcom/android/server/am/ActivityManagerService;->setProcessTrackerStateLocked(Lcom/android/server/am/ProcessRecord;IJ)V

    goto :goto_c

    .line 24946
    :cond_17
    iput-boolean v13, v2, Lcom/android/server/am/ProcessRecord;->procStateChanged:Z

    .line 24948
    :goto_c
    goto :goto_d

    :cond_18
    iget-boolean v0, v2, Lcom/android/server/am/ProcessRecord;->reportedInteraction:Z

    if-eqz v0, :cond_19

    iget-wide v3, v2, Lcom/android/server/am/ProcessRecord;->interactionEventTime:J

    sub-long v3, v11, v3

    iget-object v0, v1, Lcom/android/server/am/ActivityManagerService;->mConstants:Lcom/android/server/am/ActivityManagerConstants;

    iget-wide v5, v0, Lcom/android/server/am/ActivityManagerConstants;->USAGE_STATS_INTERACTION_INTERVAL:J

    cmp-long v0, v3, v5

    if-lez v0, :cond_19

    .line 24952
    invoke-direct {v1, v2, v11, v12}, Lcom/android/server/am/ActivityManagerService;->maybeUpdateUsageStatsLocked(Lcom/android/server/am/ProcessRecord;J)V

    .line 24955
    :cond_19
    :goto_d
    if-eqz v16, :cond_1f

    .line 24958
    iget-object v0, v1, Lcom/android/server/am/ActivityManagerService;->mPendingProcessChanges:Ljava/util/ArrayList;

    invoke-virtual {v0}, Ljava/util/ArrayList;->size()I

    move-result v0

    sub-int/2addr v0, v13

    .line 24959
    const/4 v3, 0x0

    .line 24960
    :goto_e
    if-ltz v0, :cond_1b

    .line 24961
    iget-object v3, v1, Lcom/android/server/am/ActivityManagerService;->mPendingProcessChanges:Ljava/util/ArrayList;

    invoke-virtual {v3, v0}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v3

    check-cast v3, Lcom/android/server/am/ActivityManagerService$ProcessChangeItem;

    .line 24962
    iget v4, v3, Lcom/android/server/am/ActivityManagerService$ProcessChangeItem;->pid:I

    iget v5, v2, Lcom/android/server/am/ProcessRecord;->pid:I

    if-ne v4, v5, :cond_1a

    .line 24965
    goto :goto_f

    .line 24967
    :cond_1a
    add-int/lit8 v0, v0, -0x1

    goto :goto_e

    .line 24969
    :cond_1b
    :goto_f
    if-gez v0, :cond_1e

    .line 24971
    iget-object v0, v1, Lcom/android/server/am/ActivityManagerService;->mAvailProcessChanges:Ljava/util/ArrayList;

    invoke-virtual {v0}, Ljava/util/ArrayList;->size()I

    move-result v0

    .line 24972
    if-lez v0, :cond_1c

    .line 24973
    iget-object v3, v1, Lcom/android/server/am/ActivityManagerService;->mAvailProcessChanges:Ljava/util/ArrayList;

    sub-int/2addr v0, v13

    invoke-virtual {v3, v0}, Ljava/util/ArrayList;->remove(I)Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Lcom/android/server/am/ActivityManagerService$ProcessChangeItem;

    .line 24981
    :goto_10
    move-object v3, v0

    goto :goto_11

    .line 24977
    :cond_1c
    new-instance v0, Lcom/android/server/am/ActivityManagerService$ProcessChangeItem;

    invoke-direct {v0}, Lcom/android/server/am/ActivityManagerService$ProcessChangeItem;-><init>()V

    goto :goto_10

    .line 24981
    :goto_11
    iput v14, v3, Lcom/android/server/am/ActivityManagerService$ProcessChangeItem;->changes:I

    .line 24982
    iget v0, v2, Lcom/android/server/am/ProcessRecord;->pid:I

    iput v0, v3, Lcom/android/server/am/ActivityManagerService$ProcessChangeItem;->pid:I

    .line 24983
    iget-object v0, v2, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget v0, v0, Landroid/content/pm/ApplicationInfo;->uid:I

    iput v0, v3, Lcom/android/server/am/ActivityManagerService$ProcessChangeItem;->uid:I

    .line 24984
    iget-object v0, v1, Lcom/android/server/am/ActivityManagerService;->mPendingProcessChanges:Ljava/util/ArrayList;

    invoke-virtual {v0}, Ljava/util/ArrayList;->size()I

    move-result v0

    if-nez v0, :cond_1d

    .line 24987
    iget-object v0, v1, Lcom/android/server/am/ActivityManagerService;->mUiHandler:Landroid/os/Handler;

    const/16 v4, 0x1f

    invoke-virtual {v0, v4}, Landroid/os/Handler;->obtainMessage(I)Landroid/os/Message;

    move-result-object v0

    invoke-virtual {v0}, Landroid/os/Message;->sendToTarget()V

    .line 24989
    :cond_1d
    iget-object v0, v1, Lcom/android/server/am/ActivityManagerService;->mPendingProcessChanges:Ljava/util/ArrayList;

    invoke-virtual {v0, v3}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    .line 24991
    :cond_1e
    iget v0, v3, Lcom/android/server/am/ActivityManagerService$ProcessChangeItem;->changes:I

    or-int v0, v0, v16

    iput v0, v3, Lcom/android/server/am/ActivityManagerService$ProcessChangeItem;->changes:I

    .line 24992
    iget-boolean v0, v2, Lcom/android/server/am/ProcessRecord;->repForegroundActivities:Z

    iput-boolean v0, v3, Lcom/android/server/am/ActivityManagerService$ProcessChangeItem;->foregroundActivities:Z

    .line 25001
    :cond_1f
    return v15

    :pswitch_data_0
    .packed-switch 0x0
        :pswitch_3
        :pswitch_2
        :pswitch_0
        :pswitch_1
        :pswitch_1
    .end packed-switch
.end method

.method private final attachApplicationLocked(Landroid/app/IApplicationThread;IIJ)Z
    .locals 36
    .annotation build Lcom/android/internal/annotations/GuardedBy;
        value = "this"
    .end annotation

    move-object/from16 v8, p0

    move-object/from16 v15, p1

    move/from16 v14, p2

    move/from16 v0, p3

    .line 7773
    move-wide/from16 v9, p4

    invoke-static {}, Landroid/os/SystemClock;->uptimeMillis()J

    move-result-wide v12

    .line 7774
    sget v1, Lcom/android/server/am/ActivityManagerService;->MY_PID:I

    const/4 v11, 0x3

    const/4 v5, 0x1

    const/4 v4, 0x0

    if-eq v14, v1, :cond_3

    if-ltz v14, :cond_3

    .line 7775
    iget-object v1, v8, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Landroid/util/SparseArray;

    monitor-enter v1

    .line 7776
    :try_start_0
    iget-object v2, v8, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Landroid/util/SparseArray;

    invoke-virtual {v2, v14}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Lcom/android/server/am/ProcessRecord;

    .line 7777
    monitor-exit v1
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 7778
    if-eqz v2, :cond_2

    iget v1, v2, Lcom/android/server/am/ProcessRecord;->startUid:I

    if-ne v1, v0, :cond_0

    iget-wide v6, v2, Lcom/android/server/am/ProcessRecord;->startSeq:J

    cmp-long v1, v6, v9

    if-eqz v1, :cond_2

    .line 7779
    :cond_0
    nop

    .line 7780
    iget-object v1, v8, Lcom/android/server/am/ActivityManagerService;->mPendingStarts:Landroid/util/LongSparseArray;

    invoke-virtual {v1, v9, v10}, Landroid/util/LongSparseArray;->get(J)Ljava/lang/Object;

    move-result-object v1

    check-cast v1, Lcom/android/server/am/ProcessRecord;

    .line 7781
    if-eqz v1, :cond_1

    .line 7782
    iget-object v6, v1, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;

    goto :goto_0

    .line 7784
    :cond_1
    const/4 v6, 0x0

    :goto_0
    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string v3, "attachApplicationLocked process:"

    invoke-virtual {v1, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v1, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v3, " startSeq:"

    invoke-virtual {v1, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v1, v9, v10}, Ljava/lang/StringBuilder;->append(J)Ljava/lang/StringBuilder;

    const-string v3, " pid:"

    invoke-virtual {v1, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v1, v14}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v3, " belongs to another existing app:"

    invoke-virtual {v1, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget-object v3, v2, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;

    invoke-virtual {v1, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v3, " startSeq:"

    invoke-virtual {v1, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget-wide v6, v2, Lcom/android/server/am/ProcessRecord;->startSeq:J

    invoke-virtual {v1, v6, v7}, Ljava/lang/StringBuilder;->append(J)Ljava/lang/StringBuilder;

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    .line 7789
    const-string v3, "ActivityManager"

    invoke-static {v3, v1}, Landroid/util/Slog;->wtf(Ljava/lang/String;Ljava/lang/String;)I

    .line 7791
    const v3, 0x534e4554

    new-array v6, v11, [Ljava/lang/Object;

    const-string v7, "131105245"

    aput-object v7, v6, v4

    iget v7, v2, Lcom/android/server/am/ProcessRecord;->startUid:I

    invoke-static {v7}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v7

    aput-object v7, v6, v5

    const/4 v7, 0x2

    aput-object v1, v6, v7

    invoke-static {v3, v6}, Landroid/util/EventLog;->writeEvent(I[Ljava/lang/Object;)I

    .line 7793
    const/4 v3, 0x0

    const/4 v6, 0x0

    const/16 v16, -0x1

    const/16 v17, 0x1

    move-object v1, v8

    move v11, v4

    move v4, v6

    move v6, v5

    move/from16 v5, v16

    move/from16 v6, v17

    invoke-direct/range {v1 .. v6}, Lcom/android/server/am/ActivityManagerService;->cleanUpApplicationRecordLocked(Lcom/android/server/am/ProcessRecord;ZZIZ)Z

    .line 7795
    iget-object v1, v8, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Landroid/util/SparseArray;

    invoke-virtual {v1, v14}, Landroid/util/SparseArray;->remove(I)V

    .line 7796
    nop

    .line 7797
    goto :goto_1

    .line 7804
    :cond_2
    move v11, v4

    const/4 v7, 0x2

    move-object/from16 v16, v2

    goto :goto_2

    .line 7777
    :catchall_0
    move-exception v0

    :try_start_1
    monitor-exit v1
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    throw v0

    .line 7799
    :cond_3
    move v11, v4

    const/4 v7, 0x2

    .line 7804
    :goto_1
    const/16 v16, 0x0

    :goto_2
    if-nez v16, :cond_4

    const-wide/16 v1, 0x0

    cmp-long v1, v9, v1

    if-lez v1, :cond_4

    .line 7805
    iget-object v1, v8, Lcom/android/server/am/ActivityManagerService;->mPendingStarts:Landroid/util/LongSparseArray;

    invoke-virtual {v1, v9, v10}, Landroid/util/LongSparseArray;->get(J)Ljava/lang/Object;

    move-result-object v1

    move-object v5, v1

    check-cast v5, Lcom/android/server/am/ProcessRecord;

    .line 7806
    if-eqz v5, :cond_4

    iget v1, v5, Lcom/android/server/am/ProcessRecord;->startUid:I

    if-ne v1, v0, :cond_4

    iget-wide v0, v5, Lcom/android/server/am/ProcessRecord;->startSeq:J

    cmp-long v0, v0, v9

    if-nez v0, :cond_4

    iget-boolean v4, v5, Lcom/android/server/am/ProcessRecord;->usingWrapper:Z

    const/4 v0, 0x1

    .line 7807
    move-object v1, v8

    move-object v2, v5

    move v3, v14

    move-object/from16 v17, v5

    move-wide v5, v9

    move v9, v7

    move v7, v0

    invoke-direct/range {v1 .. v7}, Lcom/android/server/am/ActivityManagerService;->handleProcessStartedLocked(Lcom/android/server/am/ProcessRecord;IZJZ)Z

    move-result v0

    if-eqz v0, :cond_5

    .line 7809
    nop

    .line 7813
    move-object/from16 v1, v17

    goto :goto_3

    :cond_4
    move v9, v7

    :cond_5
    move-object/from16 v1, v16

    :goto_3
    if-nez v1, :cond_7

    .line 7814
    const-string v0, "ActivityManager"

    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string v2, "No pending application record for pid "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v1, v14}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v2, " (IApplicationThread "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v1, v15}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    const-string v2, "); dropping process"

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-static {v0, v1}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 7816
    const/16 v0, 0x7551

    invoke-static {v0, v14}, Landroid/util/EventLog;->writeEvent(II)I

    .line 7817
    if-lez v14, :cond_6

    sget v0, Lcom/android/server/am/ActivityManagerService;->MY_PID:I

    if-eq v14, v0, :cond_6

    .line 7818
    invoke-static/range {p2 .. p2}, Landroid/os/Process;->killProcessQuiet(I)V

    goto :goto_4

    .line 7822
    :cond_6
    :try_start_2
    invoke-interface/range {p1 .. p1}, Landroid/app/IApplicationThread;->scheduleExit()V
    :try_end_2
    .catch Ljava/lang/Exception; {:try_start_2 .. :try_end_2} :catch_0

    .line 7825
    goto :goto_4

    .line 7823
    :catch_0
    move-exception v0

    .line 7827
    :goto_4
    return v11

    .line 7832
    :cond_7
    iget-object v0, v1, Lcom/android/server/am/ProcessRecord;->thread:Landroid/app/IApplicationThread;

    if-eqz v0, :cond_8

    .line 7833
    const/4 v2, 0x1

    invoke-direct {v8, v1, v2, v2}, Lcom/android/server/am/ActivityManagerService;->handleAppDiedLocked(Lcom/android/server/am/ProcessRecord;ZZ)V

    goto :goto_5

    .line 7841
    :cond_8
    const/4 v2, 0x1

    :goto_5
    iget-object v3, v1, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;

    .line 7843
    :try_start_3
    new-instance v0, Lcom/android/server/am/ActivityManagerService$AppDeathRecipient;

    invoke-direct {v0, v8, v1, v14, v15}, Lcom/android/server/am/ActivityManagerService$AppDeathRecipient;-><init>(Lcom/android/server/am/ActivityManagerService;Lcom/android/server/am/ProcessRecord;ILandroid/app/IApplicationThread;)V

    .line 7845
    invoke-interface/range {p1 .. p1}, Landroid/app/IApplicationThread;->asBinder()Landroid/os/IBinder;

    move-result-object v4

    invoke-interface {v4, v0, v11}, Landroid/os/IBinder;->linkToDeath(Landroid/os/IBinder$DeathRecipient;I)V

    .line 7846
    iput-object v0, v1, Lcom/android/server/am/ProcessRecord;->deathRecipient:Landroid/os/IBinder$DeathRecipient;
    :try_end_3
    .catch Landroid/os/RemoteException; {:try_start_3 .. :try_end_3} :catch_8

    .line 7851
    nop

    .line 7853
    const/16 v0, 0x753a

    const/4 v4, 0x3

    new-array v5, v4, [Ljava/lang/Object;

    iget v4, v1, Lcom/android/server/am/ProcessRecord;->userId:I

    invoke-static {v4}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v4

    aput-object v4, v5, v11

    iget v4, v1, Lcom/android/server/am/ProcessRecord;->pid:I

    invoke-static {v4}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v4

    aput-object v4, v5, v2

    iget-object v4, v1, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;

    aput-object v4, v5, v9

    invoke-static {v0, v5}, Landroid/util/EventLog;->writeEvent(I[Ljava/lang/Object;)I

    .line 7855
    iget-object v0, v8, Lcom/android/server/am/ActivityManagerService;->mProcessStats:Lcom/android/server/am/ProcessStatsService;

    invoke-virtual {v1, v15, v0}, Lcom/android/server/am/ProcessRecord;->makeActive(Landroid/app/IApplicationThread;Lcom/android/server/am/ProcessStatsService;)V

    .line 7856
    const/16 v0, -0x2710

    iput v0, v1, Lcom/android/server/am/ProcessRecord;->verifiedAdj:I

    iput v0, v1, Lcom/android/server/am/ProcessRecord;->setAdj:I

    iput v0, v1, Lcom/android/server/am/ProcessRecord;->curAdj:I

    .line 7857
    iput v9, v1, Lcom/android/server/am/ProcessRecord;->setSchedGroup:I

    iput v9, v1, Lcom/android/server/am/ProcessRecord;->curSchedGroup:I

    .line 7858
    const/4 v0, 0x0

    iput-object v0, v1, Lcom/android/server/am/ProcessRecord;->forcingToImportant:Ljava/lang/Object;

    .line 7859
    invoke-virtual {v8, v1, v11, v11}, Lcom/android/server/am/ActivityManagerService;->updateProcessForegroundLocked(Lcom/android/server/am/ProcessRecord;ZZ)V

    .line 7860
    iput-boolean v11, v1, Lcom/android/server/am/ProcessRecord;->hasShownUi:Z

    .line 7861
    iput-boolean v11, v1, Lcom/android/server/am/ProcessRecord;->debugging:Z

    .line 7862
    iput-boolean v11, v1, Lcom/android/server/am/ProcessRecord;->cached:Z

    .line 7863
    iput-boolean v11, v1, Lcom/android/server/am/ProcessRecord;->killedByAm:Z

    .line 7864
    iput-boolean v11, v1, Lcom/android/server/am/ProcessRecord;->killed:Z

    .line 7870
    iget v4, v1, Lcom/android/server/am/ProcessRecord;->userId:I

    invoke-static {v4}, Landroid/os/storage/StorageManager;->isUserKeyUnlocked(I)Z

    move-result v4

    iput-boolean v4, v1, Lcom/android/server/am/ProcessRecord;->unlocked:Z

    .line 7872
    iget-object v4, v8, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    const/16 v5, 0x14

    invoke-virtual {v4, v5, v1}, Lcom/android/server/am/ActivityManagerService$MainHandler;->removeMessages(ILjava/lang/Object;)V

    .line 7874
    iget-boolean v4, v8, Lcom/android/server/am/ActivityManagerService;->mProcessesReady:Z

    if-nez v4, :cond_a

    iget-object v4, v1, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    invoke-virtual {v8, v4}, Lcom/android/server/am/ActivityManagerService;->isAllowedWhileBooting(Landroid/content/pm/ApplicationInfo;)Z

    move-result v4

    if-eqz v4, :cond_9

    goto :goto_6

    .line 7875
    :cond_9
    move v4, v11

    goto :goto_7

    .line 7874
    :cond_a
    :goto_6
    nop

    .line 7875
    move v4, v2

    :goto_7
    if-eqz v4, :cond_b

    invoke-direct {v8, v1}, Lcom/android/server/am/ActivityManagerService;->generateApplicationProvidersLocked(Lcom/android/server/am/ProcessRecord;)Ljava/util/List;

    move-result-object v5

    goto :goto_8

    .line 7877
    :cond_b
    move-object v5, v0

    :goto_8
    if-eqz v5, :cond_c

    invoke-virtual {v8, v1}, Lcom/android/server/am/ActivityManagerService;->checkAppInLaunchingProvidersLocked(Lcom/android/server/am/ProcessRecord;)Z

    move-result v6

    if-eqz v6, :cond_c

    .line 7878
    iget-object v6, v8, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    const/16 v7, 0x39

    invoke-virtual {v6, v7}, Lcom/android/server/am/ActivityManagerService$MainHandler;->obtainMessage(I)Landroid/os/Message;

    move-result-object v6

    .line 7879
    iput-object v1, v6, Landroid/os/Message;->obj:Ljava/lang/Object;

    .line 7880
    iget-object v7, v8, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    const-wide/16 v9, 0x2710

    invoke-virtual {v7, v6, v9, v10}, Lcom/android/server/am/ActivityManagerService$MainHandler;->sendMessageDelayed(Landroid/os/Message;J)Z

    .line 7883
    :cond_c
    const-string v6, "attachApplicationLocked: before bindApplication"

    invoke-direct {v8, v12, v13, v6}, Lcom/android/server/am/ActivityManagerService;->checkTime(JLjava/lang/String;)V

    .line 7885
    if-nez v4, :cond_d

    .line 7886
    const-string v6, "ActivityManager"

    new-instance v7, Ljava/lang/StringBuilder;

    invoke-direct {v7}, Ljava/lang/StringBuilder;-><init>()V

    const-string v9, "Launching preboot mode app: "

    invoke-virtual {v7, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v7, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    invoke-virtual {v7}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v7

    invoke-static {v6, v7}, Landroid/util/Slog;->i(Ljava/lang/String;Ljava/lang/String;)I

    .line 7893
    :cond_d
    nop

    .line 7894
    :try_start_4
    iget-object v6, v8, Lcom/android/server/am/ActivityManagerService;->mDebugApp:Ljava/lang/String;

    if-eqz v6, :cond_10

    iget-object v6, v8, Lcom/android/server/am/ActivityManagerService;->mDebugApp:Ljava/lang/String;

    invoke-virtual {v6, v3}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v6

    if-eqz v6, :cond_10

    .line 7895
    iget-boolean v6, v8, Lcom/android/server/am/ActivityManagerService;->mWaitForDebugger:Z

    if-eqz v6, :cond_e

    .line 7896
    nop

    .line 7898
    const/4 v6, 0x2

    goto :goto_9

    .line 7897
    :cond_e
    nop

    .line 7898
    move v6, v2

    :goto_9
    iput-boolean v2, v1, Lcom/android/server/am/ProcessRecord;->debugging:Z

    .line 7899
    iget-boolean v7, v8, Lcom/android/server/am/ActivityManagerService;->mDebugTransient:Z

    if-eqz v7, :cond_f

    .line 7900
    iget-object v7, v8, Lcom/android/server/am/ActivityManagerService;->mOrigDebugApp:Ljava/lang/String;

    iput-object v7, v8, Lcom/android/server/am/ActivityManagerService;->mDebugApp:Ljava/lang/String;

    .line 7901
    iget-boolean v7, v8, Lcom/android/server/am/ActivityManagerService;->mOrigWaitForDebugger:Z

    iput-boolean v7, v8, Lcom/android/server/am/ActivityManagerService;->mWaitForDebugger:Z

    .line 7905
    :cond_f
    move/from16 v18, v6

    goto :goto_a

    :cond_10
    move/from16 v18, v11

    .line 7906
    :goto_a
    iget-object v6, v8, Lcom/android/server/am/ActivityManagerService;->mTrackAllocationApp:Ljava/lang/String;

    if-eqz v6, :cond_11

    iget-object v6, v8, Lcom/android/server/am/ActivityManagerService;->mTrackAllocationApp:Ljava/lang/String;

    invoke-virtual {v6, v3}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v6

    if-eqz v6, :cond_11

    .line 7907
    nop

    .line 7908
    iput-object v0, v8, Lcom/android/server/am/ActivityManagerService;->mTrackAllocationApp:Ljava/lang/String;

    .line 7912
    move/from16 v20, v2

    goto :goto_b

    :cond_11
    move/from16 v20, v11

    .line 7913
    :goto_b
    iget-object v6, v8, Lcom/android/server/am/ActivityManagerService;->mBackupTarget:Lcom/android/server/am/BackupRecord;

    const/16 v7, 0x2710

    if-eqz v6, :cond_14

    iget-object v6, v8, Lcom/android/server/am/ActivityManagerService;->mBackupAppName:Ljava/lang/String;

    invoke-virtual {v6, v3}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v6

    if-eqz v6, :cond_14

    .line 7914
    iget-object v6, v8, Lcom/android/server/am/ActivityManagerService;->mBackupTarget:Lcom/android/server/am/BackupRecord;

    iget-object v6, v6, Lcom/android/server/am/BackupRecord;->appInfo:Landroid/content/pm/ApplicationInfo;

    iget v6, v6, Landroid/content/pm/ApplicationInfo;->uid:I

    if-lt v6, v7, :cond_13

    iget-object v6, v8, Lcom/android/server/am/ActivityManagerService;->mBackupTarget:Lcom/android/server/am/BackupRecord;

    iget v6, v6, Lcom/android/server/am/BackupRecord;->backupMode:I

    const/4 v9, 0x2

    if-eq v6, v9, :cond_12

    iget-object v6, v8, Lcom/android/server/am/ActivityManagerService;->mBackupTarget:Lcom/android/server/am/BackupRecord;

    iget v6, v6, Lcom/android/server/am/BackupRecord;->backupMode:I

    const/4 v9, 0x3

    if-eq v6, v9, :cond_12

    iget-object v6, v8, Lcom/android/server/am/ActivityManagerService;->mBackupTarget:Lcom/android/server/am/BackupRecord;

    iget v6, v6, Lcom/android/server/am/BackupRecord;->backupMode:I

    if-ne v6, v2, :cond_13

    .line 7920
    :cond_12
    move v6, v2

    goto :goto_c

    .line 7914
    :cond_13
    nop

    .line 7920
    :cond_14
    move v6, v11

    :goto_c
    iget-object v9, v1, Lcom/android/server/am/ProcessRecord;->instr:Lcom/android/server/am/ActiveInstrumentation;

    if-eqz v9, :cond_15

    .line 7921
    iget-object v9, v1, Lcom/android/server/am/ProcessRecord;->instr:Lcom/android/server/am/ActiveInstrumentation;

    iget-object v9, v9, Lcom/android/server/am/ActiveInstrumentation;->mClass:Landroid/content/ComponentName;

    invoke-virtual {v9}, Landroid/content/ComponentName;->getPackageName()Ljava/lang/String;

    move-result-object v9

    const/4 v10, 0x7

    invoke-virtual {v8, v9, v10}, Lcom/android/server/am/ActivityManagerService;->notifyPackageUse(Ljava/lang/String;I)V

    .line 7926
    :cond_15
    iget-object v9, v1, Lcom/android/server/am/ProcessRecord;->instr:Lcom/android/server/am/ActiveInstrumentation;

    if-eqz v9, :cond_16

    iget-object v9, v1, Lcom/android/server/am/ProcessRecord;->instr:Lcom/android/server/am/ActiveInstrumentation;

    iget-object v9, v9, Lcom/android/server/am/ActiveInstrumentation;->mTargetInfo:Landroid/content/pm/ApplicationInfo;

    goto :goto_d

    :cond_16
    iget-object v9, v1, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    .line 7927
    :goto_d
    move-object v10, v9

    invoke-virtual {v8, v10}, Lcom/android/server/am/ActivityManagerService;->compatibilityInfoForPackageLocked(Landroid/content/pm/ApplicationInfo;)Landroid/content/res/CompatibilityInfo;

    move-result-object v9

    iput-object v9, v1, Lcom/android/server/am/ProcessRecord;->compat:Landroid/content/res/CompatibilityInfo;

    .line 7929
    nop

    .line 7930
    nop

    .line 7931
    iget-object v9, v8, Lcom/android/server/am/ActivityManagerService;->mProfileApp:Ljava/lang/String;

    if-eqz v9, :cond_1b

    iget-object v9, v8, Lcom/android/server/am/ActivityManagerService;->mProfileApp:Ljava/lang/String;

    invoke-virtual {v9, v3}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v9

    if-eqz v9, :cond_1b

    .line 7932
    iput-object v1, v8, Lcom/android/server/am/ActivityManagerService;->mProfileProc:Lcom/android/server/am/ProcessRecord;

    .line 7933
    iget-object v9, v8, Lcom/android/server/am/ActivityManagerService;->mProfilerInfo:Landroid/app/ProfilerInfo;

    if-eqz v9, :cond_1c

    .line 7936
    iget-object v9, v8, Lcom/android/server/am/ActivityManagerService;->mProfilerInfo:Landroid/app/ProfilerInfo;

    iget-object v9, v9, Landroid/app/ProfilerInfo;->profileFile:Ljava/lang/String;

    if-nez v9, :cond_18

    iget-object v9, v8, Lcom/android/server/am/ActivityManagerService;->mProfilerInfo:Landroid/app/ProfilerInfo;

    iget-boolean v9, v9, Landroid/app/ProfilerInfo;->attachAgentDuringBind:Z

    if-eqz v9, :cond_17

    goto :goto_e

    .line 7938
    :cond_17
    move v9, v11

    goto :goto_f

    .line 7936
    :cond_18
    :goto_e
    nop

    .line 7938
    move v9, v2

    :goto_f
    if-eqz v9, :cond_19

    new-instance v9, Landroid/app/ProfilerInfo;
    :try_end_4
    .catch Ljava/lang/Exception; {:try_start_4 .. :try_end_4} :catch_7

    :try_start_5
    iget-object v11, v8, Lcom/android/server/am/ActivityManagerService;->mProfilerInfo:Landroid/app/ProfilerInfo;

    invoke-direct {v9, v11}, Landroid/app/ProfilerInfo;-><init>(Landroid/app/ProfilerInfo;)V

    goto :goto_10

    .line 7939
    :cond_19
    move-object v9, v0

    :goto_10
    iget-object v11, v8, Lcom/android/server/am/ActivityManagerService;->mProfilerInfo:Landroid/app/ProfilerInfo;

    iget-object v11, v11, Landroid/app/ProfilerInfo;->agent:Ljava/lang/String;

    if-eqz v11, :cond_1a

    .line 7940
    iget-object v11, v8, Lcom/android/server/am/ActivityManagerService;->mProfilerInfo:Landroid/app/ProfilerInfo;

    iget-object v11, v11, Landroid/app/ProfilerInfo;->agent:Ljava/lang/String;

    goto :goto_11

    .line 7942
    :cond_1a
    move-object v11, v0

    :goto_11
    goto :goto_12

    .line 7943
    :cond_1b
    iget-object v9, v1, Lcom/android/server/am/ProcessRecord;->instr:Lcom/android/server/am/ActiveInstrumentation;

    if-eqz v9, :cond_1c

    iget-object v9, v1, Lcom/android/server/am/ProcessRecord;->instr:Lcom/android/server/am/ActiveInstrumentation;

    iget-object v9, v9, Lcom/android/server/am/ActiveInstrumentation;->mProfileFile:Ljava/lang/String;

    if-eqz v9, :cond_1c

    .line 7944
    new-instance v9, Landroid/app/ProfilerInfo;

    iget-object v11, v1, Lcom/android/server/am/ProcessRecord;->instr:Lcom/android/server/am/ActiveInstrumentation;

    iget-object v11, v11, Lcom/android/server/am/ActiveInstrumentation;->mProfileFile:Ljava/lang/String;

    const/16 v23, 0x0

    const/16 v24, 0x0

    const/16 v25, 0x0

    const/16 v26, 0x0

    const/16 v27, 0x0

    const/16 v28, 0x0

    move-object/from16 v21, v9

    move-object/from16 v22, v11

    invoke-direct/range {v21 .. v28}, Landroid/app/ProfilerInfo;-><init>(Ljava/lang/String;Landroid/os/ParcelFileDescriptor;IZZLjava/lang/String;Z)V

    .line 7947
    move-object v11, v0

    goto :goto_12

    :cond_1c
    move-object v9, v0

    move-object v11, v9

    :goto_12
    iget-object v0, v8, Lcom/android/server/am/ActivityManagerService;->mAppAgentMap:Ljava/util/Map;

    if-eqz v0, :cond_1e

    iget-object v0, v8, Lcom/android/server/am/ActivityManagerService;->mAppAgentMap:Ljava/util/Map;

    invoke-interface {v0, v3}, Ljava/util/Map;->containsKey(Ljava/lang/Object;)Z

    move-result v0

    if-eqz v0, :cond_1e

    .line 7950
    iget-object v0, v1, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget v0, v0, Landroid/content/pm/ApplicationInfo;->flags:I

    const/16 v16, 0x2

    and-int/lit8 v0, v0, 0x2

    if-eqz v0, :cond_1e

    .line 7951
    iget-object v0, v8, Lcom/android/server/am/ActivityManagerService;->mAppAgentMap:Ljava/util/Map;

    invoke-interface {v0, v3}, Ljava/util/Map;->get(Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Ljava/lang/String;

    .line 7953
    if-nez v9, :cond_1d

    .line 7954
    new-instance v0, Landroid/app/ProfilerInfo;

    const/16 v22, 0x0

    const/16 v23, 0x0

    const/16 v24, 0x0

    const/16 v25, 0x0

    const/16 v26, 0x0

    iget-object v9, v8, Lcom/android/server/am/ActivityManagerService;->mAppAgentMap:Ljava/util/Map;

    .line 7955
    invoke-interface {v9, v3}, Ljava/util/Map;->get(Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object v9

    move-object/from16 v27, v9

    check-cast v27, Ljava/lang/String;

    const/16 v28, 0x1

    move-object/from16 v21, v0

    invoke-direct/range {v21 .. v28}, Landroid/app/ProfilerInfo;-><init>(Ljava/lang/String;Landroid/os/ParcelFileDescriptor;IZZLjava/lang/String;Z)V

    goto :goto_13

    .line 7956
    :cond_1d
    iget-object v0, v9, Landroid/app/ProfilerInfo;->agent:Ljava/lang/String;

    if-nez v0, :cond_1e

    .line 7957
    iget-object v0, v8, Lcom/android/server/am/ActivityManagerService;->mAppAgentMap:Ljava/util/Map;

    invoke-interface {v0, v3}, Ljava/util/Map;->get(Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Ljava/lang/String;

    invoke-virtual {v9, v0, v2}, Landroid/app/ProfilerInfo;->setAgent(Ljava/lang/String;Z)Landroid/app/ProfilerInfo;

    move-result-object v0

    goto :goto_13

    .line 7962
    :cond_1e
    move-object v0, v9

    :goto_13
    if-eqz v0, :cond_1f

    iget-object v9, v0, Landroid/app/ProfilerInfo;->profileFd:Landroid/os/ParcelFileDescriptor;

    if-eqz v9, :cond_1f

    .line 7963
    iget-object v9, v0, Landroid/app/ProfilerInfo;->profileFd:Landroid/os/ParcelFileDescriptor;

    invoke-virtual {v9}, Landroid/os/ParcelFileDescriptor;->dup()Landroid/os/ParcelFileDescriptor;

    move-result-object v9

    iput-object v9, v0, Landroid/app/ProfilerInfo;->profileFd:Landroid/os/ParcelFileDescriptor;

    .line 7964
    iget-object v9, v8, Lcom/android/server/am/ActivityManagerService;->mProfileApp:Ljava/lang/String;

    invoke-static {v9, v3}, Landroid/text/TextUtils;->equals(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Z

    move-result v9

    if-eqz v9, :cond_1f

    iget-object v9, v8, Lcom/android/server/am/ActivityManagerService;->mProfilerInfo:Landroid/app/ProfilerInfo;

    if-eqz v9, :cond_1f

    .line 7965
    invoke-direct/range {p0 .. p0}, Lcom/android/server/am/ActivityManagerService;->clearProfilerLocked()V

    .line 7973
    :cond_1f
    iget v9, v10, Landroid/content/pm/ApplicationInfo;->targetSandboxVersion:I

    const/4 v7, 0x2

    if-ge v9, v7, :cond_20

    iget v7, v10, Landroid/content/pm/ApplicationInfo;->targetSdkVersion:I

    const/16 v9, 0x1c

    if-ge v7, v9, :cond_20

    .line 7975
    sget-object v7, Lcom/android/server/am/ActivityManagerService;->sTheRealBuildSerial:Ljava/lang/String;

    goto :goto_14

    :cond_20
    const-string/jumbo v7, "unknown"

    .line 7981
    :goto_14
    move-object/from16 v27, v7

    iget-object v7, v8, Lcom/android/server/am/ActivityManagerService;->mActiveInstrumentation:Ljava/util/ArrayList;

    invoke-virtual {v7}, Ljava/util/ArrayList;->size()I

    move-result v7

    if-lez v7, :cond_25

    iget-object v7, v1, Lcom/android/server/am/ProcessRecord;->instr:Lcom/android/server/am/ActiveInstrumentation;

    if-nez v7, :cond_25

    .line 7982
    iget-object v7, v8, Lcom/android/server/am/ActivityManagerService;->mActiveInstrumentation:Ljava/util/ArrayList;

    invoke-virtual {v7}, Ljava/util/ArrayList;->size()I

    move-result v7

    sub-int/2addr v7, v2

    :goto_15
    if-ltz v7, :cond_25

    iget-object v9, v1, Lcom/android/server/am/ProcessRecord;->instr:Lcom/android/server/am/ActiveInstrumentation;

    if-nez v9, :cond_25

    .line 7983
    iget-object v9, v8, Lcom/android/server/am/ActivityManagerService;->mActiveInstrumentation:Ljava/util/ArrayList;

    invoke-virtual {v9, v7}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v9

    check-cast v9, Lcom/android/server/am/ActiveInstrumentation;

    .line 7984
    iget-boolean v2, v9, Lcom/android/server/am/ActiveInstrumentation;->mFinished:Z

    if-nez v2, :cond_23

    iget-object v2, v9, Lcom/android/server/am/ActiveInstrumentation;->mTargetInfo:Landroid/content/pm/ApplicationInfo;

    iget v2, v2, Landroid/content/pm/ApplicationInfo;->uid:I

    move-object/from16 v29, v10

    iget v10, v1, Lcom/android/server/am/ProcessRecord;->uid:I

    if-ne v2, v10, :cond_24

    .line 7985
    iget-object v2, v9, Lcom/android/server/am/ActiveInstrumentation;->mTargetProcesses:[Ljava/lang/String;

    array-length v2, v2

    if-nez v2, :cond_21

    .line 7988
    iget-object v2, v9, Lcom/android/server/am/ActiveInstrumentation;->mTargetInfo:Landroid/content/pm/ApplicationInfo;

    iget-object v2, v2, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;

    iget-object v10, v1, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget-object v10, v10, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;

    invoke-virtual {v2, v10}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v2

    if-eqz v2, :cond_24

    .line 7989
    iput-object v9, v1, Lcom/android/server/am/ProcessRecord;->instr:Lcom/android/server/am/ActiveInstrumentation;

    .line 7990
    iget-object v2, v9, Lcom/android/server/am/ActiveInstrumentation;->mRunningProcesses:Ljava/util/ArrayList;

    invoke-virtual {v2, v1}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    goto :goto_17

    .line 7993
    :cond_21
    iget-object v2, v9, Lcom/android/server/am/ActiveInstrumentation;->mTargetProcesses:[Ljava/lang/String;

    array-length v10, v2

    const/4 v14, 0x0

    :goto_16
    if-ge v14, v10, :cond_24

    move/from16 v30, v10

    aget-object v10, v2, v14

    .line 7994
    move-object/from16 v31, v2

    iget-object v2, v1, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;

    invoke-virtual {v10, v2}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v2

    if-eqz v2, :cond_22

    .line 7995
    iput-object v9, v1, Lcom/android/server/am/ProcessRecord;->instr:Lcom/android/server/am/ActiveInstrumentation;

    .line 7996
    iget-object v2, v9, Lcom/android/server/am/ActiveInstrumentation;->mRunningProcesses:Ljava/util/ArrayList;

    invoke-virtual {v2, v1}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    .line 7997
    goto :goto_17

    .line 7993
    :cond_22
    add-int/lit8 v14, v14, 0x1

    move/from16 v10, v30

    move-object/from16 v2, v31

    goto :goto_16

    .line 7982
    :cond_23
    move-object/from16 v29, v10

    :cond_24
    :goto_17
    add-int/lit8 v7, v7, -0x1

    move-object/from16 v10, v29

    const/4 v2, 0x1

    move/from16 v14, p2

    goto :goto_15

    .line 8007
    :cond_25
    move-object/from16 v29, v10

    if-eqz v11, :cond_26

    .line 8008
    invoke-interface {v15, v11}, Landroid/app/IApplicationThread;->attachAgent(Ljava/lang/String;)V

    .line 8013
    :cond_26
    nop

    .line 8014
    iget-object v2, v1, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget v2, v2, Landroid/content/pm/ApplicationInfo;->uid:I

    invoke-static {v2}, Landroid/os/UserHandle;->getAppId(I)I

    move-result v2

    const/16 v7, 0x2710

    if-lt v2, v7, :cond_27

    .line 8015
    const-class v2, Landroid/view/autofill/AutofillManagerInternal;

    invoke-static {v2}, Lcom/android/server/LocalServices;->getService(Ljava/lang/Class;)Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Landroid/view/autofill/AutofillManagerInternal;

    .line 8017
    if-eqz v2, :cond_27

    .line 8018
    iget-object v7, v1, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget-object v7, v7, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;

    iget-object v9, v1, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget v9, v9, Landroid/content/pm/ApplicationInfo;->versionCode:I

    int-to-long v9, v9

    iget v11, v1, Lcom/android/server/am/ProcessRecord;->userId:I

    invoke-virtual {v2, v7, v9, v10, v11}, Landroid/view/autofill/AutofillManagerInternal;->isCompatibilityModeRequested(Ljava/lang/String;JI)Z

    move-result v2

    .line 8023
    move/from16 v28, v2

    goto :goto_18

    :cond_27
    const/16 v28, 0x0

    :goto_18
    const-string v2, "attachApplicationLocked: immediately before bindApplication"

    invoke-direct {v8, v12, v13, v2}, Lcom/android/server/am/ActivityManagerService;->checkTime(JLjava/lang/String;)V

    .line 8024
    iget-object v2, v8, Lcom/android/server/am/ActivityManagerService;->mStackSupervisor:Lcom/android/server/am/ActivityStackSupervisor;

    invoke-virtual {v2}, Lcom/android/server/am/ActivityStackSupervisor;->getActivityMetricsLogger()Lcom/android/server/am/ActivityMetricsLogger;

    move-result-object v2

    invoke-virtual {v2, v1}, Lcom/android/server/am/ActivityMetricsLogger;->notifyBindApplication(Lcom/android/server/am/ProcessRecord;)V

    .line 8025
    iget-object v2, v1, Lcom/android/server/am/ProcessRecord;->isolatedEntryPoint:Ljava/lang/String;

    if-eqz v2, :cond_28

    .line 8028
    iget-object v2, v1, Lcom/android/server/am/ProcessRecord;->isolatedEntryPoint:Ljava/lang/String;

    iget-object v5, v1, Lcom/android/server/am/ProcessRecord;->isolatedEntryPointArgs:[Ljava/lang/String;

    invoke-interface {v15, v2, v5}, Landroid/app/IApplicationThread;->runIsolatedEntryPoint(Ljava/lang/String;[Ljava/lang/String;)V

    .line 8051
    move-wide/from16 v34, v12

    move/from16 v2, p2

    goto/16 :goto_1d

    .line 8029
    :cond_28
    iget-object v2, v1, Lcom/android/server/am/ProcessRecord;->instr:Lcom/android/server/am/ActiveInstrumentation;

    if-eqz v2, :cond_2b

    .line 8030
    iget-object v2, v1, Lcom/android/server/am/ProcessRecord;->instr:Lcom/android/server/am/ActiveInstrumentation;

    iget-object v2, v2, Lcom/android/server/am/ActiveInstrumentation;->mClass:Landroid/content/ComponentName;

    iget-object v7, v1, Lcom/android/server/am/ProcessRecord;->instr:Lcom/android/server/am/ActiveInstrumentation;

    iget-object v7, v7, Lcom/android/server/am/ActiveInstrumentation;->mArguments:Landroid/os/Bundle;

    iget-object v9, v1, Lcom/android/server/am/ProcessRecord;->instr:Lcom/android/server/am/ActiveInstrumentation;

    iget-object v14, v9, Lcom/android/server/am/ActiveInstrumentation;->mWatcher:Landroid/app/IInstrumentationWatcher;

    iget-object v9, v1, Lcom/android/server/am/ProcessRecord;->instr:Lcom/android/server/am/ActiveInstrumentation;

    iget-object v11, v9, Lcom/android/server/am/ActiveInstrumentation;->mUiAutomationConnection:Landroid/app/IUiAutomationConnection;

    iget-boolean v10, v8, Lcom/android/server/am/ActivityManagerService;->mBinderTransactionTrackingEnabled:Z

    if-nez v6, :cond_2a

    if-nez v4, :cond_29

    goto :goto_19

    :cond_29
    const/16 v21, 0x0

    goto :goto_1a

    :cond_2a
    :goto_19
    const/16 v21, 0x1

    :goto_1a
    iget-boolean v6, v1, Lcom/android/server/am/ProcessRecord;->persistent:Z

    new-instance v9, Landroid/content/res/Configuration;

    .line 8037
    move/from16 v32, v10

    invoke-virtual/range {p0 .. p0}, Lcom/android/server/am/ActivityManagerService;->getGlobalConfiguration()Landroid/content/res/Configuration;

    move-result-object v10

    invoke-direct {v9, v10}, Landroid/content/res/Configuration;-><init>(Landroid/content/res/Configuration;)V

    iget-object v10, v1, Lcom/android/server/am/ProcessRecord;->compat:Landroid/content/res/CompatibilityInfo;

    move-object/from16 v33, v9

    iget-boolean v9, v1, Lcom/android/server/am/ProcessRecord;->isolated:Z

    .line 8038
    invoke-direct {v8, v9}, Lcom/android/server/am/ActivityManagerService;->getCommonServicesLocked(Z)Landroid/util/ArrayMap;

    move-result-object v25

    iget-object v9, v8, Lcom/android/server/am/ActivityManagerService;->mCoreSettingsObserver:Lcom/android/server/am/CoreSettingsObserver;

    .line 8039
    invoke-virtual {v9}, Lcom/android/server/am/CoreSettingsObserver;->getCoreSettingsLocked()Landroid/os/Bundle;

    move-result-object v26

    .line 8030
    move-object/from16 v23, v33

    move-object v9, v15

    move-object/from16 v24, v10

    move-object/from16 v16, v29

    move/from16 v19, v32

    move-object v10, v3

    move-object/from16 v17, v11

    move-object/from16 v11, v16

    move-wide/from16 v34, v12

    move-object v12, v5

    move-object v13, v2

    move-object v5, v14

    move/from16 v2, p2

    move-object v14, v0

    move-object v15, v7

    move-object/from16 v16, v5

    move/from16 v22, v6

    invoke-interface/range {v9 .. v28}, Landroid/app/IApplicationThread;->bindApplication(Ljava/lang/String;Landroid/content/pm/ApplicationInfo;Ljava/util/List;Landroid/content/ComponentName;Landroid/app/ProfilerInfo;Landroid/os/Bundle;Landroid/app/IInstrumentationWatcher;Landroid/app/IUiAutomationConnection;IZZZZLandroid/content/res/Configuration;Landroid/content/res/CompatibilityInfo;Ljava/util/Map;Landroid/os/Bundle;Ljava/lang/String;Z)V

    goto :goto_1d

    .line 8042
    :cond_2b
    move-wide/from16 v34, v12

    move-object/from16 v16, v29

    move/from16 v2, p2

    const/4 v13, 0x0

    const/4 v15, 0x0

    const/4 v7, 0x0

    const/16 v17, 0x0

    iget-boolean v14, v8, Lcom/android/server/am/ActivityManagerService;->mBinderTransactionTrackingEnabled:Z

    if-nez v6, :cond_2d

    if-nez v4, :cond_2c

    goto :goto_1b

    :cond_2c
    const/16 v21, 0x0

    goto :goto_1c

    :cond_2d
    :goto_1b
    const/16 v21, 0x1

    :goto_1c
    iget-boolean v6, v1, Lcom/android/server/am/ProcessRecord;->persistent:Z

    new-instance v12, Landroid/content/res/Configuration;

    .line 8046
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/am/ActivityManagerService;->getGlobalConfiguration()Landroid/content/res/Configuration;

    move-result-object v9

    invoke-direct {v12, v9}, Landroid/content/res/Configuration;-><init>(Landroid/content/res/Configuration;)V

    iget-object v11, v1, Lcom/android/server/am/ProcessRecord;->compat:Landroid/content/res/CompatibilityInfo;

    iget-boolean v9, v1, Lcom/android/server/am/ProcessRecord;->isolated:Z

    .line 8047
    invoke-direct {v8, v9}, Lcom/android/server/am/ActivityManagerService;->getCommonServicesLocked(Z)Landroid/util/ArrayMap;

    move-result-object v25

    iget-object v9, v8, Lcom/android/server/am/ActivityManagerService;->mCoreSettingsObserver:Lcom/android/server/am/CoreSettingsObserver;

    .line 8048
    invoke-virtual {v9}, Lcom/android/server/am/CoreSettingsObserver;->getCoreSettingsLocked()Landroid/os/Bundle;

    move-result-object v26

    .line 8042
    move-object/from16 v9, p1

    move-object v10, v3

    move-object/from16 v24, v11

    move-object/from16 v11, v16

    move-object/from16 v23, v12

    move-object v12, v5

    move v5, v14

    move-object v14, v0

    move-object/from16 v16, v7

    move/from16 v19, v5

    move/from16 v22, v6

    invoke-interface/range {v9 .. v28}, Landroid/app/IApplicationThread;->bindApplication(Ljava/lang/String;Landroid/content/pm/ApplicationInfo;Ljava/util/List;Landroid/content/ComponentName;Landroid/app/ProfilerInfo;Landroid/os/Bundle;Landroid/app/IInstrumentationWatcher;Landroid/app/IUiAutomationConnection;IZZZZLandroid/content/res/Configuration;Landroid/content/res/CompatibilityInfo;Ljava/util/Map;Landroid/os/Bundle;Ljava/lang/String;Z)V

    .line 8051
    :goto_1d
    if-eqz v0, :cond_2e

    .line 8052
    invoke-virtual {v0}, Landroid/app/ProfilerInfo;->closeFd()V

    .line 8053
    nop

    .line 8055
    :cond_2e
    const-string v0, "attachApplicationLocked: immediately after bindApplication"

    move-wide/from16 v5, v34

    invoke-direct {v8, v5, v6, v0}, Lcom/android/server/am/ActivityManagerService;->checkTime(JLjava/lang/String;)V
    :try_end_5
    .catch Ljava/lang/Exception; {:try_start_5 .. :try_end_5} :catch_6

    .line 8056
    const/4 v0, 0x0

    const/4 v7, 0x0

    :try_start_6
    invoke-virtual {v8, v1, v7, v0}, Lcom/android/server/am/ActivityManagerService;->updateLruProcessLocked(Lcom/android/server/am/ProcessRecord;ZLcom/android/server/am/ProcessRecord;)V

    .line 8057
    const-string v0, "attachApplicationLocked: after updateLruProcessLocked"

    invoke-direct {v8, v5, v6, v0}, Lcom/android/server/am/ActivityManagerService;->checkTime(JLjava/lang/String;)V

    .line 8058
    invoke-static {}, Landroid/os/SystemClock;->uptimeMillis()J

    move-result-wide v9

    iput-wide v9, v1, Lcom/android/server/am/ProcessRecord;->lastLowMemory:J

    iput-wide v9, v1, Lcom/android/server/am/ProcessRecord;->lastRequestedGc:J
    :try_end_6
    .catch Ljava/lang/Exception; {:try_start_6 .. :try_end_6} :catch_5

    .line 8069
    nop

    .line 8072
    iget-object v0, v8, Lcom/android/server/am/ActivityManagerService;->mPersistentStartingProcesses:Ljava/util/ArrayList;

    invoke-virtual {v0, v1}, Ljava/util/ArrayList;->remove(Ljava/lang/Object;)Z

    .line 8075
    iget-object v0, v8, Lcom/android/server/am/ActivityManagerService;->mProcessesOnHold:Ljava/util/ArrayList;

    invoke-virtual {v0, v1}, Ljava/util/ArrayList;->remove(Ljava/lang/Object;)Z

    .line 8077
    nop

    .line 8078
    nop

    .line 8081
    if-eqz v4, :cond_30

    .line 8083
    :try_start_7
    iget-object v0, v8, Lcom/android/server/am/ActivityManagerService;->mStackSupervisor:Lcom/android/server/am/ActivityStackSupervisor;

    invoke-virtual {v0, v1}, Lcom/android/server/am/ActivityStackSupervisor;->attachApplicationLocked(Lcom/android/server/am/ProcessRecord;)Z

    move-result v0
    :try_end_7
    .catch Ljava/lang/Exception; {:try_start_7 .. :try_end_7} :catch_1

    if-eqz v0, :cond_2f

    .line 8084
    nop

    .line 8089
    const/4 v4, 0x1

    goto :goto_1e

    :cond_2f
    move v4, v7

    .line 8093
    :goto_1e
    move v0, v7

    goto :goto_1f

    .line 8086
    :catch_1
    move-exception v0

    .line 8087
    const-string v4, "ActivityManager"

    new-instance v9, Ljava/lang/StringBuilder;

    invoke-direct {v9}, Ljava/lang/StringBuilder;-><init>()V

    const-string v10, "Exception thrown launching activities in "

    invoke-virtual {v9, v10}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v9, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    invoke-virtual {v9}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v9

    invoke-static {v4, v9, v0}, Landroid/util/Slog;->wtf(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I

    .line 8088
    nop

    .line 8093
    move v4, v7

    const/4 v0, 0x1

    goto :goto_1f

    :cond_30
    move v0, v7

    move v4, v0

    :goto_1f
    if-nez v0, :cond_31

    .line 8095
    :try_start_8
    iget-object v9, v8, Lcom/android/server/am/ActivityManagerService;->mServices:Lcom/android/server/am/ActiveServices;

    invoke-virtual {v9, v1, v3}, Lcom/android/server/am/ActiveServices;->attachApplicationLocked(Lcom/android/server/am/ProcessRecord;Ljava/lang/String;)Z

    move-result v3

    or-int/2addr v4, v3

    .line 8096
    const-string v3, "attachApplicationLocked: after mServices.attachApplicationLocked"

    invoke-direct {v8, v5, v6, v3}, Lcom/android/server/am/ActivityManagerService;->checkTime(JLjava/lang/String;)V
    :try_end_8
    .catch Ljava/lang/Exception; {:try_start_8 .. :try_end_8} :catch_2

    .line 8100
    goto :goto_20

    .line 8097
    :catch_2
    move-exception v0

    .line 8098
    const-string v3, "ActivityManager"

    new-instance v9, Ljava/lang/StringBuilder;

    invoke-direct {v9}, Ljava/lang/StringBuilder;-><init>()V

    const-string v10, "Exception thrown starting services in "

    invoke-virtual {v9, v10}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v9, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    invoke-virtual {v9}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v9

    invoke-static {v3, v9, v0}, Landroid/util/Slog;->wtf(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I

    .line 8099
    nop

    .line 8104
    const/4 v0, 0x1

    :cond_31
    :goto_20
    if-nez v0, :cond_32

    invoke-virtual {v8, v2}, Lcom/android/server/am/ActivityManagerService;->isPendingBroadcastProcessLocked(I)Z

    move-result v2

    if-eqz v2, :cond_32

    .line 8106
    :try_start_9
    invoke-virtual {v8, v1}, Lcom/android/server/am/ActivityManagerService;->sendPendingBroadcastsLocked(Lcom/android/server/am/ProcessRecord;)Z

    move-result v2

    or-int/2addr v4, v2

    .line 8107
    const-string v2, "attachApplicationLocked: after sendPendingBroadcastsLocked"

    invoke-direct {v8, v5, v6, v2}, Lcom/android/server/am/ActivityManagerService;->checkTime(JLjava/lang/String;)V
    :try_end_9
    .catch Ljava/lang/Exception; {:try_start_9 .. :try_end_9} :catch_3

    .line 8112
    goto :goto_21

    .line 8108
    :catch_3
    move-exception v0

    .line 8110
    const-string v2, "ActivityManager"

    new-instance v3, Ljava/lang/StringBuilder;

    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V

    const-string v9, "Exception thrown dispatching broadcasts in "

    invoke-virtual {v3, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v3, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v3

    invoke-static {v2, v3, v0}, Landroid/util/Slog;->wtf(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I

    .line 8111
    nop

    .line 8116
    const/4 v0, 0x1

    :cond_32
    :goto_21
    if-nez v0, :cond_33

    iget-object v2, v8, Lcom/android/server/am/ActivityManagerService;->mBackupTarget:Lcom/android/server/am/BackupRecord;

    if-eqz v2, :cond_33

    iget-object v2, v8, Lcom/android/server/am/ActivityManagerService;->mBackupTarget:Lcom/android/server/am/BackupRecord;

    iget-object v2, v2, Lcom/android/server/am/BackupRecord;->app:Lcom/android/server/am/ProcessRecord;

    if-ne v2, v1, :cond_33

    .line 8119
    iget-object v2, v8, Lcom/android/server/am/ActivityManagerService;->mBackupTarget:Lcom/android/server/am/BackupRecord;

    iget-object v2, v2, Lcom/android/server/am/BackupRecord;->appInfo:Landroid/content/pm/ApplicationInfo;

    iget-object v2, v2, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;

    const/4 v3, 0x5

    invoke-virtual {v8, v2, v3}, Lcom/android/server/am/ActivityManagerService;->notifyPackageUse(Ljava/lang/String;I)V

    .line 8122
    :try_start_a
    iget-object v2, v8, Lcom/android/server/am/ActivityManagerService;->mBackupTarget:Lcom/android/server/am/BackupRecord;

    iget-object v2, v2, Lcom/android/server/am/BackupRecord;->appInfo:Landroid/content/pm/ApplicationInfo;

    iget-object v3, v8, Lcom/android/server/am/ActivityManagerService;->mBackupTarget:Lcom/android/server/am/BackupRecord;

    iget-object v3, v3, Lcom/android/server/am/BackupRecord;->appInfo:Landroid/content/pm/ApplicationInfo;

    .line 8123
    invoke-virtual {v8, v3}, Lcom/android/server/am/ActivityManagerService;->compatibilityInfoForPackageLocked(Landroid/content/pm/ApplicationInfo;)Landroid/content/res/CompatibilityInfo;

    move-result-object v3

    iget-object v9, v8, Lcom/android/server/am/ActivityManagerService;->mBackupTarget:Lcom/android/server/am/BackupRecord;

    iget v9, v9, Lcom/android/server/am/BackupRecord;->backupMode:I

    .line 8122
    move-object/from16 v10, p1

    invoke-interface {v10, v2, v3, v9}, Landroid/app/IApplicationThread;->scheduleCreateBackupAgent(Landroid/content/pm/ApplicationInfo;Landroid/content/res/CompatibilityInfo;I)V
    :try_end_a
    .catch Ljava/lang/Exception; {:try_start_a .. :try_end_a} :catch_4

    .line 8128
    goto :goto_22

    .line 8125
    :catch_4
    move-exception v0

    .line 8126
    const-string v2, "ActivityManager"

    new-instance v3, Ljava/lang/StringBuilder;

    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V

    const-string v9, "Exception thrown creating backup agent in "

    invoke-virtual {v3, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v3, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v3

    invoke-static {v2, v3, v0}, Landroid/util/Slog;->wtf(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I

    .line 8127
    nop

    .line 8131
    const/4 v0, 0x1

    :cond_33
    :goto_22
    if-eqz v0, :cond_34

    .line 8132
    const-string v0, "error during init"

    const/4 v2, 0x1

    invoke-virtual {v1, v0, v2}, Lcom/android/server/am/ProcessRecord;->kill(Ljava/lang/String;Z)V

    .line 8133
    invoke-direct {v8, v1, v7, v2}, Lcom/android/server/am/ActivityManagerService;->handleAppDiedLocked(Lcom/android/server/am/ProcessRecord;ZZ)V

    .line 8134
    return v7

    .line 8137
    :cond_34
    if-nez v4, :cond_35

    .line 8138
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/am/ActivityManagerService;->updateOomAdjLocked()V

    .line 8139
    const-string v0, "attachApplicationLocked: after updateOomAdjLocked"

    invoke-direct {v8, v5, v6, v0}, Lcom/android/server/am/ActivityManagerService;->checkTime(JLjava/lang/String;)V

    .line 8142
    :cond_35
    const/4 v1, 0x1

    return v1

    .line 8059
    :catch_5
    move-exception v0

    goto :goto_23

    :catch_6
    move-exception v0

    const/4 v7, 0x0

    goto :goto_23

    :catch_7
    move-exception v0

    move v7, v11

    .line 8063
    :goto_23
    const-string v2, "ActivityManager"

    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    const-string v5, "Exception thrown during bind of "

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v4, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v4

    invoke-static {v2, v4, v0}, Landroid/util/Slog;->wtf(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I

    .line 8065
    iget-object v0, v8, Lcom/android/server/am/ActivityManagerService;->mProcessStats:Lcom/android/server/am/ProcessStatsService;

    invoke-virtual {v1, v0}, Lcom/android/server/am/ProcessRecord;->resetPackageList(Lcom/android/server/am/ProcessStatsService;)V

    .line 8066
    invoke-virtual {v1}, Lcom/android/server/am/ProcessRecord;->unlinkDeathRecipient()V

    .line 8067
    const-string v0, "bind fail"

    invoke-direct {v8, v1, v0, v3}, Lcom/android/server/am/ActivityManagerService;->startProcessLocked(Lcom/android/server/am/ProcessRecord;Ljava/lang/String;Ljava/lang/String;)V

    .line 8068
    return v7

    .line 7847
    :catch_8
    move-exception v0

    move v7, v11

    .line 7848
    iget-object v0, v8, Lcom/android/server/am/ActivityManagerService;->mProcessStats:Lcom/android/server/am/ProcessStatsService;

    invoke-virtual {v1, v0}, Lcom/android/server/am/ProcessRecord;->resetPackageList(Lcom/android/server/am/ProcessStatsService;)V

    .line 7849
    const-string v0, "link fail"

    invoke-direct {v8, v1, v0, v3}, Lcom/android/server/am/ActivityManagerService;->startProcessLocked(Lcom/android/server/am/ProcessRecord;Ljava/lang/String;Ljava/lang/String;)V

    .line 7850
    return v7
.end method

.method static boostPriorityForLockedSection()V
    .locals 1

    .line 861
    sget-object v0, Lcom/android/server/am/ActivityManagerService;->sThreadPriorityBooster:Lcom/android/server/ThreadPriorityBooster;

    invoke-virtual {v0}, Lcom/android/server/ThreadPriorityBooster;->boost()V

    .line 862
    return-void
.end method

.method private buildAssistBundleLocked(Lcom/android/server/am/ActivityManagerService$PendingAssistExtras;Landroid/os/Bundle;)V
    .locals 2

    .line 14395
    if-eqz p2, :cond_0

    .line 14396
    iget-object v0, p1, Lcom/android/server/am/ActivityManagerService$PendingAssistExtras;->extras:Landroid/os/Bundle;

    const-string v1, "android.intent.extra.ASSIST_CONTEXT"

    invoke-virtual {v0, v1, p2}, Landroid/os/Bundle;->putBundle(Ljava/lang/String;Landroid/os/Bundle;)V

    .line 14398
    :cond_0
    iget-object p2, p1, Lcom/android/server/am/ActivityManagerService$PendingAssistExtras;->hint:Ljava/lang/String;

    if-eqz p2, :cond_1

    .line 14399
    iget-object p2, p1, Lcom/android/server/am/ActivityManagerService$PendingAssistExtras;->extras:Landroid/os/Bundle;

    iget-object p1, p1, Lcom/android/server/am/ActivityManagerService$PendingAssistExtras;->hint:Ljava/lang/String;

    const/4 v0, 0x1

    invoke-virtual {p2, p1, v0}, Landroid/os/Bundle;->putBoolean(Ljava/lang/String;Z)V

    .line 14401
    :cond_1
    return-void
.end method

.method private canClearIdentity(III)Z
    .locals 8

    .line 13297
    invoke-static {p2}, Landroid/os/UserHandle;->getUserId(I)I

    move-result v0

    const/4 v1, 0x1

    if-ne v0, p3, :cond_0

    .line 13298
    return v1

    .line 13300
    :cond_0
    const-string v3, "android.permission.INTERACT_ACROSS_USERS"

    const/4 v6, -0x1

    const/4 v7, 0x1

    move-object v2, p0

    move v4, p1

    move v5, p2

    invoke-virtual/range {v2 .. v7}, Lcom/android/server/am/ActivityManagerService;->checkComponentPermission(Ljava/lang/String;IIIZ)I

    move-result p3

    if-eqz p3, :cond_2

    const-string v3, "android.permission.INTERACT_ACROSS_USERS_FULL"

    const/4 v6, -0x1

    const/4 v7, 0x1

    .line 13302
    move-object v2, p0

    move v4, p1

    move v5, p2

    invoke-virtual/range {v2 .. v7}, Lcom/android/server/am/ActivityManagerService;->checkComponentPermission(Ljava/lang/String;IIIZ)I

    move-result p1

    if-nez p1, :cond_1

    goto :goto_0

    .line 13306
    :cond_1
    const/4 p1, 0x0

    return p1

    .line 13304
    :cond_2
    :goto_0
    return v1
.end method

.method private final canGcNowLocked()Z
    .locals 8

    .line 24544
    nop

    .line 24545
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mBroadcastQueues:[Lcom/android/server/am/BroadcastQueue;

    array-length v1, v0

    const/4 v2, 0x0

    move v3, v2

    move v4, v3

    :goto_0
    const/4 v5, 0x1

    if-ge v3, v1, :cond_2

    aget-object v6, v0, v3

    .line 24546
    iget-object v7, v6, Lcom/android/server/am/BroadcastQueue;->mParallelBroadcasts:Ljava/util/ArrayList;

    invoke-virtual {v7}, Ljava/util/ArrayList;->size()I

    move-result v7

    if-nez v7, :cond_0

    iget-object v6, v6, Lcom/android/server/am/BroadcastQueue;->mOrderedBroadcasts:Ljava/util/ArrayList;

    invoke-virtual {v6}, Ljava/util/ArrayList;->size()I

    move-result v6

    if-eqz v6, :cond_1

    .line 24547
    :cond_0
    nop

    .line 24545
    move v4, v5

    :cond_1
    add-int/lit8 v3, v3, 0x1

    goto :goto_0

    .line 24550
    :cond_2
    if-nez v4, :cond_4

    .line 24551
    invoke-virtual {p0}, Lcom/android/server/am/ActivityManagerService;->isSleepingLocked()Z

    move-result v0

    if-nez v0, :cond_3

    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mStackSupervisor:Lcom/android/server/am/ActivityStackSupervisor;

    invoke-virtual {v0}, Lcom/android/server/am/ActivityStackSupervisor;->allResumedActivitiesIdle()Z

    move-result v0

    if-eqz v0, :cond_4

    .line 24550
    :cond_3
    move v2, v5

    goto :goto_1

    .line 24551
    :cond_4
    nop

    .line 24550
    :goto_1
    return v2
.end method

.method private checkBroadcastFromSystem(Landroid/content/Intent;Lcom/android/server/am/ProcessRecord;Ljava/lang/String;IZLjava/util/List;)V
    .locals 4

    .line 21437
    invoke-virtual {p1}, Landroid/content/Intent;->getFlags()I

    move-result v0

    const/high16 v1, 0x400000

    and-int/2addr v0, v1

    if-eqz v0, :cond_0

    .line 21439
    return-void

    .line 21442
    :cond_0
    invoke-virtual {p1}, Landroid/content/Intent;->getAction()Ljava/lang/String;

    move-result-object v0

    .line 21443
    if-nez p5, :cond_b

    const-string p5, "android.intent.action.CLOSE_SYSTEM_DIALOGS"

    .line 21444
    invoke-virtual {p5, v0}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result p5

    if-nez p5, :cond_b

    const-string p5, "com.android.intent.action.DISMISS_KEYBOARD_SHORTCUTS"

    .line 21445
    invoke-virtual {p5, v0}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result p5

    if-nez p5, :cond_b

    const-string p5, "android.intent.action.MEDIA_BUTTON"

    .line 21446
    invoke-virtual {p5, v0}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result p5

    if-nez p5, :cond_b

    const-string p5, "android.intent.action.MEDIA_SCANNER_SCAN_FILE"

    .line 21447
    invoke-virtual {p5, v0}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result p5

    if-nez p5, :cond_b

    const-string p5, "com.android.intent.action.SHOW_KEYBOARD_SHORTCUTS"

    .line 21448
    invoke-virtual {p5, v0}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result p5

    if-nez p5, :cond_b

    const-string p5, "android.intent.action.MASTER_CLEAR"

    .line 21449
    invoke-virtual {p5, v0}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result p5

    if-nez p5, :cond_b

    const-string p5, "android.intent.action.FACTORY_RESET"

    .line 21450
    invoke-virtual {p5, v0}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result p5

    if-nez p5, :cond_b

    const-string p5, "android.appwidget.action.APPWIDGET_CONFIGURE"

    .line 21451
    invoke-virtual {p5, v0}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result p5

    if-nez p5, :cond_b

    const-string p5, "android.appwidget.action.APPWIDGET_UPDATE"

    .line 21452
    invoke-virtual {p5, v0}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result p5

    if-nez p5, :cond_b

    const-string p5, "android.location.HIGH_POWER_REQUEST_CHANGE"

    .line 21453
    invoke-virtual {p5, v0}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result p5

    if-nez p5, :cond_b

    const-string p5, "com.android.omadm.service.CONFIGURATION_UPDATE"

    .line 21454
    invoke-virtual {p5, v0}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result p5

    if-nez p5, :cond_b

    const-string p5, "android.text.style.SUGGESTION_PICKED"

    .line 21455
    invoke-virtual {p5, v0}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result p5

    if-nez p5, :cond_b

    const-string p5, "android.media.action.OPEN_AUDIO_EFFECT_CONTROL_SESSION"

    .line 21456
    invoke-virtual {p5, v0}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result p5

    if-nez p5, :cond_b

    const-string p5, "android.media.action.CLOSE_AUDIO_EFFECT_CONTROL_SESSION"

    .line 21457
    invoke-virtual {p5, v0}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result p5

    if-eqz p5, :cond_1

    goto/16 :goto_5

    .line 21468
    :cond_1
    invoke-virtual {p1}, Landroid/content/Intent;->getPackage()Ljava/lang/String;

    move-result-object p5

    if-nez p5, :cond_2

    invoke-virtual {p1}, Landroid/content/Intent;->getComponent()Landroid/content/ComponentName;

    move-result-object p1

    if-eqz p1, :cond_8

    .line 21469
    :cond_2
    if-eqz p6, :cond_a

    invoke-interface {p6}, Ljava/util/List;->size()I

    move-result p1

    if-nez p1, :cond_3

    goto/16 :goto_4

    .line 21478
    :cond_3
    nop

    .line 21479
    invoke-interface {p6}, Ljava/util/List;->size()I

    move-result p1

    const/4 p5, 0x1

    sub-int/2addr p1, p5

    :goto_0
    const/4 v1, 0x0

    if-ltz p1, :cond_7

    .line 21480
    invoke-interface {p6, p1}, Ljava/util/List;->get(I)Ljava/lang/Object;

    move-result-object v2

    .line 21481
    instance-of v3, v2, Landroid/content/pm/ResolveInfo;

    if-eqz v3, :cond_5

    .line 21482
    check-cast v2, Landroid/content/pm/ResolveInfo;

    .line 21483
    iget-object v3, v2, Landroid/content/pm/ResolveInfo;->activityInfo:Landroid/content/pm/ActivityInfo;

    iget-boolean v3, v3, Landroid/content/pm/ActivityInfo;->exported:Z

    if-eqz v3, :cond_4

    iget-object v2, v2, Landroid/content/pm/ResolveInfo;->activityInfo:Landroid/content/pm/ActivityInfo;

    iget-object v2, v2, Landroid/content/pm/ActivityInfo;->permission:Ljava/lang/String;

    if-nez v2, :cond_4

    .line 21484
    nop

    .line 21485
    goto :goto_2

    .line 21487
    :cond_4
    goto :goto_1

    .line 21488
    :cond_5
    check-cast v2, Lcom/android/server/am/BroadcastFilter;

    .line 21489
    iget-object v2, v2, Lcom/android/server/am/BroadcastFilter;->requiredPermission:Ljava/lang/String;

    if-nez v2, :cond_6

    .line 21490
    nop

    .line 21491
    goto :goto_2

    .line 21479
    :cond_6
    :goto_1
    add-int/lit8 p1, p1, -0x1

    goto :goto_0

    .line 21495
    :cond_7
    move v1, p5

    :goto_2
    if-eqz v1, :cond_8

    .line 21497
    return-void

    .line 21504
    :cond_8
    if-eqz p2, :cond_9

    .line 21505
    const-string p1, "ActivityManager"

    new-instance p4, Ljava/lang/StringBuilder;

    invoke-direct {p4}, Ljava/lang/StringBuilder;-><init>()V

    const-string p5, "Sending non-protected broadcast "

    invoke-virtual {p4, p5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {p4, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string p5, " from system "

    invoke-virtual {p4, p5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 21506
    invoke-virtual {p2}, Lcom/android/server/am/ProcessRecord;->toShortString()Ljava/lang/String;

    move-result-object p2

    invoke-virtual {p4, p2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string p2, " pkg "

    invoke-virtual {p4, p2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {p4, p3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {p4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object p2

    new-instance p3, Ljava/lang/Throwable;

    invoke-direct {p3}, Ljava/lang/Throwable;-><init>()V

    .line 21505
    invoke-static {p1, p2, p3}, Landroid/util/Log;->wtf(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I

    goto :goto_3

    .line 21509
    :cond_9
    const-string p1, "ActivityManager"

    new-instance p2, Ljava/lang/StringBuilder;

    invoke-direct {p2}, Ljava/lang/StringBuilder;-><init>()V

    const-string p5, "Sending non-protected broadcast "

    invoke-virtual {p2, p5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {p2, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string p5, " from system uid "

    invoke-virtual {p2, p5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 21510
    invoke-static {p4}, Landroid/os/UserHandle;->formatUid(I)Ljava/lang/String;

    move-result-object p4

    invoke-virtual {p2, p4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string p4, " pkg "

    invoke-virtual {p2, p4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {p2, p3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {p2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object p2

    new-instance p3, Ljava/lang/Throwable;

    invoke-direct {p3}, Ljava/lang/Throwable;-><init>()V

    .line 21509
    invoke-static {p1, p2, p3}, Landroid/util/Log;->wtf(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I

    .line 21514
    :goto_3
    return-void

    .line 21476
    :cond_a
    :goto_4
    return-void

    .line 21460
    :cond_b
    :goto_5
    return-void
.end method

.method private final checkContentProviderPermissionLocked(Landroid/content/pm/ProviderInfo;Lcom/android/server/am/ProcessRecord;IZ)Ljava/lang/String;
    .locals 20

    move-object/from16 v6, p0

    move-object/from16 v7, p1

    move-object/from16 v8, p2

    .line 12163
    move/from16 v9, p4

    if-eqz v8, :cond_0

    iget v0, v8, Lcom/android/server/am/ProcessRecord;->pid:I

    .line 12164
    :goto_0
    move v5, v0

    goto :goto_1

    .line 12163
    :cond_0
    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result v0

    goto :goto_0

    .line 12164
    :goto_1
    if-eqz v8, :cond_1

    iget v0, v8, Lcom/android/server/am/ProcessRecord;->uid:I

    .line 12165
    :goto_2
    move v4, v0

    goto :goto_3

    .line 12164
    :cond_1
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v0

    goto :goto_2

    .line 12165
    :goto_3
    nop

    .line 12166
    const/4 v0, 0x0

    const/16 v18, 0x0

    if-eqz v9, :cond_5

    .line 12168
    iget-object v1, v6, Lcom/android/server/am/ActivityManagerService;->mUserController:Lcom/android/server/am/UserController;

    move/from16 v2, p3

    invoke-virtual {v1, v2}, Lcom/android/server/am/UserController;->unsafeConvertIncomingUser(I)I

    move-result v1

    .line 12169
    invoke-static {v4}, Landroid/os/UserHandle;->getUserId(I)I

    move-result v3

    if-eq v1, v3, :cond_3

    .line 12170
    invoke-virtual {v6, v4, v7, v1, v9}, Lcom/android/server/am/ActivityManagerService;->checkAuthorityGrants(ILandroid/content/pm/ProviderInfo;IZ)Z

    move-result v3

    if-eqz v3, :cond_2

    .line 12171
    return-object v18

    .line 12173
    :cond_2
    const/4 v3, 0x1

    goto :goto_4

    .line 12175
    :cond_3
    move v3, v0

    :goto_4
    iget-object v10, v6, Lcom/android/server/am/ActivityManagerService;->mUserController:Lcom/android/server/am/UserController;

    const/4 v14, 0x0

    const/4 v15, 0x0

    new-instance v11, Ljava/lang/StringBuilder;

    invoke-direct {v11}, Ljava/lang/StringBuilder;-><init>()V

    const-string v12, "checkContentProviderPermissionLocked "

    invoke-virtual {v11, v12}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget-object v12, v7, Landroid/content/pm/ProviderInfo;->authority:Ljava/lang/String;

    invoke-virtual {v11, v12}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v11}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v16

    const/16 v17, 0x0

    move v11, v5

    move v12, v4

    move v13, v2

    invoke-virtual/range {v10 .. v17}, Lcom/android/server/am/UserController;->handleIncomingUser(IIIZILjava/lang/String;Ljava/lang/String;)I

    move-result v2

    .line 12177
    if-eq v2, v1, :cond_4

    .line 12182
    goto :goto_5

    .line 12185
    :cond_4
    move v11, v2

    move v10, v3

    goto :goto_6

    :cond_5
    move/from16 v2, p3

    :goto_5
    move v10, v0

    move v11, v2

    :goto_6
    iget-object v1, v7, Landroid/content/pm/ProviderInfo;->readPermission:Ljava/lang/String;

    iget-object v0, v7, Landroid/content/pm/ProviderInfo;->applicationInfo:Landroid/content/pm/ApplicationInfo;

    iget v12, v0, Landroid/content/pm/ApplicationInfo;->uid:I

    iget-boolean v13, v7, Landroid/content/pm/ProviderInfo;->exported:Z

    move-object v0, v6

    move v2, v5

    move v3, v4

    move v14, v4

    move v4, v12

    move v12, v5

    move v5, v13

    invoke-virtual/range {v0 .. v5}, Lcom/android/server/am/ActivityManagerService;->checkComponentPermission(Ljava/lang/String;IIIZ)I

    move-result v0

    if-nez v0, :cond_6

    .line 12188
    return-object v18

    .line 12190
    :cond_6
    iget-object v1, v7, Landroid/content/pm/ProviderInfo;->writePermission:Ljava/lang/String;

    iget-object v0, v7, Landroid/content/pm/ProviderInfo;->applicationInfo:Landroid/content/pm/ApplicationInfo;

    iget v4, v0, Landroid/content/pm/ApplicationInfo;->uid:I

    iget-boolean v5, v7, Landroid/content/pm/ProviderInfo;->exported:Z

    move-object v0, v6

    move v2, v12

    move v3, v14

    invoke-virtual/range {v0 .. v5}, Lcom/android/server/am/ActivityManagerService;->checkComponentPermission(Ljava/lang/String;IIIZ)I

    move-result v0

    if-nez v0, :cond_7

    .line 12193
    return-object v18

    .line 12196
    :cond_7
    iget-object v13, v7, Landroid/content/pm/ProviderInfo;->pathPermissions:[Landroid/content/pm/PathPermission;

    .line 12197
    if-eqz v13, :cond_b

    .line 12198
    array-length v0, v13

    .line 12199
    :goto_7
    if-lez v0, :cond_b

    .line 12200
    add-int/lit8 v15, v0, -0x1

    .line 12201
    aget-object v5, v13, v15

    .line 12202
    invoke-virtual {v5}, Landroid/content/pm/PathPermission;->getReadPermission()Ljava/lang/String;

    move-result-object v1

    .line 12203
    if-eqz v1, :cond_8

    iget-object v0, v7, Landroid/content/pm/ProviderInfo;->applicationInfo:Landroid/content/pm/ApplicationInfo;

    iget v4, v0, Landroid/content/pm/ApplicationInfo;->uid:I

    iget-boolean v3, v7, Landroid/content/pm/ProviderInfo;->exported:Z

    move-object v0, v6

    move v2, v12

    move/from16 v16, v3

    move v3, v14

    move-object/from16 v19, v13

    move-object v13, v5

    move/from16 v5, v16

    invoke-virtual/range {v0 .. v5}, Lcom/android/server/am/ActivityManagerService;->checkComponentPermission(Ljava/lang/String;IIIZ)I

    move-result v0

    if-nez v0, :cond_9

    .line 12206
    return-object v18

    .line 12208
    :cond_8
    move-object/from16 v19, v13

    move-object v13, v5

    :cond_9
    invoke-virtual {v13}, Landroid/content/pm/PathPermission;->getWritePermission()Ljava/lang/String;

    move-result-object v1

    .line 12209
    if-eqz v1, :cond_a

    iget-object v0, v7, Landroid/content/pm/ProviderInfo;->applicationInfo:Landroid/content/pm/ApplicationInfo;

    iget v4, v0, Landroid/content/pm/ApplicationInfo;->uid:I

    iget-boolean v5, v7, Landroid/content/pm/ProviderInfo;->exported:Z

    move-object v0, v6

    move v2, v12

    move v3, v14

    invoke-virtual/range {v0 .. v5}, Lcom/android/server/am/ActivityManagerService;->checkComponentPermission(Ljava/lang/String;IIIZ)I

    move-result v0

    if-nez v0, :cond_a

    .line 12212
    return-object v18

    .line 12214
    :cond_a
    nop

    .line 12199
    move v0, v15

    move-object/from16 v13, v19

    goto :goto_7

    .line 12216
    :cond_b
    if-nez v10, :cond_c

    invoke-virtual {v6, v14, v7, v11, v9}, Lcom/android/server/am/ActivityManagerService;->checkAuthorityGrants(ILandroid/content/pm/ProviderInfo;IZ)Z

    move-result v0

    if-eqz v0, :cond_c

    .line 12217
    return-object v18

    .line 12221
    :cond_c
    iget-boolean v0, v7, Landroid/content/pm/ProviderInfo;->exported:Z

    if-nez v0, :cond_d

    .line 12222
    new-instance v0, Ljava/lang/StringBuilder;

    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V

    const-string v1, " that is not exported from UID "

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget-object v1, v7, Landroid/content/pm/ProviderInfo;->applicationInfo:Landroid/content/pm/ApplicationInfo;

    iget v1, v1, Landroid/content/pm/ApplicationInfo;->uid:I

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    goto :goto_8

    .line 12223
    :cond_d
    const-string v0, "android.permission.MANAGE_DOCUMENTS"

    iget-object v1, v7, Landroid/content/pm/ProviderInfo;->readPermission:Ljava/lang/String;

    invoke-virtual {v0, v1}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v0

    if-eqz v0, :cond_e

    .line 12224
    const-string v0, " requires that you obtain access using ACTION_OPEN_DOCUMENT or related APIs"

    goto :goto_8

    .line 12226
    :cond_e
    new-instance v0, Ljava/lang/StringBuilder;

    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V

    const-string v1, " requires "

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget-object v1, v7, Landroid/content/pm/ProviderInfo;->readPermission:Ljava/lang/String;

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v1, " or "

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget-object v1, v7, Landroid/content/pm/ProviderInfo;->writePermission:Ljava/lang/String;

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    .line 12228
    :goto_8
    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string v2, "Permission Denial: opening provider "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget-object v2, v7, Landroid/content/pm/ProviderInfo;->name:Ljava/lang/String;

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v2, " from "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 12229
    if-eqz v8, :cond_f

    move-object v2, v8

    goto :goto_9

    :cond_f
    const-string v2, "(null)"

    :goto_9
    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    const-string v2, " (pid="

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v1, v12}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v2, ", uid="

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v1, v14}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v2, ")"

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v1, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    .line 12231
    const-string v1, "ActivityManager"

    invoke-static {v1, v0}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 12232
    return-object v0
.end method

.method private final checkHoldingPermissionsInternalLocked(Landroid/content/pm/IPackageManager;Landroid/content/pm/ProviderInfo;Lcom/android/server/am/ActivityManagerService$GrantUri;IIZ)Z
    .locals 8

    .line 9442
    iget-object v0, p2, Landroid/content/pm/ProviderInfo;->applicationInfo:Landroid/content/pm/ApplicationInfo;

    iget v0, v0, Landroid/content/pm/ApplicationInfo;->uid:I

    const/4 v1, 0x1

    if-ne v0, p4, :cond_0

    .line 9443
    return v1

    .line 9444
    :cond_0
    iget-boolean v0, p2, Landroid/content/pm/ProviderInfo;->exported:Z

    const/4 v2, 0x0

    if-nez v0, :cond_1

    .line 9445
    return v2

    .line 9448
    :cond_1
    and-int/lit8 v0, p5, 0x1

    if-nez v0, :cond_2

    .line 9449
    move v0, v1

    goto :goto_0

    .line 9448
    :cond_2
    nop

    .line 9449
    move v0, v2

    :goto_0
    and-int/lit8 p5, p5, 0x2

    if-nez p5, :cond_3

    .line 9452
    move p5, v1

    goto :goto_1

    .line 9449
    :cond_3
    nop

    .line 9452
    move p5, v2

    :goto_1
    if-nez v0, :cond_4

    :try_start_0
    iget-object v3, p2, Landroid/content/pm/ProviderInfo;->readPermission:Ljava/lang/String;

    if-eqz v3, :cond_4

    if-eqz p6, :cond_4

    iget-object v3, p2, Landroid/content/pm/ProviderInfo;->readPermission:Ljava/lang/String;

    .line 9453
    invoke-interface {p1, v3, p4}, Landroid/content/pm/IPackageManager;->checkUidPermission(Ljava/lang/String;I)I

    move-result v3

    if-nez v3, :cond_4

    .line 9454
    nop

    .line 9456
    move v0, v1

    goto :goto_2

    .line 9514
    :catch_0
    move-exception p1

    goto/16 :goto_9

    .line 9456
    :cond_4
    :goto_2
    if-nez p5, :cond_5

    iget-object v3, p2, Landroid/content/pm/ProviderInfo;->writePermission:Ljava/lang/String;

    if-eqz v3, :cond_5

    if-eqz p6, :cond_5

    iget-object v3, p2, Landroid/content/pm/ProviderInfo;->writePermission:Ljava/lang/String;

    .line 9457
    invoke-interface {p1, v3, p4}, Landroid/content/pm/IPackageManager;->checkUidPermission(Ljava/lang/String;I)I

    move-result v3

    if-nez v3, :cond_5

    .line 9458
    nop

    .line 9463
    move p5, v1

    :cond_5
    iget-object v3, p2, Landroid/content/pm/ProviderInfo;->readPermission:Ljava/lang/String;

    if-nez v3, :cond_6

    .line 9464
    move v3, v1

    goto :goto_3

    .line 9463
    :cond_6
    nop

    .line 9464
    move v3, v2

    :goto_3
    iget-object v4, p2, Landroid/content/pm/ProviderInfo;->writePermission:Ljava/lang/String;

    if-nez v4, :cond_7

    .line 9467
    move v4, v1

    goto :goto_4

    .line 9464
    :cond_7
    nop

    .line 9467
    move v4, v2

    :goto_4
    iget-object p2, p2, Landroid/content/pm/ProviderInfo;->pathPermissions:[Landroid/content/pm/PathPermission;

    .line 9468
    if-eqz p2, :cond_d

    .line 9469
    iget-object p3, p3, Lcom/android/server/am/ActivityManagerService$GrantUri;->uri:Landroid/net/Uri;

    invoke-virtual {p3}, Landroid/net/Uri;->getPath()Ljava/lang/String;

    move-result-object p3

    .line 9470
    array-length v5, p2

    .line 9471
    :goto_5
    if-lez v5, :cond_d

    if-eqz v0, :cond_8

    if-nez p5, :cond_d

    .line 9472
    :cond_8
    add-int/lit8 v5, v5, -0x1

    .line 9473
    aget-object v6, p2, v5

    .line 9474
    invoke-virtual {v6, p3}, Landroid/content/pm/PathPermission;->match(Ljava/lang/String;)Z

    move-result v7

    if-eqz v7, :cond_c

    .line 9475
    if-nez v0, :cond_a

    .line 9476
    invoke-virtual {v6}, Landroid/content/pm/PathPermission;->getReadPermission()Ljava/lang/String;

    move-result-object v7

    .line 9481
    if-eqz v7, :cond_a

    .line 9482
    if-eqz p6, :cond_9

    invoke-interface {p1, v7, p4}, Landroid/content/pm/IPackageManager;->checkUidPermission(Ljava/lang/String;I)I

    move-result v7

    if-nez v7, :cond_9

    .line 9484
    nop

    .line 9490
    move v0, v1

    goto :goto_6

    .line 9486
    :cond_9
    nop

    .line 9490
    move v3, v2

    :cond_a
    :goto_6
    if-nez p5, :cond_c

    .line 9491
    invoke-virtual {v6}, Landroid/content/pm/PathPermission;->getWritePermission()Ljava/lang/String;

    move-result-object v6

    .line 9496
    if-eqz v6, :cond_c

    .line 9497
    if-eqz p6, :cond_b

    invoke-interface {p1, v6, p4}, Landroid/content/pm/IPackageManager;->checkUidPermission(Ljava/lang/String;I)I

    move-result v6
    :try_end_0
    .catch Landroid/os/RemoteException; {:try_start_0 .. :try_end_0} :catch_0

    if-nez v6, :cond_b

    .line 9499
    nop

    .line 9506
    move p5, v1

    goto :goto_7

    .line 9501
    :cond_b
    nop

    .line 9506
    move v4, v2

    :cond_c
    :goto_7
    goto :goto_5

    .line 9511
    :cond_d
    if-eqz v3, :cond_e

    .line 9512
    move v0, v1

    :cond_e
    if-eqz v4, :cond_f

    .line 9516
    move p5, v1

    .line 9518
    :cond_f
    if-eqz v0, :cond_10

    if-eqz p5, :cond_10

    goto :goto_8

    :cond_10
    move v1, v2

    :goto_8
    return v1

    .line 9514
    :goto_9
    nop

    .line 9515
    return v2
.end method

.method private final checkHoldingPermissionsLocked(Landroid/content/pm/IPackageManager;Landroid/content/pm/ProviderInfo;Lcom/android/server/am/ActivityManagerService$GrantUri;II)Z
    .locals 7

    .line 9431
    invoke-static {p4}, Landroid/os/UserHandle;->getUserId(I)I

    move-result v0

    iget v1, p3, Lcom/android/server/am/ActivityManagerService$GrantUri;->sourceUserId:I

    if-eq v0, v1, :cond_0

    .line 9432
    const-string v0, "android.permission.INTERACT_ACROSS_USERS"

    const/4 v1, -0x1

    const/4 v2, 0x1

    invoke-static {v0, p4, v1, v2}, Landroid/app/ActivityManager;->checkComponentPermission(Ljava/lang/String;IIZ)I

    move-result v0

    if-eqz v0, :cond_0

    .line 9434
    const/4 p1, 0x0

    return p1

    .line 9437
    :cond_0
    const/4 v6, 0x1

    move-object v0, p0

    move-object v1, p1

    move-object v2, p2

    move-object v3, p3

    move v4, p4

    move v5, p5

    invoke-direct/range {v0 .. v6}, Lcom/android/server/am/ActivityManagerService;->checkHoldingPermissionsInternalLocked(Landroid/content/pm/IPackageManager;Landroid/content/pm/ProviderInfo;Lcom/android/server/am/ActivityManagerService$GrantUri;IIZ)Z

    move-result p1

    return p1
.end method

.method private checkTime(JLjava/lang/String;)V
    .locals 3

    .line 12344
    invoke-static {}, Landroid/os/SystemClock;->uptimeMillis()J

    move-result-wide v0

    .line 12345
    sub-long/2addr v0, p1

    const-wide/16 p1, 0x32

    cmp-long p1, v0, p1

    if-lez p1, :cond_0

    .line 12347
    const-string p1, "ActivityManager"

    new-instance p2, Ljava/lang/StringBuilder;

    invoke-direct {p2}, Ljava/lang/StringBuilder;-><init>()V

    const-string v2, "Slow operation: "

    invoke-virtual {p2, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {p2, v0, v1}, Ljava/lang/StringBuilder;->append(J)Ljava/lang/StringBuilder;

    const-string v0, "ms so far, now at "

    invoke-virtual {p2, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {p2, p3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {p2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object p2

    invoke-static {p1, p2}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 12349
    :cond_0
    return-void
.end method

.method private final checkUriPermissionLocked(Lcom/android/server/am/ActivityManagerService$GrantUri;II)Z
    .locals 8
    .annotation build Lcom/android/internal/annotations/GuardedBy;
        value = "this"
    .end annotation

    .line 9724
    and-int/lit8 v0, p3, 0x40

    const/4 v1, 0x0

    const/4 v2, 0x1

    if-eqz v0, :cond_0

    .line 9725
    move v0, v2

    goto :goto_0

    .line 9724
    :cond_0
    nop

    .line 9725
    move v0, v1

    :goto_0
    if-eqz v0, :cond_1

    const/4 v0, 0x3

    goto :goto_1

    .line 9726
    :cond_1
    nop

    .line 9729
    move v0, v2

    :goto_1
    if-nez p2, :cond_2

    .line 9730
    return v2

    .line 9733
    :cond_2
    iget-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mGrantedUriPermissions:Landroid/util/SparseArray;

    invoke-virtual {v3, p2}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    move-result-object p2

    check-cast p2, Landroid/util/ArrayMap;

    .line 9734
    if-nez p2, :cond_3

    return v1

    .line 9737
    :cond_3
    invoke-virtual {p2, p1}, Landroid/util/ArrayMap;->get(Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object v3

    check-cast v3, Lcom/android/server/am/UriPermission;

    .line 9738
    if-eqz v3, :cond_4

    invoke-virtual {v3, p3}, Lcom/android/server/am/UriPermission;->getStrength(I)I

    move-result v3

    if-lt v3, v0, :cond_4

    .line 9739
    return v2

    .line 9743
    :cond_4
    invoke-virtual {p2}, Landroid/util/ArrayMap;->size()I

    move-result v3

    .line 9744
    move v4, v1

    :goto_2
    if-ge v4, v3, :cond_6

    .line 9745
    invoke-virtual {p2, v4}, Landroid/util/ArrayMap;->valueAt(I)Ljava/lang/Object;

    move-result-object v5

    check-cast v5, Lcom/android/server/am/UriPermission;

    .line 9746
    iget-object v6, v5, Lcom/android/server/am/UriPermission;->uri:Lcom/android/server/am/ActivityManagerService$GrantUri;

    iget-boolean v6, v6, Lcom/android/server/am/ActivityManagerService$GrantUri;->prefix:Z

    if-eqz v6, :cond_5

    iget-object v6, p1, Lcom/android/server/am/ActivityManagerService$GrantUri;->uri:Landroid/net/Uri;

    iget-object v7, v5, Lcom/android/server/am/UriPermission;->uri:Lcom/android/server/am/ActivityManagerService$GrantUri;

    iget-object v7, v7, Lcom/android/server/am/ActivityManagerService$GrantUri;->uri:Landroid/net/Uri;

    invoke-virtual {v6, v7}, Landroid/net/Uri;->isPathPrefixMatch(Landroid/net/Uri;)Z

    move-result v6

    if-eqz v6, :cond_5

    .line 9747
    invoke-virtual {v5, p3}, Lcom/android/server/am/UriPermission;->getStrength(I)I

    move-result v5

    if-lt v5, v0, :cond_5

    .line 9748
    return v2

    .line 9744
    :cond_5
    add-int/lit8 v4, v4, 0x1

    goto :goto_2

    .line 9752
    :cond_6
    return v1
.end method

.method private final cleanUpApplicationRecordLocked(Lcom/android/server/am/ProcessRecord;ZZIZ)Z
    .locals 8
    .annotation build Lcom/android/internal/annotations/GuardedBy;
        value = "this"
    .end annotation

    .line 20405
    if-ltz p4, :cond_0

    .line 20406
    invoke-virtual {p0, p1}, Lcom/android/server/am/ActivityManagerService;->removeLruProcessLocked(Lcom/android/server/am/ProcessRecord;)V

    .line 20407
    iget v0, p1, Lcom/android/server/am/ProcessRecord;->pid:I

    invoke-static {v0}, Lcom/android/server/am/ProcessList;->remove(I)V

    .line 20410
    :cond_0
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mProcessesToGc:Ljava/util/ArrayList;

    invoke-virtual {v0, p1}, Ljava/util/ArrayList;->remove(Ljava/lang/Object;)Z

    .line 20411
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mPendingPssProcesses:Ljava/util/ArrayList;

    invoke-virtual {v0, p1}, Ljava/util/ArrayList;->remove(Ljava/lang/Object;)Z

    .line 20412
    iget-object v0, p1, Lcom/android/server/am/ProcessRecord;->procStateMemTracker:Lcom/android/server/am/ProcessList$ProcStateMemTracker;

    invoke-static {v0}, Lcom/android/server/am/ProcessList;->abortNextPssTime(Lcom/android/server/am/ProcessList$ProcStateMemTracker;)V

    .line 20415
    iget-object v0, p1, Lcom/android/server/am/ProcessRecord;->crashDialog:Landroid/app/Dialog;

    const/4 v1, 0x0

    if-eqz v0, :cond_1

    iget-boolean v0, p1, Lcom/android/server/am/ProcessRecord;->forceCrashReport:Z

    if-nez v0, :cond_1

    .line 20416
    iget-object v0, p1, Lcom/android/server/am/ProcessRecord;->crashDialog:Landroid/app/Dialog;

    invoke-virtual {v0}, Landroid/app/Dialog;->dismiss()V

    .line 20417
    iput-object v1, p1, Lcom/android/server/am/ProcessRecord;->crashDialog:Landroid/app/Dialog;

    .line 20419
    :cond_1
    iget-object v0, p1, Lcom/android/server/am/ProcessRecord;->anrDialog:Landroid/app/Dialog;

    if-eqz v0, :cond_2

    .line 20420
    iget-object v0, p1, Lcom/android/server/am/ProcessRecord;->anrDialog:Landroid/app/Dialog;

    invoke-virtual {v0}, Landroid/app/Dialog;->dismiss()V

    .line 20421
    iput-object v1, p1, Lcom/android/server/am/ProcessRecord;->anrDialog:Landroid/app/Dialog;

    .line 20423
    :cond_2
    iget-object v0, p1, Lcom/android/server/am/ProcessRecord;->waitDialog:Landroid/app/Dialog;

    if-eqz v0, :cond_3

    .line 20424
    iget-object v0, p1, Lcom/android/server/am/ProcessRecord;->waitDialog:Landroid/app/Dialog;

    invoke-virtual {v0}, Landroid/app/Dialog;->dismiss()V

    .line 20425
    iput-object v1, p1, Lcom/android/server/am/ProcessRecord;->waitDialog:Landroid/app/Dialog;

    .line 20428
    :cond_3
    const/4 v0, 0x0

    iput-boolean v0, p1, Lcom/android/server/am/ProcessRecord;->crashing:Z

    .line 20429
    iput-boolean v0, p1, Lcom/android/server/am/ProcessRecord;->notResponding:Z

    .line 20431
    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mProcessStats:Lcom/android/server/am/ProcessStatsService;

    invoke-virtual {p1, v2}, Lcom/android/server/am/ProcessRecord;->resetPackageList(Lcom/android/server/am/ProcessStatsService;)V

    .line 20432
    invoke-virtual {p1}, Lcom/android/server/am/ProcessRecord;->unlinkDeathRecipient()V

    .line 20433
    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mProcessStats:Lcom/android/server/am/ProcessStatsService;

    invoke-virtual {p1, v2}, Lcom/android/server/am/ProcessRecord;->makeInactive(Lcom/android/server/am/ProcessStatsService;)V

    .line 20434
    iput-object v1, p1, Lcom/android/server/am/ProcessRecord;->waitingToKill:Ljava/lang/String;

    .line 20435
    iput-object v1, p1, Lcom/android/server/am/ProcessRecord;->forcingToImportant:Ljava/lang/Object;

    .line 20436
    invoke-virtual {p0, p1, v0, v0}, Lcom/android/server/am/ActivityManagerService;->updateProcessForegroundLocked(Lcom/android/server/am/ProcessRecord;ZZ)V

    .line 20437
    iput-boolean v0, p1, Lcom/android/server/am/ProcessRecord;->foregroundActivities:Z

    .line 20438
    iput-boolean v0, p1, Lcom/android/server/am/ProcessRecord;->hasShownUi:Z

    .line 20439
    iput-boolean v0, p1, Lcom/android/server/am/ProcessRecord;->treatLikeActivity:Z

    .line 20440
    iput-boolean v0, p1, Lcom/android/server/am/ProcessRecord;->hasAboveClient:Z

    .line 20441
    iput-boolean v0, p1, Lcom/android/server/am/ProcessRecord;->hasClientActivities:Z

    .line 20443
    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mServices:Lcom/android/server/am/ActiveServices;

    invoke-virtual {v2, p1, p3}, Lcom/android/server/am/ActiveServices;->killServicesLocked(Lcom/android/server/am/ProcessRecord;Z)V

    .line 20445
    nop

    .line 20448
    iget-object v2, p1, Lcom/android/server/am/ProcessRecord;->pubProviders:Landroid/util/ArrayMap;

    invoke-virtual {v2}, Landroid/util/ArrayMap;->size()I

    move-result v2

    const/4 v3, 0x1

    sub-int/2addr v2, v3

    move v4, v0

    :goto_0
    if-ltz v2, :cond_8

    .line 20449
    iget-object v5, p1, Lcom/android/server/am/ProcessRecord;->pubProviders:Landroid/util/ArrayMap;

    invoke-virtual {v5, v2}, Landroid/util/ArrayMap;->valueAt(I)Ljava/lang/Object;

    move-result-object v5

    check-cast v5, Lcom/android/server/am/ContentProviderRecord;

    .line 20450
    iget-boolean v6, p1, Lcom/android/server/am/ProcessRecord;->bad:Z

    if-nez v6, :cond_5

    if-nez p3, :cond_4

    goto :goto_1

    .line 20451
    :cond_4
    move v6, v0

    goto :goto_2

    .line 20450
    :cond_5
    :goto_1
    nop

    .line 20451
    move v6, v3

    :goto_2
    invoke-direct {p0, p1, v5, v6}, Lcom/android/server/am/ActivityManagerService;->removeDyingProviderLocked(Lcom/android/server/am/ProcessRecord;Lcom/android/server/am/ContentProviderRecord;Z)Z

    move-result v7

    .line 20452
    if-nez v7, :cond_6

    if-eqz v6, :cond_7

    :cond_6
    invoke-virtual {v5}, Lcom/android/server/am/ContentProviderRecord;->hasConnectionOrHandle()Z

    move-result v6

    if-eqz v6, :cond_7

    .line 20455
    nop

    .line 20458
    move v4, v3

    :cond_7
    iput-object v1, v5, Lcom/android/server/am/ContentProviderRecord;->provider:Landroid/content/IContentProvider;

    .line 20459
    iput-object v1, v5, Lcom/android/server/am/ContentProviderRecord;->proc:Lcom/android/server/am/ProcessRecord;

    .line 20448
    add-int/lit8 v2, v2, -0x1

    goto :goto_0

    .line 20461
    :cond_8
    iget-object p3, p1, Lcom/android/server/am/ProcessRecord;->pubProviders:Landroid/util/ArrayMap;

    invoke-virtual {p3}, Landroid/util/ArrayMap;->clear()V

    .line 20464
    invoke-virtual {p0, p1, v0}, Lcom/android/server/am/ActivityManagerService;->cleanupAppInLaunchingProvidersLocked(Lcom/android/server/am/ProcessRecord;Z)Z

    move-result p3

    if-eqz p3, :cond_9

    .line 20465
    nop

    .line 20469
    move v4, v3

    :cond_9
    iget-object p3, p1, Lcom/android/server/am/ProcessRecord;->conProviders:Ljava/util/ArrayList;

    invoke-virtual {p3}, Ljava/util/ArrayList;->isEmpty()Z

    move-result p3

    if-nez p3, :cond_b

    .line 20470
    iget-object p3, p1, Lcom/android/server/am/ProcessRecord;->conProviders:Ljava/util/ArrayList;

    invoke-virtual {p3}, Ljava/util/ArrayList;->size()I

    move-result p3

    sub-int/2addr p3, v3

    :goto_3
    if-ltz p3, :cond_a

    .line 20471
    iget-object v2, p1, Lcom/android/server/am/ProcessRecord;->conProviders:Ljava/util/ArrayList;

    invoke-virtual {v2, p3}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Lcom/android/server/am/ContentProviderConnection;

    .line 20472
    iget-object v5, v2, Lcom/android/server/am/ContentProviderConnection;->provider:Lcom/android/server/am/ContentProviderRecord;

    iget-object v5, v5, Lcom/android/server/am/ContentProviderRecord;->connections:Ljava/util/ArrayList;

    invoke-virtual {v5, v2}, Ljava/util/ArrayList;->remove(Ljava/lang/Object;)Z

    .line 20473
    iget v5, p1, Lcom/android/server/am/ProcessRecord;->uid:I

    iget-object v6, p1, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;

    iget-object v7, v2, Lcom/android/server/am/ContentProviderConnection;->provider:Lcom/android/server/am/ContentProviderRecord;

    iget v7, v7, Lcom/android/server/am/ContentProviderRecord;->uid:I

    iget-object v2, v2, Lcom/android/server/am/ContentProviderConnection;->provider:Lcom/android/server/am/ContentProviderRecord;

    iget-object v2, v2, Lcom/android/server/am/ContentProviderRecord;->name:Landroid/content/ComponentName;

    invoke-virtual {p0, v5, v6, v7, v2}, Lcom/android/server/am/ActivityManagerService;->stopAssociationLocked(ILjava/lang/String;ILandroid/content/ComponentName;)V

    .line 20470
    add-int/lit8 p3, p3, -0x1

    goto :goto_3

    .line 20476
    :cond_a
    iget-object p3, p1, Lcom/android/server/am/ProcessRecord;->conProviders:Ljava/util/ArrayList;

    invoke-virtual {p3}, Ljava/util/ArrayList;->clear()V

    .line 20496
    :cond_b
    invoke-virtual {p0, p1}, Lcom/android/server/am/ActivityManagerService;->skipCurrentReceiverLocked(Lcom/android/server/am/ProcessRecord;)V

    .line 20499
    iget-object p3, p1, Lcom/android/server/am/ProcessRecord;->receivers:Landroid/util/ArraySet;

    invoke-virtual {p3}, Landroid/util/ArraySet;->size()I

    move-result p3

    sub-int/2addr p3, v3

    :goto_4
    if-ltz p3, :cond_c

    .line 20500
    iget-object v2, p1, Lcom/android/server/am/ProcessRecord;->receivers:Landroid/util/ArraySet;

    invoke-virtual {v2, p3}, Landroid/util/ArraySet;->valueAt(I)Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Lcom/android/server/am/ReceiverList;

    invoke-virtual {p0, v2}, Lcom/android/server/am/ActivityManagerService;->removeReceiverLocked(Lcom/android/server/am/ReceiverList;)V

    .line 20499
    add-int/lit8 p3, p3, -0x1

    goto :goto_4

    .line 20502
    :cond_c
    iget-object p3, p1, Lcom/android/server/am/ProcessRecord;->receivers:Landroid/util/ArraySet;

    invoke-virtual {p3}, Landroid/util/ArraySet;->clear()V

    .line 20505
    iget-object p3, p0, Lcom/android/server/am/ActivityManagerService;->mBackupTarget:Lcom/android/server/am/BackupRecord;

    if-eqz p3, :cond_d

    iget p3, p1, Lcom/android/server/am/ProcessRecord;->pid:I

    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mBackupTarget:Lcom/android/server/am/BackupRecord;

    iget-object v2, v2, Lcom/android/server/am/BackupRecord;->app:Lcom/android/server/am/ProcessRecord;

    iget v2, v2, Lcom/android/server/am/ProcessRecord;->pid:I

    if-ne p3, v2, :cond_d

    .line 20508
    iget-object p3, p0, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    new-instance v2, Lcom/android/server/am/ActivityManagerService$26;

    invoke-direct {v2, p0, p1}, Lcom/android/server/am/ActivityManagerService$26;-><init>(Lcom/android/server/am/ActivityManagerService;Lcom/android/server/am/ProcessRecord;)V

    invoke-virtual {p3, v2}, Lcom/android/server/am/ActivityManagerService$MainHandler;->post(Ljava/lang/Runnable;)Z

    .line 20522
    :cond_d
    iget-object p3, p0, Lcom/android/server/am/ActivityManagerService;->mPendingProcessChanges:Ljava/util/ArrayList;

    invoke-virtual {p3}, Ljava/util/ArrayList;->size()I

    move-result p3

    sub-int/2addr p3, v3

    :goto_5
    if-ltz p3, :cond_f

    .line 20523
    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mPendingProcessChanges:Ljava/util/ArrayList;

    invoke-virtual {v2, p3}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Lcom/android/server/am/ActivityManagerService$ProcessChangeItem;

    .line 20524
    iget v5, p1, Lcom/android/server/am/ProcessRecord;->pid:I

    if-lez v5, :cond_e

    iget v5, v2, Lcom/android/server/am/ActivityManagerService$ProcessChangeItem;->pid:I

    iget v6, p1, Lcom/android/server/am/ProcessRecord;->pid:I

    if-ne v5, v6, :cond_e

    .line 20525
    iget-object v5, p0, Lcom/android/server/am/ActivityManagerService;->mPendingProcessChanges:Ljava/util/ArrayList;

    invoke-virtual {v5, p3}, Ljava/util/ArrayList;->remove(I)Ljava/lang/Object;

    .line 20526
    iget-object v5, p0, Lcom/android/server/am/ActivityManagerService;->mAvailProcessChanges:Ljava/util/ArrayList;

    invoke-virtual {v5, v2}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    .line 20522
    :cond_e
    add-int/lit8 p3, p3, -0x1

    goto :goto_5

    .line 20529
    :cond_f
    iget-object p3, p0, Lcom/android/server/am/ActivityManagerService;->mUiHandler:Landroid/os/Handler;

    const/16 v2, 0x20

    iget v5, p1, Lcom/android/server/am/ProcessRecord;->pid:I

    iget-object v6, p1, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget v6, v6, Landroid/content/pm/ApplicationInfo;->uid:I

    invoke-virtual {p3, v2, v5, v6, v1}, Landroid/os/Handler;->obtainMessage(IIILjava/lang/Object;)Landroid/os/Message;

    move-result-object p3

    .line 20530
    invoke-virtual {p3}, Landroid/os/Message;->sendToTarget()V

    .line 20534
    if-eqz p2, :cond_10

    .line 20535
    return v0

    .line 20538
    :cond_10
    iget-boolean p2, p1, Lcom/android/server/am/ProcessRecord;->persistent:Z

    if-eqz p2, :cond_12

    iget-boolean p2, p1, Lcom/android/server/am/ProcessRecord;->isolated:Z

    if-eqz p2, :cond_11

    goto :goto_6

    .line 20549
    :cond_11
    iget-boolean p2, p1, Lcom/android/server/am/ProcessRecord;->removed:Z

    if-nez p2, :cond_14

    .line 20553
    iget-object p2, p0, Lcom/android/server/am/ActivityManagerService;->mPersistentStartingProcesses:Ljava/util/ArrayList;

    invoke-virtual {p2, p1}, Ljava/util/ArrayList;->indexOf(Ljava/lang/Object;)I

    move-result p2

    if-gez p2, :cond_14

    .line 20554
    iget-object p2, p0, Lcom/android/server/am/ActivityManagerService;->mPersistentStartingProcesses:Ljava/util/ArrayList;

    invoke-virtual {p2, p1}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    .line 20555
    nop

    .line 20560
    move v4, v3

    goto :goto_7

    .line 20541
    :cond_12
    :goto_6
    if-nez p5, :cond_13

    .line 20542
    iget-object p2, p1, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;

    iget p3, p1, Lcom/android/server/am/ProcessRecord;->uid:I

    invoke-direct {p0, p2, p3, p1}, Lcom/android/server/am/ActivityManagerService;->removeProcessNameLocked(Ljava/lang/String;ILcom/android/server/am/ProcessRecord;)Lcom/android/server/am/ProcessRecord;

    .line 20544
    :cond_13
    iget-object p2, p0, Lcom/android/server/am/ActivityManagerService;->mHeavyWeightProcess:Lcom/android/server/am/ProcessRecord;

    if-ne p2, p1, :cond_14

    .line 20545
    iget-object p2, p0, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    iget-object p3, p0, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    const/16 p5, 0x19

    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mHeavyWeightProcess:Lcom/android/server/am/ProcessRecord;

    iget v2, v2, Lcom/android/server/am/ProcessRecord;->userId:I

    invoke-virtual {p3, p5, v2, v0}, Lcom/android/server/am/ActivityManagerService$MainHandler;->obtainMessage(III)Landroid/os/Message;

    move-result-object p3

    invoke-virtual {p2, p3}, Lcom/android/server/am/ActivityManagerService$MainHandler;->sendMessage(Landroid/os/Message;)Z

    .line 20547
    iput-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mHeavyWeightProcess:Lcom/android/server/am/ProcessRecord;

    .line 20560
    :cond_14
    :goto_7
    iget-object p2, p0, Lcom/android/server/am/ActivityManagerService;->mProcessesOnHold:Ljava/util/ArrayList;

    invoke-virtual {p2, p1}, Ljava/util/ArrayList;->remove(Ljava/lang/Object;)Z

    .line 20562
    iget-object p2, p0, Lcom/android/server/am/ActivityManagerService;->mHomeProcess:Lcom/android/server/am/ProcessRecord;

    if-ne p1, p2, :cond_15

    .line 20563
    iput-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mHomeProcess:Lcom/android/server/am/ProcessRecord;

    .line 20565
    :cond_15
    iget-object p2, p0, Lcom/android/server/am/ActivityManagerService;->mPreviousProcess:Lcom/android/server/am/ProcessRecord;

    if-ne p1, p2, :cond_16

    .line 20566
    iput-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mPreviousProcess:Lcom/android/server/am/ProcessRecord;

    .line 20569
    :cond_16
    if-eqz v4, :cond_18

    iget-boolean p2, p1, Lcom/android/server/am/ProcessRecord;->isolated:Z

    if-nez p2, :cond_18

    .line 20572
    if-gez p4, :cond_17

    .line 20573
    iget p2, p1, Lcom/android/server/am/ProcessRecord;->pid:I

    invoke-static {p2}, Lcom/android/server/am/ProcessList;->remove(I)V

    .line 20575
    :cond_17
    invoke-direct {p0, p1}, Lcom/android/server/am/ActivityManagerService;->addProcessNameLocked(Lcom/android/server/am/ProcessRecord;)V

    .line 20576
    iput-boolean v0, p1, Lcom/android/server/am/ProcessRecord;->pendingStart:Z

    .line 20577
    const-string/jumbo p2, "restart"

    iget-object p3, p1, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;

    invoke-direct {p0, p1, p2, p3}, Lcom/android/server/am/ActivityManagerService;->startProcessLocked(Lcom/android/server/am/ProcessRecord;Ljava/lang/String;Ljava/lang/String;)V

    .line 20578
    return v3

    .line 20579
    :cond_18
    iget p2, p1, Lcom/android/server/am/ProcessRecord;->pid:I

    if-lez p2, :cond_1a

    iget p2, p1, Lcom/android/server/am/ProcessRecord;->pid:I

    sget p3, Lcom/android/server/am/ActivityManagerService;->MY_PID:I

    if-eq p2, p3, :cond_1a

    .line 20582
    iget-object p2, p0, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Landroid/util/SparseArray;

    monitor-enter p2

    .line 20583
    :try_start_0
    iget-object p3, p0, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Landroid/util/SparseArray;

    iget p4, p1, Lcom/android/server/am/ProcessRecord;->pid:I

    invoke-virtual {p3, p4}, Landroid/util/SparseArray;->remove(I)V

    .line 20584
    iget-object p3, p0, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    const/16 p4, 0x14

    invoke-virtual {p3, p4, p1}, Lcom/android/server/am/ActivityManagerService$MainHandler;->removeMessages(ILjava/lang/Object;)V

    .line 20585
    monitor-exit p2
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 20586
    iget-object p2, p0, Lcom/android/server/am/ActivityManagerService;->mBatteryStatsService:Lcom/android/server/am/BatteryStatsService;

    iget-object p3, p1, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;

    iget-object p4, p1, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget p4, p4, Landroid/content/pm/ApplicationInfo;->uid:I

    invoke-virtual {p2, p3, p4}, Lcom/android/server/am/BatteryStatsService;->noteProcessFinish(Ljava/lang/String;I)V

    .line 20587
    iget-boolean p2, p1, Lcom/android/server/am/ProcessRecord;->isolated:Z

    if-eqz p2, :cond_19

    .line 20588
    iget-object p2, p0, Lcom/android/server/am/ActivityManagerService;->mBatteryStatsService:Lcom/android/server/am/BatteryStatsService;

    iget p3, p1, Lcom/android/server/am/ProcessRecord;->uid:I

    iget-object p4, p1, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget p4, p4, Landroid/content/pm/ApplicationInfo;->uid:I

    invoke-virtual {p2, p3, p4}, Lcom/android/server/am/BatteryStatsService;->removeIsolatedUid(II)V

    .line 20590
    :cond_19
    invoke-virtual {p1, v0}, Lcom/android/server/am/ProcessRecord;->setPid(I)V

    goto :goto_8

    .line 20585
    :catchall_0
    move-exception p1

    :try_start_1
    monitor-exit p2
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    throw p1

    .line 20592
    :cond_1a
    :goto_8
    return v0
.end method

.method private cleanupDisabledPackageComponentsLocked(Ljava/lang/String;IZ[Ljava/lang/String;)V
    .locals 14

    move-object v0, p0

    move-object v8, p1

    move/from16 v9, p2

    .line 7338
    move-object/from16 v1, p4

    .line 7339
    nop

    .line 7340
    invoke-static {}, Landroid/app/AppGlobals;->getPackageManager()Landroid/content/pm/IPackageManager;

    move-result-object v2

    .line 7342
    if-nez v1, :cond_0

    .line 7344
    return-void

    .line 7348
    :cond_0
    nop

    .line 7349
    array-length v3, v1

    const/4 v10, 0x1

    sub-int/2addr v3, v10

    const/4 v11, 0x0

    const/4 v4, 0x0

    move v5, v4

    move-object v6, v11

    :goto_0
    if-ltz v3, :cond_7

    .line 7350
    aget-object v7, v1, v3

    .line 7352
    invoke-virtual {v7, v8}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v12

    const/4 v13, -0x1

    if-eqz v12, :cond_3

    .line 7355
    nop

    .line 7356
    if-eq v9, v13, :cond_1

    .line 7355
    move v5, v9

    goto :goto_1

    .line 7356
    :cond_1
    nop

    .line 7355
    move v5, v4

    :goto_1
    :try_start_0
    invoke-interface {v2, v8, v5}, Landroid/content/pm/IPackageManager;->getApplicationEnabledSetting(Ljava/lang/String;I)I

    move-result v5
    :try_end_0
    .catch Ljava/lang/Exception; {:try_start_0 .. :try_end_0} :catch_0

    .line 7361
    nop

    .line 7362
    if-eq v5, v10, :cond_2

    if-eqz v5, :cond_2

    .line 7364
    move v5, v10

    goto :goto_2

    .line 7362
    :cond_2
    nop

    .line 7364
    move v5, v4

    :goto_2
    if-eqz v5, :cond_6

    .line 7367
    nop

    .line 7368
    nop

    .line 7389
    move-object v12, v11

    goto :goto_4

    .line 7357
    :catch_0
    move-exception v0

    .line 7360
    return-void

    .line 7372
    :cond_3
    :try_start_1
    new-instance v12, Landroid/content/ComponentName;

    invoke-direct {v12, v8, v7}, Landroid/content/ComponentName;-><init>(Ljava/lang/String;Ljava/lang/String;)V

    .line 7374
    if-eq v9, v13, :cond_4

    .line 7372
    move v13, v9

    goto :goto_3

    .line 7374
    :cond_4
    nop

    .line 7372
    move v13, v4

    :goto_3
    invoke-interface {v2, v12, v13}, Landroid/content/pm/IPackageManager;->getComponentEnabledSetting(Landroid/content/ComponentName;I)I

    move-result v12
    :try_end_1
    .catch Ljava/lang/Exception; {:try_start_1 .. :try_end_1} :catch_1

    .line 7378
    nop

    .line 7379
    if-eq v12, v10, :cond_6

    if-eqz v12, :cond_6

    .line 7381
    if-nez v6, :cond_5

    .line 7382
    new-instance v6, Landroid/util/ArraySet;

    array-length v12, v1

    invoke-direct {v6, v12}, Landroid/util/ArraySet;-><init>(I)V

    .line 7384
    :cond_5
    invoke-interface {v6, v7}, Ljava/util/Set;->add(Ljava/lang/Object;)Z

    .line 7349
    :cond_6
    add-int/lit8 v3, v3, -0x1

    goto :goto_0

    .line 7375
    :catch_1
    move-exception v0

    .line 7377
    return-void

    .line 7389
    :cond_7
    move-object v12, v6

    :goto_4
    if-nez v5, :cond_8

    if-nez v12, :cond_8

    .line 7391
    return-void

    .line 7395
    :cond_8
    iget-object v1, v0, Lcom/android/server/am/ActivityManagerService;->mStackSupervisor:Lcom/android/server/am/ActivityStackSupervisor;

    const/4 v4, 0x1

    const/4 v5, 0x0

    move-object v2, v8

    move-object v3, v12

    move v6, v9

    invoke-virtual/range {v1 .. v6}, Lcom/android/server/am/ActivityStackSupervisor;->finishDisabledPackageActivitiesLocked(Ljava/lang/String;Ljava/util/Set;ZZI)Z

    move-result v1

    if-eqz v1, :cond_9

    iget-boolean v1, v0, Lcom/android/server/am/ActivityManagerService;->mBooted:Z

    if-eqz v1, :cond_9

    .line 7397
    iget-object v1, v0, Lcom/android/server/am/ActivityManagerService;->mStackSupervisor:Lcom/android/server/am/ActivityStackSupervisor;

    invoke-virtual {v1}, Lcom/android/server/am/ActivityStackSupervisor;->resumeFocusedStackTopActivityLocked()Z

    .line 7398
    iget-object v1, v0, Lcom/android/server/am/ActivityManagerService;->mStackSupervisor:Lcom/android/server/am/ActivityStackSupervisor;

    invoke-virtual {v1}, Lcom/android/server/am/ActivityStackSupervisor;->scheduleIdleLocked()V

    .line 7402
    :cond_9
    iget-object v1, v0, Lcom/android/server/am/ActivityManagerService;->mRecentTasks:Lcom/android/server/am/RecentTasks;

    invoke-virtual {v1, v8, v12, v9}, Lcom/android/server/am/RecentTasks;->cleanupDisabledPackageTasksLocked(Ljava/lang/String;Ljava/util/Set;I)V

    .line 7405
    iget-object v1, v0, Lcom/android/server/am/ActivityManagerService;->mServices:Lcom/android/server/am/ActiveServices;

    const/4 v5, 0x0

    const/4 v7, 0x1

    move-object v2, v8

    move-object v3, v12

    move v4, v9

    move/from16 v6, p3

    invoke-virtual/range {v1 .. v7}, Lcom/android/server/am/ActiveServices;->bringDownDisabledPackageServicesLocked(Ljava/lang/String;Ljava/util/Set;IZZZ)Z

    .line 7409
    new-instance v13, Ljava/util/ArrayList;

    invoke-direct {v13}, Ljava/util/ArrayList;-><init>()V

    .line 7410
    iget-object v1, v0, Lcom/android/server/am/ActivityManagerService;->mProviderMap:Lcom/android/server/am/ProviderMap;

    const/4 v4, 0x1

    move v6, v9

    move-object v7, v13

    invoke-virtual/range {v1 .. v7}, Lcom/android/server/am/ProviderMap;->collectPackageProvidersLocked(Ljava/lang/String;Ljava/util/Set;ZZILjava/util/ArrayList;)Z

    .line 7412
    invoke-virtual {v13}, Ljava/util/ArrayList;->size()I

    move-result v1

    sub-int/2addr v1, v10

    :goto_5
    if-ltz v1, :cond_a

    .line 7413
    invoke-virtual {v13, v1}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Lcom/android/server/am/ContentProviderRecord;

    invoke-direct {v0, v11, v2, v10}, Lcom/android/server/am/ActivityManagerService;->removeDyingProviderLocked(Lcom/android/server/am/ProcessRecord;Lcom/android/server/am/ContentProviderRecord;Z)Z

    .line 7412
    add-int/lit8 v1, v1, -0x1

    goto :goto_5

    .line 7417
    :cond_a
    iget-object v1, v0, Lcom/android/server/am/ActivityManagerService;->mBroadcastQueues:[Lcom/android/server/am/BroadcastQueue;

    array-length v1, v1

    sub-int/2addr v1, v10

    :goto_6
    if-ltz v1, :cond_b

    .line 7418
    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mBroadcastQueues:[Lcom/android/server/am/BroadcastQueue;

    aget-object v2, v2, v1

    invoke-virtual {v2, v8, v12, v9, v10}, Lcom/android/server/am/BroadcastQueue;->cleanupDisabledPackageReceiversLocked(Ljava/lang/String;Ljava/util/Set;IZ)Z

    .line 7417
    add-int/lit8 v1, v1, -0x1

    goto :goto_6

    .line 7422
    :cond_b
    return-void
.end method

.method private clearProfilerLocked()V
    .locals 1

    .line 26279
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mProfilerInfo:Landroid/app/ProfilerInfo;

    if-eqz v0, :cond_0

    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mProfilerInfo:Landroid/app/ProfilerInfo;

    iget-object v0, v0, Landroid/app/ProfilerInfo;->profileFd:Landroid/os/ParcelFileDescriptor;

    if-eqz v0, :cond_0

    .line 26281
    :try_start_0
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mProfilerInfo:Landroid/app/ProfilerInfo;

    iget-object v0, v0, Landroid/app/ProfilerInfo;->profileFd:Landroid/os/ParcelFileDescriptor;

    invoke-virtual {v0}, Landroid/os/ParcelFileDescriptor;->close()V
    :try_end_0
    .catch Ljava/io/IOException; {:try_start_0 .. :try_end_0} :catch_0

    .line 26283
    goto :goto_0

    .line 26282
    :catch_0
    move-exception v0

    .line 26285
    :cond_0
    :goto_0
    const/4 v0, 0x0

    iput-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mProfileApp:Ljava/lang/String;

    .line 26286
    iput-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mProfileProc:Lcom/android/server/am/ProcessRecord;

    .line 26287
    iput-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mProfilerInfo:Landroid/app/ProfilerInfo;

    .line 26288
    return-void
.end method

.method private collectReceiverComponents(Landroid/content/Intent;Ljava/lang/String;I[I)Ljava/util/List;
    .locals 18
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "(",
            "Landroid/content/Intent;",
            "Ljava/lang/String;",
            "I[I)",
            "Ljava/util/List<",
            "Landroid/content/pm/ResolveInfo;",
            ">;"
        }
    .end annotation

    .line 21351
    move-object/from16 v0, p4

    .line 21353
    nop

    .line 21355
    nop

    .line 21356
    nop

    .line 21357
    :try_start_0
    array-length v2, v0
    :try_end_0
    .catch Landroid/os/RemoteException; {:try_start_0 .. :try_end_0} :catch_1

    const/4 v4, 0x0

    const/4 v5, 0x0

    const/4 v6, 0x0

    const/4 v7, 0x0

    :goto_0
    if-ge v4, v2, :cond_f

    :try_start_1
    aget v8, v0, v4

    .line 21360
    const/16 v9, 0x7d0

    move/from16 v10, p3

    if-ne v10, v9, :cond_0

    move-object/from16 v9, p0

    iget-object v11, v9, Lcom/android/server/am/ActivityManagerService;->mUserController:Lcom/android/server/am/UserController;

    const-string v12, "no_debugging_features"

    .line 21361
    invoke-virtual {v11, v12, v8}, Lcom/android/server/am/UserController;->hasUserRestriction(Ljava/lang/String;I)Z

    move-result v11

    if-eqz v11, :cond_1

    .line 21363
    invoke-direct/range {p0 .. p1}, Lcom/android/server/am/ActivityManagerService;->isPermittedShellBroadcast(Landroid/content/Intent;)Z

    move-result v11

    if-nez v11, :cond_1

    .line 21364
    nop

    .line 21357
    move-object/from16 v13, p1

    move-object/from16 v14, p2

    goto/16 :goto_5

    .line 21366
    :cond_0
    move-object/from16 v9, p0

    :cond_1
    invoke-static {}, Landroid/app/AppGlobals;->getPackageManager()Landroid/content/pm/IPackageManager;

    move-result-object v11

    .line 21367
    const v12, 0x10000400

    move-object/from16 v13, p1

    move-object/from16 v14, p2

    invoke-interface {v11, v13, v14, v12, v8}, Landroid/content/pm/IPackageManager;->queryIntentReceivers(Landroid/content/Intent;Ljava/lang/String;II)Landroid/content/pm/ParceledListSlice;

    move-result-object v11

    invoke-virtual {v11}, Landroid/content/pm/ParceledListSlice;->getList()Ljava/util/List;

    move-result-object v11

    .line 21368
    const/4 v12, 0x1

    if-eqz v8, :cond_3

    if-eqz v11, :cond_3

    .line 21371
    const/4 v8, 0x0

    :goto_1
    invoke-interface {v11}, Ljava/util/List;->size()I

    move-result v15

    if-ge v8, v15, :cond_3

    .line 21372
    invoke-interface {v11, v8}, Ljava/util/List;->get(I)Ljava/lang/Object;

    move-result-object v15

    check-cast v15, Landroid/content/pm/ResolveInfo;

    .line 21373
    iget-object v15, v15, Landroid/content/pm/ResolveInfo;->activityInfo:Landroid/content/pm/ActivityInfo;

    iget v15, v15, Landroid/content/pm/ActivityInfo;->flags:I

    const/high16 v16, 0x20000000

    and-int v15, v15, v16

    if-eqz v15, :cond_2

    .line 21374
    invoke-interface {v11, v8}, Ljava/util/List;->remove(I)Ljava/lang/Object;

    .line 21375
    add-int/lit8 v8, v8, -0x1

    .line 21371
    :cond_2
    add-int/2addr v8, v12

    goto :goto_1

    .line 21379
    :cond_3
    if-eqz v11, :cond_4

    invoke-interface {v11}, Ljava/util/List;->size()I

    move-result v8

    if-nez v8, :cond_4

    .line 21380
    nop

    .line 21382
    const/4 v11, 0x0

    :cond_4
    if-nez v5, :cond_5

    .line 21383
    nop

    .line 21357
    move-object v5, v11

    goto/16 :goto_5

    .line 21384
    :cond_5
    if-eqz v11, :cond_e

    .line 21389
    const/high16 v8, 0x40000000    # 2.0f

    if-nez v6, :cond_8

    .line 21391
    nop

    .line 21392
    const/4 v6, 0x0

    :goto_2
    invoke-interface {v5}, Ljava/util/List;->size()I

    move-result v15

    if-ge v6, v15, :cond_9

    .line 21393
    invoke-interface {v5, v6}, Ljava/util/List;->get(I)Ljava/lang/Object;

    move-result-object v15

    check-cast v15, Landroid/content/pm/ResolveInfo;

    .line 21394
    iget-object v1, v15, Landroid/content/pm/ResolveInfo;->activityInfo:Landroid/content/pm/ActivityInfo;

    iget v1, v1, Landroid/content/pm/ActivityInfo;->flags:I

    and-int/2addr v1, v8

    if-eqz v1, :cond_7

    .line 21395
    new-instance v1, Landroid/content/ComponentName;

    iget-object v3, v15, Landroid/content/pm/ResolveInfo;->activityInfo:Landroid/content/pm/ActivityInfo;

    iget-object v3, v3, Landroid/content/pm/ActivityInfo;->packageName:Ljava/lang/String;

    iget-object v15, v15, Landroid/content/pm/ResolveInfo;->activityInfo:Landroid/content/pm/ActivityInfo;

    iget-object v15, v15, Landroid/content/pm/ActivityInfo;->name:Ljava/lang/String;

    invoke-direct {v1, v3, v15}, Landroid/content/ComponentName;-><init>(Ljava/lang/String;Ljava/lang/String;)V

    .line 21397
    if-nez v7, :cond_6

    .line 21398
    new-instance v3, Ljava/util/HashSet;

    invoke-direct {v3}, Ljava/util/HashSet;-><init>()V

    .line 21400
    move-object v7, v3

    :cond_6
    invoke-virtual {v7, v1}, Ljava/util/HashSet;->add(Ljava/lang/Object;)Z

    .line 21392
    :cond_7
    add-int/lit8 v6, v6, 0x1

    goto :goto_2

    .line 21406
    :cond_8
    move v12, v6

    :cond_9
    const/4 v1, 0x0

    :goto_3
    invoke-interface {v11}, Ljava/util/List;->size()I

    move-result v3

    if-ge v1, v3, :cond_d

    .line 21407
    invoke-interface {v11, v1}, Ljava/util/List;->get(I)Ljava/lang/Object;

    move-result-object v3

    check-cast v3, Landroid/content/pm/ResolveInfo;

    .line 21408
    iget-object v6, v3, Landroid/content/pm/ResolveInfo;->activityInfo:Landroid/content/pm/ActivityInfo;

    iget v6, v6, Landroid/content/pm/ActivityInfo;->flags:I

    and-int/2addr v6, v8

    if-eqz v6, :cond_c

    .line 21409
    new-instance v6, Landroid/content/ComponentName;

    iget-object v15, v3, Landroid/content/pm/ResolveInfo;->activityInfo:Landroid/content/pm/ActivityInfo;

    iget-object v15, v15, Landroid/content/pm/ActivityInfo;->packageName:Ljava/lang/String;

    iget-object v8, v3, Landroid/content/pm/ResolveInfo;->activityInfo:Landroid/content/pm/ActivityInfo;

    iget-object v8, v8, Landroid/content/pm/ActivityInfo;->name:Ljava/lang/String;

    invoke-direct {v6, v15, v8}, Landroid/content/ComponentName;-><init>(Ljava/lang/String;Ljava/lang/String;)V

    .line 21411
    if-nez v7, :cond_a

    .line 21412
    new-instance v7, Ljava/util/HashSet;

    invoke-direct {v7}, Ljava/util/HashSet;-><init>()V

    .line 21414
    :cond_a
    invoke-virtual {v7, v6}, Ljava/util/HashSet;->contains(Ljava/lang/Object;)Z

    move-result v8

    if-nez v8, :cond_b

    .line 21415
    invoke-virtual {v7, v6}, Ljava/util/HashSet;->add(Ljava/lang/Object;)Z

    .line 21416
    invoke-interface {v5, v3}, Ljava/util/List;->add(Ljava/lang/Object;)Z

    .line 21418
    :cond_b
    goto :goto_4

    .line 21419
    :cond_c
    invoke-interface {v5, v3}, Ljava/util/List;->add(Ljava/lang/Object;)Z
    :try_end_1
    .catch Landroid/os/RemoteException; {:try_start_1 .. :try_end_1} :catch_0

    .line 21406
    :goto_4
    add-int/lit8 v1, v1, 0x1

    const/high16 v8, 0x40000000    # 2.0f

    goto :goto_3

    .line 21357
    :cond_d
    move v6, v12

    :cond_e
    :goto_5
    add-int/lit8 v4, v4, 0x1

    goto/16 :goto_0

    .line 21424
    :catch_0
    move-exception v0

    goto :goto_6

    .line 21426
    :cond_f
    goto :goto_6

    .line 21424
    :catch_1
    move-exception v0

    const/4 v5, 0x0

    .line 21427
    :goto_6
    return-object v5
.end method

.method private final computeOomAdjLocked(Lcom/android/server/am/ProcessRecord;ILcom/android/server/am/ProcessRecord;ZJ)Z
    .locals 41

    move-object/from16 v7, p0

    move-object/from16 v8, p1

    move-object/from16 v9, p3

    .line 23347
    iget v0, v7, Lcom/android/server/am/ActivityManagerService;->mAdjSeq:I

    iget v1, v8, Lcom/android/server/am/ProcessRecord;->adjSeq:I

    const/4 v10, 0x1

    const/4 v11, 0x0

    if-ne v0, v1, :cond_1

    .line 23348
    iget v0, v8, Lcom/android/server/am/ProcessRecord;->adjSeq:I

    iget v1, v8, Lcom/android/server/am/ProcessRecord;->completedAdjSeq:I

    if-ne v0, v1, :cond_0

    .line 23350
    return v11

    .line 23354
    :cond_0
    iput-boolean v10, v8, Lcom/android/server/am/ProcessRecord;->containsCycle:Z

    .line 23356
    return v11

    .line 23360
    :cond_1
    iget-object v0, v8, Lcom/android/server/am/ProcessRecord;->thread:Landroid/app/IApplicationThread;

    const/16 v12, 0x12

    if-nez v0, :cond_2

    .line 23361
    iget v0, v7, Lcom/android/server/am/ActivityManagerService;->mAdjSeq:I

    iput v0, v8, Lcom/android/server/am/ProcessRecord;->adjSeq:I

    .line 23362
    iput v11, v8, Lcom/android/server/am/ProcessRecord;->curSchedGroup:I

    .line 23363
    iput v12, v8, Lcom/android/server/am/ProcessRecord;->curProcState:I

    .line 23364
    const/16 v0, 0x38a

    iput v0, v8, Lcom/android/server/am/ProcessRecord;->curRawAdj:I

    iput v0, v8, Lcom/android/server/am/ProcessRecord;->curAdj:I

    .line 23365
    iget v0, v8, Lcom/android/server/am/ProcessRecord;->adjSeq:I

    iput v0, v8, Lcom/android/server/am/ProcessRecord;->completedAdjSeq:I

    .line 23366
    return v11

    .line 23369
    :cond_2
    iput v11, v8, Lcom/android/server/am/ProcessRecord;->adjTypeCode:I

    .line 23370
    const/4 v13, 0x0

    iput-object v13, v8, Lcom/android/server/am/ProcessRecord;->adjSource:Ljava/lang/Object;

    .line 23371
    iput-object v13, v8, Lcom/android/server/am/ProcessRecord;->adjTarget:Ljava/lang/Object;

    .line 23372
    iput-boolean v11, v8, Lcom/android/server/am/ProcessRecord;->empty:Z

    .line 23373
    iput-boolean v11, v8, Lcom/android/server/am/ProcessRecord;->cached:Z

    .line 23375
    iget-object v0, v8, Lcom/android/server/am/ProcessRecord;->activities:Ljava/util/ArrayList;

    invoke-virtual {v0}, Ljava/util/ArrayList;->size()I

    move-result v0

    .line 23376
    iget-object v1, v8, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget v5, v1, Landroid/content/pm/ApplicationInfo;->uid:I

    .line 23377
    iget v6, v7, Lcom/android/server/am/ActivityManagerService;->mCurOomAdjUid:I

    .line 23379
    iget v4, v8, Lcom/android/server/am/ProcessRecord;->curAdj:I

    .line 23380
    iget v3, v8, Lcom/android/server/am/ProcessRecord;->curProcState:I

    .line 23382
    iget v1, v8, Lcom/android/server/am/ProcessRecord;->maxAdj:I

    const/4 v2, 0x4

    const/4 v13, 0x3

    const/4 v12, 0x2

    if-gtz v1, :cond_b

    .line 23385
    if-ne v6, v5, :cond_3

    .line 23386
    const-string v1, "ActivityManager"

    new-instance v3, Ljava/lang/StringBuilder;

    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V

    const-string v5, "Making fixed: "

    invoke-virtual {v3, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v3, v8}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v3

    invoke-virtual {v7, v1, v3}, Lcom/android/server/am/ActivityManagerService;->reportOomAdjMessageLocked(Ljava/lang/String;Ljava/lang/String;)V

    .line 23388
    :cond_3
    const-string v1, "fixed"

    iput-object v1, v8, Lcom/android/server/am/ProcessRecord;->adjType:Ljava/lang/String;

    .line 23389
    iget v1, v7, Lcom/android/server/am/ActivityManagerService;->mAdjSeq:I

    iput v1, v8, Lcom/android/server/am/ProcessRecord;->adjSeq:I

    .line 23390
    iget v1, v8, Lcom/android/server/am/ProcessRecord;->maxAdj:I

    iput v1, v8, Lcom/android/server/am/ProcessRecord;->curRawAdj:I

    .line 23391
    iput-boolean v11, v8, Lcom/android/server/am/ProcessRecord;->foregroundActivities:Z

    .line 23392
    iput v12, v8, Lcom/android/server/am/ProcessRecord;->curSchedGroup:I

    .line 23393
    iput v11, v8, Lcom/android/server/am/ProcessRecord;->curProcState:I

    .line 23398
    iput-boolean v10, v8, Lcom/android/server/am/ProcessRecord;->systemNoUi:Z

    .line 23399
    if-ne v8, v9, :cond_4

    .line 23400
    iput-boolean v11, v8, Lcom/android/server/am/ProcessRecord;->systemNoUi:Z

    .line 23401
    iput v13, v8, Lcom/android/server/am/ProcessRecord;->curSchedGroup:I

    .line 23402
    const-string/jumbo v0, "pers-top-activity"

    iput-object v0, v8, Lcom/android/server/am/ProcessRecord;->adjType:Ljava/lang/String;

    goto :goto_1

    .line 23403
    :cond_4
    iget-boolean v1, v8, Lcom/android/server/am/ProcessRecord;->hasTopUi:Z

    if-eqz v1, :cond_5

    .line 23405
    iput-boolean v11, v8, Lcom/android/server/am/ProcessRecord;->systemNoUi:Z

    .line 23406
    const-string/jumbo v0, "pers-top-ui"

    iput-object v0, v8, Lcom/android/server/am/ProcessRecord;->adjType:Ljava/lang/String;

    goto :goto_1

    .line 23407
    :cond_5
    if-lez v0, :cond_7

    .line 23408
    move v1, v11

    :goto_0
    if-ge v1, v0, :cond_7

    .line 23409
    iget-object v3, v8, Lcom/android/server/am/ProcessRecord;->activities:Ljava/util/ArrayList;

    invoke-virtual {v3, v1}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v3

    check-cast v3, Lcom/android/server/am/ActivityRecord;

    .line 23410
    iget-boolean v3, v3, Lcom/android/server/am/ActivityRecord;->visible:Z

    if-eqz v3, :cond_6

    .line 23411
    iput-boolean v11, v8, Lcom/android/server/am/ProcessRecord;->systemNoUi:Z

    .line 23408
    :cond_6
    add-int/lit8 v1, v1, 0x1

    goto :goto_0

    .line 23415
    :cond_7
    :goto_1
    iget-boolean v0, v8, Lcom/android/server/am/ProcessRecord;->systemNoUi:Z

    if-nez v0, :cond_9

    .line 23416
    iget v0, v7, Lcom/android/server/am/ActivityManagerService;->mWakefulness:I

    if-ne v0, v10, :cond_8

    .line 23418
    iput v10, v8, Lcom/android/server/am/ProcessRecord;->curProcState:I

    .line 23419
    iput v13, v8, Lcom/android/server/am/ProcessRecord;->curSchedGroup:I

    goto :goto_2

    .line 23422
    :cond_8
    iput v2, v8, Lcom/android/server/am/ProcessRecord;->curProcState:I

    .line 23423
    iput v10, v8, Lcom/android/server/am/ProcessRecord;->curSchedGroup:I

    .line 23426
    :cond_9
    :goto_2
    iget v0, v8, Lcom/android/server/am/ProcessRecord;->maxAdj:I

    iput v0, v8, Lcom/android/server/am/ProcessRecord;->curAdj:I

    .line 23427
    iget v0, v8, Lcom/android/server/am/ProcessRecord;->adjSeq:I

    iput v0, v8, Lcom/android/server/am/ProcessRecord;->completedAdjSeq:I

    .line 23429
    iget v0, v8, Lcom/android/server/am/ProcessRecord;->curAdj:I

    if-ge v0, v4, :cond_a

    goto :goto_3

    :cond_a
    move v10, v11

    :goto_3
    return v10

    .line 23432
    :cond_b
    iput-boolean v11, v8, Lcom/android/server/am/ProcessRecord;->systemNoUi:Z

    .line 23434
    iget v1, v7, Lcom/android/server/am/ActivityManagerService;->mTopProcessState:I

    .line 23443
    nop

    .line 23444
    iget-object v2, v7, Lcom/android/server/am/ActivityManagerService;->mTmpBroadcastQueue:Landroid/util/ArraySet;

    invoke-virtual {v2}, Landroid/util/ArraySet;->clear()V

    .line 23445
    if-ne v1, v12, :cond_d

    if-ne v8, v9, :cond_d

    .line 23447
    nop

    .line 23448
    nop

    .line 23449
    const-string/jumbo v13, "top-activity"

    iput-object v13, v8, Lcom/android/server/am/ProcessRecord;->adjType:Ljava/lang/String;

    .line 23450
    nop

    .line 23451
    nop

    .line 23452
    if-ne v6, v5, :cond_c

    .line 23453
    const-string v13, "ActivityManager"

    new-instance v11, Ljava/lang/StringBuilder;

    invoke-direct {v11}, Ljava/lang/StringBuilder;-><init>()V

    const-string v12, "Making top: "

    invoke-virtual {v11, v12}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v11, v8}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    invoke-virtual {v11}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v11

    invoke-virtual {v7, v13, v11}, Lcom/android/server/am/ActivityManagerService;->reportOomAdjMessageLocked(Ljava/lang/String;Ljava/lang/String;)V

    .line 23522
    :cond_c
    move/from16 v18, v1

    move v2, v10

    const/4 v11, 0x0

    :goto_4
    const/4 v12, 0x3

    goto/16 :goto_7

    .line 23455
    :cond_d
    iget-boolean v11, v8, Lcom/android/server/am/ProcessRecord;->runningRemoteAnimation:Z

    if-eqz v11, :cond_f

    .line 23456
    nop

    .line 23457
    nop

    .line 23458
    const-string/jumbo v11, "running-remote-anim"

    iput-object v11, v8, Lcom/android/server/am/ProcessRecord;->adjType:Ljava/lang/String;

    .line 23459
    nop

    .line 23460
    if-ne v6, v5, :cond_e

    .line 23461
    const-string v11, "ActivityManager"

    new-instance v12, Ljava/lang/StringBuilder;

    invoke-direct {v12}, Ljava/lang/StringBuilder;-><init>()V

    const-string v13, "Making running remote anim: "

    invoke-virtual {v12, v13}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v12, v8}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    invoke-virtual {v12}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v12

    invoke-virtual {v7, v11, v12}, Lcom/android/server/am/ActivityManagerService;->reportOomAdjMessageLocked(Ljava/lang/String;Ljava/lang/String;)V

    .line 23522
    :cond_e
    move/from16 v18, v1

    const/4 v2, 0x0

    const/16 v11, 0x64

    goto :goto_4

    .line 23463
    :cond_f
    iget-object v11, v8, Lcom/android/server/am/ProcessRecord;->instr:Lcom/android/server/am/ActiveInstrumentation;

    if-eqz v11, :cond_11

    .line 23465
    nop

    .line 23466
    nop

    .line 23467
    const-string v11, "instrumentation"

    iput-object v11, v8, Lcom/android/server/am/ProcessRecord;->adjType:Ljava/lang/String;

    .line 23468
    nop

    .line 23469
    if-ne v6, v5, :cond_10

    .line 23470
    const-string v11, "ActivityManager"

    new-instance v12, Ljava/lang/StringBuilder;

    invoke-direct {v12}, Ljava/lang/StringBuilder;-><init>()V

    const-string v13, "Making instrumentation: "

    invoke-virtual {v12, v13}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v12, v8}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    invoke-virtual {v12}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v12

    invoke-virtual {v7, v11, v12}, Lcom/android/server/am/ActivityManagerService;->reportOomAdjMessageLocked(Ljava/lang/String;Ljava/lang/String;)V

    .line 23522
    :cond_10
    const/4 v2, 0x0

    const/4 v11, 0x0

    const/4 v12, 0x2

    const/16 v18, 0x3

    goto/16 :goto_7

    .line 23472
    :cond_11
    iget-object v11, v7, Lcom/android/server/am/ActivityManagerService;->mTmpBroadcastQueue:Landroid/util/ArraySet;

    invoke-direct {v7, v8, v11}, Lcom/android/server/am/ActivityManagerService;->isReceivingBroadcastLocked(Lcom/android/server/am/ProcessRecord;Landroid/util/ArraySet;)Z

    move-result v11

    if-eqz v11, :cond_14

    .line 23477
    nop

    .line 23478
    iget-object v11, v7, Lcom/android/server/am/ActivityManagerService;->mTmpBroadcastQueue:Landroid/util/ArraySet;

    iget-object v12, v7, Lcom/android/server/am/ActivityManagerService;->mFgBroadcastQueue:Lcom/android/server/am/BroadcastQueue;

    invoke-virtual {v11, v12}, Landroid/util/ArraySet;->contains(Ljava/lang/Object;)Z

    move-result v11

    if-eqz v11, :cond_12

    .line 23479
    nop

    .line 23480
    const/4 v11, 0x2

    goto :goto_5

    .line 23479
    :cond_12
    nop

    .line 23480
    const/4 v11, 0x0

    :goto_5
    const-string v12, "broadcast"

    iput-object v12, v8, Lcom/android/server/am/ProcessRecord;->adjType:Ljava/lang/String;

    .line 23481
    nop

    .line 23482
    if-ne v6, v5, :cond_13

    .line 23483
    const-string v13, "ActivityManager"

    new-instance v12, Ljava/lang/StringBuilder;

    invoke-direct {v12}, Ljava/lang/StringBuilder;-><init>()V

    const-string v2, "Making broadcast: "

    invoke-virtual {v12, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v12, v8}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    invoke-virtual {v12}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v2

    invoke-virtual {v7, v13, v2}, Lcom/android/server/am/ActivityManagerService;->reportOomAdjMessageLocked(Ljava/lang/String;Ljava/lang/String;)V

    .line 23522
    :cond_13
    move v12, v11

    const/4 v2, 0x0

    const/4 v11, 0x0

    const/16 v18, 0xa

    goto/16 :goto_7

    .line 23485
    :cond_14
    iget-object v2, v8, Lcom/android/server/am/ProcessRecord;->executingServices:Landroid/util/ArraySet;

    invoke-virtual {v2}, Landroid/util/ArraySet;->size()I

    move-result v2

    if-lez v2, :cond_17

    .line 23488
    nop

    .line 23489
    iget-boolean v2, v8, Lcom/android/server/am/ProcessRecord;->execServicesFg:Z

    if-eqz v2, :cond_15

    .line 23490
    nop

    .line 23491
    const/4 v11, 0x2

    goto :goto_6

    .line 23490
    :cond_15
    nop

    .line 23491
    const/4 v11, 0x0

    :goto_6
    const-string v2, "exec-service"

    iput-object v2, v8, Lcom/android/server/am/ProcessRecord;->adjType:Ljava/lang/String;

    .line 23492
    nop

    .line 23493
    if-ne v6, v5, :cond_16

    .line 23494
    const-string v2, "ActivityManager"

    new-instance v13, Ljava/lang/StringBuilder;

    invoke-direct {v13}, Ljava/lang/StringBuilder;-><init>()V

    const-string v12, "Making exec-service: "

    invoke-virtual {v13, v12}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v13, v8}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    invoke-virtual {v13}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v12

    invoke-virtual {v7, v2, v12}, Lcom/android/server/am/ActivityManagerService;->reportOomAdjMessageLocked(Ljava/lang/String;Ljava/lang/String;)V

    .line 23522
    :cond_16
    move v12, v11

    const/4 v2, 0x0

    const/4 v11, 0x0

    const/16 v18, 0x9

    goto :goto_7

    .line 23497
    :cond_17
    if-ne v8, v9, :cond_19

    .line 23498
    nop

    .line 23499
    nop

    .line 23500
    const-string/jumbo v2, "top-sleeping"

    iput-object v2, v8, Lcom/android/server/am/ProcessRecord;->adjType:Ljava/lang/String;

    .line 23501
    nop

    .line 23502
    nop

    .line 23503
    if-ne v6, v5, :cond_18

    .line 23504
    const-string v2, "ActivityManager"

    new-instance v11, Ljava/lang/StringBuilder;

    invoke-direct {v11}, Ljava/lang/StringBuilder;-><init>()V

    const-string v12, "Making top (sleeping): "

    invoke-virtual {v11, v12}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v11, v8}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    invoke-virtual {v11}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v11

    invoke-virtual {v7, v2, v11}, Lcom/android/server/am/ActivityManagerService;->reportOomAdjMessageLocked(Ljava/lang/String;Ljava/lang/String;)V

    .line 23522
    :cond_18
    move/from16 v18, v1

    move v2, v10

    const/4 v11, 0x0

    const/4 v12, 0x0

    goto :goto_7

    .line 23508
    :cond_19
    nop

    .line 23511
    nop

    .line 23512
    nop

    .line 23513
    iput-boolean v10, v8, Lcom/android/server/am/ProcessRecord;->cached:Z

    .line 23514
    iput-boolean v10, v8, Lcom/android/server/am/ProcessRecord;->empty:Z

    .line 23515
    const-string v2, "cch-empty"

    iput-object v2, v8, Lcom/android/server/am/ProcessRecord;->adjType:Ljava/lang/String;

    .line 23516
    if-ne v6, v5, :cond_1a

    .line 23517
    const-string v2, "ActivityManager"

    new-instance v11, Ljava/lang/StringBuilder;

    invoke-direct {v11}, Ljava/lang/StringBuilder;-><init>()V

    const-string v12, "Making empty: "

    invoke-virtual {v11, v12}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v11, v8}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    invoke-virtual {v11}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v11

    invoke-virtual {v7, v2, v11}, Lcom/android/server/am/ActivityManagerService;->reportOomAdjMessageLocked(Ljava/lang/String;Ljava/lang/String;)V

    .line 23522
    :cond_1a
    move/from16 v11, p2

    const/4 v2, 0x0

    const/4 v12, 0x0

    const/16 v18, 0x12

    :goto_7
    if-nez v2, :cond_36

    if-lez v0, :cond_36

    .line 23523
    nop

    .line 23524
    move/from16 v16, v2

    move v13, v12

    move/from16 v12, v18

    const/4 v2, 0x0

    :goto_8
    if-ge v2, v0, :cond_34

    .line 23525
    iget-object v10, v8, Lcom/android/server/am/ProcessRecord;->activities:Ljava/util/ArrayList;

    invoke-virtual {v10, v2}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v10

    check-cast v10, Lcom/android/server/am/ActivityRecord;

    .line 23526
    move/from16 v20, v0

    iget-object v0, v10, Lcom/android/server/am/ActivityRecord;->app:Lcom/android/server/am/ProcessRecord;

    if-eq v0, v8, :cond_1d

    .line 23527
    const-string v0, "ActivityManager"

    move/from16 v21, v3

    new-instance v3, Ljava/lang/StringBuilder;

    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V

    move/from16 v22, v4

    const-string v4, "Found activity "

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v3, v10}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    const-string v4, " in proc activity list using "

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget-object v4, v10, Lcom/android/server/am/ActivityRecord;->app:Lcom/android/server/am/ProcessRecord;

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    const-string v4, " instead of expected "

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v3, v8}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v3

    invoke-static {v0, v3}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;)I

    .line 23529
    iget-object v0, v10, Lcom/android/server/am/ActivityRecord;->app:Lcom/android/server/am/ProcessRecord;

    if-eqz v0, :cond_1c

    iget-object v0, v10, Lcom/android/server/am/ActivityRecord;->app:Lcom/android/server/am/ProcessRecord;

    iget v0, v0, Lcom/android/server/am/ProcessRecord;->uid:I

    iget v3, v8, Lcom/android/server/am/ProcessRecord;->uid:I

    if-ne v0, v3, :cond_1b

    goto :goto_9

    .line 23524
    :cond_1b
    const/16 v3, 0x63

    goto/16 :goto_e

    .line 23531
    :cond_1c
    :goto_9
    invoke-virtual {v10, v8}, Lcom/android/server/am/ActivityRecord;->setProcess(Lcom/android/server/am/ProcessRecord;)V

    goto :goto_a

    .line 23536
    :cond_1d
    move/from16 v21, v3

    move/from16 v22, v4

    :goto_a
    iget-boolean v0, v10, Lcom/android/server/am/ActivityRecord;->visible:Z

    if-eqz v0, :cond_26

    .line 23538
    const/16 v0, 0x64

    if-le v11, v0, :cond_1f

    .line 23539
    nop

    .line 23540
    const-string/jumbo v0, "vis-activity"

    iput-object v0, v8, Lcom/android/server/am/ProcessRecord;->adjType:Ljava/lang/String;

    .line 23541
    if-ne v6, v5, :cond_1e

    .line 23542
    const-string v0, "ActivityManager"

    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    const-string v3, "Raise adj to vis-activity: "

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v2, v8}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v2

    invoke-virtual {v7, v0, v2}, Lcom/android/server/am/ActivityManagerService;->reportOomAdjMessageLocked(Ljava/lang/String;Ljava/lang/String;)V

    .line 23546
    :cond_1e
    const/16 v11, 0x64

    :cond_1f
    if-le v12, v1, :cond_21

    .line 23547
    nop

    .line 23548
    const-string/jumbo v0, "vis-activity"

    iput-object v0, v8, Lcom/android/server/am/ProcessRecord;->adjType:Ljava/lang/String;

    .line 23549
    if-ne v6, v5, :cond_20

    .line 23550
    const-string v0, "ActivityManager"

    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    const-string v3, "Raise procstate to vis-activity (top): "

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v2, v8}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v2

    invoke-virtual {v7, v0, v2}, Lcom/android/server/am/ActivityManagerService;->reportOomAdjMessageLocked(Ljava/lang/String;Ljava/lang/String;)V

    .line 23554
    :cond_20
    move v12, v1

    :cond_21
    const/4 v0, 0x2

    if-ge v13, v0, :cond_22

    .line 23555
    nop

    .line 23557
    const/4 v13, 0x2

    :cond_22
    const/4 v0, 0x0

    iput-boolean v0, v8, Lcom/android/server/am/ProcessRecord;->cached:Z

    .line 23558
    iput-boolean v0, v8, Lcom/android/server/am/ProcessRecord;->empty:Z

    .line 23559
    nop

    .line 23560
    invoke-virtual {v10}, Lcom/android/server/am/ActivityRecord;->getTask()Lcom/android/server/am/TaskRecord;

    move-result-object v0

    .line 23561
    if-eqz v0, :cond_25

    .line 23562
    iget v0, v0, Lcom/android/server/am/TaskRecord;->mLayerRank:I

    .line 23563
    if-ltz v0, :cond_23

    const/16 v3, 0x63

    if-le v3, v0, :cond_24

    .line 23564
    nop

    .line 23566
    move v10, v0

    goto :goto_b

    :cond_23
    const/16 v3, 0x63

    :cond_24
    move v10, v3

    .line 23631
    :goto_b
    move v3, v10

    goto :goto_c

    :cond_25
    const/16 v3, 0x63

    :goto_c
    move/from16 v18, v12

    const/4 v2, 0x1

    goto/16 :goto_f

    .line 23568
    :cond_26
    const/16 v3, 0x63

    sget-object v0, Lcom/android/server/am/ActivityStack$ActivityState;->PAUSING:Lcom/android/server/am/ActivityStack$ActivityState;

    sget-object v4, Lcom/android/server/am/ActivityStack$ActivityState;->PAUSED:Lcom/android/server/am/ActivityStack$ActivityState;

    invoke-virtual {v10, v0, v4}, Lcom/android/server/am/ActivityRecord;->isState(Lcom/android/server/am/ActivityStack$ActivityState;Lcom/android/server/am/ActivityStack$ActivityState;)Z

    move-result v0

    if-eqz v0, :cond_2c

    .line 23569
    const/16 v0, 0xc8

    if-le v11, v0, :cond_28

    .line 23570
    nop

    .line 23571
    const-string/jumbo v0, "pause-activity"

    iput-object v0, v8, Lcom/android/server/am/ProcessRecord;->adjType:Ljava/lang/String;

    .line 23572
    if-ne v6, v5, :cond_27

    .line 23573
    const-string v0, "ActivityManager"

    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    const-string v10, "Raise adj to pause-activity: "

    invoke-virtual {v4, v10}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v4, v8}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v4

    invoke-virtual {v7, v0, v4}, Lcom/android/server/am/ActivityManagerService;->reportOomAdjMessageLocked(Ljava/lang/String;Ljava/lang/String;)V

    .line 23577
    :cond_27
    const/16 v11, 0xc8

    :cond_28
    if-le v12, v1, :cond_2a

    .line 23578
    nop

    .line 23579
    const-string/jumbo v0, "pause-activity"

    iput-object v0, v8, Lcom/android/server/am/ProcessRecord;->adjType:Ljava/lang/String;

    .line 23580
    if-ne v6, v5, :cond_29

    .line 23581
    const-string v0, "ActivityManager"

    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    const-string v10, "Raise procstate to pause-activity (top): "

    invoke-virtual {v4, v10}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v4, v8}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v4

    invoke-virtual {v7, v0, v4}, Lcom/android/server/am/ActivityManagerService;->reportOomAdjMessageLocked(Ljava/lang/String;Ljava/lang/String;)V

    .line 23585
    :cond_29
    move v12, v1

    :cond_2a
    const/4 v0, 0x2

    if-ge v13, v0, :cond_2b

    .line 23586
    nop

    .line 23588
    const/4 v13, 0x2

    :cond_2b
    const/4 v0, 0x0

    iput-boolean v0, v8, Lcom/android/server/am/ProcessRecord;->cached:Z

    .line 23589
    iput-boolean v0, v8, Lcom/android/server/am/ProcessRecord;->empty:Z

    .line 23590
    nop

    .line 23524
    :goto_d
    const/16 v16, 0x1

    goto/16 :goto_e

    .line 23591
    :cond_2c
    sget-object v0, Lcom/android/server/am/ActivityStack$ActivityState;->STOPPING:Lcom/android/server/am/ActivityStack$ActivityState;

    invoke-virtual {v10, v0}, Lcom/android/server/am/ActivityRecord;->isState(Lcom/android/server/am/ActivityStack$ActivityState;)Z

    move-result v0

    if-eqz v0, :cond_31

    .line 23592
    const/16 v0, 0xc8

    if-le v11, v0, :cond_2e

    .line 23593
    nop

    .line 23594
    const-string/jumbo v0, "stop-activity"

    iput-object v0, v8, Lcom/android/server/am/ProcessRecord;->adjType:Ljava/lang/String;

    .line 23595
    if-ne v6, v5, :cond_2d

    .line 23596
    const-string v0, "ActivityManager"

    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    const-string v11, "Raise adj to stop-activity: "

    invoke-virtual {v4, v11}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v4, v8}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v4

    invoke-virtual {v7, v0, v4}, Lcom/android/server/am/ActivityManagerService;->reportOomAdjMessageLocked(Ljava/lang/String;Ljava/lang/String;)V

    .line 23607
    :cond_2d
    const/16 v11, 0xc8

    :cond_2e
    iget-boolean v0, v10, Lcom/android/server/am/ActivityRecord;->finishing:Z

    if-nez v0, :cond_30

    .line 23608
    const/16 v0, 0xe

    if-le v12, v0, :cond_30

    .line 23609
    nop

    .line 23610
    const-string/jumbo v0, "stop-activity"

    iput-object v0, v8, Lcom/android/server/am/ProcessRecord;->adjType:Ljava/lang/String;

    .line 23611
    if-ne v6, v5, :cond_2f

    .line 23612
    const-string v0, "ActivityManager"

    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    const-string v10, "Raise procstate to stop-activity: "

    invoke-virtual {v4, v10}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v4, v8}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v4

    invoke-virtual {v7, v0, v4}, Lcom/android/server/am/ActivityManagerService;->reportOomAdjMessageLocked(Ljava/lang/String;Ljava/lang/String;)V

    .line 23617
    :cond_2f
    const/16 v12, 0xe

    :cond_30
    const/4 v0, 0x0

    iput-boolean v0, v8, Lcom/android/server/am/ProcessRecord;->cached:Z

    .line 23618
    iput-boolean v0, v8, Lcom/android/server/am/ProcessRecord;->empty:Z

    .line 23619
    goto :goto_d

    .line 23621
    :cond_31
    const/16 v0, 0xf

    if-le v12, v0, :cond_33

    .line 23622
    nop

    .line 23623
    const-string v0, "cch-act"

    iput-object v0, v8, Lcom/android/server/am/ProcessRecord;->adjType:Ljava/lang/String;

    .line 23624
    if-ne v6, v5, :cond_32

    .line 23625
    const-string v0, "ActivityManager"

    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    const-string v10, "Raise procstate to cached activity: "

    invoke-virtual {v4, v10}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v4, v8}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v4

    invoke-virtual {v7, v0, v4}, Lcom/android/server/am/ActivityManagerService;->reportOomAdjMessageLocked(Ljava/lang/String;Ljava/lang/String;)V

    .line 23524
    :cond_32
    const/16 v12, 0xf

    :cond_33
    :goto_e
    add-int/lit8 v2, v2, 0x1

    move/from16 v0, v20

    move/from16 v3, v21

    move/from16 v4, v22

    goto/16 :goto_8

    .line 23631
    :cond_34
    move/from16 v21, v3

    move/from16 v22, v4

    const/16 v3, 0x63

    move/from16 v18, v12

    move/from16 v2, v16

    :goto_f
    const/16 v4, 0x64

    if-ne v11, v4, :cond_35

    .line 23632
    add-int/2addr v11, v3

    .line 23635
    :cond_35
    move v10, v2

    move v12, v13

    move/from16 v0, v18

    move v13, v11

    goto :goto_10

    :cond_36
    move/from16 v21, v3

    move/from16 v22, v4

    const/16 v4, 0x64

    move v10, v2

    move v13, v11

    move/from16 v0, v18

    :goto_10
    const/16 v1, 0x11

    if-le v0, v1, :cond_37

    iget-object v1, v8, Lcom/android/server/am/ProcessRecord;->recentTasks:Ljava/util/ArrayList;

    invoke-virtual {v1}, Ljava/util/ArrayList;->size()I

    move-result v1

    if-lez v1, :cond_37

    .line 23636
    const/16 v0, 0x11

    .line 23637
    const-string v1, "cch-rec"

    iput-object v1, v8, Lcom/android/server/am/ProcessRecord;->adjType:Ljava/lang/String;

    .line 23638
    if-ne v6, v5, :cond_37

    .line 23639
    const-string v1, "ActivityManager"

    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    const-string v3, "Raise procstate to cached recent: "

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v2, v8}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v2

    invoke-virtual {v7, v1, v2}, Lcom/android/server/am/ActivityManagerService;->reportOomAdjMessageLocked(Ljava/lang/String;Ljava/lang/String;)V

    .line 23643
    :cond_37
    const/16 v1, 0xc8

    if-gt v13, v1, :cond_38

    const/4 v1, 0x3

    if-le v0, v1, :cond_3c

    .line 23645
    :cond_38
    iget-boolean v1, v8, Lcom/android/server/am/ProcessRecord;->foregroundServices:Z

    if-eqz v1, :cond_3a

    .line 23647
    nop

    .line 23648
    nop

    .line 23649
    const/4 v0, 0x0

    iput-boolean v0, v8, Lcom/android/server/am/ProcessRecord;->cached:Z

    .line 23650
    const-string v0, "fg-service"

    iput-object v0, v8, Lcom/android/server/am/ProcessRecord;->adjType:Ljava/lang/String;

    .line 23651
    nop

    .line 23652
    if-ne v6, v5, :cond_39

    .line 23653
    const-string v0, "ActivityManager"

    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string v2, "Raise to fg service: "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v1, v8}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-virtual {v7, v0, v1}, Lcom/android/server/am/ActivityManagerService;->reportOomAdjMessageLocked(Ljava/lang/String;Ljava/lang/String;)V

    .line 23671
    :cond_39
    const/4 v0, 0x3

    :goto_11
    const/4 v12, 0x2

    const/16 v13, 0xc8

    goto :goto_12

    .line 23655
    :cond_3a
    iget-boolean v1, v8, Lcom/android/server/am/ProcessRecord;->hasOverlayUi:Z

    if-eqz v1, :cond_3c

    .line 23657
    nop

    .line 23658
    nop

    .line 23659
    const/4 v0, 0x0

    iput-boolean v0, v8, Lcom/android/server/am/ProcessRecord;->cached:Z

    .line 23660
    const-string v0, "has-overlay-ui"

    iput-object v0, v8, Lcom/android/server/am/ProcessRecord;->adjType:Ljava/lang/String;

    .line 23661
    nop

    .line 23662
    if-ne v6, v5, :cond_3b

    .line 23663
    const-string v0, "ActivityManager"

    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string v2, "Raise to overlay ui: "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v1, v8}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-virtual {v7, v0, v1}, Lcom/android/server/am/ActivityManagerService;->reportOomAdjMessageLocked(Ljava/lang/String;Ljava/lang/String;)V

    .line 23671
    :cond_3b
    const/4 v0, 0x5

    goto :goto_11

    :cond_3c
    :goto_12
    iget-boolean v1, v8, Lcom/android/server/am/ProcessRecord;->foregroundServices:Z

    if-eqz v1, :cond_3f

    const/16 v1, 0x32

    if-le v13, v1, :cond_3f

    iget-wide v1, v8, Lcom/android/server/am/ProcessRecord;->lastTopTime:J

    iget-object v3, v7, Lcom/android/server/am/ActivityManagerService;->mConstants:Lcom/android/server/am/ActivityManagerConstants;

    move/from16 v23, v12

    iget-wide v11, v3, Lcom/android/server/am/ActivityManagerConstants;->TOP_TO_FGS_GRACE_DURATION:J

    add-long/2addr v1, v11

    cmp-long v1, v1, p5

    if-gtz v1, :cond_3d

    iget v1, v8, Lcom/android/server/am/ProcessRecord;->setProcState:I

    const/4 v2, 0x2

    if-gt v1, v2, :cond_40

    .line 23674
    :cond_3d
    const/16 v1, 0x32

    .line 23675
    const-string v2, "fg-service-act"

    iput-object v2, v8, Lcom/android/server/am/ProcessRecord;->adjType:Ljava/lang/String;

    .line 23676
    if-ne v6, v5, :cond_3e

    .line 23677
    const-string v2, "ActivityManager"

    new-instance v3, Ljava/lang/StringBuilder;

    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V

    const-string v11, "Raise to recent fg: "

    invoke-virtual {v3, v11}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v3, v8}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v3

    invoke-virtual {v7, v2, v3}, Lcom/android/server/am/ActivityManagerService;->reportOomAdjMessageLocked(Ljava/lang/String;Ljava/lang/String;)V

    .line 23681
    :cond_3e
    move v13, v1

    goto :goto_13

    :cond_3f
    move/from16 v23, v12

    :cond_40
    :goto_13
    const/4 v12, 0x7

    const/16 v1, 0xc8

    if-gt v13, v1, :cond_41

    if-le v0, v12, :cond_43

    .line 23683
    :cond_41
    iget-object v1, v8, Lcom/android/server/am/ProcessRecord;->forcingToImportant:Ljava/lang/Object;

    if-eqz v1, :cond_43

    .line 23687
    nop

    .line 23688
    nop

    .line 23689
    const/4 v0, 0x0

    iput-boolean v0, v8, Lcom/android/server/am/ProcessRecord;->cached:Z

    .line 23690
    const-string v0, "force-imp"

    iput-object v0, v8, Lcom/android/server/am/ProcessRecord;->adjType:Ljava/lang/String;

    .line 23691
    iget-object v0, v8, Lcom/android/server/am/ProcessRecord;->forcingToImportant:Ljava/lang/Object;

    iput-object v0, v8, Lcom/android/server/am/ProcessRecord;->adjSource:Ljava/lang/Object;

    .line 23692
    nop

    .line 23693
    if-ne v6, v5, :cond_42

    .line 23694
    const-string v0, "ActivityManager"

    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string v2, "Raise to force imp: "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v1, v8}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-virtual {v7, v0, v1}, Lcom/android/server/am/ActivityManagerService;->reportOomAdjMessageLocked(Ljava/lang/String;Ljava/lang/String;)V

    .line 23699
    :cond_42
    move v0, v12

    const/4 v11, 0x2

    const/16 v13, 0xc8

    goto :goto_14

    :cond_43
    move/from16 v11, v23

    :goto_14
    iget-object v1, v7, Lcom/android/server/am/ActivityManagerService;->mHeavyWeightProcess:Lcom/android/server/am/ProcessRecord;

    if-ne v8, v1, :cond_46

    .line 23700
    const/16 v1, 0x190

    if-le v13, v1, :cond_45

    .line 23702
    const/16 v1, 0x190

    .line 23703
    nop

    .line 23704
    const/4 v2, 0x0

    iput-boolean v2, v8, Lcom/android/server/am/ProcessRecord;->cached:Z

    .line 23705
    const-string v2, "heavy"

    iput-object v2, v8, Lcom/android/server/am/ProcessRecord;->adjType:Ljava/lang/String;

    .line 23706
    if-ne v6, v5, :cond_44

    .line 23707
    const-string v2, "ActivityManager"

    new-instance v3, Ljava/lang/StringBuilder;

    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V

    const-string v11, "Raise adj to heavy: "

    invoke-virtual {v3, v11}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v3, v8}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v3

    invoke-virtual {v7, v2, v3}, Lcom/android/server/am/ActivityManagerService;->reportOomAdjMessageLocked(Ljava/lang/String;Ljava/lang/String;)V

    .line 23710
    :cond_44
    move v13, v1

    const/4 v11, 0x0

    :cond_45
    const/16 v1, 0xc

    if-le v0, v1, :cond_46

    .line 23711
    const/16 v0, 0xc

    .line 23712
    const-string v1, "heavy"

    iput-object v1, v8, Lcom/android/server/am/ProcessRecord;->adjType:Ljava/lang/String;

    .line 23713
    if-ne v6, v5, :cond_46

    .line 23714
    const-string v1, "ActivityManager"

    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    const-string v3, "Raise procstate to heavy: "

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v2, v8}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v2

    invoke-virtual {v7, v1, v2}, Lcom/android/server/am/ActivityManagerService;->reportOomAdjMessageLocked(Ljava/lang/String;Ljava/lang/String;)V

    .line 23719
    :cond_46
    iget-object v1, v7, Lcom/android/server/am/ActivityManagerService;->mHomeProcess:Lcom/android/server/am/ProcessRecord;

    if-ne v8, v1, :cond_49

    .line 23720
    const/16 v1, 0x258

    if-le v13, v1, :cond_48

    .line 23723
    const/16 v1, 0x258

    .line 23724
    nop

    .line 23725
    const/4 v2, 0x0

    iput-boolean v2, v8, Lcom/android/server/am/ProcessRecord;->cached:Z

    .line 23726
    const-string v2, "home"

    iput-object v2, v8, Lcom/android/server/am/ProcessRecord;->adjType:Ljava/lang/String;

    .line 23727
    if-ne v6, v5, :cond_47

    .line 23728
    const-string v2, "ActivityManager"

    new-instance v3, Ljava/lang/StringBuilder;

    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V

    const-string v11, "Raise adj to home: "

    invoke-virtual {v3, v11}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v3, v8}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v3

    invoke-virtual {v7, v2, v3}, Lcom/android/server/am/ActivityManagerService;->reportOomAdjMessageLocked(Ljava/lang/String;Ljava/lang/String;)V

    .line 23731
    :cond_47
    move v13, v1

    const/4 v11, 0x0

    :cond_48
    const/16 v1, 0xd

    if-le v0, v1, :cond_49

    .line 23732
    const/16 v0, 0xd

    .line 23733
    const-string v1, "home"

    iput-object v1, v8, Lcom/android/server/am/ProcessRecord;->adjType:Ljava/lang/String;

    .line 23734
    if-ne v6, v5, :cond_49

    .line 23735
    const-string v1, "ActivityManager"

    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    const-string v3, "Raise procstate to home: "

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v2, v8}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v2

    invoke-virtual {v7, v1, v2}, Lcom/android/server/am/ActivityManagerService;->reportOomAdjMessageLocked(Ljava/lang/String;Ljava/lang/String;)V

    .line 23740
    :cond_49
    iget-object v1, v7, Lcom/android/server/am/ActivityManagerService;->mPreviousProcess:Lcom/android/server/am/ProcessRecord;

    const/16 v3, 0x2bc

    if-ne v8, v1, :cond_4d

    iget-object v1, v8, Lcom/android/server/am/ProcessRecord;->activities:Ljava/util/ArrayList;

    invoke-virtual {v1}, Ljava/util/ArrayList;->size()I

    move-result v1

    if-lez v1, :cond_4d

    .line 23741
    if-le v13, v3, :cond_4b

    .line 23745
    nop

    .line 23746
    nop

    .line 23747
    const/4 v1, 0x0

    iput-boolean v1, v8, Lcom/android/server/am/ProcessRecord;->cached:Z

    .line 23748
    const-string/jumbo v1, "previous"

    iput-object v1, v8, Lcom/android/server/am/ProcessRecord;->adjType:Ljava/lang/String;

    .line 23749
    if-ne v6, v5, :cond_4a

    .line 23750
    const-string v1, "ActivityManager"

    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    const-string v11, "Raise adj to prev: "

    invoke-virtual {v2, v11}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v2, v8}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v2

    invoke-virtual {v7, v1, v2}, Lcom/android/server/am/ActivityManagerService;->reportOomAdjMessageLocked(Ljava/lang/String;Ljava/lang/String;)V

    .line 23753
    :cond_4a
    move v13, v3

    const/4 v11, 0x0

    :cond_4b
    const/16 v1, 0xe

    if-le v0, v1, :cond_4d

    .line 23754
    nop

    .line 23755
    const-string/jumbo v0, "previous"

    iput-object v0, v8, Lcom/android/server/am/ProcessRecord;->adjType:Ljava/lang/String;

    .line 23756
    if-ne v6, v5, :cond_4c

    .line 23757
    const-string v0, "ActivityManager"

    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string v2, "Raise procstate to prev: "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v1, v8}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-virtual {v7, v0, v1}, Lcom/android/server/am/ActivityManagerService;->reportOomAdjMessageLocked(Ljava/lang/String;Ljava/lang/String;)V

    .line 23769
    :cond_4c
    const/16 v0, 0xe

    :cond_4d
    iput v13, v8, Lcom/android/server/am/ProcessRecord;->curRawAdj:I

    .line 23770
    const/4 v1, 0x0

    iput-boolean v1, v8, Lcom/android/server/am/ProcessRecord;->hasStartedServices:Z

    .line 23771
    iget v1, v7, Lcom/android/server/am/ActivityManagerService;->mAdjSeq:I

    iput v1, v8, Lcom/android/server/am/ProcessRecord;->adjSeq:I

    .line 23773
    iget-object v1, v7, Lcom/android/server/am/ActivityManagerService;->mBackupTarget:Lcom/android/server/am/BackupRecord;

    if-eqz v1, :cond_52

    iget-object v1, v7, Lcom/android/server/am/ActivityManagerService;->mBackupTarget:Lcom/android/server/am/BackupRecord;

    iget-object v1, v1, Lcom/android/server/am/BackupRecord;->app:Lcom/android/server/am/ProcessRecord;

    if-ne v8, v1, :cond_52

    .line 23775
    const/16 v1, 0x12c

    if-le v13, v1, :cond_50

    .line 23777
    nop

    .line 23778
    if-le v0, v12, :cond_4e

    .line 23779
    nop

    .line 23781
    move v0, v12

    :cond_4e
    const-string v2, "backup"

    iput-object v2, v8, Lcom/android/server/am/ProcessRecord;->adjType:Ljava/lang/String;

    .line 23782
    if-ne v6, v5, :cond_4f

    .line 23783
    const-string v2, "ActivityManager"

    new-instance v13, Ljava/lang/StringBuilder;

    invoke-direct {v13}, Ljava/lang/StringBuilder;-><init>()V

    const-string v1, "Raise adj to backup: "

    invoke-virtual {v13, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v13, v8}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    invoke-virtual {v13}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-virtual {v7, v2, v1}, Lcom/android/server/am/ActivityManagerService;->reportOomAdjMessageLocked(Ljava/lang/String;Ljava/lang/String;)V

    .line 23785
    :cond_4f
    const/4 v1, 0x0

    iput-boolean v1, v8, Lcom/android/server/am/ProcessRecord;->cached:Z

    .line 23787
    const/16 v13, 0x12c

    :cond_50
    const/16 v1, 0x8

    if-le v0, v1, :cond_52

    .line 23788
    nop

    .line 23789
    const-string v1, "backup"

    iput-object v1, v8, Lcom/android/server/am/ProcessRecord;->adjType:Ljava/lang/String;

    .line 23790
    if-ne v6, v5, :cond_51

    .line 23791
    const-string v1, "ActivityManager"

    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    const-string v0, "Raise procstate to backup: "

    invoke-virtual {v2, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v2, v8}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    invoke-virtual {v7, v1, v0}, Lcom/android/server/am/ActivityManagerService;->reportOomAdjMessageLocked(Ljava/lang/String;Ljava/lang/String;)V

    .line 23796
    :cond_51
    const/16 v0, 0x8

    .line 23797
    :cond_52
    nop

    .line 23798
    nop

    .line 23799
    nop

    .line 23801
    iget-object v1, v8, Lcom/android/server/am/ProcessRecord;->services:Landroid/util/ArraySet;

    invoke-virtual {v1}, Landroid/util/ArraySet;->size()I

    move-result v1

    const/4 v2, 0x1

    sub-int/2addr v1, v2

    .line 23802
    const/4 v2, 0x0

    const/16 v16, 0x0

    const/16 v17, 0x0

    const/16 v18, 0x0

    move/from16 v40, v1

    move v1, v0

    move v0, v11

    move/from16 v11, v40

    :goto_15
    if-ltz v11, :cond_85

    if-gtz v13, :cond_53

    if-eqz v0, :cond_53

    const/4 v3, 0x2

    if-le v1, v3, :cond_85

    .line 23806
    :cond_53
    iget-object v3, v8, Lcom/android/server/am/ProcessRecord;->services:Landroid/util/ArraySet;

    invoke-virtual {v3, v11}, Landroid/util/ArraySet;->valueAt(I)Ljava/lang/Object;

    move-result-object v3

    check-cast v3, Lcom/android/server/am/ServiceRecord;

    .line 23807
    iget-boolean v4, v3, Lcom/android/server/am/ServiceRecord;->startRequested:Z

    if-eqz v4, :cond_5a

    .line 23808
    const/4 v4, 0x1

    iput-boolean v4, v8, Lcom/android/server/am/ProcessRecord;->hasStartedServices:Z

    .line 23809
    const/16 v4, 0x9

    if-le v1, v4, :cond_55

    .line 23810
    nop

    .line 23811
    const-string/jumbo v4, "started-services"

    iput-object v4, v8, Lcom/android/server/am/ProcessRecord;->adjType:Ljava/lang/String;

    .line 23812
    if-ne v6, v5, :cond_54

    .line 23813
    const-string v4, "ActivityManager"

    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string v12, "Raise procstate to started service: "

    invoke-virtual {v1, v12}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v1, v8}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-virtual {v7, v4, v1}, Lcom/android/server/am/ActivityManagerService;->reportOomAdjMessageLocked(Ljava/lang/String;Ljava/lang/String;)V

    .line 23817
    :cond_54
    const/16 v1, 0x9

    :cond_55
    iget-boolean v4, v8, Lcom/android/server/am/ProcessRecord;->hasShownUi:Z

    if-eqz v4, :cond_56

    iget-object v4, v7, Lcom/android/server/am/ActivityManagerService;->mHomeProcess:Lcom/android/server/am/ProcessRecord;

    if-eq v8, v4, :cond_56

    .line 23822
    const/16 v4, 0x1f4

    if-le v13, v4, :cond_5a

    .line 23823
    const-string v4, "cch-started-ui-services"

    iput-object v4, v8, Lcom/android/server/am/ProcessRecord;->adjType:Ljava/lang/String;

    goto :goto_16

    .line 23826
    :cond_56
    move/from16 v24, v0

    move/from16 v25, v1

    iget-wide v0, v3, Lcom/android/server/am/ServiceRecord;->lastActivity:J

    iget-object v4, v7, Lcom/android/server/am/ActivityManagerService;->mConstants:Lcom/android/server/am/ActivityManagerConstants;

    move/from16 v26, v10

    move/from16 v27, v11

    iget-wide v10, v4, Lcom/android/server/am/ActivityManagerConstants;->MAX_SERVICE_INACTIVITY:J

    add-long/2addr v0, v10

    cmp-long v0, p5, v0

    if-gez v0, :cond_58

    .line 23830
    const/16 v0, 0x1f4

    if-le v13, v0, :cond_58

    .line 23831
    nop

    .line 23832
    const-string/jumbo v0, "started-services"

    iput-object v0, v8, Lcom/android/server/am/ProcessRecord;->adjType:Ljava/lang/String;

    .line 23833
    if-ne v6, v5, :cond_57

    .line 23834
    const-string v0, "ActivityManager"

    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string v4, "Raise adj to started service: "

    invoke-virtual {v1, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v1, v8}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-virtual {v7, v0, v1}, Lcom/android/server/am/ActivityManagerService;->reportOomAdjMessageLocked(Ljava/lang/String;Ljava/lang/String;)V

    .line 23837
    :cond_57
    const/4 v0, 0x0

    iput-boolean v0, v8, Lcom/android/server/am/ProcessRecord;->cached:Z

    .line 23843
    const/16 v13, 0x1f4

    :cond_58
    const/16 v0, 0x1f4

    if-le v13, v0, :cond_59

    .line 23844
    const-string v0, "cch-started-services"

    iput-object v0, v8, Lcom/android/server/am/ProcessRecord;->adjType:Ljava/lang/String;

    .line 23849
    :cond_59
    move/from16 v1, v25

    goto :goto_17

    :cond_5a
    :goto_16
    move/from16 v24, v0

    move/from16 v26, v10

    move/from16 v27, v11

    :goto_17
    iget-object v0, v3, Lcom/android/server/am/ServiceRecord;->connections:Landroid/util/ArrayMap;

    invoke-virtual {v0}, Landroid/util/ArrayMap;->size()I

    move-result v0

    const/4 v4, 0x1

    sub-int/2addr v0, v4

    .line 23850
    move v10, v0

    move/from16 v0, v24

    :goto_18
    if-ltz v10, :cond_84

    if-gtz v13, :cond_5b

    if-eqz v0, :cond_5b

    const/4 v4, 0x2

    if-le v1, v4, :cond_84

    .line 23854
    :cond_5b
    iget-object v4, v3, Lcom/android/server/am/ServiceRecord;->connections:Landroid/util/ArrayMap;

    invoke-virtual {v4, v10}, Landroid/util/ArrayMap;->valueAt(I)Ljava/lang/Object;

    move-result-object v4

    move-object v11, v4

    check-cast v11, Ljava/util/ArrayList;

    .line 23855
    nop

    .line 23856
    move v4, v1

    move-object/from16 v19, v17

    move-object/from16 v20, v18

    const/4 v12, 0x0

    move/from16 v17, v2

    move-object/from16 v18, v16

    move/from16 v16, v0

    :goto_19
    invoke-virtual {v11}, Ljava/util/ArrayList;->size()I

    move-result v0

    if-ge v12, v0, :cond_83

    if-gtz v13, :cond_5c

    if-eqz v16, :cond_5c

    const/4 v0, 0x2

    if-le v4, v0, :cond_83

    .line 23862
    :cond_5c
    invoke-virtual {v11, v12}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v0

    move-object v2, v0

    check-cast v2, Lcom/android/server/am/ConnectionRecord;

    .line 23863
    iget-object v0, v2, Lcom/android/server/am/ConnectionRecord;->binding:Lcom/android/server/am/AppBindRecord;

    iget-object v0, v0, Lcom/android/server/am/AppBindRecord;->client:Lcom/android/server/am/ProcessRecord;

    if-ne v0, v8, :cond_5d

    .line 23865
    nop

    .line 23859
    move v15, v4

    move v9, v5

    move/from16 v30, v10

    move-object/from16 v29, v11

    move/from16 v33, v12

    move/from16 v31, v21

    move/from16 v32, v22

    move-object v10, v3

    move v12, v6

    goto :goto_1a

    .line 23868
    :cond_5d
    iget v0, v2, Lcom/android/server/am/ConnectionRecord;->flags:I

    and-int/lit8 v0, v0, 0x20

    if-nez v0, :cond_7c

    .line 23869
    iget-object v0, v2, Lcom/android/server/am/ConnectionRecord;->binding:Lcom/android/server/am/AppBindRecord;

    iget-object v1, v0, Lcom/android/server/am/AppBindRecord;->client:Lcom/android/server/am/ProcessRecord;

    .line 23870
    move-object v0, v7

    move-object/from16 v28, v1

    move/from16 v30, v10

    move-object/from16 v29, v11

    const/16 v10, 0x64

    move-object v11, v2

    move/from16 v2, p2

    move-object v10, v3

    move/from16 v31, v21

    move-object v3, v9

    move v15, v4

    move/from16 v32, v22

    move/from16 v4, p4

    move v9, v5

    move/from16 v33, v12

    move v12, v6

    move-wide/from16 v5, p5

    invoke-direct/range {v0 .. v6}, Lcom/android/server/am/ActivityManagerService;->computeOomAdjLocked(Lcom/android/server/am/ProcessRecord;ILcom/android/server/am/ProcessRecord;ZJ)Z

    .line 23871
    move-object/from16 v0, v28

    iget-boolean v1, v0, Lcom/android/server/am/ProcessRecord;->containsCycle:Z

    if-eqz v1, :cond_5e

    .line 23875
    const/4 v1, 0x1

    iput-boolean v1, v8, Lcom/android/server/am/ProcessRecord;->containsCycle:Z

    .line 23879
    iget v1, v0, Lcom/android/server/am/ProcessRecord;->completedAdjSeq:I

    iget v2, v7, Lcom/android/server/am/ActivityManagerService;->mAdjSeq:I

    if-ge v1, v2, :cond_5e

    .line 23880
    nop

    .line 23859
    :goto_1a
    move v4, v15

    const/4 v6, 0x7

    goto/16 :goto_28

    .line 23883
    :cond_5e
    iget v1, v0, Lcom/android/server/am/ProcessRecord;->curRawAdj:I

    .line 23884
    iget v2, v0, Lcom/android/server/am/ProcessRecord;->curProcState:I

    .line 23885
    const/16 v3, 0xf

    if-lt v2, v3, :cond_5f

    .line 23889
    nop

    .line 23891
    const/16 v2, 0x12

    .line 23892
    :cond_5f
    iget v3, v11, Lcom/android/server/am/ConnectionRecord;->flags:I

    and-int/lit8 v3, v3, 0x10

    if-eqz v3, :cond_63

    .line 23895
    iget-boolean v3, v8, Lcom/android/server/am/ProcessRecord;->hasShownUi:Z

    if-eqz v3, :cond_61

    iget-object v3, v7, Lcom/android/server/am/ActivityManagerService;->mHomeProcess:Lcom/android/server/am/ProcessRecord;

    if-eq v8, v3, :cond_61

    .line 23900
    if-le v13, v1, :cond_60

    .line 23901
    const-string v1, "cch-bound-ui-services"

    goto :goto_1b

    .line 23903
    :cond_60
    const/4 v1, 0x0

    :goto_1b
    const/4 v2, 0x0

    iput-boolean v2, v8, Lcom/android/server/am/ProcessRecord;->cached:Z

    .line 23904
    nop

    .line 23905
    nop

    .line 23920
    move-object v3, v1

    move v1, v13

    move v2, v15

    goto :goto_1d

    .line 23907
    :cond_61
    iget-wide v3, v10, Lcom/android/server/am/ServiceRecord;->lastActivity:J

    iget-object v5, v7, Lcom/android/server/am/ActivityManagerService;->mConstants:Lcom/android/server/am/ActivityManagerConstants;

    iget-wide v5, v5, Lcom/android/server/am/ActivityManagerConstants;->MAX_SERVICE_INACTIVITY:J

    add-long/2addr v3, v5

    cmp-long v3, p5, v3

    if-ltz v3, :cond_63

    .line 23913
    if-le v13, v1, :cond_62

    .line 23914
    const-string v1, "cch-bound-services"

    goto :goto_1c

    .line 23916
    :cond_62
    const/4 v1, 0x0

    .line 23920
    :goto_1c
    move-object v3, v1

    move v1, v13

    goto :goto_1d

    :cond_63
    const/4 v3, 0x0

    :goto_1d
    if-le v13, v1, :cond_6d

    .line 23928
    iget-boolean v4, v8, Lcom/android/server/am/ProcessRecord;->hasShownUi:Z

    if-eqz v4, :cond_64

    iget-object v4, v7, Lcom/android/server/am/ActivityManagerService;->mHomeProcess:Lcom/android/server/am/ProcessRecord;

    if-eq v8, v4, :cond_64

    const/16 v4, 0xc8

    if-le v1, v4, :cond_64

    .line 23930
    const/16 v1, 0x384

    if-lt v13, v1, :cond_6d

    .line 23931
    const-string v3, "cch-bound-ui-services"

    .line 23971
    move-object v5, v3

    move v3, v15

    move/from16 v1, v16

    const/16 v4, 0x64

    goto/16 :goto_21

    .line 23935
    :cond_64
    iget v4, v11, Lcom/android/server/am/ConnectionRecord;->flags:I

    and-int/lit8 v4, v4, 0x48

    if-eqz v4, :cond_66

    .line 23937
    const/16 v4, -0x2bc

    if-lt v1, v4, :cond_65

    .line 23938
    goto :goto_1e

    .line 23941
    :cond_65
    const/16 v1, -0x2bc

    .line 23942
    nop

    .line 23943
    nop

    .line 23962
    const/16 v4, 0x64

    const/4 v15, 0x0

    const/16 v16, 0x2

    goto :goto_1f

    .line 23945
    :cond_66
    iget v4, v11, Lcom/android/server/am/ConnectionRecord;->flags:I

    and-int/lit16 v4, v4, 0x100

    if-eqz v4, :cond_67

    const/16 v4, 0xc8

    if-ge v1, v4, :cond_67

    const/16 v4, 0xc9

    if-le v13, v4, :cond_67

    .line 23948
    const/16 v1, 0xc9

    goto :goto_1e

    .line 23949
    :cond_67
    iget v4, v11, Lcom/android/server/am/ConnectionRecord;->flags:I

    const/high16 v5, 0x40000000    # 2.0f

    and-int/2addr v4, v5

    if-eqz v4, :cond_68

    const/16 v4, 0xc8

    if-ge v1, v4, :cond_69

    if-le v13, v4, :cond_69

    .line 23952
    nop

    .line 23962
    move v1, v4

    goto :goto_1e

    .line 23953
    :cond_68
    const/16 v4, 0xc8

    :cond_69
    if-lt v1, v4, :cond_6a

    .line 23954
    nop

    .line 23962
    :goto_1e
    const/16 v4, 0x64

    goto :goto_1f

    .line 23956
    :cond_6a
    const/16 v4, 0x64

    if-le v13, v4, :cond_6b

    .line 23957
    invoke-static {v1, v4}, Ljava/lang/Math;->max(II)I

    move-result v1

    goto :goto_1f

    .line 23959
    :cond_6b
    nop

    .line 23962
    move v1, v13

    :goto_1f
    iget-boolean v5, v0, Lcom/android/server/am/ProcessRecord;->cached:Z

    if-nez v5, :cond_6c

    .line 23963
    const/4 v5, 0x0

    iput-boolean v5, v8, Lcom/android/server/am/ProcessRecord;->cached:Z

    .line 23965
    :cond_6c
    if-le v13, v1, :cond_6e

    .line 23966
    nop

    .line 23967
    const-string/jumbo v3, "service"

    .line 23971
    move v13, v1

    goto :goto_20

    :cond_6d
    const/16 v4, 0x64

    :cond_6e
    :goto_20
    move-object v5, v3

    move v3, v15

    move/from16 v1, v16

    :goto_21
    iget v6, v11, Lcom/android/server/am/ConnectionRecord;->flags:I

    const v15, 0x800004

    and-int/2addr v6, v15

    if-nez v6, :cond_75

    .line 23976
    iget v6, v0, Lcom/android/server/am/ProcessRecord;->curSchedGroup:I

    if-le v6, v1, :cond_70

    .line 23977
    iget v1, v11, Lcom/android/server/am/ConnectionRecord;->flags:I

    and-int/lit8 v1, v1, 0x40

    if-eqz v1, :cond_6f

    .line 23978
    iget v0, v0, Lcom/android/server/am/ProcessRecord;->curSchedGroup:I

    .line 23983
    move v1, v0

    goto :goto_22

    .line 23980
    :cond_6f
    nop

    .line 23983
    const/4 v1, 0x2

    :cond_70
    :goto_22
    const/4 v0, 0x2

    if-gt v2, v0, :cond_74

    .line 23984
    if-ne v2, v0, :cond_71

    .line 23994
    nop

    .line 23995
    const-string/jumbo v0, "service"

    .line 23996
    iget-object v2, v11, Lcom/android/server/am/ConnectionRecord;->binding:Lcom/android/server/am/AppBindRecord;

    iget-object v2, v2, Lcom/android/server/am/AppBindRecord;->client:Lcom/android/server/am/ProcessRecord;

    .line 23997
    iget-object v6, v10, Lcom/android/server/am/ServiceRecord;->name:Landroid/content/ComponentName;

    .line 23998
    nop

    .line 24032
    move-object/from16 v18, v0

    move-object/from16 v19, v2

    move-object/from16 v20, v6

    const/16 v2, 0x12

    const/4 v6, 0x7

    const/16 v17, 0x1

    goto :goto_25

    .line 24004
    :cond_71
    iget v0, v11, Lcom/android/server/am/ConnectionRecord;->flags:I

    const/high16 v2, 0x4000000

    and-int/2addr v0, v2

    if-eqz v0, :cond_72

    .line 24005
    nop

    .line 24032
    :goto_23
    const/4 v2, 0x4

    goto :goto_24

    .line 24007
    :cond_72
    iget v0, v7, Lcom/android/server/am/ActivityManagerService;->mWakefulness:I

    const/4 v2, 0x1

    if-ne v0, v2, :cond_73

    iget v0, v11, Lcom/android/server/am/ConnectionRecord;->flags:I

    const/high16 v2, 0x2000000

    and-int/2addr v0, v2

    if-eqz v0, :cond_73

    .line 24011
    goto :goto_23

    .line 24014
    :cond_73
    nop

    .line 24032
    const/4 v2, 0x5

    :cond_74
    :goto_24
    const/4 v6, 0x7

    goto :goto_25

    .line 24019
    :cond_75
    iget v0, v11, Lcom/android/server/am/ConnectionRecord;->flags:I

    const/high16 v6, 0x800000

    and-int/2addr v0, v6

    if-nez v0, :cond_76

    .line 24020
    const/4 v6, 0x7

    if-ge v2, v6, :cond_77

    .line 24022
    nop

    .line 24032
    move v2, v6

    goto :goto_25

    .line 24026
    :cond_76
    const/4 v6, 0x7

    const/4 v0, 0x6

    if-ge v2, v0, :cond_77

    .line 24028
    const/4 v0, 0x6

    .line 24032
    move v2, v0

    :cond_77
    :goto_25
    if-le v3, v2, :cond_79

    .line 24033
    nop

    .line 24034
    if-nez v5, :cond_78

    .line 24035
    const-string/jumbo v5, "service"

    .line 24038
    :cond_78
    move v3, v2

    :cond_79
    const/4 v0, 0x6

    if-ge v3, v0, :cond_7a

    iget v0, v11, Lcom/android/server/am/ConnectionRecord;->flags:I

    const/high16 v15, 0x20000000

    and-int/2addr v0, v15

    if-eqz v0, :cond_7a

    .line 24040
    const/4 v0, 0x1

    iput-boolean v0, v8, Lcom/android/server/am/ProcessRecord;->pendingUiClean:Z

    .line 24042
    :cond_7a
    if-eqz v5, :cond_7b

    .line 24043
    iput-object v5, v8, Lcom/android/server/am/ProcessRecord;->adjType:Ljava/lang/String;

    .line 24044
    const/4 v0, 0x2

    iput v0, v8, Lcom/android/server/am/ProcessRecord;->adjTypeCode:I

    .line 24046
    iget-object v0, v11, Lcom/android/server/am/ConnectionRecord;->binding:Lcom/android/server/am/AppBindRecord;

    iget-object v0, v0, Lcom/android/server/am/AppBindRecord;->client:Lcom/android/server/am/ProcessRecord;

    iput-object v0, v8, Lcom/android/server/am/ProcessRecord;->adjSource:Ljava/lang/Object;

    .line 24047
    iput v2, v8, Lcom/android/server/am/ProcessRecord;->adjSourceProcState:I

    .line 24048
    iget-object v0, v10, Lcom/android/server/am/ServiceRecord;->name:Landroid/content/ComponentName;

    iput-object v0, v8, Lcom/android/server/am/ProcessRecord;->adjTarget:Ljava/lang/Object;

    .line 24049
    if-ne v12, v9, :cond_7b

    .line 24050
    const-string v0, "ActivityManager"

    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    const-string v4, "Raise to "

    invoke-virtual {v2, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v2, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v4, ": "

    invoke-virtual {v2, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v2, v8}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    const-string v4, ", due to "

    invoke-virtual {v2, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget-object v4, v11, Lcom/android/server/am/ConnectionRecord;->binding:Lcom/android/server/am/AppBindRecord;

    iget-object v4, v4, Lcom/android/server/am/AppBindRecord;->client:Lcom/android/server/am/ProcessRecord;

    invoke-virtual {v2, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    const-string v4, " adj="

    invoke-virtual {v2, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v2, v13}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v4, " procState="

    invoke-virtual {v2, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 24053
    invoke-static {v3}, Lcom/android/server/am/ProcessList;->makeProcStateString(I)Ljava/lang/String;

    move-result-object v4

    invoke-virtual {v2, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v2

    .line 24050
    invoke-virtual {v7, v0, v2}, Lcom/android/server/am/ActivityManagerService;->reportOomAdjMessageLocked(Ljava/lang/String;Ljava/lang/String;)V

    .line 24057
    :cond_7b
    move v2, v1

    move v4, v3

    goto :goto_26

    :cond_7c
    move v15, v4

    move v9, v5

    move/from16 v30, v10

    move-object/from16 v29, v11

    move/from16 v33, v12

    move/from16 v31, v21

    move/from16 v32, v22

    move-object v11, v2

    move-object v10, v3

    move v12, v6

    const/4 v6, 0x7

    move/from16 v2, v16

    :goto_26
    iget v0, v11, Lcom/android/server/am/ConnectionRecord;->flags:I

    const/high16 v1, 0x8000000

    and-int/2addr v0, v1

    if-eqz v0, :cond_7d

    .line 24058
    const/4 v0, 0x1

    iput-boolean v0, v8, Lcom/android/server/am/ProcessRecord;->treatLikeActivity:Z

    .line 24060
    :cond_7d
    iget-object v0, v11, Lcom/android/server/am/ConnectionRecord;->activity:Lcom/android/server/am/ActivityRecord;

    .line 24061
    iget v1, v11, Lcom/android/server/am/ConnectionRecord;->flags:I

    and-int/lit16 v1, v1, 0x80

    if-eqz v1, :cond_82

    .line 24062
    if-eqz v0, :cond_82

    if-lez v13, :cond_82

    iget-boolean v1, v0, Lcom/android/server/am/ActivityRecord;->visible:Z

    if-nez v1, :cond_7e

    sget-object v1, Lcom/android/server/am/ActivityStack$ActivityState;->RESUMED:Lcom/android/server/am/ActivityStack$ActivityState;

    sget-object v3, Lcom/android/server/am/ActivityStack$ActivityState;->PAUSING:Lcom/android/server/am/ActivityStack$ActivityState;

    .line 24063
    invoke-virtual {v0, v1, v3}, Lcom/android/server/am/ActivityRecord;->isState(Lcom/android/server/am/ActivityStack$ActivityState;Lcom/android/server/am/ActivityStack$ActivityState;)Z

    move-result v1

    if-eqz v1, :cond_82

    .line 24064
    :cond_7e
    nop

    .line 24065
    iget v1, v11, Lcom/android/server/am/ConnectionRecord;->flags:I

    const/4 v3, 0x4

    and-int/2addr v1, v3

    if-nez v1, :cond_80

    .line 24066
    iget v1, v11, Lcom/android/server/am/ConnectionRecord;->flags:I

    and-int/lit8 v1, v1, 0x40

    if-eqz v1, :cond_7f

    .line 24067
    nop

    .line 24072
    const/16 v16, 0x4

    goto :goto_27

    .line 24069
    :cond_7f
    nop

    .line 24072
    const/16 v16, 0x2

    goto :goto_27

    :cond_80
    move/from16 v16, v2

    :goto_27
    const/4 v1, 0x0

    iput-boolean v1, v8, Lcom/android/server/am/ProcessRecord;->cached:Z

    .line 24073
    const-string/jumbo v1, "service"

    iput-object v1, v8, Lcom/android/server/am/ProcessRecord;->adjType:Ljava/lang/String;

    .line 24074
    const/4 v1, 0x2

    iput v1, v8, Lcom/android/server/am/ProcessRecord;->adjTypeCode:I

    .line 24076
    iput-object v0, v8, Lcom/android/server/am/ProcessRecord;->adjSource:Ljava/lang/Object;

    .line 24077
    iput v4, v8, Lcom/android/server/am/ProcessRecord;->adjSourceProcState:I

    .line 24078
    iget-object v0, v10, Lcom/android/server/am/ServiceRecord;->name:Landroid/content/ComponentName;

    iput-object v0, v8, Lcom/android/server/am/ProcessRecord;->adjTarget:Ljava/lang/Object;

    .line 24079
    if-ne v12, v9, :cond_81

    .line 24080
    const-string v0, "ActivityManager"

    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string v2, "Raise to service w/activity: "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v1, v8}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-virtual {v7, v0, v1}, Lcom/android/server/am/ActivityManagerService;->reportOomAdjMessageLocked(Ljava/lang/String;Ljava/lang/String;)V

    .line 23859
    :cond_81
    const/4 v13, 0x0

    goto :goto_28

    :cond_82
    move/from16 v16, v2

    :goto_28
    add-int/lit8 v0, v33, 0x1

    .line 23856
    move v5, v9

    move-object v3, v10

    move v6, v12

    move-object/from16 v11, v29

    move/from16 v10, v30

    move/from16 v21, v31

    move/from16 v22, v32

    move-object/from16 v9, p3

    move v12, v0

    goto/16 :goto_19

    .line 23853
    :cond_83
    move v15, v4

    move v9, v5

    move v12, v6

    move/from16 v30, v10

    move/from16 v31, v21

    move/from16 v32, v22

    const/4 v6, 0x7

    move-object v10, v3

    add-int/lit8 v0, v30, -0x1

    .line 23850
    move v5, v9

    move-object v3, v10

    move v6, v12

    move v1, v15

    move/from16 v2, v17

    move-object/from16 v17, v19

    move/from16 v21, v31

    move/from16 v22, v32

    move-object/from16 v9, p3

    move v10, v0

    move/from16 v0, v16

    move-object/from16 v16, v18

    move-object/from16 v18, v20

    goto/16 :goto_18

    .line 23805
    :cond_84
    move v9, v5

    move v12, v6

    move/from16 v31, v21

    move/from16 v32, v22

    const/4 v6, 0x7

    add-int/lit8 v11, v27, -0x1

    .line 23802
    move v5, v9

    move/from16 v10, v26

    move/from16 v21, v31

    move/from16 v22, v32

    const/16 v3, 0x2bc

    const/16 v4, 0x64

    move-object/from16 v9, p3

    move/from16 v40, v12

    move v12, v6

    move/from16 v6, v40

    goto/16 :goto_15

    .line 24089
    :cond_85
    move/from16 v24, v0

    move v9, v5

    move v12, v6

    move/from16 v26, v10

    move/from16 v31, v21

    move/from16 v32, v22

    iget-object v0, v8, Lcom/android/server/am/ProcessRecord;->pubProviders:Landroid/util/ArrayMap;

    invoke-virtual {v0}, Landroid/util/ArrayMap;->size()I

    move-result v0

    const/4 v3, 0x1

    sub-int/2addr v0, v3

    .line 24090
    move v10, v0

    move v3, v13

    move-object/from16 v0, v16

    move-object/from16 v4, v17

    move-object/from16 v5, v18

    move/from16 v11, v24

    :goto_29
    if-ltz v10, :cond_9a

    if-gtz v3, :cond_86

    if-eqz v11, :cond_86

    const/4 v6, 0x2

    if-le v1, v6, :cond_9a

    .line 24094
    :cond_86
    iget-object v6, v8, Lcom/android/server/am/ProcessRecord;->pubProviders:Landroid/util/ArrayMap;

    invoke-virtual {v6, v10}, Landroid/util/ArrayMap;->valueAt(I)Ljava/lang/Object;

    move-result-object v6

    move-object v13, v6

    check-cast v13, Lcom/android/server/am/ContentProviderRecord;

    .line 24095
    iget-object v6, v13, Lcom/android/server/am/ContentProviderRecord;->connections:Ljava/util/ArrayList;

    invoke-virtual {v6}, Ljava/util/ArrayList;->size()I

    move-result v6

    const/4 v15, 0x1

    sub-int/2addr v6, v15

    .line 24096
    move-object/from16 v16, v0

    move v15, v2

    move-object/from16 v17, v4

    move-object/from16 v18, v5

    move v4, v1

    move v5, v3

    move/from16 v40, v11

    move v11, v6

    move/from16 v6, v40

    :goto_2a
    if-ltz v11, :cond_95

    if-gtz v5, :cond_87

    if-eqz v6, :cond_87

    const/4 v0, 0x2

    if-le v4, v0, :cond_95

    .line 24100
    :cond_87
    iget-object v0, v13, Lcom/android/server/am/ContentProviderRecord;->connections:Ljava/util/ArrayList;

    invoke-virtual {v0, v11}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Lcom/android/server/am/ContentProviderConnection;

    .line 24101
    iget-object v3, v0, Lcom/android/server/am/ContentProviderConnection;->client:Lcom/android/server/am/ProcessRecord;

    .line 24102
    if-ne v3, v8, :cond_88

    .line 24104
    nop

    .line 24099
    move/from16 v36, v9

    move/from16 v34, v10

    move/from16 v35, v11

    move/from16 v37, v12

    move v11, v4

    move v9, v5

    move v12, v6

    goto :goto_2b

    .line 24106
    :cond_88
    move-object v0, v7

    move-object v1, v3

    move/from16 v2, p2

    move/from16 v34, v10

    move-object v10, v3

    move-object/from16 v3, p3

    move/from16 v35, v11

    move v11, v4

    move/from16 v4, p4

    move/from16 v36, v9

    move/from16 v37, v12

    move v9, v5

    move v12, v6

    move-wide/from16 v5, p5

    invoke-direct/range {v0 .. v6}, Lcom/android/server/am/ActivityManagerService;->computeOomAdjLocked(Lcom/android/server/am/ProcessRecord;ILcom/android/server/am/ProcessRecord;ZJ)Z

    .line 24107
    iget-boolean v0, v10, Lcom/android/server/am/ProcessRecord;->containsCycle:Z

    if-eqz v0, :cond_89

    .line 24111
    const/4 v0, 0x1

    iput-boolean v0, v8, Lcom/android/server/am/ProcessRecord;->containsCycle:Z

    .line 24115
    iget v0, v10, Lcom/android/server/am/ProcessRecord;->completedAdjSeq:I

    iget v1, v7, Lcom/android/server/am/ActivityManagerService;->mAdjSeq:I

    if-ge v0, v1, :cond_89

    .line 24116
    nop

    .line 24099
    :goto_2b
    move v5, v9

    move v4, v11

    move/from16 v1, v36

    move/from16 v2, v37

    const/16 v6, 0xf

    goto/16 :goto_31

    .line 24119
    :cond_89
    iget v0, v10, Lcom/android/server/am/ProcessRecord;->curRawAdj:I

    .line 24120
    iget v1, v10, Lcom/android/server/am/ProcessRecord;->curProcState:I

    .line 24121
    const/16 v6, 0xf

    if-lt v1, v6, :cond_8a

    .line 24124
    nop

    .line 24126
    const/16 v1, 0x12

    .line 24127
    :cond_8a
    if-le v9, v0, :cond_8d

    .line 24128
    iget-boolean v2, v8, Lcom/android/server/am/ProcessRecord;->hasShownUi:Z

    if-eqz v2, :cond_8b

    iget-object v2, v7, Lcom/android/server/am/ActivityManagerService;->mHomeProcess:Lcom/android/server/am/ProcessRecord;

    if-eq v8, v2, :cond_8b

    const/16 v2, 0xc8

    if-le v0, v2, :cond_8b

    .line 24130
    const-string v0, "cch-ui-provider"

    .line 24136
    move v5, v9

    goto :goto_2d

    .line 24132
    :cond_8b
    if-lez v0, :cond_8c

    .line 24133
    goto :goto_2c

    .line 24134
    :cond_8c
    const/4 v0, 0x0

    :goto_2c
    const-string/jumbo v2, "provider"

    .line 24136
    move v5, v0

    move-object v0, v2

    :goto_2d
    iget-boolean v2, v8, Lcom/android/server/am/ProcessRecord;->cached:Z

    iget-boolean v3, v10, Lcom/android/server/am/ProcessRecord;->cached:Z

    and-int/2addr v2, v3

    iput-boolean v2, v8, Lcom/android/server/am/ProcessRecord;->cached:Z

    goto :goto_2e

    .line 24138
    :cond_8d
    move v5, v9

    const/4 v0, 0x0

    :goto_2e
    const/4 v2, 0x2

    if-gt v1, v2, :cond_90

    .line 24139
    if-ne v1, v2, :cond_8e

    .line 24149
    nop

    .line 24150
    nop

    .line 24151
    const-string/jumbo v0, "provider-top"

    .line 24152
    nop

    .line 24153
    iget-object v1, v13, Lcom/android/server/am/ContentProviderRecord;->name:Landroid/content/ComponentName;

    .line 24166
    move-object/from16 v16, v0

    move-object/from16 v18, v1

    move-object/from16 v17, v10

    const/16 v4, 0x12

    const/4 v15, 0x1

    goto :goto_2f

    .line 24159
    :cond_8e
    nop

    .line 24161
    if-nez v0, :cond_8f

    .line 24162
    const-string/jumbo v0, "provider"

    .line 24166
    :cond_8f
    const/4 v4, 0x4

    goto :goto_2f

    :cond_90
    move v4, v1

    :goto_2f
    if-le v11, v4, :cond_91

    .line 24167
    nop

    .line 24169
    move v11, v4

    :cond_91
    iget v1, v10, Lcom/android/server/am/ProcessRecord;->curSchedGroup:I

    if-le v1, v12, :cond_92

    .line 24170
    nop

    .line 24172
    const/4 v12, 0x2

    :cond_92
    if-eqz v0, :cond_93

    .line 24173
    iput-object v0, v8, Lcom/android/server/am/ProcessRecord;->adjType:Ljava/lang/String;

    .line 24174
    const/4 v1, 0x1

    iput v1, v8, Lcom/android/server/am/ProcessRecord;->adjTypeCode:I

    .line 24176
    iput-object v10, v8, Lcom/android/server/am/ProcessRecord;->adjSource:Ljava/lang/Object;

    .line 24177
    iput v4, v8, Lcom/android/server/am/ProcessRecord;->adjSourceProcState:I

    .line 24178
    iget-object v1, v13, Lcom/android/server/am/ContentProviderRecord;->name:Landroid/content/ComponentName;

    iput-object v1, v8, Lcom/android/server/am/ProcessRecord;->adjTarget:Ljava/lang/Object;

    .line 24179
    move/from16 v1, v36

    move/from16 v2, v37

    if-ne v2, v1, :cond_94

    .line 24180
    const-string v3, "ActivityManager"

    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    const-string v9, "Raise to "

    invoke-virtual {v4, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v4, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v0, ": "

    invoke-virtual {v4, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v4, v8}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    const-string v0, ", due to "

    invoke-virtual {v4, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v4, v10}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    const-string v0, " adj="

    invoke-virtual {v4, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v0, " procState="

    invoke-virtual {v4, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 24183
    invoke-static {v11}, Lcom/android/server/am/ProcessList;->makeProcStateString(I)Ljava/lang/String;

    move-result-object v0

    invoke-virtual {v4, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    .line 24180
    invoke-virtual {v7, v3, v0}, Lcom/android/server/am/ActivityManagerService;->reportOomAdjMessageLocked(Ljava/lang/String;Ljava/lang/String;)V

    goto :goto_30

    .line 24099
    :cond_93
    move/from16 v1, v36

    move/from16 v2, v37

    :cond_94
    :goto_30
    move v4, v11

    :goto_31
    add-int/lit8 v11, v35, -0x1

    .line 24096
    move v9, v1

    move v6, v12

    move/from16 v10, v34

    move v12, v2

    goto/16 :goto_2a

    .line 24190
    :cond_95
    move v11, v4

    move v1, v9

    move/from16 v34, v10

    move v2, v12

    move v9, v5

    move v12, v6

    const/16 v6, 0xf

    invoke-virtual {v13}, Lcom/android/server/am/ContentProviderRecord;->hasExternalProcessHandles()Z

    move-result v0

    if-eqz v0, :cond_98

    .line 24191
    if-lez v9, :cond_97

    .line 24192
    nop

    .line 24193
    nop

    .line 24194
    const/4 v0, 0x0

    iput-boolean v0, v8, Lcom/android/server/am/ProcessRecord;->cached:Z

    .line 24195
    const-string v0, "ext-provider"

    iput-object v0, v8, Lcom/android/server/am/ProcessRecord;->adjType:Ljava/lang/String;

    .line 24196
    iget-object v0, v13, Lcom/android/server/am/ContentProviderRecord;->name:Landroid/content/ComponentName;

    iput-object v0, v8, Lcom/android/server/am/ProcessRecord;->adjTarget:Ljava/lang/Object;

    .line 24197
    if-ne v2, v1, :cond_96

    .line 24198
    const-string v0, "ActivityManager"

    new-instance v3, Ljava/lang/StringBuilder;

    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V

    const-string v4, "Raise adj to external provider: "

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v3, v8}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v3

    invoke-virtual {v7, v0, v3}, Lcom/android/server/am/ActivityManagerService;->reportOomAdjMessageLocked(Ljava/lang/String;Ljava/lang/String;)V

    .line 24202
    :cond_96
    const/4 v9, 0x0

    const/4 v12, 0x2

    :cond_97
    const/4 v10, 0x5

    if-le v11, v10, :cond_99

    .line 24203
    nop

    .line 24204
    const-string v0, "ActivityManager"

    new-instance v3, Ljava/lang/StringBuilder;

    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V

    const-string v4, "Raise procstate to external provider: "

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v3, v8}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v3

    invoke-virtual {v7, v0, v3}, Lcom/android/server/am/ActivityManagerService;->reportOomAdjMessageLocked(Ljava/lang/String;Ljava/lang/String;)V

    .line 24093
    move v3, v9

    move v11, v10

    goto :goto_32

    :cond_98
    const/4 v10, 0x5

    :cond_99
    move v3, v9

    :goto_32
    add-int/lit8 v0, v34, -0x1

    .line 24090
    move v10, v0

    move v9, v1

    move v1, v11

    move v11, v12

    move-object/from16 v0, v16

    move-object/from16 v4, v17

    move-object/from16 v5, v18

    move v12, v2

    move v2, v15

    goto/16 :goto_29

    .line 24210
    :cond_9a
    const/16 v6, 0xf

    iget-wide v6, v8, Lcom/android/server/am/ProcessRecord;->lastProviderTime:J

    const-wide/16 v13, 0x0

    cmp-long v6, v6, v13

    if-lez v6, :cond_9e

    iget-wide v6, v8, Lcom/android/server/am/ProcessRecord;->lastProviderTime:J

    move-object/from16 v10, p0

    iget-object v13, v10, Lcom/android/server/am/ActivityManagerService;->mConstants:Lcom/android/server/am/ActivityManagerConstants;

    move-object/from16 v38, v4

    move-object/from16 v39, v5

    iget-wide v4, v13, Lcom/android/server/am/ActivityManagerConstants;->CONTENT_PROVIDER_RETAIN_TIME:J

    add-long/2addr v6, v4

    cmp-long v4, v6, p5

    if-lez v4, :cond_9f

    .line 24212
    const/16 v4, 0x2bc

    if-le v3, v4, :cond_9c

    .line 24213
    nop

    .line 24214
    nop

    .line 24215
    const/4 v3, 0x0

    iput-boolean v3, v8, Lcom/android/server/am/ProcessRecord;->cached:Z

    .line 24216
    const-string/jumbo v3, "recent-provider"

    iput-object v3, v8, Lcom/android/server/am/ProcessRecord;->adjType:Ljava/lang/String;

    .line 24217
    if-ne v12, v9, :cond_9b

    .line 24218
    const-string v3, "ActivityManager"

    new-instance v5, Ljava/lang/StringBuilder;

    invoke-direct {v5}, Ljava/lang/StringBuilder;-><init>()V

    const-string v6, "Raise adj to recent provider: "

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v5, v8}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    invoke-virtual {v5}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v5

    invoke-virtual {v10, v3, v5}, Lcom/android/server/am/ActivityManagerService;->reportOomAdjMessageLocked(Ljava/lang/String;Ljava/lang/String;)V

    .line 24222
    :cond_9b
    move v3, v4

    const/4 v11, 0x0

    :cond_9c
    const/16 v4, 0xe

    if-le v1, v4, :cond_9f

    .line 24223
    nop

    .line 24224
    const-string/jumbo v1, "recent-provider"

    iput-object v1, v8, Lcom/android/server/am/ProcessRecord;->adjType:Ljava/lang/String;

    .line 24225
    if-ne v12, v9, :cond_9d

    .line 24226
    const-string v1, "ActivityManager"

    new-instance v5, Ljava/lang/StringBuilder;

    invoke-direct {v5}, Ljava/lang/StringBuilder;-><init>()V

    const-string v6, "Raise procstate to recent provider: "

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v5, v8}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    invoke-virtual {v5}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v5

    invoke-virtual {v10, v1, v5}, Lcom/android/server/am/ActivityManagerService;->reportOomAdjMessageLocked(Ljava/lang/String;Ljava/lang/String;)V

    .line 24232
    :cond_9d
    move v1, v4

    goto :goto_33

    :cond_9e
    move-object/from16 v38, v4

    move-object/from16 v39, v5

    move-object/from16 v10, p0

    :cond_9f
    :goto_33
    if-eqz v2, :cond_a3

    const/4 v2, 0x2

    if-le v1, v2, :cond_a2

    .line 24239
    packed-switch v1, :pswitch_data_0

    .line 24263
    :pswitch_0
    move-object/from16 v2, v38

    move-object/from16 v4, v39

    .line 24264
    iput-object v0, v8, Lcom/android/server/am/ProcessRecord;->adjType:Ljava/lang/String;

    .line 24265
    iput-object v2, v8, Lcom/android/server/am/ProcessRecord;->adjSource:Ljava/lang/Object;

    .line 24266
    iput-object v4, v8, Lcom/android/server/am/ProcessRecord;->adjTarget:Ljava/lang/Object;

    .line 24267
    if-ne v12, v9, :cond_a1

    .line 24268
    const-string v1, "ActivityManager"

    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    const-string v5, "May be top raise to "

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v4, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v0, ": "

    invoke-virtual {v4, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v4, v8}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    const-string v0, ", due to "

    invoke-virtual {v4, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v4, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    const-string v0, " adj="

    invoke-virtual {v4, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v4, v3}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v0, " procState="

    invoke-virtual {v4, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 24271
    const/4 v0, 0x2

    invoke-static {v0}, Lcom/android/server/am/ProcessList;->makeProcStateString(I)Ljava/lang/String;

    move-result-object v2

    invoke-virtual {v4, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v2

    .line 24268
    invoke-virtual {v10, v1, v2}, Lcom/android/server/am/ActivityManagerService;->reportOomAdjMessageLocked(Ljava/lang/String;Ljava/lang/String;)V

    goto :goto_34

    .line 24250
    :pswitch_1
    nop

    .line 24251
    iput-object v0, v8, Lcom/android/server/am/ProcessRecord;->adjType:Ljava/lang/String;

    .line 24252
    move-object/from16 v2, v38

    iput-object v2, v8, Lcom/android/server/am/ProcessRecord;->adjSource:Ljava/lang/Object;

    .line 24253
    move-object/from16 v4, v39

    iput-object v4, v8, Lcom/android/server/am/ProcessRecord;->adjTarget:Ljava/lang/Object;

    .line 24254
    if-ne v12, v9, :cond_a0

    .line 24255
    const-string v1, "ActivityManager"

    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    const-string v5, "May be top raise to "

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v4, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v0, ": "

    invoke-virtual {v4, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v4, v8}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    const-string v0, ", due to "

    invoke-virtual {v4, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v4, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    const-string v0, " adj="

    invoke-virtual {v4, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v4, v3}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v0, " procState="

    invoke-virtual {v4, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 24258
    const/4 v0, 0x4

    invoke-static {v0}, Lcom/android/server/am/ProcessList;->makeProcStateString(I)Ljava/lang/String;

    move-result-object v2

    invoke-virtual {v4, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    .line 24255
    invoke-virtual {v10, v1, v0}, Lcom/android/server/am/ActivityManagerService;->reportOomAdjMessageLocked(Ljava/lang/String;Ljava/lang/String;)V

    .line 24277
    :cond_a0
    const/4 v0, 0x2

    const/4 v13, 0x4

    goto :goto_37

    .line 24243
    :pswitch_2
    goto :goto_35

    .line 24277
    :cond_a1
    const/4 v0, 0x2

    :goto_34
    move v13, v0

    goto :goto_37

    :cond_a2
    move v0, v2

    goto :goto_36

    :cond_a3
    :goto_35
    const/4 v0, 0x2

    :goto_36
    move v13, v1

    :goto_37
    const/16 v1, 0x12

    if-lt v13, v1, :cond_a5

    .line 24278
    iget-boolean v1, v8, Lcom/android/server/am/ProcessRecord;->hasClientActivities:Z

    if-eqz v1, :cond_a4

    .line 24280
    const/16 v13, 0x10

    .line 24281
    const-string v1, "cch-client-act"

    iput-object v1, v8, Lcom/android/server/am/ProcessRecord;->adjType:Ljava/lang/String;

    goto :goto_38

    .line 24282
    :cond_a4
    iget-boolean v1, v8, Lcom/android/server/am/ProcessRecord;->treatLikeActivity:Z

    if-eqz v1, :cond_a5

    .line 24285
    nop

    .line 24286
    const-string v1, "cch-as-act"

    iput-object v1, v8, Lcom/android/server/am/ProcessRecord;->adjType:Ljava/lang/String;

    .line 24290
    const/16 v13, 0xf

    :cond_a5
    :goto_38
    const/16 v1, 0x1f4

    if-ne v3, v1, :cond_aa

    .line 24291
    if-eqz p4, :cond_a9

    .line 24292
    iget v1, v10, Lcom/android/server/am/ActivityManagerService;->mNewNumAServiceProcs:I

    iget v2, v10, Lcom/android/server/am/ActivityManagerService;->mNumServiceProcs:I

    const/4 v4, 0x3

    div-int/2addr v2, v4

    if-le v1, v2, :cond_a6

    const/4 v1, 0x1

    goto :goto_39

    :cond_a6
    const/4 v1, 0x0

    :goto_39
    iput-boolean v1, v8, Lcom/android/server/am/ProcessRecord;->serviceb:Z

    .line 24293
    iget v1, v10, Lcom/android/server/am/ActivityManagerService;->mNewNumServiceProcs:I

    const/4 v2, 0x1

    add-int/2addr v1, v2

    iput v1, v10, Lcom/android/server/am/ActivityManagerService;->mNewNumServiceProcs:I

    .line 24295
    iget-boolean v1, v8, Lcom/android/server/am/ProcessRecord;->serviceb:Z

    if-nez v1, :cond_a8

    .line 24300
    iget v1, v10, Lcom/android/server/am/ActivityManagerService;->mLastMemoryLevel:I

    if-lez v1, :cond_a7

    iget-wide v1, v8, Lcom/android/server/am/ProcessRecord;->lastPss:J

    iget-object v4, v10, Lcom/android/server/am/ActivityManagerService;->mProcessList:Lcom/android/server/am/ProcessList;

    .line 24301
    invoke-virtual {v4}, Lcom/android/server/am/ProcessList;->getCachedRestoreThresholdKb()J

    move-result-wide v4

    cmp-long v1, v1, v4

    if-ltz v1, :cond_a7

    .line 24302
    const/4 v1, 0x1

    iput-boolean v1, v8, Lcom/android/server/am/ProcessRecord;->serviceHighRam:Z

    .line 24303
    iput-boolean v1, v8, Lcom/android/server/am/ProcessRecord;->serviceb:Z

    goto :goto_3a

    .line 24306
    :cond_a7
    const/4 v1, 0x1

    iget v2, v10, Lcom/android/server/am/ActivityManagerService;->mNewNumAServiceProcs:I

    add-int/2addr v2, v1

    iput v2, v10, Lcom/android/server/am/ActivityManagerService;->mNewNumAServiceProcs:I

    goto :goto_3a

    .line 24310
    :cond_a8
    const/4 v1, 0x0

    iput-boolean v1, v8, Lcom/android/server/am/ProcessRecord;->serviceHighRam:Z

    goto :goto_3b

    .line 24313
    :cond_a9
    :goto_3a
    const/4 v1, 0x0

    :goto_3b
    iget-boolean v2, v8, Lcom/android/server/am/ProcessRecord;->serviceb:Z

    if-eqz v2, :cond_ab

    .line 24314
    const/16 v3, 0x320

    goto :goto_3c

    .line 24318
    :cond_aa
    const/4 v1, 0x0

    :cond_ab
    :goto_3c
    iput v3, v8, Lcom/android/server/am/ProcessRecord;->curRawAdj:I

    .line 24322
    iget v2, v8, Lcom/android/server/am/ProcessRecord;->maxAdj:I

    if-le v3, v2, :cond_ac

    .line 24323
    iget v3, v8, Lcom/android/server/am/ProcessRecord;->maxAdj:I

    .line 24324
    iget v2, v8, Lcom/android/server/am/ProcessRecord;->maxAdj:I

    const/16 v4, 0xc8

    if-gt v2, v4, :cond_ac

    .line 24325
    nop

    .line 24331
    move v11, v0

    :cond_ac
    const/4 v0, 0x4

    if-lt v13, v0, :cond_ad

    iget v0, v10, Lcom/android/server/am/ActivityManagerService;->mWakefulness:I

    const/4 v2, 0x1

    if-eq v0, v2, :cond_ae

    .line 24333
    if-le v11, v2, :cond_ae

    .line 24334
    nop

    .line 24343
    move v11, v2

    goto :goto_3d

    :cond_ad
    const/4 v2, 0x1

    :cond_ae
    :goto_3d
    invoke-virtual {v8, v3}, Lcom/android/server/am/ProcessRecord;->modifyRawOomAdj(I)I

    move-result v0

    iput v0, v8, Lcom/android/server/am/ProcessRecord;->curAdj:I

    .line 24344
    iput v11, v8, Lcom/android/server/am/ProcessRecord;->curSchedGroup:I

    .line 24345
    iput v13, v8, Lcom/android/server/am/ProcessRecord;->curProcState:I

    .line 24346
    move/from16 v0, v26

    iput-boolean v0, v8, Lcom/android/server/am/ProcessRecord;->foregroundActivities:Z

    .line 24347
    iget v0, v10, Lcom/android/server/am/ActivityManagerService;->mAdjSeq:I

    iput v0, v8, Lcom/android/server/am/ProcessRecord;->completedAdjSeq:I

    .line 24350
    iget v0, v8, Lcom/android/server/am/ProcessRecord;->curAdj:I

    move/from16 v3, v32

    if-lt v0, v3, :cond_b0

    iget v0, v8, Lcom/android/server/am/ProcessRecord;->curProcState:I

    move/from16 v3, v31

    if-ge v0, v3, :cond_af

    goto :goto_3e

    :cond_af
    goto :goto_3f

    :cond_b0
    :goto_3e
    move v1, v2

    :goto_3f
    return v1

    :pswitch_data_0
    .packed-switch 0x3
        :pswitch_2
        :pswitch_2
        :pswitch_1
        :pswitch_1
        :pswitch_1
        :pswitch_0
        :pswitch_1
    .end packed-switch
.end method

.method private constructResumedTraceName(Ljava/lang/String;)Ljava/lang/String;
    .locals 2

    .line 3701
    new-instance v0, Ljava/lang/StringBuilder;

    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V

    const-string v1, "focused app: "

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object p1

    return-object p1
.end method

.method private static declared-synchronized createAnrDumpFile(Ljava/io/File;)Ljava/io/File;
    .locals 5

    const-class v0, Lcom/android/server/am/ActivityManagerService;

    monitor-enter v0

    :try_start_0
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    .line 6398
    sget-object v1, Lcom/android/server/am/ActivityManagerService;->sAnrFileDateFormat:Ljava/text/SimpleDateFormat;

    if-nez v1, :cond_0

    .line 6399
    new-instance v1, Ljava/text/SimpleDateFormat;

    const-string/jumbo v2, "yyyy-MM-dd-HH-mm-ss-SSS"

    invoke-direct {v1, v2}, Ljava/text/SimpleDateFormat;-><init>(Ljava/lang/String;)V

    sput-object v1, Lcom/android/server/am/ActivityManagerService;->sAnrFileDateFormat:Ljava/text/SimpleDateFormat;

    .line 6402
    :cond_0
    sget-object v1, Lcom/android/server/am/ActivityManagerService;->sAnrFileDateFormat:Ljava/text/SimpleDateFormat;

    new-instance v2, Ljava/util/Date;

    invoke-direct {v2}, Ljava/util/Date;-><init>()V

    invoke-virtual {v1, v2}, Ljava/text/SimpleDateFormat;->format(Ljava/util/Date;)Ljava/lang/String;

    move-result-object v1

    .line 6403
    new-instance v2, Ljava/io/File;

    new-instance v3, Ljava/lang/StringBuilder;

    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V

    const-string v4, "anr_"

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v3, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-direct {v2, p0, v1}, Ljava/io/File;-><init>(Ljava/io/File;Ljava/lang/String;)V
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 6406
    :try_start_1
    invoke-virtual {v2}, Ljava/io/File;->createNewFile()Z

    move-result p0

    if-eqz p0, :cond_1

    .line 6407
    invoke-virtual {v2}, Ljava/io/File;->getAbsolutePath()Ljava/lang/String;

    move-result-object p0

    const/16 v1, 0x180

    const/4 v3, -0x1

    invoke-static {p0, v1, v3, v3}, Landroid/os/FileUtils;->setPermissions(Ljava/lang/String;III)I
    :try_end_1
    .catch Ljava/io/IOException; {:try_start_1 .. :try_end_1} :catch_0
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 6408
    :try_start_2
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    monitor-exit v0

    return-object v2

    .line 6410
    :cond_1
    :try_start_3
    const-string p0, "ActivityManager"

    const-string v1, "Unable to create ANR dump file: createNewFile failed"

    invoke-static {p0, v1}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I
    :try_end_3
    .catch Ljava/io/IOException; {:try_start_3 .. :try_end_3} :catch_0
    .catchall {:try_start_3 .. :try_end_3} :catchall_0

    .line 6414
    goto :goto_0

    .line 6412
    :catch_0
    move-exception p0

    .line 6413
    :try_start_4
    const-string v1, "ActivityManager"

    const-string v2, "Exception creating ANR dump file:"

    invoke-static {v1, v2, p0}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I

    .line 6416
    :goto_0
    const/4 p0, 0x0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_0

    monitor-exit v0

    return-object p0

    .line 6397
    :catchall_0
    move-exception p0

    monitor-exit v0

    throw p0
.end method

.method private demoteSystemServerRenderThread(I)V
    .locals 1

    .line 14784
    const/16 v0, 0xa

    invoke-static {p1, v0}, Landroid/os/Process;->setThreadPriority(II)V

    .line 14785
    return-void
.end method

.method private dispatchProcessDied(II)V
    .locals 2

    .line 5026
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mProcessObservers:Landroid/os/RemoteCallbackList;

    invoke-virtual {v0}, Landroid/os/RemoteCallbackList;->beginBroadcast()I

    move-result v0

    .line 5027
    :goto_0
    if-lez v0, :cond_1

    .line 5028
    add-int/lit8 v0, v0, -0x1

    .line 5029
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mProcessObservers:Landroid/os/RemoteCallbackList;

    invoke-virtual {v1, v0}, Landroid/os/RemoteCallbackList;->getBroadcastItem(I)Landroid/os/IInterface;

    move-result-object v1

    check-cast v1, Landroid/app/IProcessObserver;

    .line 5030
    if-eqz v1, :cond_0

    .line 5032
    :try_start_0
    invoke-interface {v1, p1, p2}, Landroid/app/IProcessObserver;->onProcessDied(II)V
    :try_end_0
    .catch Landroid/os/RemoteException; {:try_start_0 .. :try_end_0} :catch_0

    .line 5034
    goto :goto_1

    .line 5033
    :catch_0
    move-exception v1

    .line 5036
    :cond_0
    :goto_1
    goto :goto_0

    .line 5037
    :cond_1
    iget-object p1, p0, Lcom/android/server/am/ActivityManagerService;->mProcessObservers:Landroid/os/RemoteCallbackList;

    invoke-virtual {p1}, Landroid/os/RemoteCallbackList;->finishBroadcast()V

    .line 5038
    return-void
.end method

.method private dispatchProcessesChanged()V
    .locals 7

    .line 4985
    monitor-enter p0

    :try_start_0
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    .line 4986
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mPendingProcessChanges:Ljava/util/ArrayList;

    invoke-virtual {v0}, Ljava/util/ArrayList;->size()I

    move-result v0

    .line 4987
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mActiveProcessChanges:[Lcom/android/server/am/ActivityManagerService$ProcessChangeItem;

    array-length v1, v1

    if-ge v1, v0, :cond_0

    .line 4988
    new-array v1, v0, [Lcom/android/server/am/ActivityManagerService$ProcessChangeItem;

    iput-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mActiveProcessChanges:[Lcom/android/server/am/ActivityManagerService$ProcessChangeItem;

    .line 4990
    :cond_0
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mPendingProcessChanges:Ljava/util/ArrayList;

    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mActiveProcessChanges:[Lcom/android/server/am/ActivityManagerService$ProcessChangeItem;

    invoke-virtual {v1, v2}, Ljava/util/ArrayList;->toArray([Ljava/lang/Object;)[Ljava/lang/Object;

    .line 4991
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mPendingProcessChanges:Ljava/util/ArrayList;

    invoke-virtual {v1}, Ljava/util/ArrayList;->clear()V

    .line 4994
    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_1

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    .line 4996
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mProcessObservers:Landroid/os/RemoteCallbackList;

    invoke-virtual {v1}, Landroid/os/RemoteCallbackList;->beginBroadcast()I

    move-result v1

    .line 4997
    :goto_0
    const/4 v2, 0x0

    if-lez v1, :cond_4

    .line 4998
    add-int/lit8 v1, v1, -0x1

    .line 4999
    iget-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mProcessObservers:Landroid/os/RemoteCallbackList;

    invoke-virtual {v3, v1}, Landroid/os/RemoteCallbackList;->getBroadcastItem(I)Landroid/os/IInterface;

    move-result-object v3

    check-cast v3, Landroid/app/IProcessObserver;

    .line 5000
    if-eqz v3, :cond_3

    .line 5002
    :goto_1
    if-ge v2, v0, :cond_2

    .line 5003
    :try_start_1
    iget-object v4, p0, Lcom/android/server/am/ActivityManagerService;->mActiveProcessChanges:[Lcom/android/server/am/ActivityManagerService$ProcessChangeItem;

    aget-object v4, v4, v2

    .line 5004
    iget v5, v4, Lcom/android/server/am/ActivityManagerService$ProcessChangeItem;->changes:I

    and-int/lit8 v5, v5, 0x1

    if-eqz v5, :cond_1

    .line 5008
    iget v5, v4, Lcom/android/server/am/ActivityManagerService$ProcessChangeItem;->pid:I

    iget v6, v4, Lcom/android/server/am/ActivityManagerService$ProcessChangeItem;->uid:I

    iget-boolean v4, v4, Lcom/android/server/am/ActivityManagerService$ProcessChangeItem;->foregroundActivities:Z

    invoke-interface {v3, v5, v6, v4}, Landroid/app/IProcessObserver;->onForegroundActivitiesChanged(IIZ)V
    :try_end_1
    .catch Landroid/os/RemoteException; {:try_start_1 .. :try_end_1} :catch_0

    .line 5002
    :cond_1
    add-int/lit8 v2, v2, 0x1

    goto :goto_1

    .line 5012
    :catch_0
    move-exception v2

    goto :goto_2

    .line 5013
    :cond_2
    nop

    .line 5015
    :cond_3
    :goto_2
    goto :goto_0

    .line 5016
    :cond_4
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mProcessObservers:Landroid/os/RemoteCallbackList;

    invoke-virtual {v1}, Landroid/os/RemoteCallbackList;->finishBroadcast()V

    .line 5018
    monitor-enter p0

    :try_start_2
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    .line 5019
    :goto_3
    if-ge v2, v0, :cond_5

    .line 5020
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mAvailProcessChanges:Ljava/util/ArrayList;

    iget-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mActiveProcessChanges:[Lcom/android/server/am/ActivityManagerService$ProcessChangeItem;

    aget-object v3, v3, v2

    invoke-virtual {v1, v3}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    .line 5019
    add-int/lit8 v2, v2, 0x1

    goto :goto_3

    .line 5022
    :cond_5
    monitor-exit p0
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    .line 5023
    return-void

    .line 5022
    :catchall_0
    move-exception v0

    :try_start_3
    monitor-exit p0
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw v0

    .line 4994
    :catchall_1
    move-exception v0

    :try_start_4
    monitor-exit p0
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_1

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw v0
.end method

.method private dispatchUidsChangedForObserver(Landroid/app/IUidObserver;Lcom/android/server/am/ActivityManagerService$UidObserverRegistration;I)V
    .locals 10

    .line 5101
    if-nez p1, :cond_0

    .line 5102
    return-void

    .line 5105
    :cond_0
    const/4 v0, 0x0

    move v1, v0

    :goto_0
    if-ge v1, p3, :cond_12

    .line 5106
    :try_start_0
    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mActiveUidChanges:[Lcom/android/server/am/UidRecord$ChangeItem;

    aget-object v2, v2, v1

    .line 5107
    iget v3, v2, Lcom/android/server/am/UidRecord$ChangeItem;->change:I

    .line 5108
    const/4 v4, 0x1

    if-nez v3, :cond_1

    iget v5, p2, Lcom/android/server/am/ActivityManagerService$UidObserverRegistration;->which:I

    and-int/2addr v5, v4

    if-nez v5, :cond_1

    .line 5112
    goto/16 :goto_9

    .line 5114
    :cond_1
    invoke-static {}, Landroid/os/SystemClock;->uptimeMillis()J

    move-result-wide v5

    .line 5115
    and-int/lit8 v7, v3, 0x2

    if-eqz v7, :cond_2

    .line 5116
    iget v7, p2, Lcom/android/server/am/ActivityManagerService$UidObserverRegistration;->which:I

    and-int/lit8 v7, v7, 0x4

    if-eqz v7, :cond_3

    .line 5119
    iget v7, v2, Lcom/android/server/am/UidRecord$ChangeItem;->uid:I

    iget-boolean v8, v2, Lcom/android/server/am/UidRecord$ChangeItem;->ephemeral:Z

    invoke-interface {p1, v7, v8}, Landroid/app/IUidObserver;->onUidIdle(IZ)V

    goto :goto_1

    .line 5121
    :cond_2
    and-int/lit8 v7, v3, 0x4

    if-eqz v7, :cond_3

    .line 5122
    iget v7, p2, Lcom/android/server/am/ActivityManagerService$UidObserverRegistration;->which:I

    and-int/lit8 v7, v7, 0x8

    if-eqz v7, :cond_3

    .line 5125
    iget v7, v2, Lcom/android/server/am/UidRecord$ChangeItem;->uid:I

    invoke-interface {p1, v7}, Landroid/app/IUidObserver;->onUidActive(I)V

    .line 5128
    :cond_3
    :goto_1
    iget v7, p2, Lcom/android/server/am/ActivityManagerService$UidObserverRegistration;->which:I

    and-int/lit8 v7, v7, 0x10

    if-eqz v7, :cond_5

    .line 5129
    and-int/lit8 v7, v3, 0x8

    if-eqz v7, :cond_4

    .line 5132
    iget v7, v2, Lcom/android/server/am/UidRecord$ChangeItem;->uid:I

    invoke-interface {p1, v7, v4}, Landroid/app/IUidObserver;->onUidCachedChanged(IZ)V

    goto :goto_2

    .line 5133
    :cond_4
    and-int/lit8 v7, v3, 0x10

    if-eqz v7, :cond_5

    .line 5136
    iget v7, v2, Lcom/android/server/am/UidRecord$ChangeItem;->uid:I

    invoke-interface {p1, v7, v0}, Landroid/app/IUidObserver;->onUidCachedChanged(IZ)V

    .line 5139
    :cond_5
    :goto_2
    and-int/lit8 v3, v3, 0x1

    if-eqz v3, :cond_7

    .line 5140
    iget v3, p2, Lcom/android/server/am/ActivityManagerService$UidObserverRegistration;->which:I

    and-int/lit8 v3, v3, 0x2

    if-eqz v3, :cond_6

    .line 5143
    iget v3, v2, Lcom/android/server/am/UidRecord$ChangeItem;->uid:I

    iget-boolean v7, v2, Lcom/android/server/am/UidRecord$ChangeItem;->ephemeral:Z

    invoke-interface {p1, v3, v7}, Landroid/app/IUidObserver;->onUidGone(IZ)V

    .line 5145
    :cond_6
    iget-object v3, p2, Lcom/android/server/am/ActivityManagerService$UidObserverRegistration;->lastProcStates:Landroid/util/SparseIntArray;

    if-eqz v3, :cond_f

    .line 5146
    iget-object v3, p2, Lcom/android/server/am/ActivityManagerService$UidObserverRegistration;->lastProcStates:Landroid/util/SparseIntArray;

    iget v2, v2, Lcom/android/server/am/UidRecord$ChangeItem;->uid:I

    invoke-virtual {v3, v2}, Landroid/util/SparseIntArray;->delete(I)V

    goto :goto_8

    .line 5149
    :cond_7
    iget v3, p2, Lcom/android/server/am/ActivityManagerService$UidObserverRegistration;->which:I

    and-int/2addr v3, v4

    if-eqz v3, :cond_f

    .line 5153
    nop

    .line 5154
    iget v3, p2, Lcom/android/server/am/ActivityManagerService$UidObserverRegistration;->cutpoint:I

    if-ltz v3, :cond_d

    .line 5155
    iget-object v3, p2, Lcom/android/server/am/ActivityManagerService$UidObserverRegistration;->lastProcStates:Landroid/util/SparseIntArray;

    iget v7, v2, Lcom/android/server/am/UidRecord$ChangeItem;->uid:I

    const/4 v8, -0x1

    invoke-virtual {v3, v7, v8}, Landroid/util/SparseIntArray;->get(II)I

    move-result v3

    .line 5157
    if-eq v3, v8, :cond_b

    .line 5158
    iget v7, p2, Lcom/android/server/am/ActivityManagerService$UidObserverRegistration;->cutpoint:I

    if-gt v3, v7, :cond_8

    .line 5159
    move v3, v4

    goto :goto_3

    .line 5158
    :cond_8
    nop

    .line 5159
    move v3, v0

    :goto_3
    iget v7, v2, Lcom/android/server/am/UidRecord$ChangeItem;->processState:I

    iget v8, p2, Lcom/android/server/am/ActivityManagerService$UidObserverRegistration;->cutpoint:I

    if-gt v7, v8, :cond_9

    .line 5160
    move v7, v4

    goto :goto_4

    .line 5159
    :cond_9
    nop

    .line 5160
    move v7, v0

    :goto_4
    if-eq v3, v7, :cond_a

    .line 5161
    move v3, v4

    goto :goto_5

    .line 5160
    :cond_a
    nop

    .line 5161
    move v3, v0

    :goto_5
    goto :goto_7

    .line 5162
    :cond_b
    iget v3, v2, Lcom/android/server/am/UidRecord$ChangeItem;->processState:I

    const/16 v7, 0x13

    if-eq v3, v7, :cond_c

    goto :goto_6

    .line 5166
    :cond_c
    move v3, v0

    goto :goto_7

    :cond_d
    :goto_6
    move v3, v4

    :goto_7
    if-eqz v3, :cond_f

    .line 5167
    iget-object v3, p2, Lcom/android/server/am/ActivityManagerService$UidObserverRegistration;->lastProcStates:Landroid/util/SparseIntArray;

    if-eqz v3, :cond_e

    .line 5168
    iget-object v3, p2, Lcom/android/server/am/ActivityManagerService$UidObserverRegistration;->lastProcStates:Landroid/util/SparseIntArray;

    iget v7, v2, Lcom/android/server/am/UidRecord$ChangeItem;->uid:I

    iget v8, v2, Lcom/android/server/am/UidRecord$ChangeItem;->processState:I

    invoke-virtual {v3, v7, v8}, Landroid/util/SparseIntArray;->put(II)V

    .line 5170
    :cond_e
    iget v3, v2, Lcom/android/server/am/UidRecord$ChangeItem;->uid:I

    iget v7, v2, Lcom/android/server/am/UidRecord$ChangeItem;->processState:I

    iget-wide v8, v2, Lcom/android/server/am/UidRecord$ChangeItem;->procStateSeq:J

    invoke-interface {p1, v3, v7, v8, v9}, Landroid/app/IUidObserver;->onUidStateChanged(IIJ)V

    .line 5175
    :cond_f
    :goto_8
    invoke-static {}, Landroid/os/SystemClock;->uptimeMillis()J

    move-result-wide v2

    sub-long/2addr v2, v5

    long-to-int v2, v2

    .line 5176
    iget v3, p2, Lcom/android/server/am/ActivityManagerService$UidObserverRegistration;->mMaxDispatchTime:I

    if-ge v3, v2, :cond_10

    .line 5177
    iput v2, p2, Lcom/android/server/am/ActivityManagerService$UidObserverRegistration;->mMaxDispatchTime:I

    .line 5179
    :cond_10
    const/16 v3, 0x14

    if-lt v2, v3, :cond_11

    .line 5180
    iget v2, p2, Lcom/android/server/am/ActivityManagerService$UidObserverRegistration;->mSlowDispatchCount:I

    add-int/2addr v2, v4

    iput v2, p2, Lcom/android/server/am/ActivityManagerService$UidObserverRegistration;->mSlowDispatchCount:I
    :try_end_0
    .catch Landroid/os/RemoteException; {:try_start_0 .. :try_end_0} :catch_0

    .line 5105
    :cond_11
    :goto_9
    add-int/lit8 v1, v1, 0x1

    goto/16 :goto_0

    .line 5183
    :catch_0
    move-exception p1

    goto :goto_a

    .line 5184
    :cond_12
    nop

    .line 5185
    :goto_a
    return-void
.end method

.method private doDump(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;[Ljava/lang/String;Z)V
    .locals 28

    move-object/from16 v10, p0

    move-object/from16 v0, p1

    move-object/from16 v11, p2

    move-object/from16 v12, p3

    .line 16333
    iget-object v1, v10, Lcom/android/server/am/ActivityManagerService;->mContext:Landroid/content/Context;

    const-string v2, "ActivityManager"

    invoke-static {v1, v2, v11}, Lcom/android/internal/util/DumpUtils;->checkDumpAndUsageStatsPermission(Landroid/content/Context;Ljava/lang/String;Ljava/io/PrintWriter;)Z

    move-result v1

    if-nez v1, :cond_0

    return-void

    .line 16335
    :cond_0
    nop

    .line 16336
    nop

    .line 16337
    nop

    .line 16338
    nop

    .line 16339
    nop

    .line 16340
    nop

    .line 16341
    nop

    .line 16342
    nop

    .line 16344
    nop

    .line 16345
    const/4 v14, 0x0

    move v1, v14

    move v8, v1

    move v9, v8

    move/from16 v16, v9

    move/from16 v17, v16

    move/from16 v18, v17

    move/from16 v19, v18

    move/from16 v20, v19

    const/4 v15, 0x0

    :goto_0
    array-length v2, v12

    const/4 v7, 0x1

    if-ge v1, v2, :cond_c

    .line 16346
    aget-object v2, v12, v1

    .line 16347
    if-eqz v2, :cond_c

    invoke-virtual {v2}, Ljava/lang/String;->length()I

    move-result v3

    if-lez v3, :cond_c

    invoke-virtual {v2, v14}, Ljava/lang/String;->charAt(I)C

    move-result v3

    const/16 v4, 0x2d

    if-eq v3, v4, :cond_1

    .line 16348
    goto/16 :goto_3

    .line 16350
    :cond_1
    add-int/lit8 v1, v1, 0x1

    .line 16351
    const-string v3, "-a"

    invoke-virtual {v3, v2}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v3

    if-eqz v3, :cond_2

    .line 16352
    nop

    .line 16380
    move v9, v7

    goto/16 :goto_2

    .line 16353
    :cond_2
    const-string v3, "-c"

    invoke-virtual {v3, v2}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v3

    if-eqz v3, :cond_3

    .line 16354
    nop

    .line 16380
    :goto_1
    move/from16 v16, v7

    goto/16 :goto_2

    .line 16355
    :cond_3
    const-string v3, "-v"

    invoke-virtual {v3, v2}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v3

    if-eqz v3, :cond_4

    .line 16356
    nop

    .line 16380
    move v8, v7

    goto/16 :goto_2

    .line 16357
    :cond_4
    const-string v3, "-f"

    invoke-virtual {v3, v2}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v3

    if-eqz v3, :cond_5

    .line 16358
    nop

    .line 16380
    move/from16 v19, v7

    goto :goto_2

    .line 16359
    :cond_5
    const-string v3, "-p"

    invoke-virtual {v3, v2}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v3

    if-eqz v3, :cond_7

    .line 16360
    array-length v2, v12

    if-ge v1, v2, :cond_6

    .line 16361
    aget-object v15, v12, v1

    .line 16362
    add-int/lit8 v1, v1, 0x1

    .line 16367
    goto :goto_1

    .line 16364
    :cond_6
    const-string v0, "Error: -p option requires package argument"

    invoke-virtual {v11, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 16365
    return-void

    .line 16368
    :cond_7
    const-string v3, "--checkin"

    invoke-virtual {v3, v2}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v3

    if-eqz v3, :cond_8

    .line 16369
    nop

    .line 16380
    move/from16 v17, v7

    move/from16 v18, v17

    goto :goto_2

    .line 16370
    :cond_8
    const-string v3, "-C"

    invoke-virtual {v3, v2}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v3

    if-eqz v3, :cond_9

    .line 16371
    nop

    .line 16380
    move/from16 v18, v7

    goto :goto_2

    .line 16372
    :cond_9
    const-string v3, "--normal-priority"

    invoke-virtual {v3, v2}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v3

    if-eqz v3, :cond_a

    .line 16373
    nop

    .line 16380
    move/from16 v20, v7

    goto :goto_2

    .line 16374
    :cond_a
    const-string v3, "-h"

    invoke-virtual {v3, v2}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v3

    if-eqz v3, :cond_b

    .line 16375
    invoke-static {v11, v7}, Lcom/android/server/am/ActivityManagerShellCommand;->dumpHelp(Ljava/io/PrintWriter;Z)V

    .line 16376
    return-void

    .line 16378
    :cond_b
    new-instance v3, Ljava/lang/StringBuilder;

    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V

    const-string v4, "Unknown argument: "

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v3, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v2, "; use -h for help"

    invoke-virtual {v3, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v2

    invoke-virtual {v11, v2}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 16380
    :goto_2
    goto/16 :goto_0

    .line 16382
    :cond_c
    :goto_3
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v5

    .line 16384
    const/4 v2, 0x2

    if-eqz p4, :cond_1a

    .line 16385
    new-instance v3, Landroid/util/proto/ProtoOutputStream;

    invoke-direct {v3, v0}, Landroid/util/proto/ProtoOutputStream;-><init>(Ljava/io/FileDescriptor;)V

    .line 16386
    array-length v4, v12

    if-ge v1, v4, :cond_d

    aget-object v4, v12, v1

    goto :goto_4

    :cond_d
    const-string v4, ""

    .line 16387
    :goto_4
    add-int/2addr v1, v7

    .line 16389
    const-string v8, "activities"

    invoke-virtual {v8, v4}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v8

    if-nez v8, :cond_19

    const-string v8, "a"

    invoke-virtual {v8, v4}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v8

    if-eqz v8, :cond_e

    goto/16 :goto_8

    .line 16394
    :cond_e
    const-string v8, "broadcasts"

    invoke-virtual {v8, v4}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v8

    if-nez v8, :cond_18

    const-string v8, "b"

    invoke-virtual {v8, v4}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v8

    if-eqz v8, :cond_f

    goto/16 :goto_7

    .line 16399
    :cond_f
    const-string/jumbo v8, "provider"

    invoke-virtual {v8, v4}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v8

    if-eqz v8, :cond_13

    .line 16402
    array-length v4, v12

    if-lt v1, v4, :cond_10

    .line 16403
    nop

    .line 16404
    sget-object v1, Lcom/android/server/am/ActivityManagerService;->EMPTY_STRING_ARRAY:[Ljava/lang/String;

    .line 16412
    const/4 v13, 0x0

    goto :goto_5

    .line 16406
    :cond_10
    aget-object v13, v12, v1

    .line 16407
    add-int/2addr v1, v7

    .line 16408
    array-length v4, v12

    sub-int/2addr v4, v1

    new-array v4, v4, [Ljava/lang/String;

    .line 16409
    array-length v7, v12

    if-le v7, v2, :cond_11

    array-length v2, v12

    sub-int/2addr v2, v1

    invoke-static {v12, v1, v4, v14, v2}, Ljava/lang/System;->arraycopy(Ljava/lang/Object;ILjava/lang/Object;II)V

    .line 16412
    :cond_11
    move-object v1, v4

    :goto_5
    invoke-virtual {v10, v0, v11, v13, v1}, Lcom/android/server/am/ActivityManagerService;->dumpProviderProto(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;Ljava/lang/String;[Ljava/lang/String;)Z

    move-result v0

    if-nez v0, :cond_12

    .line 16413
    new-instance v0, Ljava/lang/StringBuilder;

    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V

    const-string v1, "No providers match: "

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0, v13}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    invoke-virtual {v11, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 16414
    const-string v0, "Use -h for help."

    invoke-virtual {v11, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 16416
    :cond_12
    goto/16 :goto_9

    :cond_13
    const-string/jumbo v0, "service"

    invoke-virtual {v0, v4}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v0

    const-wide v7, 0x10b00000001L

    if-eqz v0, :cond_14

    .line 16418
    iget-object v0, v10, Lcom/android/server/am/ActivityManagerService;->mServices:Lcom/android/server/am/ActiveServices;

    invoke-virtual {v0, v3, v7, v8}, Lcom/android/server/am/ActiveServices;->writeToProto(Landroid/util/proto/ProtoOutputStream;J)V

    goto/16 :goto_9

    .line 16419
    :cond_14
    const-string/jumbo v0, "processes"

    invoke-virtual {v0, v4}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v0

    if-nez v0, :cond_16

    const-string/jumbo v0, "p"

    invoke-virtual {v0, v4}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v0

    if-eqz v0, :cond_15

    goto :goto_6

    .line 16430
    :cond_15
    monitor-enter p0

    :try_start_0
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    .line 16431
    invoke-virtual {v3, v7, v8}, Landroid/util/proto/ProtoOutputStream;->start(J)J

    move-result-wide v0

    .line 16432
    invoke-direct {v10, v3}, Lcom/android/server/am/ActivityManagerService;->writeActivitiesToProtoLocked(Landroid/util/proto/ProtoOutputStream;)V

    .line 16433
    invoke-virtual {v3, v0, v1}, Landroid/util/proto/ProtoOutputStream;->end(J)V

    .line 16435
    const-wide v0, 0x10b00000002L

    invoke-virtual {v3, v0, v1}, Landroid/util/proto/ProtoOutputStream;->start(J)J

    move-result-wide v0

    .line 16436
    invoke-virtual {v10, v3}, Lcom/android/server/am/ActivityManagerService;->writeBroadcastsToProtoLocked(Landroid/util/proto/ProtoOutputStream;)V

    .line 16437
    invoke-virtual {v3, v0, v1}, Landroid/util/proto/ProtoOutputStream;->end(J)V

    .line 16439
    const-wide v0, 0x10b00000003L

    invoke-virtual {v3, v0, v1}, Landroid/util/proto/ProtoOutputStream;->start(J)J

    move-result-wide v0

    .line 16440
    iget-object v2, v10, Lcom/android/server/am/ActivityManagerService;->mServices:Lcom/android/server/am/ActiveServices;

    invoke-virtual {v2, v3, v7, v8}, Lcom/android/server/am/ActiveServices;->writeToProto(Landroid/util/proto/ProtoOutputStream;J)V

    .line 16441
    invoke-virtual {v3, v0, v1}, Landroid/util/proto/ProtoOutputStream;->end(J)V

    .line 16443
    const-wide v0, 0x10b00000004L

    invoke-virtual {v3, v0, v1}, Landroid/util/proto/ProtoOutputStream;->start(J)J

    move-result-wide v0

    .line 16444
    invoke-virtual {v10, v3, v15}, Lcom/android/server/am/ActivityManagerService;->writeProcessesToProtoLocked(Landroid/util/proto/ProtoOutputStream;Ljava/lang/String;)V

    .line 16445
    invoke-virtual {v3, v0, v1}, Landroid/util/proto/ProtoOutputStream;->end(J)V

    .line 16446
    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    goto :goto_9

    :catchall_0
    move-exception v0

    :try_start_1
    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw v0

    .line 16420
    :cond_16
    :goto_6
    array-length v0, v12

    if-ge v1, v0, :cond_17

    .line 16421
    aget-object v15, v12, v1

    .line 16422
    nop

    .line 16425
    :cond_17
    monitor-enter p0

    :try_start_2
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    .line 16426
    invoke-virtual {v10, v3, v15}, Lcom/android/server/am/ActivityManagerService;->writeProcessesToProtoLocked(Landroid/util/proto/ProtoOutputStream;Ljava/lang/String;)V

    .line 16427
    monitor-exit p0
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_1

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    goto :goto_9

    :catchall_1
    move-exception v0

    :try_start_3
    monitor-exit p0
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_1

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw v0

    .line 16396
    :cond_18
    :goto_7
    monitor-enter p0

    :try_start_4
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    .line 16397
    invoke-virtual {v10, v3}, Lcom/android/server/am/ActivityManagerService;->writeBroadcastsToProtoLocked(Landroid/util/proto/ProtoOutputStream;)V

    .line 16398
    monitor-exit p0
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_2

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    goto :goto_9

    :catchall_2
    move-exception v0

    :try_start_5
    monitor-exit p0
    :try_end_5
    .catchall {:try_start_5 .. :try_end_5} :catchall_2

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw v0

    .line 16391
    :cond_19
    :goto_8
    monitor-enter p0

    :try_start_6
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    .line 16392
    invoke-direct {v10, v3}, Lcom/android/server/am/ActivityManagerService;->writeActivitiesToProtoLocked(Landroid/util/proto/ProtoOutputStream;)V

    .line 16393
    monitor-exit p0
    :try_end_6
    .catchall {:try_start_6 .. :try_end_6} :catchall_3

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    .line 16448
    :goto_9
    invoke-virtual {v3}, Landroid/util/proto/ProtoOutputStream;->flush()V

    .line 16449
    invoke-static {v5, v6}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 16450
    return-void

    .line 16393
    :catchall_3
    move-exception v0

    :try_start_7
    monitor-exit p0
    :try_end_7
    .catchall {:try_start_7 .. :try_end_7} :catchall_3

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw v0

    .line 16453
    :cond_1a
    invoke-direct {v10, v15}, Lcom/android/server/am/ActivityManagerService;->getAppId(Ljava/lang/String;)I

    move-result v21

    .line 16454
    nop

    .line 16456
    array-length v3, v12

    if-ge v1, v3, :cond_4b

    .line 16457
    aget-object v4, v12, v1

    .line 16458
    add-int/lit8 v3, v1, 0x1

    .line 16459
    const-string v1, "activities"

    invoke-virtual {v1, v4}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v1

    if-nez v1, :cond_49

    const-string v1, "a"

    invoke-virtual {v1, v4}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v1

    if-eqz v1, :cond_1b

    goto/16 :goto_1c

    .line 16463
    :cond_1b
    const-string v1, "lastanr"

    invoke-virtual {v1, v4}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v1

    if-eqz v1, :cond_1c

    .line 16464
    monitor-enter p0

    :try_start_8
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    .line 16465
    invoke-direct {v10, v11}, Lcom/android/server/am/ActivityManagerService;->dumpLastANRLocked(Ljava/io/PrintWriter;)V

    .line 16466
    monitor-exit p0
    :try_end_8
    .catchall {:try_start_8 .. :try_end_8} :catchall_4

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    .line 16628
    :goto_a
    move-wide/from16 v22, v5

    :goto_b
    move/from16 v25, v9

    move v9, v3

    goto/16 :goto_1d

    .line 16466
    :catchall_4
    move-exception v0

    :try_start_9
    monitor-exit p0
    :try_end_9
    .catchall {:try_start_9 .. :try_end_9} :catchall_4

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw v0

    .line 16467
    :cond_1c
    const-string/jumbo v1, "starter"

    invoke-virtual {v1, v4}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v1

    if-eqz v1, :cond_1d

    .line 16468
    monitor-enter p0

    :try_start_a
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    .line 16469
    invoke-direct {v10, v11, v15}, Lcom/android/server/am/ActivityManagerService;->dumpActivityStarterLocked(Ljava/io/PrintWriter;Ljava/lang/String;)V

    .line 16470
    monitor-exit p0
    :try_end_a
    .catchall {:try_start_a .. :try_end_a} :catchall_5

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    goto :goto_a

    :catchall_5
    move-exception v0

    :try_start_b
    monitor-exit p0
    :try_end_b
    .catchall {:try_start_b .. :try_end_b} :catchall_5

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw v0

    .line 16471
    :cond_1d
    const-string v1, "containers"

    invoke-virtual {v1, v4}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v1

    if-eqz v1, :cond_1e

    .line 16472
    monitor-enter p0

    :try_start_c
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    .line 16473
    invoke-direct {v10, v11}, Lcom/android/server/am/ActivityManagerService;->dumpActivityContainersLocked(Ljava/io/PrintWriter;)V

    .line 16474
    monitor-exit p0
    :try_end_c
    .catchall {:try_start_c .. :try_end_c} :catchall_6

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    goto :goto_a

    :catchall_6
    move-exception v0

    :try_start_d
    monitor-exit p0
    :try_end_d
    .catchall {:try_start_d .. :try_end_d} :catchall_6

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw v0

    .line 16475
    :cond_1e
    const-string/jumbo v1, "recents"

    invoke-virtual {v1, v4}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v1

    if-nez v1, :cond_47

    const-string/jumbo v1, "r"

    invoke-virtual {v1, v4}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v1

    if-eqz v1, :cond_1f

    goto/16 :goto_1b

    .line 16481
    :cond_1f
    const-string v1, "binder-proxies"

    invoke-virtual {v1, v4}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v1

    if-eqz v1, :cond_21

    .line 16482
    array-length v1, v12

    if-lt v3, v1, :cond_20

    .line 16483
    invoke-static {}, Lcom/android/internal/os/BinderInternal;->nGetBinderProxyPerUidCounts()Landroid/util/SparseIntArray;

    move-result-object v1

    const-string v2, "Counts of Binder Proxies held by SYSTEM"

    invoke-virtual {v10, v11, v1, v2}, Lcom/android/server/am/ActivityManagerService;->dumpBinderProxiesCounts(Ljava/io/PrintWriter;Landroid/util/SparseIntArray;Ljava/lang/String;)Z

    goto :goto_a

    .line 16486
    :cond_20
    aget-object v1, v12, v3

    .line 16487
    add-int/lit8 v3, v3, 0x1

    .line 16489
    invoke-static {}, Ljava/lang/System;->gc()V

    .line 16490
    invoke-static {}, Ljava/lang/System;->runFinalization()V

    .line 16491
    invoke-static {}, Ljava/lang/System;->gc()V

    .line 16492
    invoke-static {v1}, Ljava/lang/Integer;->parseInt(Ljava/lang/String;)I

    move-result v1

    invoke-static {v1}, Lcom/android/internal/os/BinderInternal;->nGetBinderProxyCount(I)I

    move-result v1

    invoke-virtual {v11, v1}, Ljava/io/PrintWriter;->println(I)V

    .line 16493
    nop

    .line 16628
    move-wide/from16 v22, v5

    :goto_c
    move/from16 v25, v9

    move v9, v3

    goto/16 :goto_1e

    .line 16494
    :cond_21
    const-string v1, "broadcasts"

    invoke-virtual {v1, v4}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v1

    if-nez v1, :cond_45

    const-string v1, "b"

    invoke-virtual {v1, v4}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v1

    if-eqz v1, :cond_22

    goto/16 :goto_1a

    .line 16502
    :cond_22
    const-string v1, "broadcast-stats"

    invoke-virtual {v1, v4}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v1

    if-eqz v1, :cond_25

    .line 16503
    array-length v1, v12

    if-ge v3, v1, :cond_23

    .line 16504
    aget-object v1, v12, v3

    .line 16505
    add-int/lit8 v3, v3, 0x1

    .line 16507
    move-object v15, v1

    :cond_23
    move v8, v3

    monitor-enter p0

    :try_start_e
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    .line 16508
    if-eqz v18, :cond_24

    .line 16509
    move-object v1, v10

    move-object v2, v0

    move-object v3, v11

    move-object v4, v12

    move-wide v6, v5

    move v5, v8

    move-wide/from16 v22, v6

    move/from16 v6, v17

    move-object v7, v15

    invoke-virtual/range {v1 .. v7}, Lcom/android/server/am/ActivityManagerService;->dumpBroadcastStatsCheckinLocked(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;[Ljava/lang/String;IZLjava/lang/String;)V

    goto :goto_d

    .line 16512
    :cond_24
    move-wide/from16 v22, v5

    const/4 v6, 0x1

    move-object v1, v10

    move-object v2, v0

    move-object v3, v11

    move-object v4, v12

    move v5, v8

    move-object v7, v15

    invoke-virtual/range {v1 .. v7}, Lcom/android/server/am/ActivityManagerService;->dumpBroadcastStatsLocked(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;[Ljava/lang/String;IZLjava/lang/String;)V

    .line 16514
    :goto_d
    monitor-exit p0
    :try_end_e
    .catchall {:try_start_e .. :try_end_e} :catchall_7

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    .line 16628
    :goto_e
    move/from16 v25, v9

    move v9, v8

    goto/16 :goto_1e

    .line 16514
    :catchall_7
    move-exception v0

    :try_start_f
    monitor-exit p0
    :try_end_f
    .catchall {:try_start_f .. :try_end_f} :catchall_7

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw v0

    .line 16515
    :cond_25
    move-wide/from16 v22, v5

    const-string v1, "intents"

    invoke-virtual {v1, v4}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v1

    if-nez v1, :cond_43

    const-string v1, "i"

    invoke-virtual {v1, v4}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v1

    if-eqz v1, :cond_26

    goto/16 :goto_19

    .line 16523
    :cond_26
    const-string/jumbo v1, "processes"

    invoke-virtual {v1, v4}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v1

    if-nez v1, :cond_41

    const-string/jumbo v1, "p"

    invoke-virtual {v1, v4}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v1

    if-eqz v1, :cond_27

    goto/16 :goto_18

    .line 16531
    :cond_27
    const-string/jumbo v1, "oom"

    invoke-virtual {v1, v4}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v1

    if-nez v1, :cond_3f

    const-string v1, "o"

    invoke-virtual {v1, v4}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v1

    if-eqz v1, :cond_28

    goto/16 :goto_16

    .line 16535
    :cond_28
    const-string/jumbo v1, "permissions"

    invoke-virtual {v1, v4}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v1

    if-nez v1, :cond_3e

    const-string/jumbo v1, "perm"

    invoke-virtual {v1, v4}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v1

    if-eqz v1, :cond_29

    goto/16 :goto_15

    .line 16539
    :cond_29
    const-string/jumbo v1, "provider"

    invoke-virtual {v1, v4}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v1

    if-eqz v1, :cond_2d

    .line 16542
    array-length v1, v12

    if-lt v3, v1, :cond_2a

    .line 16543
    nop

    .line 16544
    sget-object v1, Lcom/android/server/am/ActivityManagerService;->EMPTY_STRING_ARRAY:[Ljava/lang/String;

    .line 16551
    move-object v5, v1

    move v8, v3

    const/4 v13, 0x0

    goto :goto_f

    .line 16546
    :cond_2a
    aget-object v1, v12, v3

    .line 16547
    add-int/lit8 v3, v3, 0x1

    .line 16548
    array-length v4, v12

    sub-int/2addr v4, v3

    new-array v4, v4, [Ljava/lang/String;

    .line 16549
    array-length v5, v12

    if-le v5, v2, :cond_2b

    array-length v2, v12

    sub-int/2addr v2, v3

    invoke-static {v12, v3, v4, v14, v2}, Ljava/lang/System;->arraycopy(Ljava/lang/Object;ILjava/lang/Object;II)V

    .line 16551
    :cond_2b
    move-object v13, v1

    move v8, v3

    move-object v5, v4

    :goto_f
    const/4 v6, 0x0

    move-object v1, v10

    move-object v2, v0

    move-object v3, v11

    move-object v4, v13

    move v7, v9

    invoke-virtual/range {v1 .. v7}, Lcom/android/server/am/ActivityManagerService;->dumpProvider(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;Ljava/lang/String;[Ljava/lang/String;IZ)Z

    move-result v1

    if-nez v1, :cond_2c

    .line 16552
    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string v2, "No providers match: "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v1, v13}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-virtual {v11, v1}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 16553
    const-string v1, "Use -h for help."

    invoke-virtual {v11, v1}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 16555
    :cond_2c
    goto/16 :goto_e

    :cond_2d
    const-string/jumbo v1, "providers"

    invoke-virtual {v1, v4}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v1

    if-nez v1, :cond_3d

    const-string/jumbo v1, "prov"

    invoke-virtual {v1, v4}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v1

    if-eqz v1, :cond_2e

    goto/16 :goto_14

    .line 16559
    :cond_2e
    const-string/jumbo v1, "service"

    invoke-virtual {v1, v4}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v1

    if-eqz v1, :cond_32

    .line 16562
    array-length v1, v12

    if-lt v3, v1, :cond_2f

    .line 16563
    nop

    .line 16564
    sget-object v1, Lcom/android/server/am/ActivityManagerService;->EMPTY_STRING_ARRAY:[Ljava/lang/String;

    .line 16572
    move-object v5, v1

    move v8, v3

    const/4 v13, 0x0

    goto :goto_10

    .line 16566
    :cond_2f
    aget-object v1, v12, v3

    .line 16567
    add-int/lit8 v3, v3, 0x1

    .line 16568
    array-length v4, v12

    sub-int/2addr v4, v3

    new-array v4, v4, [Ljava/lang/String;

    .line 16569
    array-length v5, v12

    if-le v5, v2, :cond_30

    array-length v2, v12

    sub-int/2addr v2, v3

    invoke-static {v12, v3, v4, v14, v2}, Ljava/lang/System;->arraycopy(Ljava/lang/Object;ILjava/lang/Object;II)V

    .line 16572
    :cond_30
    move-object v13, v1

    move v8, v3

    move-object v5, v4

    :goto_10
    iget-object v1, v10, Lcom/android/server/am/ActivityManagerService;->mServices:Lcom/android/server/am/ActiveServices;

    const/4 v6, 0x0

    move-object v2, v0

    move-object v3, v11

    move-object v4, v13

    move v7, v9

    invoke-virtual/range {v1 .. v7}, Lcom/android/server/am/ActiveServices;->dumpService(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;Ljava/lang/String;[Ljava/lang/String;IZ)Z

    move-result v1

    if-nez v1, :cond_31

    .line 16573
    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string v2, "No services match: "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v1, v13}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-virtual {v11, v1}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 16574
    const-string v1, "Use -h for help."

    invoke-virtual {v11, v1}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 16576
    :cond_31
    goto/16 :goto_e

    :cond_32
    const-string/jumbo v1, "package"

    invoke-virtual {v1, v4}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v1

    if-eqz v1, :cond_35

    .line 16578
    array-length v1, v12

    if-lt v3, v1, :cond_33

    .line 16579
    const-string/jumbo v1, "package: no package name specified"

    invoke-virtual {v11, v1}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 16580
    const-string v1, "Use -h for help."

    invoke-virtual {v11, v1}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    goto :goto_11

    .line 16582
    :cond_33
    aget-object v15, v12, v3

    .line 16583
    add-int/lit8 v3, v3, 0x1

    .line 16584
    array-length v1, v12

    sub-int/2addr v1, v3

    new-array v1, v1, [Ljava/lang/String;

    .line 16585
    array-length v4, v12

    if-le v4, v2, :cond_34

    array-length v2, v12

    sub-int/2addr v2, v3

    invoke-static {v12, v3, v1, v14, v2}, Ljava/lang/System;->arraycopy(Ljava/lang/Object;ILjava/lang/Object;II)V

    .line 16587
    :cond_34
    nop

    .line 16588
    nop

    .line 16589
    nop

    .line 16591
    move-object v12, v1

    move v3, v14

    move v14, v7

    :goto_11
    goto/16 :goto_c

    :cond_35
    const-string v1, "associations"

    invoke-virtual {v1, v4}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v1

    if-nez v1, :cond_3c

    const-string v1, "as"

    invoke-virtual {v1, v4}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v1

    if-eqz v1, :cond_36

    goto/16 :goto_13

    .line 16595
    :cond_36
    const-string/jumbo v1, "settings"

    invoke-virtual {v1, v4}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v1

    if-eqz v1, :cond_37

    .line 16596
    monitor-enter p0

    :try_start_10
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    .line 16597
    iget-object v1, v10, Lcom/android/server/am/ActivityManagerService;->mConstants:Lcom/android/server/am/ActivityManagerConstants;

    invoke-virtual {v1, v11}, Lcom/android/server/am/ActivityManagerConstants;->dump(Ljava/io/PrintWriter;)V

    .line 16598
    monitor-exit p0
    :try_end_10
    .catchall {:try_start_10 .. :try_end_10} :catchall_8

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    goto/16 :goto_b

    :catchall_8
    move-exception v0

    :try_start_11
    monitor-exit p0
    :try_end_11
    .catchall {:try_start_11 .. :try_end_11} :catchall_8

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw v0

    .line 16599
    :cond_37
    const-string/jumbo v1, "services"

    invoke-virtual {v1, v4}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v1

    if-nez v1, :cond_3a

    const-string/jumbo v1, "s"

    invoke-virtual {v1, v4}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v1

    if-eqz v1, :cond_38

    goto :goto_12

    .line 16613
    :cond_38
    const-string v1, "locks"

    invoke-virtual {v1, v4}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v1

    if-eqz v1, :cond_39

    .line 16614
    invoke-static/range {p1 .. p3}, Lcom/android/server/LockGuard;->dump(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;[Ljava/lang/String;)V

    goto/16 :goto_b

    .line 16617
    :cond_39
    move-object v1, v10

    move-object v2, v0

    move v6, v3

    move-object v3, v11

    move-object v5, v4

    move-object v14, v5

    move-object v5, v12

    move/from16 v24, v6

    move v13, v7

    move v7, v9

    move/from16 v25, v9

    move/from16 v9, v19

    invoke-virtual/range {v1 .. v9}, Lcom/android/server/am/ActivityManagerService;->dumpActivity(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;Ljava/lang/String;[Ljava/lang/String;IZZZ)Z

    move-result v1

    if-nez v1, :cond_40

    .line 16619
    new-instance v1, Lcom/android/server/am/ActivityManagerShellCommand;

    invoke-direct {v1, v10, v13}, Lcom/android/server/am/ActivityManagerShellCommand;-><init>(Lcom/android/server/am/ActivityManagerService;Z)V

    .line 16620
    const/4 v3, 0x0

    const/4 v5, 0x0

    const/4 v7, 0x0

    new-instance v8, Landroid/os/ResultReceiver;

    const/4 v2, 0x0

    invoke-direct {v8, v2}, Landroid/os/ResultReceiver;-><init>(Landroid/os/Handler;)V

    move-object v2, v10

    move-object v4, v0

    move-object v6, v12

    invoke-virtual/range {v1 .. v8}, Lcom/android/server/am/ActivityManagerShellCommand;->exec(Landroid/os/Binder;Ljava/io/FileDescriptor;Ljava/io/FileDescriptor;Ljava/io/FileDescriptor;[Ljava/lang/String;Landroid/os/ShellCallback;Landroid/os/ResultReceiver;)I

    move-result v1

    .line 16622
    if-gez v1, :cond_40

    .line 16623
    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string v2, "Bad activity command, or no activities match: "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v1, v14}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-virtual {v11, v1}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 16624
    const-string v1, "Use -h for help."

    invoke-virtual {v11, v1}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    goto/16 :goto_17

    .line 16600
    :cond_3a
    :goto_12
    move/from16 v24, v3

    move/from16 v25, v9

    if-eqz v16, :cond_3b

    .line 16602
    monitor-enter p0

    :try_start_12
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    .line 16603
    iget-object v1, v10, Lcom/android/server/am/ActivityManagerService;->mServices:Lcom/android/server/am/ActiveServices;

    const/4 v6, 0x1

    move-object v2, v0

    move-object v3, v11

    move-object v4, v12

    move/from16 v5, v24

    move-object v7, v15

    invoke-virtual/range {v1 .. v7}, Lcom/android/server/am/ActiveServices;->newServiceDumperLocked(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;[Ljava/lang/String;IZLjava/lang/String;)Lcom/android/server/am/ActiveServices$ServiceDumper;

    move-result-object v1

    .line 16605
    monitor-exit p0
    :try_end_12
    .catchall {:try_start_12 .. :try_end_12} :catchall_9

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    .line 16606
    invoke-virtual {v1}, Lcom/android/server/am/ActiveServices$ServiceDumper;->dumpWithClient()V

    .line 16607
    goto/16 :goto_17

    .line 16605
    :catchall_9
    move-exception v0

    :try_start_13
    monitor-exit p0
    :try_end_13
    .catchall {:try_start_13 .. :try_end_13} :catchall_9

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw v0

    .line 16608
    :cond_3b
    monitor-enter p0

    :try_start_14
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    .line 16609
    iget-object v1, v10, Lcom/android/server/am/ActivityManagerService;->mServices:Lcom/android/server/am/ActiveServices;

    const/4 v6, 0x1

    move-object v2, v0

    move-object v3, v11

    move-object v4, v12

    move/from16 v5, v24

    move-object v7, v15

    invoke-virtual/range {v1 .. v7}, Lcom/android/server/am/ActiveServices;->newServiceDumperLocked(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;[Ljava/lang/String;IZLjava/lang/String;)Lcom/android/server/am/ActiveServices$ServiceDumper;

    move-result-object v1

    .line 16610
    invoke-virtual {v1}, Lcom/android/server/am/ActiveServices$ServiceDumper;->dumpLocked()V

    .line 16611
    monitor-exit p0
    :try_end_14
    .catchall {:try_start_14 .. :try_end_14} :catchall_a

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    goto/16 :goto_17

    :catchall_a
    move-exception v0

    :try_start_15
    monitor-exit p0
    :try_end_15
    .catchall {:try_start_15 .. :try_end_15} :catchall_a

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw v0

    .line 16592
    :cond_3c
    :goto_13
    move/from16 v24, v3

    move/from16 v25, v9

    monitor-enter p0

    :try_start_16
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    .line 16593
    const/4 v6, 0x1

    move-object v1, v10

    move-object v2, v0

    move-object v3, v11

    move-object v4, v12

    move/from16 v5, v24

    move/from16 v7, v16

    move-object v8, v15

    invoke-virtual/range {v1 .. v8}, Lcom/android/server/am/ActivityManagerService;->dumpAssociationsLocked(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;[Ljava/lang/String;IZZLjava/lang/String;)V

    .line 16594
    monitor-exit p0
    :try_end_16
    .catchall {:try_start_16 .. :try_end_16} :catchall_b

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    goto/16 :goto_17

    :catchall_b
    move-exception v0

    :try_start_17
    monitor-exit p0
    :try_end_17
    .catchall {:try_start_17 .. :try_end_17} :catchall_b

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw v0

    .line 16556
    :cond_3d
    :goto_14
    move/from16 v24, v3

    move/from16 v25, v9

    monitor-enter p0

    :try_start_18
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    .line 16557
    const/4 v6, 0x1

    const/4 v7, 0x0

    move-object v1, v10

    move-object v2, v0

    move-object v3, v11

    move-object v4, v12

    move/from16 v5, v24

    invoke-virtual/range {v1 .. v7}, Lcom/android/server/am/ActivityManagerService;->dumpProvidersLocked(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;[Ljava/lang/String;IZLjava/lang/String;)V

    .line 16558
    monitor-exit p0
    :try_end_18
    .catchall {:try_start_18 .. :try_end_18} :catchall_c

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    goto :goto_17

    :catchall_c
    move-exception v0

    :try_start_19
    monitor-exit p0
    :try_end_19
    .catchall {:try_start_19 .. :try_end_19} :catchall_c

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw v0

    .line 16536
    :cond_3e
    :goto_15
    move/from16 v24, v3

    move/from16 v25, v9

    monitor-enter p0

    :try_start_1a
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    .line 16537
    const/4 v6, 0x1

    const/4 v7, 0x0

    move-object v1, v10

    move-object v2, v0

    move-object v3, v11

    move-object v4, v12

    move/from16 v5, v24

    invoke-virtual/range {v1 .. v7}, Lcom/android/server/am/ActivityManagerService;->dumpPermissionsLocked(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;[Ljava/lang/String;IZLjava/lang/String;)V

    .line 16538
    monitor-exit p0
    :try_end_1a
    .catchall {:try_start_1a .. :try_end_1a} :catchall_d

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    goto :goto_17

    :catchall_d
    move-exception v0

    :try_start_1b
    monitor-exit p0
    :try_end_1b
    .catchall {:try_start_1b .. :try_end_1b} :catchall_d

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw v0

    .line 16532
    :cond_3f
    :goto_16
    move/from16 v24, v3

    move/from16 v25, v9

    monitor-enter p0

    :try_start_1c
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    .line 16533
    const/4 v6, 0x1

    move-object v1, v10

    move-object v2, v0

    move-object v3, v11

    move-object v4, v12

    move/from16 v5, v24

    invoke-virtual/range {v1 .. v6}, Lcom/android/server/am/ActivityManagerService;->dumpOomLocked(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;[Ljava/lang/String;IZ)Z

    .line 16534
    monitor-exit p0
    :try_end_1c
    .catchall {:try_start_1c .. :try_end_1c} :catchall_e

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    .line 16628
    :cond_40
    :goto_17
    move/from16 v9, v24

    goto/16 :goto_1d

    .line 16534
    :catchall_e
    move-exception v0

    :try_start_1d
    monitor-exit p0
    :try_end_1d
    .catchall {:try_start_1d .. :try_end_1d} :catchall_e

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw v0

    .line 16524
    :cond_41
    :goto_18
    move/from16 v24, v3

    move/from16 v25, v9

    array-length v1, v12

    move/from16 v9, v24

    if-ge v9, v1, :cond_42

    .line 16525
    aget-object v1, v12, v9

    .line 16526
    add-int/lit8 v3, v9, 0x1

    .line 16528
    move-object v15, v1

    move v9, v3

    :cond_42
    monitor-enter p0

    :try_start_1e
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    .line 16529
    const/4 v6, 0x1

    move-object v1, v10

    move-object v2, v0

    move-object v3, v11

    move-object v4, v12

    move v5, v9

    move-object v7, v15

    move/from16 v8, v21

    invoke-virtual/range {v1 .. v8}, Lcom/android/server/am/ActivityManagerService;->dumpProcessesLocked(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;[Ljava/lang/String;IZLjava/lang/String;I)V

    .line 16530
    monitor-exit p0
    :try_end_1e
    .catchall {:try_start_1e .. :try_end_1e} :catchall_f

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    goto/16 :goto_1d

    :catchall_f
    move-exception v0

    :try_start_1f
    monitor-exit p0
    :try_end_1f
    .catchall {:try_start_1f .. :try_end_1f} :catchall_f

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw v0

    .line 16516
    :cond_43
    :goto_19
    move/from16 v25, v9

    move v9, v3

    array-length v1, v12

    if-ge v9, v1, :cond_44

    .line 16517
    aget-object v1, v12, v9

    .line 16518
    add-int/lit8 v3, v9, 0x1

    .line 16520
    move-object v15, v1

    move v9, v3

    :cond_44
    monitor-enter p0

    :try_start_20
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    .line 16521
    const/4 v6, 0x1

    move-object v1, v10

    move-object v2, v0

    move-object v3, v11

    move-object v4, v12

    move v5, v9

    move-object v7, v15

    invoke-virtual/range {v1 .. v7}, Lcom/android/server/am/ActivityManagerService;->dumpPendingIntentsLocked(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;[Ljava/lang/String;IZLjava/lang/String;)V

    .line 16522
    monitor-exit p0
    :try_end_20
    .catchall {:try_start_20 .. :try_end_20} :catchall_10

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    goto/16 :goto_1d

    :catchall_10
    move-exception v0

    :try_start_21
    monitor-exit p0
    :try_end_21
    .catchall {:try_start_21 .. :try_end_21} :catchall_10

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw v0

    .line 16495
    :cond_45
    :goto_1a
    move-wide/from16 v22, v5

    move/from16 v25, v9

    move v9, v3

    array-length v1, v12

    if-ge v9, v1, :cond_46

    .line 16496
    aget-object v1, v12, v9

    .line 16497
    add-int/lit8 v3, v9, 0x1

    .line 16499
    move-object v15, v1

    move v9, v3

    :cond_46
    monitor-enter p0

    :try_start_22
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    .line 16500
    const/4 v6, 0x1

    move-object v1, v10

    move-object v2, v0

    move-object v3, v11

    move-object v4, v12

    move v5, v9

    move-object v7, v15

    invoke-virtual/range {v1 .. v7}, Lcom/android/server/am/ActivityManagerService;->dumpBroadcastsLocked(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;[Ljava/lang/String;IZLjava/lang/String;)V

    .line 16501
    monitor-exit p0
    :try_end_22
    .catchall {:try_start_22 .. :try_end_22} :catchall_11

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    goto :goto_1d

    :catchall_11
    move-exception v0

    :try_start_23
    monitor-exit p0
    :try_end_23
    .catchall {:try_start_23 .. :try_end_23} :catchall_11

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw v0

    .line 16476
    :cond_47
    :goto_1b
    move-wide/from16 v22, v5

    move v13, v7

    move/from16 v25, v9

    move v9, v3

    monitor-enter p0

    :try_start_24
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    .line 16477
    iget-object v1, v10, Lcom/android/server/am/ActivityManagerService;->mRecentTasks:Lcom/android/server/am/RecentTasks;

    if-eqz v1, :cond_48

    .line 16478
    iget-object v1, v10, Lcom/android/server/am/ActivityManagerService;->mRecentTasks:Lcom/android/server/am/RecentTasks;

    invoke-virtual {v1, v11, v13, v15}, Lcom/android/server/am/RecentTasks;->dump(Ljava/io/PrintWriter;ZLjava/lang/String;)V

    .line 16480
    :cond_48
    monitor-exit p0
    :try_end_24
    .catchall {:try_start_24 .. :try_end_24} :catchall_12

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    goto :goto_1d

    :catchall_12
    move-exception v0

    :try_start_25
    monitor-exit p0
    :try_end_25
    .catchall {:try_start_25 .. :try_end_25} :catchall_12

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw v0

    .line 16460
    :cond_49
    :goto_1c
    move-wide/from16 v22, v5

    move/from16 v25, v9

    move v9, v3

    monitor-enter p0

    :try_start_26
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    .line 16461
    const/4 v6, 0x1

    move-object v1, v10

    move-object v2, v0

    move-object v3, v11

    move-object v4, v12

    move v5, v9

    move/from16 v7, v16

    move-object v8, v15

    invoke-virtual/range {v1 .. v8}, Lcom/android/server/am/ActivityManagerService;->dumpActivitiesLocked(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;[Ljava/lang/String;IZZLjava/lang/String;)V

    .line 16462
    monitor-exit p0
    :try_end_26
    .catchall {:try_start_26 .. :try_end_26} :catchall_13

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    .line 16628
    :goto_1d
    const/4 v14, 0x0

    :goto_1e
    if-nez v14, :cond_4a

    .line 16629
    move-wide/from16 v13, v22

    invoke-static {v13, v14}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 16630
    return-void

    .line 16635
    :cond_4a
    move-wide/from16 v13, v22

    goto :goto_1f

    .line 16462
    :catchall_13
    move-exception v0

    :try_start_27
    monitor-exit p0
    :try_end_27
    .catchall {:try_start_27 .. :try_end_27} :catchall_13

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw v0

    .line 16635
    :cond_4b
    move-wide v13, v5

    move/from16 v25, v9

    move v9, v1

    :goto_1f
    if-eqz v18, :cond_4c

    .line 16636
    move-object v1, v10

    move-object v2, v0

    move-object v3, v11

    move-object v4, v12

    move v5, v9

    move/from16 v6, v17

    move-object v7, v15

    invoke-virtual/range {v1 .. v7}, Lcom/android/server/am/ActivityManagerService;->dumpBroadcastStatsCheckinLocked(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;[Ljava/lang/String;IZLjava/lang/String;)V

    .line 16799
    move-wide/from16 v26, v13

    goto/16 :goto_20

    .line 16637
    :cond_4c
    if-eqz v16, :cond_5d

    .line 16639
    monitor-enter p0

    :try_start_28
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    .line 16640
    iget-object v1, v10, Lcom/android/server/am/ActivityManagerService;->mConstants:Lcom/android/server/am/ActivityManagerConstants;

    invoke-virtual {v1, v11}, Lcom/android/server/am/ActivityManagerConstants;->dump(Ljava/io/PrintWriter;)V

    .line 16641
    invoke-virtual/range {p2 .. p2}, Ljava/io/PrintWriter;->println()V

    .line 16642
    move/from16 v8, v25

    if-eqz v8, :cond_4d

    .line 16643
    const-string v1, "-------------------------------------------------------------------------------"

    invoke-virtual {v11, v1}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 16645
    :cond_4d
    move-object v1, v10

    move-object v2, v0

    move-object v3, v11

    move-object v4, v12

    move v5, v9

    move v6, v8

    move-object v7, v15

    invoke-virtual/range {v1 .. v7}, Lcom/android/server/am/ActivityManagerService;->dumpPendingIntentsLocked(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;[Ljava/lang/String;IZLjava/lang/String;)V

    .line 16646
    invoke-virtual/range {p2 .. p2}, Ljava/io/PrintWriter;->println()V

    .line 16647
    if-eqz v8, :cond_4e

    .line 16648
    const-string v1, "-------------------------------------------------------------------------------"

    invoke-virtual {v11, v1}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 16650
    :cond_4e
    move-object v1, v10

    move-object v2, v0

    move-object v3, v11

    move-object v4, v12

    move v5, v9

    move v6, v8

    move-object v7, v15

    invoke-virtual/range {v1 .. v7}, Lcom/android/server/am/ActivityManagerService;->dumpBroadcastsLocked(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;[Ljava/lang/String;IZLjava/lang/String;)V

    .line 16651
    invoke-virtual/range {p2 .. p2}, Ljava/io/PrintWriter;->println()V

    .line 16652
    if-eqz v8, :cond_4f

    .line 16653
    const-string v1, "-------------------------------------------------------------------------------"

    invoke-virtual {v11, v1}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 16655
    :cond_4f
    if-nez v8, :cond_50

    if-eqz v15, :cond_51

    .line 16656
    :cond_50
    move-object v1, v10

    move-object v2, v0

    move-object v3, v11

    move-object v4, v12

    move v5, v9

    move v6, v8

    move-object v7, v15

    invoke-virtual/range {v1 .. v7}, Lcom/android/server/am/ActivityManagerService;->dumpBroadcastStatsLocked(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;[Ljava/lang/String;IZLjava/lang/String;)V

    .line 16657
    invoke-virtual/range {p2 .. p2}, Ljava/io/PrintWriter;->println()V

    .line 16658
    if-eqz v8, :cond_51

    .line 16659
    const-string v1, "-------------------------------------------------------------------------------"

    invoke-virtual {v11, v1}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 16662
    :cond_51
    move-object v1, v10

    move-object v2, v0

    move-object v3, v11

    move-object v4, v12

    move v5, v9

    move v6, v8

    move-object v7, v15

    invoke-virtual/range {v1 .. v7}, Lcom/android/server/am/ActivityManagerService;->dumpProvidersLocked(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;[Ljava/lang/String;IZLjava/lang/String;)V

    .line 16663
    invoke-virtual/range {p2 .. p2}, Ljava/io/PrintWriter;->println()V

    .line 16664
    if-eqz v8, :cond_52

    .line 16665
    const-string v1, "-------------------------------------------------------------------------------"

    invoke-virtual {v11, v1}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 16667
    :cond_52
    move-object v1, v10

    move-object v2, v0

    move-object v3, v11

    move-object v4, v12

    move v5, v9

    move v6, v8

    move-object v7, v15

    invoke-virtual/range {v1 .. v7}, Lcom/android/server/am/ActivityManagerService;->dumpPermissionsLocked(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;[Ljava/lang/String;IZLjava/lang/String;)V

    .line 16668
    invoke-virtual/range {p2 .. p2}, Ljava/io/PrintWriter;->println()V

    .line 16669
    if-eqz v8, :cond_53

    .line 16670
    const-string v1, "-------------------------------------------------------------------------------"

    invoke-virtual {v11, v1}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 16672
    :cond_53
    iget-object v1, v10, Lcom/android/server/am/ActivityManagerService;->mServices:Lcom/android/server/am/ActiveServices;

    move-object v2, v0

    move-object v3, v11

    move-object v4, v12

    move v5, v9

    move v6, v8

    move-object v7, v15

    invoke-virtual/range {v1 .. v7}, Lcom/android/server/am/ActiveServices;->newServiceDumperLocked(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;[Ljava/lang/String;IZLjava/lang/String;)Lcom/android/server/am/ActiveServices$ServiceDumper;

    move-result-object v1

    .line 16674
    monitor-exit p0
    :try_end_28
    .catchall {:try_start_28 .. :try_end_28} :catchall_15

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    .line 16675
    invoke-virtual {v1}, Lcom/android/server/am/ActiveServices$ServiceDumper;->dumpWithClient()V

    .line 16676
    invoke-virtual/range {p2 .. p2}, Ljava/io/PrintWriter;->println()V

    .line 16677
    monitor-enter p0

    :try_start_29
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    .line 16678
    if-eqz v8, :cond_54

    .line 16679
    const-string v1, "-------------------------------------------------------------------------------"

    invoke-virtual {v11, v1}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 16681
    :cond_54
    iget-object v1, v10, Lcom/android/server/am/ActivityManagerService;->mRecentTasks:Lcom/android/server/am/RecentTasks;

    if-eqz v1, :cond_55

    .line 16682
    iget-object v1, v10, Lcom/android/server/am/ActivityManagerService;->mRecentTasks:Lcom/android/server/am/RecentTasks;

    invoke-virtual {v1, v11, v8, v15}, Lcom/android/server/am/RecentTasks;->dump(Ljava/io/PrintWriter;ZLjava/lang/String;)V

    .line 16684
    :cond_55
    invoke-virtual/range {p2 .. p2}, Ljava/io/PrintWriter;->println()V

    .line 16685
    if-eqz v8, :cond_56

    .line 16686
    const-string v1, "-------------------------------------------------------------------------------"

    invoke-virtual {v11, v1}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 16688
    :cond_56
    invoke-direct {v10, v11}, Lcom/android/server/am/ActivityManagerService;->dumpLastANRLocked(Ljava/io/PrintWriter;)V

    .line 16689
    invoke-virtual/range {p2 .. p2}, Ljava/io/PrintWriter;->println()V

    .line 16690
    if-eqz v8, :cond_57

    .line 16691
    const-string v1, "-------------------------------------------------------------------------------"

    invoke-virtual {v11, v1}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 16693
    :cond_57
    invoke-direct {v10, v11, v15}, Lcom/android/server/am/ActivityManagerService;->dumpActivityStarterLocked(Ljava/io/PrintWriter;Ljava/lang/String;)V

    .line 16694
    invoke-virtual/range {p2 .. p2}, Ljava/io/PrintWriter;->println()V

    .line 16695
    if-eqz v8, :cond_58

    .line 16696
    const-string v1, "-------------------------------------------------------------------------------"

    invoke-virtual {v11, v1}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 16698
    :cond_58
    invoke-direct {v10, v11}, Lcom/android/server/am/ActivityManagerService;->dumpActivityContainersLocked(Ljava/io/PrintWriter;)V

    .line 16699
    invoke-virtual/range {p2 .. p2}, Ljava/io/PrintWriter;->println()V

    .line 16700
    if-eqz v8, :cond_59

    .line 16701
    const-string v1, "-------------------------------------------------------------------------------"

    invoke-virtual {v11, v1}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 16703
    :cond_59
    move-object v1, v10

    move-object v2, v0

    move-object v3, v11

    move-object v4, v12

    move v5, v9

    move v6, v8

    move/from16 v7, v16

    move-wide/from16 v26, v13

    move v13, v8

    move-object v8, v15

    invoke-virtual/range {v1 .. v8}, Lcom/android/server/am/ActivityManagerService;->dumpActivitiesLocked(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;[Ljava/lang/String;IZZLjava/lang/String;)V

    .line 16704
    iget-object v1, v10, Lcom/android/server/am/ActivityManagerService;->mAssociations:Landroid/util/SparseArray;

    invoke-virtual {v1}, Landroid/util/SparseArray;->size()I

    move-result v1

    if-lez v1, :cond_5b

    .line 16705
    invoke-virtual/range {p2 .. p2}, Ljava/io/PrintWriter;->println()V

    .line 16706
    if-eqz v13, :cond_5a

    .line 16707
    const-string v1, "-------------------------------------------------------------------------------"

    invoke-virtual {v11, v1}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 16709
    :cond_5a
    move-object v1, v10

    move-object v2, v0

    move-object v3, v11

    move-object v4, v12

    move v5, v9

    move v6, v13

    move/from16 v7, v16

    move-object v8, v15

    invoke-virtual/range {v1 .. v8}, Lcom/android/server/am/ActivityManagerService;->dumpAssociationsLocked(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;[Ljava/lang/String;IZZLjava/lang/String;)V

    .line 16711
    :cond_5b
    invoke-virtual/range {p2 .. p2}, Ljava/io/PrintWriter;->println()V

    .line 16712
    if-eqz v13, :cond_5c

    .line 16713
    const-string v1, "-------------------------------------------------------------------------------"

    invoke-virtual {v11, v1}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 16715
    :cond_5c
    move-object v1, v10

    move-object v2, v0

    move-object v3, v11

    move-object v4, v12

    move v5, v9

    move v6, v13

    move-object v7, v15

    move/from16 v8, v21

    invoke-virtual/range {v1 .. v8}, Lcom/android/server/am/ActivityManagerService;->dumpProcessesLocked(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;[Ljava/lang/String;IZLjava/lang/String;I)V

    .line 16716
    monitor-exit p0
    :try_end_29
    .catchall {:try_start_29 .. :try_end_29} :catchall_14

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    .line 16718
    goto/16 :goto_20

    .line 16716
    :catchall_14
    move-exception v0

    :try_start_2a
    monitor-exit p0
    :try_end_2a
    .catchall {:try_start_2a .. :try_end_2a} :catchall_14

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw v0

    .line 16674
    :catchall_15
    move-exception v0

    :try_start_2b
    monitor-exit p0
    :try_end_2b
    .catchall {:try_start_2b .. :try_end_2b} :catchall_15

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw v0

    .line 16719
    :cond_5d
    move-wide/from16 v26, v13

    move/from16 v13, v25

    monitor-enter p0

    :try_start_2c
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    .line 16720
    iget-object v1, v10, Lcom/android/server/am/ActivityManagerService;->mConstants:Lcom/android/server/am/ActivityManagerConstants;

    invoke-virtual {v1, v11}, Lcom/android/server/am/ActivityManagerConstants;->dump(Ljava/io/PrintWriter;)V

    .line 16721
    invoke-virtual/range {p2 .. p2}, Ljava/io/PrintWriter;->println()V

    .line 16722
    if-eqz v13, :cond_5e

    .line 16723
    const-string v1, "-------------------------------------------------------------------------------"

    invoke-virtual {v11, v1}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 16725
    :cond_5e
    move-object v1, v10

    move-object v2, v0

    move-object v3, v11

    move-object v4, v12

    move v5, v9

    move v6, v13

    move-object v7, v15

    invoke-virtual/range {v1 .. v7}, Lcom/android/server/am/ActivityManagerService;->dumpPendingIntentsLocked(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;[Ljava/lang/String;IZLjava/lang/String;)V

    .line 16726
    invoke-virtual/range {p2 .. p2}, Ljava/io/PrintWriter;->println()V

    .line 16727
    if-eqz v13, :cond_5f

    .line 16728
    const-string v1, "-------------------------------------------------------------------------------"

    invoke-virtual {v11, v1}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 16730
    :cond_5f
    move-object v1, v10

    move-object v2, v0

    move-object v3, v11

    move-object v4, v12

    move v5, v9

    move v6, v13

    move-object v7, v15

    invoke-virtual/range {v1 .. v7}, Lcom/android/server/am/ActivityManagerService;->dumpBroadcastsLocked(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;[Ljava/lang/String;IZLjava/lang/String;)V

    .line 16731
    invoke-virtual/range {p2 .. p2}, Ljava/io/PrintWriter;->println()V

    .line 16732
    if-eqz v13, :cond_60

    .line 16733
    const-string v1, "-------------------------------------------------------------------------------"

    invoke-virtual {v11, v1}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 16735
    :cond_60
    if-nez v13, :cond_61

    if-eqz v15, :cond_62

    .line 16736
    :cond_61
    move-object v1, v10

    move-object v2, v0

    move-object v3, v11

    move-object v4, v12

    move v5, v9

    move v6, v13

    move-object v7, v15

    invoke-virtual/range {v1 .. v7}, Lcom/android/server/am/ActivityManagerService;->dumpBroadcastStatsLocked(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;[Ljava/lang/String;IZLjava/lang/String;)V

    .line 16737
    invoke-virtual/range {p2 .. p2}, Ljava/io/PrintWriter;->println()V

    .line 16738
    if-eqz v13, :cond_62

    .line 16739
    const-string v1, "-------------------------------------------------------------------------------"

    invoke-virtual {v11, v1}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 16742
    :cond_62
    move-object v1, v10

    move-object v2, v0

    move-object v3, v11

    move-object v4, v12

    move v5, v9

    move v6, v13

    move-object v7, v15

    invoke-virtual/range {v1 .. v7}, Lcom/android/server/am/ActivityManagerService;->dumpProvidersLocked(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;[Ljava/lang/String;IZLjava/lang/String;)V

    .line 16743
    invoke-virtual/range {p2 .. p2}, Ljava/io/PrintWriter;->println()V

    .line 16744
    if-eqz v13, :cond_63

    .line 16745
    const-string v1, "-------------------------------------------------------------------------------"

    invoke-virtual {v11, v1}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 16747
    :cond_63
    move-object v1, v10

    move-object v2, v0

    move-object v3, v11

    move-object v4, v12

    move v5, v9

    move v6, v13

    move-object v7, v15

    invoke-virtual/range {v1 .. v7}, Lcom/android/server/am/ActivityManagerService;->dumpPermissionsLocked(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;[Ljava/lang/String;IZLjava/lang/String;)V

    .line 16748
    invoke-virtual/range {p2 .. p2}, Ljava/io/PrintWriter;->println()V

    .line 16749
    if-eqz v13, :cond_64

    .line 16750
    const-string v1, "-------------------------------------------------------------------------------"

    invoke-virtual {v11, v1}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 16752
    :cond_64
    iget-object v1, v10, Lcom/android/server/am/ActivityManagerService;->mServices:Lcom/android/server/am/ActiveServices;

    move-object v2, v0

    move-object v3, v11

    move-object v4, v12

    move v5, v9

    move v6, v13

    move-object v7, v15

    invoke-virtual/range {v1 .. v7}, Lcom/android/server/am/ActiveServices;->newServiceDumperLocked(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;[Ljava/lang/String;IZLjava/lang/String;)Lcom/android/server/am/ActiveServices$ServiceDumper;

    move-result-object v1

    .line 16753
    invoke-virtual {v1}, Lcom/android/server/am/ActiveServices$ServiceDumper;->dumpLocked()V

    .line 16754
    invoke-virtual/range {p2 .. p2}, Ljava/io/PrintWriter;->println()V

    .line 16755
    if-eqz v13, :cond_65

    .line 16756
    const-string v1, "-------------------------------------------------------------------------------"

    invoke-virtual {v11, v1}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 16758
    :cond_65
    iget-object v1, v10, Lcom/android/server/am/ActivityManagerService;->mRecentTasks:Lcom/android/server/am/RecentTasks;

    if-eqz v1, :cond_66

    .line 16759
    iget-object v1, v10, Lcom/android/server/am/ActivityManagerService;->mRecentTasks:Lcom/android/server/am/RecentTasks;

    invoke-virtual {v1, v11, v13, v15}, Lcom/android/server/am/RecentTasks;->dump(Ljava/io/PrintWriter;ZLjava/lang/String;)V

    .line 16761
    :cond_66
    invoke-virtual/range {p2 .. p2}, Ljava/io/PrintWriter;->println()V

    .line 16762
    if-eqz v13, :cond_67

    .line 16763
    const-string v1, "-------------------------------------------------------------------------------"

    invoke-virtual {v11, v1}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 16765
    :cond_67
    invoke-direct {v10, v11}, Lcom/android/server/am/ActivityManagerService;->dumpLastANRLocked(Ljava/io/PrintWriter;)V

    .line 16766
    invoke-virtual/range {p2 .. p2}, Ljava/io/PrintWriter;->println()V

    .line 16767
    if-eqz v13, :cond_68

    .line 16768
    const-string v1, "-------------------------------------------------------------------------------"

    invoke-virtual {v11, v1}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 16770
    :cond_68
    invoke-direct {v10, v11, v15}, Lcom/android/server/am/ActivityManagerService;->dumpActivityStarterLocked(Ljava/io/PrintWriter;Ljava/lang/String;)V

    .line 16771
    invoke-virtual/range {p2 .. p2}, Ljava/io/PrintWriter;->println()V

    .line 16772
    if-eqz v13, :cond_69

    .line 16773
    const-string v1, "-------------------------------------------------------------------------------"

    invoke-virtual {v11, v1}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 16775
    :cond_69
    invoke-direct {v10, v11}, Lcom/android/server/am/ActivityManagerService;->dumpActivityContainersLocked(Ljava/io/PrintWriter;)V

    .line 16778
    if-nez v20, :cond_6b

    .line 16779
    invoke-virtual/range {p2 .. p2}, Ljava/io/PrintWriter;->println()V

    .line 16780
    if-eqz v13, :cond_6a

    .line 16781
    const-string v1, "-------------------------------------------------------------------------------"

    invoke-virtual {v11, v1}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 16783
    :cond_6a
    move-object v1, v10

    move-object v2, v0

    move-object v3, v11

    move-object v4, v12

    move v5, v9

    move v6, v13

    move/from16 v7, v16

    move-object v8, v15

    invoke-virtual/range {v1 .. v8}, Lcom/android/server/am/ActivityManagerService;->dumpActivitiesLocked(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;[Ljava/lang/String;IZZLjava/lang/String;)V

    .line 16785
    :cond_6b
    iget-object v1, v10, Lcom/android/server/am/ActivityManagerService;->mAssociations:Landroid/util/SparseArray;

    invoke-virtual {v1}, Landroid/util/SparseArray;->size()I

    move-result v1

    if-lez v1, :cond_6d

    .line 16786
    invoke-virtual/range {p2 .. p2}, Ljava/io/PrintWriter;->println()V

    .line 16787
    if-eqz v13, :cond_6c

    .line 16788
    const-string v1, "-------------------------------------------------------------------------------"

    invoke-virtual {v11, v1}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 16790
    :cond_6c
    move-object v1, v10

    move-object v2, v0

    move-object v3, v11

    move-object v4, v12

    move v5, v9

    move v6, v13

    move/from16 v7, v16

    move-object v8, v15

    invoke-virtual/range {v1 .. v8}, Lcom/android/server/am/ActivityManagerService;->dumpAssociationsLocked(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;[Ljava/lang/String;IZZLjava/lang/String;)V

    .line 16792
    :cond_6d
    invoke-virtual/range {p2 .. p2}, Ljava/io/PrintWriter;->println()V

    .line 16793
    if-eqz v13, :cond_6e

    .line 16794
    const-string v1, "-------------------------------------------------------------------------------"

    invoke-virtual {v11, v1}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 16796
    :cond_6e
    move-object v1, v10

    move-object v2, v0

    move-object v3, v11

    move-object v4, v12

    move v5, v9

    move v6, v13

    move-object v7, v15

    move/from16 v8, v21

    invoke-virtual/range {v1 .. v8}, Lcom/android/server/am/ActivityManagerService;->dumpProcessesLocked(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;[Ljava/lang/String;IZLjava/lang/String;I)V

    .line 16797
    monitor-exit p0
    :try_end_2c
    .catchall {:try_start_2c .. :try_end_2c} :catchall_16

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    .line 16799
    :goto_20
    move-wide/from16 v0, v26

    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 16800
    return-void

    .line 16797
    :catchall_16
    move-exception v0

    :try_start_2d
    monitor-exit p0
    :try_end_2d
    .catchall {:try_start_2d .. :try_end_2d} :catchall_16

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw v0
.end method

.method private dumpActivity(Ljava/lang/String;Ljava/io/FileDescriptor;Ljava/io/PrintWriter;Lcom/android/server/am/ActivityRecord;[Ljava/lang/String;Z)V
    .locals 2

    .line 18065
    new-instance v0, Ljava/lang/StringBuilder;

    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V

    invoke-virtual {v0, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v1, "  "

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    .line 18066
    monitor-enter p0

    :try_start_0
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    .line 18067
    invoke-virtual {p3, p1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    const-string p1, "ACTIVITY "

    invoke-virtual {p3, p1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    iget-object p1, p4, Lcom/android/server/am/ActivityRecord;->shortComponentName:Ljava/lang/String;

    invoke-virtual {p3, p1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 18068
    const-string p1, " "

    invoke-virtual {p3, p1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    invoke-static {p4}, Ljava/lang/System;->identityHashCode(Ljava/lang/Object;)I

    move-result p1

    invoke-static {p1}, Ljava/lang/Integer;->toHexString(I)Ljava/lang/String;

    move-result-object p1

    invoke-virtual {p3, p1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 18069
    const-string p1, " pid="

    invoke-virtual {p3, p1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 18070
    iget-object p1, p4, Lcom/android/server/am/ActivityRecord;->app:Lcom/android/server/am/ProcessRecord;

    if-eqz p1, :cond_0

    iget-object p1, p4, Lcom/android/server/am/ActivityRecord;->app:Lcom/android/server/am/ProcessRecord;

    iget p1, p1, Lcom/android/server/am/ProcessRecord;->pid:I

    invoke-virtual {p3, p1}, Ljava/io/PrintWriter;->println(I)V

    goto :goto_0

    .line 18071
    :cond_0
    const-string p1, "(not running)"

    invoke-virtual {p3, p1}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 18072
    :goto_0
    if-eqz p6, :cond_1

    .line 18073
    invoke-virtual {p4, p3, v0}, Lcom/android/server/am/ActivityRecord;->dump(Ljava/io/PrintWriter;Ljava/lang/String;)V

    .line 18075
    :cond_1
    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_1

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    .line 18076
    iget-object p1, p4, Lcom/android/server/am/ActivityRecord;->app:Lcom/android/server/am/ProcessRecord;

    if-eqz p1, :cond_2

    iget-object p1, p4, Lcom/android/server/am/ActivityRecord;->app:Lcom/android/server/am/ProcessRecord;

    iget-object p1, p1, Lcom/android/server/am/ProcessRecord;->thread:Landroid/app/IApplicationThread;

    if-eqz p1, :cond_2

    .line 18079
    invoke-virtual {p3}, Ljava/io/PrintWriter;->flush()V

    .line 18081
    :try_start_1
    new-instance p1, Lcom/android/internal/os/TransferPipe;

    invoke-direct {p1}, Lcom/android/internal/os/TransferPipe;-><init>()V
    :try_end_1
    .catch Ljava/io/IOException; {:try_start_1 .. :try_end_1} :catch_1
    .catch Landroid/os/RemoteException; {:try_start_1 .. :try_end_1} :catch_0

    .line 18083
    :try_start_2
    iget-object p6, p4, Lcom/android/server/am/ActivityRecord;->app:Lcom/android/server/am/ProcessRecord;

    iget-object p6, p6, Lcom/android/server/am/ProcessRecord;->thread:Landroid/app/IApplicationThread;

    invoke-virtual {p1}, Lcom/android/internal/os/TransferPipe;->getWriteFd()Landroid/os/ParcelFileDescriptor;

    move-result-object v1

    iget-object p4, p4, Lcom/android/server/am/ActivityRecord;->appToken:Landroid/view/IApplicationToken$Stub;

    invoke-interface {p6, v1, p4, v0, p5}, Landroid/app/IApplicationThread;->dumpActivity(Landroid/os/ParcelFileDescriptor;Landroid/os/IBinder;Ljava/lang/String;[Ljava/lang/String;)V

    .line 18085
    invoke-virtual {p1, p2}, Lcom/android/internal/os/TransferPipe;->go(Ljava/io/FileDescriptor;)V
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    .line 18087
    :try_start_3
    invoke-virtual {p1}, Lcom/android/internal/os/TransferPipe;->kill()V

    .line 18088
    goto :goto_1

    .line 18087
    :catchall_0
    move-exception p2

    invoke-virtual {p1}, Lcom/android/internal/os/TransferPipe;->kill()V

    throw p2
    :try_end_3
    .catch Ljava/io/IOException; {:try_start_3 .. :try_end_3} :catch_1
    .catch Landroid/os/RemoteException; {:try_start_3 .. :try_end_3} :catch_0

    .line 18091
    :catch_0
    move-exception p1

    .line 18092
    new-instance p1, Ljava/lang/StringBuilder;

    invoke-direct {p1}, Ljava/lang/StringBuilder;-><init>()V

    invoke-virtual {p1, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string p2, "Got a RemoteException while dumping the activity"

    invoke-virtual {p1, p2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {p1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object p1

    invoke-virtual {p3, p1}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    goto :goto_2

    .line 18089
    :catch_1
    move-exception p1

    .line 18090
    new-instance p2, Ljava/lang/StringBuilder;

    invoke-direct {p2}, Ljava/lang/StringBuilder;-><init>()V

    invoke-virtual {p2, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string p4, "Failure while dumping the activity: "

    invoke-virtual {p2, p4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {p2, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    invoke-virtual {p2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object p1

    invoke-virtual {p3, p1}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 18093
    :goto_1
    nop

    .line 18095
    :cond_2
    :goto_2
    return-void

    .line 18075
    :catchall_1
    move-exception p1

    :try_start_4
    monitor-exit p0
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_1

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw p1
.end method

.method private dumpActivityContainersLocked(Ljava/io/PrintWriter;)V
    .locals 2

    .line 16817
    const-string v0, "ACTIVITY MANAGER STARTER (dumpsys activity containers)"

    invoke-virtual {p1, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 16818
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mStackSupervisor:Lcom/android/server/am/ActivityStackSupervisor;

    const-string v1, " "

    invoke-virtual {v0, p1, v1}, Lcom/android/server/am/ActivityStackSupervisor;->dumpChildrenNames(Ljava/io/PrintWriter;Ljava/lang/String;)V

    .line 16819
    const-string v0, " "

    invoke-virtual {p1, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 16820
    return-void
.end method

.method private dumpActivityStarterLocked(Ljava/io/PrintWriter;Ljava/lang/String;)V
    .locals 2

    .line 16823
    const-string v0, "ACTIVITY MANAGER STARTER (dumpsys activity starter)"

    invoke-virtual {p1, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 16824
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mActivityStartController:Lcom/android/server/am/ActivityStartController;

    const-string v1, ""

    invoke-virtual {v0, p1, v1, p2}, Lcom/android/server/am/ActivityStartController;->dump(Ljava/io/PrintWriter;Ljava/lang/String;Ljava/lang/String;)V

    .line 16825
    return-void
.end method

.method private final dumpApplicationMemoryUsage(Ljava/io/FileDescriptor;Lcom/android/server/am/ActivityManagerService$MemoryUsageDumpOptions;[Ljava/lang/String;ZLjava/util/ArrayList;)V
    .locals 102
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "(",
            "Ljava/io/FileDescriptor;",
            "Lcom/android/server/am/ActivityManagerService$MemoryUsageDumpOptions;",
            "[",
            "Ljava/lang/String;",
            "Z",
            "Ljava/util/ArrayList<",
            "Lcom/android/server/am/ProcessRecord;",
            ">;)V"
        }
    .end annotation

    move-object/from16 v1, p0

    move-object/from16 v2, p1

    move-object/from16 v3, p2

    move-object/from16 v12, p3

    .line 19626
    move-object/from16 v14, p5

    invoke-static {}, Landroid/os/SystemClock;->uptimeMillis()J

    move-result-wide v4

    .line 19627
    invoke-static {}, Landroid/os/SystemClock;->elapsedRealtime()J

    move-result-wide v6

    .line 19628
    const/4 v15, 0x1

    new-array v11, v15, [J

    .line 19630
    const/4 v8, 0x0

    if-nez v14, :cond_9

    .line 19632
    nop

    .line 19633
    array-length v0, v12

    if-lez v0, :cond_8

    .line 19634
    aget-object v0, v12, v8

    .line 19635
    invoke-virtual {v0, v8}, Ljava/lang/String;->charAt(I)C

    move-result v0

    const/16 v14, 0x2d

    if-eq v0, v14, :cond_8

    .line 19636
    new-instance v14, Ljava/util/ArrayList;

    invoke-direct {v14}, Ljava/util/ArrayList;-><init>()V

    .line 19638
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/am/ActivityManagerService;->updateCpuStatsNow()V

    .line 19639
    nop

    .line 19641
    :try_start_0
    aget-object v0, v12, v8

    invoke-static {v0}, Ljava/lang/Integer;->parseInt(Ljava/lang/String;)I

    move-result v0
    :try_end_0
    .catch Ljava/lang/NumberFormatException; {:try_start_0 .. :try_end_0} :catch_0

    .line 19643
    goto :goto_0

    .line 19642
    :catch_0
    move-exception v0

    .line 19644
    const/4 v0, -0x1

    :goto_0
    iget-object v15, v1, Lcom/android/server/am/ActivityManagerService;->mProcessCpuTracker:Lcom/android/internal/os/ProcessCpuTracker;

    monitor-enter v15

    .line 19645
    :try_start_1
    iget-object v9, v1, Lcom/android/server/am/ActivityManagerService;->mProcessCpuTracker:Lcom/android/internal/os/ProcessCpuTracker;

    invoke-virtual {v9}, Lcom/android/internal/os/ProcessCpuTracker;->countStats()I

    move-result v9

    .line 19646
    move v10, v8

    :goto_1
    if-ge v10, v9, :cond_3

    .line 19647
    iget-object v8, v1, Lcom/android/server/am/ActivityManagerService;->mProcessCpuTracker:Lcom/android/internal/os/ProcessCpuTracker;

    invoke-virtual {v8, v10}, Lcom/android/internal/os/ProcessCpuTracker;->getStats(I)Lcom/android/internal/os/ProcessCpuTracker$Stats;

    move-result-object v8

    .line 19648
    move/from16 v26, v9

    iget v9, v8, Lcom/android/internal/os/ProcessCpuTracker$Stats;->pid:I

    if-eq v9, v0, :cond_1

    iget-object v9, v8, Lcom/android/internal/os/ProcessCpuTracker$Stats;->baseName:Ljava/lang/String;

    if-eqz v9, :cond_0

    iget-object v9, v8, Lcom/android/internal/os/ProcessCpuTracker$Stats;->baseName:Ljava/lang/String;

    move/from16 v27, v0

    const/16 v25, 0x0

    aget-object v0, v12, v25

    .line 19649
    invoke-virtual {v9, v0}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v0

    if-eqz v0, :cond_2

    goto :goto_2

    .line 19646
    :cond_0
    move/from16 v27, v0

    goto :goto_3

    .line 19650
    :cond_1
    move/from16 v27, v0

    :goto_2
    invoke-virtual {v14, v8}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    .line 19646
    :cond_2
    :goto_3
    add-int/lit8 v10, v10, 0x1

    move/from16 v9, v26

    move/from16 v0, v27

    const/4 v8, 0x0

    goto :goto_1

    .line 19653
    :cond_3
    monitor-exit v15
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 19654
    invoke-virtual {v14}, Ljava/util/ArrayList;->size()I

    move-result v0

    if-lez v0, :cond_8

    .line 19655
    new-instance v0, Landroid/util/proto/ProtoOutputStream;

    invoke-direct {v0, v2}, Landroid/util/proto/ProtoOutputStream;-><init>(Ljava/io/FileDescriptor;)V

    .line 19657
    const-wide v1, 0x10300000001L

    invoke-virtual {v0, v1, v2, v4, v5}, Landroid/util/proto/ProtoOutputStream;->write(JJ)V

    .line 19658
    const-wide v1, 0x10300000002L

    invoke-virtual {v0, v1, v2, v6, v7}, Landroid/util/proto/ProtoOutputStream;->write(JJ)V

    .line 19659
    nop

    .line 19660
    invoke-virtual {v14}, Ljava/util/ArrayList;->size()I

    move-result v1

    const/4 v2, 0x1

    sub-int/2addr v1, v2

    const/4 v2, 0x0

    :goto_4
    if-ltz v1, :cond_7

    .line 19661
    invoke-virtual {v14, v1}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v4

    check-cast v4, Lcom/android/internal/os/ProcessCpuTracker$Stats;

    .line 19662
    iget v5, v4, Lcom/android/internal/os/ProcessCpuTracker$Stats;->pid:I

    .line 19663
    const-wide v6, 0x20b00000003L

    invoke-virtual {v0, v6, v7}, Landroid/util/proto/ProtoOutputStream;->start(J)J

    move-result-wide v6

    .line 19665
    const-wide v8, 0x10500000001L

    invoke-virtual {v0, v8, v9, v5}, Landroid/util/proto/ProtoOutputStream;->write(JI)V

    .line 19666
    iget-object v4, v4, Lcom/android/internal/os/ProcessCpuTracker$Stats;->baseName:Ljava/lang/String;

    const-wide v8, 0x10900000002L

    invoke-virtual {v0, v8, v9, v4}, Landroid/util/proto/ProtoOutputStream;->write(JLjava/lang/String;)V

    .line 19668
    if-nez v2, :cond_4

    .line 19669
    new-instance v2, Landroid/os/Debug$MemoryInfo;

    invoke-direct {v2}, Landroid/os/Debug$MemoryInfo;-><init>()V

    .line 19671
    :cond_4
    iget-boolean v4, v3, Lcom/android/server/am/ActivityManagerService$MemoryUsageDumpOptions;->dumpDetails:Z

    if-nez v4, :cond_6

    if-nez p4, :cond_5

    iget-boolean v4, v3, Lcom/android/server/am/ActivityManagerService$MemoryUsageDumpOptions;->oomOnly:Z

    if-nez v4, :cond_5

    goto :goto_5

    .line 19674
    :cond_5
    const/4 v4, 0x0

    invoke-static {v5, v11, v4}, Landroid/os/Debug;->getPss(I[J[J)J

    move-result-wide v8

    long-to-int v4, v8

    iput v4, v2, Landroid/os/Debug$MemoryInfo;->dalvikPss:I

    .line 19675
    const/4 v4, 0x0

    aget-wide v8, v11, v4

    long-to-int v4, v8

    iput v4, v2, Landroid/os/Debug$MemoryInfo;->dalvikPrivateDirty:I

    goto :goto_6

    .line 19672
    :cond_6
    :goto_5
    invoke-static {v5, v2}, Landroid/os/Debug;->getMemoryInfo(ILandroid/os/Debug$MemoryInfo;)V

    .line 19677
    :goto_6
    iget-boolean v4, v3, Lcom/android/server/am/ActivityManagerService$MemoryUsageDumpOptions;->dumpDalvik:Z

    iget-boolean v5, v3, Lcom/android/server/am/ActivityManagerService$MemoryUsageDumpOptions;->dumpSummaryOnly:Z

    const-wide/16 v30, 0x0

    const-wide/16 v32, 0x0

    const-wide/16 v34, 0x0

    const-wide/16 v36, 0x0

    const-wide/16 v38, 0x0

    const-wide/16 v40, 0x0

    move-object/from16 v26, v0

    move-object/from16 v27, v2

    move/from16 v28, v4

    move/from16 v29, v5

    invoke-static/range {v26 .. v41}, Landroid/app/ActivityThread;->dumpMemInfoTable(Landroid/util/proto/ProtoOutputStream;Landroid/os/Debug$MemoryInfo;ZZJJJJJJ)V

    .line 19680
    invoke-virtual {v0, v6, v7}, Landroid/util/proto/ProtoOutputStream;->end(J)V

    .line 19660
    add-int/lit8 v1, v1, -0x1

    goto :goto_4

    .line 19683
    :cond_7
    invoke-virtual {v0}, Landroid/util/proto/ProtoOutputStream;->flush()V

    .line 19684
    return-void

    .line 19653
    :catchall_0
    move-exception v0

    :try_start_2
    monitor-exit v15
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    throw v0

    .line 19688
    :cond_8
    const-string v0, "ActivityManager"

    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string v2, "No process found for: "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const/4 v2, 0x0

    aget-object v2, v12, v2

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-static {v0, v1}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    .line 19689
    return-void

    .line 19692
    :cond_9
    if-nez p4, :cond_b

    iget-boolean v0, v3, Lcom/android/server/am/ActivityManagerService$MemoryUsageDumpOptions;->oomOnly:Z

    if-nez v0, :cond_b

    invoke-virtual/range {p5 .. p5}, Ljava/util/ArrayList;->size()I

    move-result v0

    const/4 v8, 0x1

    if-eq v0, v8, :cond_a

    iget-boolean v0, v3, Lcom/android/server/am/ActivityManagerService$MemoryUsageDumpOptions;->isCheckinRequest:Z

    if-nez v0, :cond_a

    iget-boolean v0, v3, Lcom/android/server/am/ActivityManagerService$MemoryUsageDumpOptions;->packages:Z

    if-eqz v0, :cond_b

    .line 19693
    :cond_a
    const/4 v8, 0x1

    iput-boolean v8, v3, Lcom/android/server/am/ActivityManagerService$MemoryUsageDumpOptions;->dumpDetails:Z

    .line 19696
    :cond_b
    new-instance v15, Landroid/util/proto/ProtoOutputStream;

    invoke-direct {v15, v2}, Landroid/util/proto/ProtoOutputStream;-><init>(Ljava/io/FileDescriptor;)V

    .line 19698
    const-wide v8, 0x10300000001L

    invoke-virtual {v15, v8, v9, v4, v5}, Landroid/util/proto/ProtoOutputStream;->write(JJ)V

    .line 19699
    const-wide v4, 0x10300000002L

    invoke-virtual {v15, v4, v5, v6, v7}, Landroid/util/proto/ProtoOutputStream;->write(JJ)V

    .line 19701
    new-instance v2, Ljava/util/ArrayList;

    invoke-direct {v2}, Ljava/util/ArrayList;-><init>()V

    .line 19702
    new-instance v10, Landroid/util/SparseArray;

    invoke-direct {v10}, Landroid/util/SparseArray;-><init>()V

    .line 19703
    nop

    .line 19704
    nop

    .line 19705
    nop

    .line 19706
    nop

    .line 19707
    iget-boolean v0, v3, Lcom/android/server/am/ActivityManagerService$MemoryUsageDumpOptions;->dumpDalvik:Z

    const/16 v4, 0xe

    if-eqz v0, :cond_c

    new-array v0, v4, [J

    .line 19709
    :goto_7
    move-object v9, v0

    goto :goto_8

    .line 19708
    :cond_c
    sget-object v0, Llibcore/util/EmptyArray;->LONG:[J

    goto :goto_7

    .line 19709
    :goto_8
    iget-boolean v0, v3, Lcom/android/server/am/ActivityManagerService$MemoryUsageDumpOptions;->dumpDalvik:Z

    if-eqz v0, :cond_d

    new-array v0, v4, [J

    .line 19711
    :goto_9
    move-object/from16 v20, v0

    goto :goto_a

    .line 19710
    :cond_d
    sget-object v0, Llibcore/util/EmptyArray;->LONG:[J

    goto :goto_9

    .line 19711
    :goto_a
    nop

    .line 19712
    nop

    .line 19713
    const/16 v8, 0x11

    new-array v7, v8, [J

    .line 19714
    new-array v6, v8, [J

    .line 19716
    sget-object v0, Lcom/android/server/am/ActivityManagerService;->DUMP_MEM_OOM_LABEL:[Ljava/lang/String;

    array-length v0, v0

    new-array v5, v0, [J

    .line 19717
    sget-object v0, Lcom/android/server/am/ActivityManagerService;->DUMP_MEM_OOM_LABEL:[Ljava/lang/String;

    array-length v0, v0

    new-array v4, v0, [J

    .line 19718
    sget-object v0, Lcom/android/server/am/ActivityManagerService;->DUMP_MEM_OOM_LABEL:[Ljava/lang/String;

    array-length v0, v0

    move-object/from16 v42, v2

    new-array v2, v0, [Ljava/util/ArrayList;

    .line 19721
    nop

    .line 19722
    nop

    .line 19723
    nop

    .line 19724
    nop

    .line 19725
    nop

    .line 19727
    nop

    .line 19728
    invoke-virtual/range {p5 .. p5}, Ljava/util/ArrayList;->size()I

    move-result v0

    const/16 v21, 0x1

    add-int/lit8 v0, v0, -0x1

    const-wide/16 v23, 0x0

    move-object/from16 v43, v2

    move-wide/from16 v44, v23

    move-wide/from16 v46, v44

    move-wide/from16 v48, v46

    move-wide/from16 v50, v48

    move-wide/from16 v52, v50

    move-wide/from16 v54, v52

    move-wide/from16 v56, v54

    move-wide/from16 v58, v56

    move-wide/from16 v60, v58

    const/16 v21, 0x0

    move v2, v0

    const/4 v0, 0x0

    :goto_b
    const/16 v26, 0x4

    const/16 v33, 0x3

    if-ltz v2, :cond_20

    .line 19729
    invoke-virtual {v14, v2}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v27

    move-object/from16 v14, v27

    check-cast v14, Lcom/android/server/am/ProcessRecord;

    .line 19734
    monitor-enter p0

    :try_start_3
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    .line 19735
    iget-object v8, v14, Lcom/android/server/am/ProcessRecord;->thread:Landroid/app/IApplicationThread;

    .line 19736
    move/from16 v73, v2

    iget v2, v14, Lcom/android/server/am/ProcessRecord;->pid:I

    .line 19737
    invoke-virtual {v14}, Lcom/android/server/am/ProcessRecord;->getSetAdjWithServices()I

    move-result v12

    .line 19738
    move-object/from16 v75, v4

    iget-object v4, v14, Lcom/android/server/am/ProcessRecord;->activities:Ljava/util/ArrayList;

    invoke-virtual {v4}, Ljava/util/ArrayList;->size()I

    move-result v4

    if-lez v4, :cond_e

    .line 19739
    const/16 v72, 0x1

    goto :goto_c

    .line 19738
    :cond_e
    nop

    .line 19739
    const/16 v72, 0x0

    :goto_c
    monitor-exit p0
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_4

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    .line 19740
    if-nez v8, :cond_f

    .line 19741
    nop

    .line 19728
    move-object v2, v5

    move-object/from16 v17, v6

    move-object/from16 v19, v7

    move-object v8, v10

    move-object/from16 v86, v11

    move-object/from16 v88, v15

    move-object/from16 v89, v42

    move-object/from16 v16, v75

    const/16 v1, 0x11

    const/16 v22, 0x0

    const-wide v39, 0x10500000001L

    const-wide v75, 0x10900000002L

    goto/16 :goto_1d

    .line 19743
    :cond_f
    if-nez v0, :cond_10

    .line 19744
    new-instance v0, Landroid/os/Debug$MemoryInfo;

    invoke-direct {v0}, Landroid/os/Debug$MemoryInfo;-><init>()V

    .line 19749
    :cond_10
    move-object v4, v0

    iget-boolean v0, v3, Lcom/android/server/am/ActivityManagerService$MemoryUsageDumpOptions;->dumpDetails:Z

    if-nez v0, :cond_12

    if-nez p4, :cond_11

    iget-boolean v0, v3, Lcom/android/server/am/ActivityManagerService$MemoryUsageDumpOptions;->oomOnly:Z

    if-nez v0, :cond_11

    goto :goto_d

    .line 19756
    :cond_11
    nop

    .line 19757
    invoke-static {}, Landroid/os/SystemClock;->currentThreadTimeMillis()J

    move-result-wide v26

    .line 19758
    move-object/from16 v78, v5

    move-object/from16 v77, v6

    move-object/from16 v76, v9

    const/4 v9, 0x0

    invoke-static {v2, v11, v9}, Landroid/os/Debug;->getPss(I[J[J)J

    move-result-wide v5

    long-to-int v0, v5

    iput v0, v4, Landroid/os/Debug$MemoryInfo;->dalvikPss:I

    .line 19759
    invoke-static {}, Landroid/os/SystemClock;->currentThreadTimeMillis()J

    move-result-wide v5

    .line 19760
    move-object/from16 v79, v10

    const/16 v22, 0x0

    aget-wide v9, v11, v22

    long-to-int v0, v9

    iput v0, v4, Landroid/os/Debug$MemoryInfo;->dalvikPrivateDirty:I

    .line 19762
    move-wide/from16 v66, v5

    move/from16 v25, v21

    move-wide/from16 v64, v26

    move/from16 v21, v33

    goto :goto_e

    .line 19750
    :cond_12
    :goto_d
    move-object/from16 v78, v5

    move-object/from16 v77, v6

    move-object/from16 v76, v9

    move-object/from16 v79, v10

    const/16 v22, 0x0

    .line 19751
    invoke-static {}, Landroid/os/SystemClock;->currentThreadTimeMillis()J

    move-result-wide v5

    .line 19752
    invoke-static {v2, v4}, Landroid/os/Debug;->getMemoryInfo(ILandroid/os/Debug$MemoryInfo;)V

    .line 19753
    invoke-static {}, Landroid/os/SystemClock;->currentThreadTimeMillis()J

    move-result-wide v9

    .line 19754
    iget-boolean v0, v4, Landroid/os/Debug$MemoryInfo;->hasSwappedOutPss:Z

    .line 19762
    move/from16 v25, v0

    move-wide/from16 v64, v5

    move-wide/from16 v66, v9

    move/from16 v21, v26

    :goto_e
    iget-boolean v0, v3, Lcom/android/server/am/ActivityManagerService$MemoryUsageDumpOptions;->dumpDetails:Z

    if-eqz v0, :cond_14

    .line 19763
    iget-boolean v0, v3, Lcom/android/server/am/ActivityManagerService$MemoryUsageDumpOptions;->localOnly:Z

    const-wide v9, 0x20b00000004L

    if-eqz v0, :cond_13

    .line 19764
    invoke-virtual {v15, v9, v10}, Landroid/util/proto/ProtoOutputStream;->start(J)J

    move-result-wide v5

    .line 19765
    const-wide v8, 0x10b00000001L

    invoke-virtual {v15, v8, v9}, Landroid/util/proto/ProtoOutputStream;->start(J)J

    move-result-wide v8

    .line 19766
    move-object/from16 v80, v11

    const-wide v10, 0x10500000001L

    invoke-virtual {v15, v10, v11, v2}, Landroid/util/proto/ProtoOutputStream;->write(JI)V

    .line 19767
    iget-object v0, v14, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;

    const-wide v10, 0x10900000002L

    invoke-virtual {v15, v10, v11, v0}, Landroid/util/proto/ProtoOutputStream;->write(JLjava/lang/String;)V

    .line 19768
    iget-boolean v0, v3, Lcom/android/server/am/ActivityManagerService$MemoryUsageDumpOptions;->dumpDalvik:Z

    iget-boolean v10, v3, Lcom/android/server/am/ActivityManagerService$MemoryUsageDumpOptions;->dumpSummaryOnly:Z

    const-wide/16 v30, 0x0

    const-wide/16 v32, 0x0

    const-wide/16 v34, 0x0

    const-wide/16 v36, 0x0

    const-wide/16 v38, 0x0

    const-wide/16 v40, 0x0

    move-object/from16 v26, v15

    move-object/from16 v27, v4

    move/from16 v28, v0

    move/from16 v29, v10

    invoke-static/range {v26 .. v41}, Landroid/app/ActivityThread;->dumpMemInfoTable(Landroid/util/proto/ProtoOutputStream;Landroid/os/Debug$MemoryInfo;ZZJJJJJJ)V

    .line 19770
    invoke-virtual {v15, v8, v9}, Landroid/util/proto/ProtoOutputStream;->end(J)V

    .line 19771
    invoke-virtual {v15, v5, v6}, Landroid/util/proto/ProtoOutputStream;->end(J)V

    .line 19772
    nop

    .line 19791
    move-object/from16 v81, v4

    move-object/from16 v19, v7

    move/from16 v87, v12

    move-object/from16 v16, v75

    move-object/from16 v84, v76

    move-object/from16 v17, v77

    move-object/from16 v83, v78

    move-object/from16 v85, v79

    move-object/from16 v86, v80

    goto/16 :goto_13

    .line 19774
    :cond_13
    move-object/from16 v80, v11

    :try_start_4
    new-instance v11, Lcom/android/internal/os/ByteTransferPipe;

    invoke-direct {v11}, Lcom/android/internal/os/ByteTransferPipe;-><init>()V
    :try_end_4
    .catch Ljava/io/IOException; {:try_start_4 .. :try_end_4} :catch_4
    .catch Landroid/os/RemoteException; {:try_start_4 .. :try_end_4} :catch_3

    .line 19776
    :try_start_5
    invoke-virtual {v11}, Lcom/android/internal/os/ByteTransferPipe;->getWriteFd()Landroid/os/ParcelFileDescriptor;

    move-result-object v5

    iget-boolean v0, v3, Lcom/android/server/am/ActivityManagerService$MemoryUsageDumpOptions;->dumpFullDetails:Z

    iget-boolean v6, v3, Lcom/android/server/am/ActivityManagerService$MemoryUsageDumpOptions;->dumpDalvik:Z

    iget-boolean v9, v3, Lcom/android/server/am/ActivityManagerService$MemoryUsageDumpOptions;->dumpSummaryOnly:Z

    iget-boolean v10, v3, Lcom/android/server/am/ActivityManagerService$MemoryUsageDumpOptions;->dumpUnreachable:Z
    :try_end_5
    .catchall {:try_start_5 .. :try_end_5} :catchall_2

    move-object/from16 v81, v4

    move-object/from16 v16, v75

    move-object v4, v8

    move-object/from16 v8, v78

    move/from16 v18, v6

    move-object/from16 v17, v77

    move-object/from16 v6, v81

    move-object/from16 v19, v7

    move v7, v0

    move/from16 v82, v12

    const/16 v13, 0x11

    move-object v12, v8

    move/from16 v8, v18

    move-object/from16 v83, v12

    move-object/from16 v84, v76

    const-wide v12, 0x20b00000004L

    const-wide v39, 0x10500000001L

    const-wide v75, 0x10900000002L

    move-object/from16 v85, v79

    move-object v12, v11

    move-object/from16 v86, v80

    move/from16 v87, v82

    move-object/from16 v11, p3

    :try_start_6
    invoke-interface/range {v4 .. v11}, Landroid/app/IApplicationThread;->dumpMemInfoProto(Landroid/os/ParcelFileDescriptor;Landroid/os/Debug$MemoryInfo;ZZZZ[Ljava/lang/String;)V

    .line 19779
    invoke-virtual {v12}, Lcom/android/internal/os/ByteTransferPipe;->get()[B

    move-result-object v0

    const-wide v4, 0x20b00000004L

    invoke-virtual {v15, v4, v5, v0}, Landroid/util/proto/ProtoOutputStream;->write(J[B)V
    :try_end_6
    .catchall {:try_start_6 .. :try_end_6} :catchall_1

    .line 19781
    :try_start_7
    invoke-virtual {v12}, Lcom/android/internal/os/ByteTransferPipe;->kill()V

    .line 19782
    goto/16 :goto_12

    .line 19781
    :catchall_1
    move-exception v0

    goto :goto_f

    :catchall_2
    move-exception v0

    move-object/from16 v81, v4

    move-object/from16 v19, v7

    move/from16 v87, v12

    move-object/from16 v16, v75

    move-object/from16 v84, v76

    move-object/from16 v17, v77

    move-object/from16 v83, v78

    move-object/from16 v85, v79

    move-object/from16 v86, v80

    const-wide v39, 0x10500000001L

    const-wide v75, 0x10900000002L

    move-object v12, v11

    :goto_f
    invoke-virtual {v12}, Lcom/android/internal/os/ByteTransferPipe;->kill()V

    throw v0
    :try_end_7
    .catch Ljava/io/IOException; {:try_start_7 .. :try_end_7} :catch_2
    .catch Landroid/os/RemoteException; {:try_start_7 .. :try_end_7} :catch_1

    .line 19785
    :catch_1
    move-exception v0

    goto :goto_10

    .line 19783
    :catch_2
    move-exception v0

    goto :goto_11

    .line 19785
    :catch_3
    move-exception v0

    move-object/from16 v81, v4

    move-object/from16 v19, v7

    move/from16 v87, v12

    move-object/from16 v16, v75

    move-object/from16 v84, v76

    move-object/from16 v17, v77

    move-object/from16 v83, v78

    move-object/from16 v85, v79

    move-object/from16 v86, v80

    const-wide v39, 0x10500000001L

    const-wide v75, 0x10900000002L

    .line 19786
    :goto_10
    const-string v4, "ActivityManager"

    const-string v5, "Got RemoteException!"

    invoke-static {v4, v5, v0}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I

    goto :goto_14

    .line 19783
    :catch_4
    move-exception v0

    move-object/from16 v81, v4

    move-object/from16 v19, v7

    move/from16 v87, v12

    move-object/from16 v16, v75

    move-object/from16 v84, v76

    move-object/from16 v17, v77

    move-object/from16 v83, v78

    move-object/from16 v85, v79

    move-object/from16 v86, v80

    const-wide v39, 0x10500000001L

    const-wide v75, 0x10900000002L

    .line 19784
    :goto_11
    const-string v4, "ActivityManager"

    const-string v5, "Got IOException!"

    invoke-static {v4, v5, v0}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I

    .line 19787
    :goto_12
    goto :goto_14

    .line 19791
    :cond_14
    move-object/from16 v81, v4

    move-object/from16 v19, v7

    move-object/from16 v86, v11

    move/from16 v87, v12

    move-object/from16 v16, v75

    move-object/from16 v84, v76

    move-object/from16 v17, v77

    move-object/from16 v83, v78

    move-object/from16 v85, v79

    :goto_13
    const-wide v39, 0x10500000001L

    const-wide v75, 0x10900000002L

    :goto_14
    move-object/from16 v4, v81

    invoke-virtual {v4}, Landroid/os/Debug$MemoryInfo;->getTotalPss()I

    move-result v0

    int-to-long v5, v0

    .line 19792
    invoke-virtual {v4}, Landroid/os/Debug$MemoryInfo;->getTotalUss()I

    move-result v0

    int-to-long v7, v0

    .line 19793
    invoke-virtual {v4}, Landroid/os/Debug$MemoryInfo;->getTotalRss()I

    move-result v0

    int-to-long v9, v0

    .line 19794
    invoke-virtual {v4}, Landroid/os/Debug$MemoryInfo;->getTotalSwappedOutPss()I

    move-result v0

    int-to-long v11, v0

    .line 19796
    monitor-enter p0

    :try_start_8
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    .line 19797
    iget-object v0, v14, Lcom/android/server/am/ProcessRecord;->thread:Landroid/app/IApplicationThread;

    if-eqz v0, :cond_16

    invoke-virtual {v14}, Lcom/android/server/am/ProcessRecord;->getSetAdjWithServices()I

    move-result v0

    move/from16 v13, v87

    if-ne v13, v0, :cond_15

    .line 19799
    iget-object v0, v14, Lcom/android/server/am/ProcessRecord;->baseProcessTracker:Lcom/android/internal/app/procstats/ProcessState;

    const/16 v34, 0x1

    sub-long v36, v66, v64

    move-object/from16 v88, v15

    iget-object v15, v14, Lcom/android/server/am/ProcessRecord;->pkgList:Landroid/util/ArrayMap;

    move-object/from16 v27, v0

    move-wide/from16 v28, v5

    move-wide/from16 v30, v7

    move-wide/from16 v32, v9

    move/from16 v35, v21

    move-object/from16 v38, v15

    invoke-virtual/range {v27 .. v38}, Lcom/android/internal/app/procstats/ProcessState;->addPss(JJJZIJLandroid/util/ArrayMap;)V

    goto :goto_15

    .line 19802
    :cond_15
    move-object/from16 v88, v15

    goto :goto_15

    :cond_16
    move-object/from16 v88, v15

    move/from16 v13, v87

    :goto_15
    monitor-exit p0
    :try_end_8
    .catchall {:try_start_8 .. :try_end_8} :catchall_3

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    .line 19804
    iget-boolean v0, v3, Lcom/android/server/am/ActivityManagerService$MemoryUsageDumpOptions;->isCheckinRequest:Z

    if-nez v0, :cond_1f

    if-eqz v4, :cond_1f

    .line 19805
    add-long v58, v58, v5

    .line 19806
    add-long v56, v56, v11

    .line 19807
    new-instance v0, Lcom/android/server/am/ActivityManagerService$MemItem;

    new-instance v7, Ljava/lang/StringBuilder;

    invoke-direct {v7}, Ljava/lang/StringBuilder;-><init>()V

    iget-object v8, v14, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;

    invoke-virtual {v7, v8}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v8, " (pid "

    invoke-virtual {v7, v8}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v7, v2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    .line 19808
    if-eqz v72, :cond_17

    const-string v8, " / activities)"

    goto :goto_16

    :cond_17
    const-string v8, ")"

    :goto_16
    invoke-virtual {v7, v8}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v7}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v65

    iget-object v7, v14, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;

    move-object/from16 v64, v0

    move-object/from16 v66, v7

    move-wide/from16 v67, v5

    move-wide/from16 v69, v11

    move/from16 v71, v2

    invoke-direct/range {v64 .. v72}, Lcom/android/server/am/ActivityManagerService$MemItem;-><init>(Ljava/lang/String;Ljava/lang/String;JJIZ)V

    .line 19810
    move-object/from16 v7, v42

    invoke-virtual {v7, v0}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    .line 19811
    move-object/from16 v8, v85

    invoke-virtual {v8, v2, v0}, Landroid/util/SparseArray;->put(ILjava/lang/Object;)V

    .line 19813
    iget v2, v4, Landroid/os/Debug$MemoryInfo;->nativePss:I

    int-to-long v9, v2

    add-long v48, v48, v9

    .line 19814
    iget v2, v4, Landroid/os/Debug$MemoryInfo;->nativeSwappedOutPss:I

    int-to-long v9, v2

    add-long v50, v50, v9

    .line 19815
    iget v2, v4, Landroid/os/Debug$MemoryInfo;->dalvikPss:I

    int-to-long v9, v2

    add-long v52, v52, v9

    .line 19816
    iget v2, v4, Landroid/os/Debug$MemoryInfo;->dalvikSwappedOutPss:I

    int-to-long v9, v2

    add-long v54, v54, v9

    .line 19817
    move/from16 v2, v22

    :goto_17
    move-object/from16 v9, v84

    array-length v10, v9

    if-ge v2, v10, :cond_18

    .line 19818
    aget-wide v14, v9, v2

    move-object/from16 v89, v7

    const/16 v10, 0x11

    add-int v7, v10, v2

    invoke-virtual {v4, v7}, Landroid/os/Debug$MemoryInfo;->getOtherPss(I)I

    move-result v10

    move-object/from16 v90, v0

    int-to-long v0, v10

    add-long/2addr v14, v0

    aput-wide v14, v9, v2

    .line 19819
    aget-wide v0, v20, v2

    .line 19820
    invoke-virtual {v4, v7}, Landroid/os/Debug$MemoryInfo;->getOtherSwappedOutPss(I)I

    move-result v7

    int-to-long v14, v7

    add-long/2addr v0, v14

    aput-wide v0, v20, v2

    .line 19817
    add-int/lit8 v2, v2, 0x1

    move-object/from16 v84, v9

    move-object/from16 v7, v89

    move-object/from16 v0, v90

    move-object/from16 v1, p0

    goto :goto_17

    .line 19822
    :cond_18
    move-object/from16 v90, v0

    move-object/from16 v89, v7

    iget v0, v4, Landroid/os/Debug$MemoryInfo;->otherPss:I

    int-to-long v0, v0

    add-long v44, v44, v0

    .line 19823
    iget v0, v4, Landroid/os/Debug$MemoryInfo;->otherSwappedOutPss:I

    int-to-long v0, v0

    add-long v46, v46, v0

    .line 19824
    move/from16 v0, v22

    :goto_18
    const/16 v1, 0x11

    if-ge v0, v1, :cond_19

    .line 19825
    invoke-virtual {v4, v0}, Landroid/os/Debug$MemoryInfo;->getOtherPss(I)I

    move-result v2

    int-to-long v14, v2

    .line 19826
    aget-wide v26, v19, v0

    add-long v26, v26, v14

    aput-wide v26, v19, v0

    .line 19827
    sub-long v44, v44, v14

    .line 19828
    invoke-virtual {v4, v0}, Landroid/os/Debug$MemoryInfo;->getOtherSwappedOutPss(I)I

    move-result v2

    int-to-long v14, v2

    .line 19829
    aget-wide v26, v17, v0

    add-long v26, v26, v14

    aput-wide v26, v17, v0

    .line 19830
    sub-long v46, v46, v14

    .line 19824
    add-int/lit8 v0, v0, 0x1

    goto :goto_18

    .line 19833
    :cond_19
    const/16 v0, 0x384

    if-lt v13, v0, :cond_1a

    .line 19834
    move-wide/from16 v14, v60

    add-long v60, v14, v5

    .line 19835
    goto :goto_19

    .line 19838
    :cond_1a
    move-wide/from16 v14, v60

    :goto_19
    move/from16 v0, v22

    :goto_1a
    move-object/from16 v2, v83

    array-length v7, v2

    if-ge v0, v7, :cond_1e

    .line 19839
    array-length v7, v2

    const/4 v10, 0x1

    sub-int/2addr v7, v10

    if-eq v0, v7, :cond_1c

    sget-object v7, Lcom/android/server/am/ActivityManagerService;->DUMP_MEM_OOM_ADJ:[I

    aget v7, v7, v0

    if-lt v13, v7, :cond_1b

    sget-object v7, Lcom/android/server/am/ActivityManagerService;->DUMP_MEM_OOM_ADJ:[I

    add-int/lit8 v10, v0, 0x1

    aget v7, v7, v10

    if-ge v13, v7, :cond_1b

    goto :goto_1b

    .line 19838
    :cond_1b
    add-int/lit8 v0, v0, 0x1

    move-object/from16 v83, v2

    goto :goto_1a

    .line 19842
    :cond_1c
    :goto_1b
    aget-wide v13, v2, v0

    add-long/2addr v13, v5

    aput-wide v13, v2, v0

    .line 19843
    aget-wide v5, v16, v0

    add-long/2addr v5, v11

    aput-wide v5, v16, v0

    .line 19844
    aget-object v5, v43, v0

    if-nez v5, :cond_1d

    .line 19845
    new-instance v5, Ljava/util/ArrayList;

    invoke-direct {v5}, Ljava/util/ArrayList;-><init>()V

    aput-object v5, v43, v0

    .line 19847
    :cond_1d
    aget-object v0, v43, v0

    move-object/from16 v5, v90

    invoke-virtual {v0, v5}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    .line 19848
    nop

    .line 19728
    :cond_1e
    move-object v0, v4

    goto :goto_1c

    :cond_1f
    move-object/from16 v89, v42

    move-wide/from16 v14, v60

    move-object/from16 v2, v83

    move-object/from16 v9, v84

    move-object/from16 v8, v85

    const/16 v1, 0x11

    move-object v0, v4

    move-wide/from16 v60, v14

    :goto_1c
    move/from16 v21, v25

    :goto_1d
    add-int/lit8 v4, v73, -0x1

    move-object/from16 v12, p3

    move-object v5, v2

    move v2, v4

    move-object v10, v8

    move-object/from16 v4, v16

    move-object/from16 v6, v17

    move-object/from16 v7, v19

    move-object/from16 v11, v86

    move-object/from16 v15, v88

    move-object/from16 v42, v89

    move-object/from16 v14, p5

    move v8, v1

    move-object/from16 v1, p0

    goto/16 :goto_b

    .line 19802
    :catchall_3
    move-exception v0

    move-object/from16 v4, p0

    :try_start_9
    monitor-exit p0
    :try_end_9
    .catchall {:try_start_9 .. :try_end_9} :catchall_3

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw v0

    .line 19739
    :catchall_4
    move-exception v0

    move-object v4, v1

    :goto_1e
    :try_start_a
    monitor-exit p0
    :try_end_a
    .catchall {:try_start_a .. :try_end_a} :catchall_5

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw v0

    :catchall_5
    move-exception v0

    goto :goto_1e

    .line 19854
    :cond_20
    move-object/from16 v16, v4

    move-object v2, v5

    move-object/from16 v17, v6

    move-object/from16 v19, v7

    move-object/from16 v86, v11

    move-object/from16 v88, v15

    move-object/from16 v89, v42

    move-wide/from16 v14, v60

    const/16 v22, 0x0

    move-object v4, v1

    move v1, v8

    move-object v8, v10

    .line 19856
    invoke-virtual/range {p5 .. p5}, Ljava/util/ArrayList;->size()I

    move-result v0

    const/4 v5, 0x1

    if-le v0, v5, :cond_38

    iget-boolean v0, v3, Lcom/android/server/am/ActivityManagerService$MemoryUsageDumpOptions;->packages:Z

    if-nez v0, :cond_38

    .line 19859
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/am/ActivityManagerService;->updateCpuStatsNow()V

    .line 19860
    nop

    .line 19861
    iget-object v5, v4, Lcom/android/server/am/ActivityManagerService;->mProcessCpuTracker:Lcom/android/internal/os/ProcessCpuTracker;

    monitor-enter v5

    .line 19862
    :try_start_b
    iget-object v0, v4, Lcom/android/server/am/ActivityManagerService;->mProcessCpuTracker:Lcom/android/internal/os/ProcessCpuTracker;

    invoke-virtual {v0}, Lcom/android/internal/os/ProcessCpuTracker;->countStats()I

    move-result v0

    .line 19863
    move/from16 v6, v22

    move-wide/from16 v74, v23

    move-wide/from16 v61, v44

    move-wide/from16 v63, v46

    move-wide/from16 v37, v48

    move-wide/from16 v39, v50

    move-wide/from16 v47, v52

    move-wide/from16 v49, v54

    move-wide/from16 v10, v58

    const/4 v7, 0x0

    :goto_1f
    if-ge v6, v0, :cond_27

    .line 19864
    iget-object v12, v4, Lcom/android/server/am/ActivityManagerService;->mProcessCpuTracker:Lcom/android/internal/os/ProcessCpuTracker;

    invoke-virtual {v12, v6}, Lcom/android/internal/os/ProcessCpuTracker;->getStats(I)Lcom/android/internal/os/ProcessCpuTracker$Stats;

    move-result-object v12

    .line 19865
    move-object/from16 v91, v2

    iget-wide v1, v12, Lcom/android/internal/os/ProcessCpuTracker$Stats;->vsize:J

    cmp-long v1, v1, v23

    if-lez v1, :cond_26

    iget v1, v12, Lcom/android/internal/os/ProcessCpuTracker$Stats;->pid:I

    invoke-virtual {v8, v1}, Landroid/util/SparseArray;->indexOfKey(I)I

    move-result v1

    if-gez v1, :cond_26

    .line 19866
    if-nez v7, :cond_21

    .line 19867
    new-instance v7, Landroid/os/Debug$MemoryInfo;

    invoke-direct {v7}, Landroid/os/Debug$MemoryInfo;-><init>()V

    .line 19869
    :cond_21
    const/16 v2, 0x11

    if-nez p4, :cond_22

    iget-boolean v13, v3, Lcom/android/server/am/ActivityManagerService$MemoryUsageDumpOptions;->oomOnly:Z

    if-nez v13, :cond_22

    .line 19870
    iget v13, v12, Lcom/android/internal/os/ProcessCpuTracker$Stats;->pid:I

    invoke-static {v13, v7}, Landroid/os/Debug;->getMemoryInfo(ILandroid/os/Debug$MemoryInfo;)V

    .line 19876
    move-object/from16 v92, v8

    move-wide/from16 v93, v14

    move-object/from16 v2, v86

    const/4 v8, 0x0

    goto :goto_20

    .line 19872
    :cond_22
    iget v13, v12, Lcom/android/internal/os/ProcessCpuTracker$Stats;->pid:I

    move-object/from16 v92, v8

    move-wide/from16 v93, v14

    move-object/from16 v2, v86

    const/4 v8, 0x0

    invoke-static {v13, v2, v8}, Landroid/os/Debug;->getPss(I[J[J)J

    move-result-wide v13

    long-to-int v13, v13

    iput v13, v7, Landroid/os/Debug$MemoryInfo;->nativePss:I

    .line 19873
    aget-wide v13, v2, v22

    long-to-int v13, v13

    iput v13, v7, Landroid/os/Debug$MemoryInfo;->nativePrivateDirty:I

    .line 19876
    :goto_20
    invoke-virtual {v7}, Landroid/os/Debug$MemoryInfo;->getTotalPss()I

    move-result v13

    int-to-long v13, v13

    .line 19877
    invoke-virtual {v7}, Landroid/os/Debug$MemoryInfo;->getTotalSwappedOutPss()I

    move-result v15

    move-object/from16 v95, v9

    int-to-long v8, v15

    .line 19878
    add-long/2addr v10, v13

    .line 19879
    add-long v74, v74, v13

    .line 19881
    new-instance v15, Lcom/android/server/am/ActivityManagerService$MemItem;

    move/from16 v96, v0

    new-instance v0, Ljava/lang/StringBuilder;

    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V

    move-object/from16 v97, v2

    iget-object v2, v12, Lcom/android/internal/os/ProcessCpuTracker$Stats;->name:Ljava/lang/String;

    invoke-virtual {v0, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v2, " (pid "

    invoke-virtual {v0, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget v2, v12, Lcom/android/internal/os/ProcessCpuTracker$Stats;->pid:I

    invoke-virtual {v0, v2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v2, ")"

    invoke-virtual {v0, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v66

    iget-object v0, v12, Lcom/android/internal/os/ProcessCpuTracker$Stats;->name:Ljava/lang/String;

    .line 19882
    invoke-virtual {v7}, Landroid/os/Debug$MemoryInfo;->getSummaryTotalSwapPss()I

    move-result v2

    move-wide/from16 v98, v10

    int-to-long v10, v2

    iget v2, v12, Lcom/android/internal/os/ProcessCpuTracker$Stats;->pid:I

    const/16 v73, 0x0

    move-object/from16 v65, v15

    move-object/from16 v67, v0

    move-wide/from16 v68, v13

    move-wide/from16 v70, v10

    move/from16 v72, v2

    invoke-direct/range {v65 .. v73}, Lcom/android/server/am/ActivityManagerService$MemItem;-><init>(Ljava/lang/String;Ljava/lang/String;JJIZ)V

    .line 19883
    move-object/from16 v2, v89

    invoke-virtual {v2, v15}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    .line 19885
    iget v0, v7, Landroid/os/Debug$MemoryInfo;->nativePss:I

    int-to-long v10, v0

    add-long v37, v37, v10

    .line 19886
    iget v0, v7, Landroid/os/Debug$MemoryInfo;->nativeSwappedOutPss:I

    int-to-long v10, v0

    add-long v39, v39, v10

    .line 19887
    iget v0, v7, Landroid/os/Debug$MemoryInfo;->dalvikPss:I

    int-to-long v10, v0

    add-long v47, v47, v10

    .line 19888
    iget v0, v7, Landroid/os/Debug$MemoryInfo;->dalvikSwappedOutPss:I

    int-to-long v10, v0

    add-long v49, v49, v10

    .line 19889
    move/from16 v0, v22

    :goto_21
    move-object/from16 v12, v95

    array-length v10, v12

    if-ge v0, v10, :cond_23

    .line 19890
    aget-wide v10, v12, v0

    const/16 v18, 0x11

    add-int v1, v18, v0

    move-object/from16 v100, v2

    invoke-virtual {v7, v1}, Landroid/os/Debug$MemoryInfo;->getOtherPss(I)I

    move-result v2

    int-to-long v2, v2

    add-long/2addr v10, v2

    aput-wide v10, v12, v0

    .line 19891
    aget-wide v2, v20, v0

    .line 19892
    invoke-virtual {v7, v1}, Landroid/os/Debug$MemoryInfo;->getOtherSwappedOutPss(I)I

    move-result v1

    int-to-long v10, v1

    add-long/2addr v2, v10

    aput-wide v2, v20, v0

    .line 19889
    add-int/lit8 v0, v0, 0x1

    move-object/from16 v95, v12

    move-object/from16 v2, v100

    move-object/from16 v3, p2

    goto :goto_21

    .line 19894
    :cond_23
    move-object/from16 v100, v2

    iget v0, v7, Landroid/os/Debug$MemoryInfo;->otherPss:I

    int-to-long v0, v0

    add-long v61, v61, v0

    .line 19895
    iget v0, v7, Landroid/os/Debug$MemoryInfo;->otherSwappedOutPss:I

    int-to-long v0, v0

    add-long v63, v63, v0

    .line 19896
    move/from16 v0, v22

    :goto_22
    const/16 v1, 0x11

    if-ge v0, v1, :cond_24

    .line 19897
    invoke-virtual {v7, v0}, Landroid/os/Debug$MemoryInfo;->getOtherPss(I)I

    move-result v1

    int-to-long v1, v1

    .line 19898
    aget-wide v10, v19, v0

    add-long/2addr v10, v1

    aput-wide v10, v19, v0

    .line 19899
    sub-long v61, v61, v1

    .line 19900
    invoke-virtual {v7, v0}, Landroid/os/Debug$MemoryInfo;->getOtherSwappedOutPss(I)I

    move-result v1

    int-to-long v1, v1

    .line 19901
    aget-wide v10, v17, v0

    add-long/2addr v10, v1

    aput-wide v10, v17, v0

    .line 19902
    sub-long v63, v63, v1

    .line 19896
    add-int/lit8 v0, v0, 0x1

    goto :goto_22

    .line 19904
    :cond_24
    aget-wide v0, v91, v22

    add-long/2addr v0, v13

    aput-wide v0, v91, v22

    .line 19905
    aget-wide v0, v16, v22

    add-long/2addr v0, v8

    aput-wide v0, v16, v22

    .line 19906
    aget-object v0, v43, v22

    if-nez v0, :cond_25

    .line 19907
    new-instance v0, Ljava/util/ArrayList;

    invoke-direct {v0}, Ljava/util/ArrayList;-><init>()V

    aput-object v0, v43, v22

    .line 19909
    :cond_25
    aget-object v0, v43, v22

    invoke-virtual {v0, v15}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    .line 19863
    move-wide/from16 v10, v98

    goto :goto_23

    :cond_26
    move/from16 v96, v0

    move-object/from16 v92, v8

    move-object v12, v9

    move-wide/from16 v93, v14

    move-object/from16 v97, v86

    move-object/from16 v100, v89

    :goto_23
    add-int/lit8 v6, v6, 0x1

    move-object v9, v12

    move-object/from16 v2, v91

    move-object/from16 v8, v92

    move-wide/from16 v14, v93

    move/from16 v0, v96

    move-object/from16 v86, v97

    move-object/from16 v89, v100

    const/16 v1, 0x11

    move-object/from16 v3, p2

    goto/16 :goto_1f

    .line 19912
    :cond_27
    move-object/from16 v91, v2

    move-object v12, v9

    move-wide/from16 v93, v14

    move-object/from16 v100, v89

    monitor-exit v5
    :try_end_b
    .catchall {:try_start_b .. :try_end_b} :catchall_7

    .line 19914
    new-instance v0, Ljava/util/ArrayList;

    invoke-direct {v0}, Ljava/util/ArrayList;-><init>()V

    .line 19916
    new-instance v1, Lcom/android/server/am/ActivityManagerService$MemItem;

    const-string v35, "Native"

    const-string v36, "Native"

    const/16 v41, -0x1

    move-object/from16 v34, v1

    invoke-direct/range {v34 .. v41}, Lcom/android/server/am/ActivityManagerService$MemItem;-><init>(Ljava/lang/String;Ljava/lang/String;JJI)V

    invoke-virtual {v0, v1}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    .line 19918
    new-instance v1, Lcom/android/server/am/ActivityManagerService$MemItem;

    const-string v45, "Dalvik"

    const-string v46, "Dalvik"

    const/16 v51, -0x2

    move-object/from16 v44, v1

    invoke-direct/range {v44 .. v51}, Lcom/android/server/am/ActivityManagerService$MemItem;-><init>(Ljava/lang/String;Ljava/lang/String;JJI)V

    invoke-virtual {v0, v1}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    .line 19919
    new-instance v1, Lcom/android/server/am/ActivityManagerService$MemItem;

    const-string v59, "Unknown"

    const-string v60, "Unknown"

    const/16 v65, -0x3

    move-object/from16 v58, v1

    invoke-direct/range {v58 .. v65}, Lcom/android/server/am/ActivityManagerService$MemItem;-><init>(Ljava/lang/String;Ljava/lang/String;JJI)V

    invoke-virtual {v0, v1}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    .line 19920
    move/from16 v1, v22

    :goto_24
    const/16 v2, 0x11

    if-ge v1, v2, :cond_28

    .line 19921
    invoke-static {v1}, Landroid/os/Debug$MemoryInfo;->getOtherLabel(I)Ljava/lang/String;

    move-result-object v36

    .line 19922
    new-instance v2, Lcom/android/server/am/ActivityManagerService$MemItem;

    aget-wide v37, v19, v1

    aget-wide v39, v17, v1

    move-object/from16 v34, v2

    move-object/from16 v35, v36

    move/from16 v41, v1

    invoke-direct/range {v34 .. v41}, Lcom/android/server/am/ActivityManagerService$MemItem;-><init>(Ljava/lang/String;Ljava/lang/String;JJI)V

    invoke-virtual {v0, v2}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    .line 19920
    add-int/lit8 v1, v1, 0x1

    goto :goto_24

    .line 19924
    :cond_28
    array-length v1, v12

    if-lez v1, :cond_2e

    .line 19926
    invoke-virtual {v0}, Ljava/util/ArrayList;->iterator()Ljava/util/Iterator;

    move-result-object v1

    :cond_29
    :goto_25
    invoke-interface {v1}, Ljava/util/Iterator;->hasNext()Z

    move-result v2

    if-eqz v2, :cond_2e

    invoke-interface {v1}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Lcom/android/server/am/ActivityManagerService$MemItem;

    .line 19927
    nop

    .line 19928
    iget v3, v2, Lcom/android/server/am/ActivityManagerService$MemItem;->id:I

    const/4 v5, -0x2

    if-ne v3, v5, :cond_2a

    .line 19929
    nop

    .line 19930
    nop

    .line 19943
    move/from16 v8, v22

    move/from16 v3, v33

    goto :goto_26

    .line 19931
    :cond_2a
    iget v3, v2, Lcom/android/server/am/ActivityManagerService$MemItem;->id:I

    if-nez v3, :cond_2b

    .line 19932
    nop

    .line 19933
    const/16 v3, 0x8

    .line 19943
    move/from16 v8, v26

    goto :goto_26

    .line 19934
    :cond_2b
    iget v3, v2, Lcom/android/server/am/ActivityManagerService$MemItem;->id:I

    const/16 v5, 0xa

    if-ne v3, v5, :cond_2c

    .line 19935
    const/16 v8, 0x9

    .line 19936
    const/16 v3, 0xb

    goto :goto_26

    .line 19937
    :cond_2c
    iget v3, v2, Lcom/android/server/am/ActivityManagerService$MemItem;->id:I

    const/16 v5, 0xc

    if-ne v3, v5, :cond_29

    .line 19938
    const/16 v8, 0xc

    .line 19939
    const/16 v3, 0xd

    .line 19943
    :goto_26
    new-instance v5, Ljava/util/ArrayList;

    invoke-direct {v5}, Ljava/util/ArrayList;-><init>()V

    iput-object v5, v2, Lcom/android/server/am/ActivityManagerService$MemItem;->subitems:Ljava/util/ArrayList;

    .line 19944
    :goto_27
    if-gt v8, v3, :cond_2d

    .line 19945
    const/16 v5, 0x11

    add-int v6, v5, v8

    invoke-static {v6}, Landroid/os/Debug$MemoryInfo;->getOtherLabel(I)Ljava/lang/String;

    move-result-object v36

    .line 19947
    iget-object v6, v2, Lcom/android/server/am/ActivityManagerService$MemItem;->subitems:Ljava/util/ArrayList;

    new-instance v7, Lcom/android/server/am/ActivityManagerService$MemItem;

    aget-wide v37, v12, v8

    aget-wide v39, v20, v8

    move-object/from16 v34, v7

    move-object/from16 v35, v36

    move/from16 v41, v8

    invoke-direct/range {v34 .. v41}, Lcom/android/server/am/ActivityManagerService$MemItem;-><init>(Ljava/lang/String;Ljava/lang/String;JJI)V

    invoke-virtual {v6, v7}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    .line 19944
    add-int/lit8 v8, v8, 0x1

    goto :goto_27

    .line 19950
    :cond_2d
    const/16 v5, 0x11

    goto :goto_25

    .line 19953
    :cond_2e
    new-instance v1, Ljava/util/ArrayList;

    invoke-direct {v1}, Ljava/util/ArrayList;-><init>()V

    .line 19954
    move/from16 v2, v22

    :goto_28
    move-object/from16 v3, v91

    array-length v5, v3

    if-ge v2, v5, :cond_31

    .line 19955
    aget-wide v5, v3, v2

    cmp-long v5, v5, v23

    if-eqz v5, :cond_30

    .line 19956
    move-object/from16 v5, p2

    iget-boolean v6, v5, Lcom/android/server/am/ActivityManagerService$MemoryUsageDumpOptions;->isCompact:Z

    if-eqz v6, :cond_2f

    sget-object v6, Lcom/android/server/am/ActivityManagerService;->DUMP_MEM_OOM_COMPACT_LABEL:[Ljava/lang/String;

    aget-object v6, v6, v2

    .line 19958
    :goto_29
    move-object/from16 v27, v6

    goto :goto_2a

    .line 19957
    :cond_2f
    sget-object v6, Lcom/android/server/am/ActivityManagerService;->DUMP_MEM_OOM_LABEL:[Ljava/lang/String;

    aget-object v6, v6, v2

    goto :goto_29

    .line 19958
    :goto_2a
    new-instance v6, Lcom/android/server/am/ActivityManagerService$MemItem;

    aget-wide v28, v3, v2

    aget-wide v30, v16, v2

    sget-object v7, Lcom/android/server/am/ActivityManagerService;->DUMP_MEM_OOM_ADJ:[I

    aget v32, v7, v2

    move-object/from16 v25, v6

    move-object/from16 v26, v27

    invoke-direct/range {v25 .. v32}, Lcom/android/server/am/ActivityManagerService$MemItem;-><init>(Ljava/lang/String;Ljava/lang/String;JJI)V

    .line 19960
    aget-object v7, v43, v2

    iput-object v7, v6, Lcom/android/server/am/ActivityManagerService$MemItem;->subitems:Ljava/util/ArrayList;

    .line 19961
    invoke-virtual {v1, v6}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    goto :goto_2b

    .line 19954
    :cond_30
    move-object/from16 v5, p2

    :goto_2b
    add-int/lit8 v2, v2, 0x1

    move-object/from16 v91, v3

    goto :goto_28

    .line 19965
    :cond_31
    move-object/from16 v5, p2

    iget-boolean v2, v5, Lcom/android/server/am/ActivityManagerService$MemoryUsageDumpOptions;->dumpSwapPss:Z

    if-eqz v2, :cond_32

    if-eqz v21, :cond_32

    cmp-long v2, v56, v23

    if-eqz v2, :cond_32

    const/4 v2, 0x1

    goto :goto_2c

    :cond_32
    move/from16 v2, v22

    :goto_2c
    iput-boolean v2, v5, Lcom/android/server/am/ActivityManagerService$MemoryUsageDumpOptions;->dumpSwapPss:Z

    .line 19966
    iget-boolean v2, v5, Lcom/android/server/am/ActivityManagerService$MemoryUsageDumpOptions;->oomOnly:Z

    if-nez v2, :cond_33

    .line 19967
    const-wide v27, 0x20b00000005L

    const-string/jumbo v29, "proc"

    const/16 v31, 0x1

    iget-boolean v2, v5, Lcom/android/server/am/ActivityManagerService$MemoryUsageDumpOptions;->dumpSwapPss:Z

    move-object/from16 v26, v88

    move-object/from16 v30, v100

    move/from16 v32, v2

    invoke-static/range {v26 .. v32}, Lcom/android/server/am/ActivityManagerService;->dumpMemItems(Landroid/util/proto/ProtoOutputStream;JLjava/lang/String;Ljava/util/ArrayList;ZZ)V

    .line 19970
    :cond_33
    const-wide v27, 0x20b00000006L

    const-string/jumbo v29, "oom"

    const/16 v31, 0x0

    iget-boolean v2, v5, Lcom/android/server/am/ActivityManagerService$MemoryUsageDumpOptions;->dumpSwapPss:Z

    move-object/from16 v26, v88

    move-object/from16 v30, v1

    move/from16 v32, v2

    invoke-static/range {v26 .. v32}, Lcom/android/server/am/ActivityManagerService;->dumpMemItems(Landroid/util/proto/ProtoOutputStream;JLjava/lang/String;Ljava/util/ArrayList;ZZ)V

    .line 19972
    if-nez p4, :cond_34

    iget-boolean v2, v5, Lcom/android/server/am/ActivityManagerService$MemoryUsageDumpOptions;->oomOnly:Z

    if-nez v2, :cond_34

    .line 19973
    const-wide v27, 0x20b00000007L

    const-string v29, "cat"

    const/16 v31, 0x1

    iget-boolean v2, v5, Lcom/android/server/am/ActivityManagerService$MemoryUsageDumpOptions;->dumpSwapPss:Z

    move-object/from16 v26, v88

    move-object/from16 v30, v0

    move/from16 v32, v2

    invoke-static/range {v26 .. v32}, Lcom/android/server/am/ActivityManagerService;->dumpMemItems(Landroid/util/proto/ProtoOutputStream;JLjava/lang/String;Ljava/util/ArrayList;ZZ)V

    .line 19976
    :cond_34
    new-instance v0, Lcom/android/internal/util/MemInfoReader;

    invoke-direct {v0}, Lcom/android/internal/util/MemInfoReader;-><init>()V

    .line 19977
    invoke-virtual {v0}, Lcom/android/internal/util/MemInfoReader;->readMemInfo()V

    .line 19978
    cmp-long v2, v74, v23

    const-wide/16 v5, 0x400

    if-lez v2, :cond_35

    .line 19979
    monitor-enter p0

    :try_start_c
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    .line 19980
    invoke-virtual {v0}, Lcom/android/internal/util/MemInfoReader;->getCachedSizeKb()J

    move-result-wide v66

    .line 19981
    invoke-virtual {v0}, Lcom/android/internal/util/MemInfoReader;->getFreeSizeKb()J

    move-result-wide v68

    .line 19982
    invoke-virtual {v0}, Lcom/android/internal/util/MemInfoReader;->getZramTotalSizeKb()J

    move-result-wide v70

    .line 19983
    invoke-virtual {v0}, Lcom/android/internal/util/MemInfoReader;->getKernelUsedSizeKb()J

    move-result-wide v72

    .line 19984
    mul-long v12, v66, v5

    mul-long v14, v68, v5

    mul-long v16, v70, v5

    mul-long v18, v72, v5

    mul-long v20, v74, v5

    invoke-static/range {v12 .. v21}, Lcom/android/server/am/EventLogTags;->writeAmMeminfo(JJJJJ)V

    .line 19986
    iget-object v2, v4, Lcom/android/server/am/ActivityManagerService;->mProcessStats:Lcom/android/server/am/ProcessStatsService;

    move-object/from16 v65, v2

    invoke-virtual/range {v65 .. v75}, Lcom/android/server/am/ProcessStatsService;->addSysMemUsageLocked(JJJJJ)V

    .line 19988
    monitor-exit p0
    :try_end_c
    .catchall {:try_start_c .. :try_end_c} :catchall_6

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    goto :goto_2d

    :catchall_6
    move-exception v0

    :try_start_d
    monitor-exit p0
    :try_end_d
    .catchall {:try_start_d .. :try_end_d} :catchall_6

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw v0

    .line 19990
    :cond_35
    :goto_2d
    if-nez p4, :cond_36

    .line 19991
    const-wide v2, 0x10300000008L

    invoke-virtual {v0}, Lcom/android/internal/util/MemInfoReader;->getTotalSizeKb()J

    move-result-wide v7

    move-object/from16 v9, v88

    invoke-virtual {v9, v2, v3, v7, v8}, Landroid/util/proto/ProtoOutputStream;->write(JJ)V

    .line 19992
    const-wide v2, 0x10e00000009L

    iget v7, v4, Lcom/android/server/am/ActivityManagerService;->mLastMemoryLevel:I

    invoke-virtual {v9, v2, v3, v7}, Landroid/util/proto/ProtoOutputStream;->write(JI)V

    .line 19993
    const-wide v2, 0x1030000000aL

    move-wide/from16 v7, v93

    invoke-virtual {v9, v2, v3, v7, v8}, Landroid/util/proto/ProtoOutputStream;->write(JJ)V

    .line 19994
    const-wide v2, 0x1030000000bL

    invoke-virtual {v0}, Lcom/android/internal/util/MemInfoReader;->getCachedSizeKb()J

    move-result-wide v12

    invoke-virtual {v9, v2, v3, v12, v13}, Landroid/util/proto/ProtoOutputStream;->write(JJ)V

    .line 19995
    const-wide v2, 0x1030000000cL

    invoke-virtual {v0}, Lcom/android/internal/util/MemInfoReader;->getFreeSizeKb()J

    move-result-wide v12

    invoke-virtual {v9, v2, v3, v12, v13}, Landroid/util/proto/ProtoOutputStream;->write(JJ)V

    goto :goto_2e

    .line 19997
    :cond_36
    move-object/from16 v9, v88

    move-wide/from16 v7, v93

    :goto_2e
    invoke-virtual {v0}, Lcom/android/internal/util/MemInfoReader;->getTotalSizeKb()J

    move-result-wide v2

    sub-long v12, v10, v56

    sub-long/2addr v2, v12

    .line 19998
    invoke-virtual {v0}, Lcom/android/internal/util/MemInfoReader;->getFreeSizeKb()J

    move-result-wide v12

    sub-long/2addr v2, v12

    invoke-virtual {v0}, Lcom/android/internal/util/MemInfoReader;->getCachedSizeKb()J

    move-result-wide v12

    sub-long/2addr v2, v12

    .line 19999
    invoke-virtual {v0}, Lcom/android/internal/util/MemInfoReader;->getKernelUsedSizeKb()J

    move-result-wide v12

    sub-long/2addr v2, v12

    invoke-virtual {v0}, Lcom/android/internal/util/MemInfoReader;->getZramTotalSizeKb()J

    move-result-wide v12

    sub-long/2addr v2, v12

    .line 20000
    const-wide v12, 0x1030000000dL

    sub-long/2addr v10, v7

    invoke-virtual {v9, v12, v13, v10, v11}, Landroid/util/proto/ProtoOutputStream;->write(JJ)V

    .line 20001
    const-wide v7, 0x1030000000eL

    invoke-virtual {v0}, Lcom/android/internal/util/MemInfoReader;->getKernelUsedSizeKb()J

    move-result-wide v10

    invoke-virtual {v9, v7, v8, v10, v11}, Landroid/util/proto/ProtoOutputStream;->write(JJ)V

    .line 20002
    const-wide v7, 0x1030000000fL

    invoke-virtual {v9, v7, v8, v2, v3}, Landroid/util/proto/ProtoOutputStream;->write(JJ)V

    .line 20003
    if-nez p4, :cond_39

    .line 20004
    invoke-virtual {v0}, Lcom/android/internal/util/MemInfoReader;->getZramTotalSizeKb()J

    move-result-wide v1

    cmp-long v1, v1, v23

    if-eqz v1, :cond_37

    .line 20005
    const-wide v1, 0x10300000010L

    invoke-virtual {v0}, Lcom/android/internal/util/MemInfoReader;->getZramTotalSizeKb()J

    move-result-wide v7

    invoke-virtual {v9, v1, v2, v7, v8}, Landroid/util/proto/ProtoOutputStream;->write(JJ)V

    .line 20006
    const-wide v1, 0x10300000011L

    .line 20007
    invoke-virtual {v0}, Lcom/android/internal/util/MemInfoReader;->getSwapTotalSizeKb()J

    move-result-wide v7

    invoke-virtual {v0}, Lcom/android/internal/util/MemInfoReader;->getSwapFreeSizeKb()J

    move-result-wide v10

    sub-long/2addr v7, v10

    .line 20006
    invoke-virtual {v9, v1, v2, v7, v8}, Landroid/util/proto/ProtoOutputStream;->write(JJ)V

    .line 20008
    const-wide v1, 0x10300000012L

    invoke-virtual {v0}, Lcom/android/internal/util/MemInfoReader;->getSwapTotalSizeKb()J

    move-result-wide v7

    invoke-virtual {v9, v1, v2, v7, v8}, Landroid/util/proto/ProtoOutputStream;->write(JJ)V

    .line 20010
    :cond_37
    invoke-direct/range {p0 .. p0}, Lcom/android/server/am/ActivityManagerService;->getKsmInfo()[J

    move-result-object v0

    .line 20011
    const-wide v1, 0x10300000013L

    const/4 v3, 0x1

    aget-wide v7, v0, v3

    invoke-virtual {v9, v1, v2, v7, v8}, Landroid/util/proto/ProtoOutputStream;->write(JJ)V

    .line 20012
    const-wide v1, 0x10300000014L

    aget-wide v7, v0, v22

    invoke-virtual {v9, v1, v2, v7, v8}, Landroid/util/proto/ProtoOutputStream;->write(JJ)V

    .line 20013
    const-wide v1, 0x10300000015L

    const/4 v3, 0x2

    aget-wide v7, v0, v3

    invoke-virtual {v9, v1, v2, v7, v8}, Landroid/util/proto/ProtoOutputStream;->write(JJ)V

    .line 20014
    const-wide v1, 0x10300000016L

    aget-wide v7, v0, v33

    invoke-virtual {v9, v1, v2, v7, v8}, Landroid/util/proto/ProtoOutputStream;->write(JJ)V

    .line 20016
    const-wide v0, 0x10500000017L

    invoke-static {}, Landroid/app/ActivityManager;->staticGetMemoryClass()I

    move-result v2

    invoke-virtual {v9, v0, v1, v2}, Landroid/util/proto/ProtoOutputStream;->write(JI)V

    .line 20017
    const-wide v0, 0x10500000018L

    invoke-static {}, Landroid/app/ActivityManager;->staticGetLargeMemoryClass()I

    move-result v2

    invoke-virtual {v9, v0, v1, v2}, Landroid/util/proto/ProtoOutputStream;->write(JI)V

    .line 20018
    const-wide v0, 0x10300000019L

    iget-object v2, v4, Lcom/android/server/am/ActivityManagerService;->mProcessList:Lcom/android/server/am/ProcessList;

    const/16 v3, 0x38a

    .line 20019
    invoke-virtual {v2, v3}, Lcom/android/server/am/ProcessList;->getMemLevel(I)J

    move-result-wide v2

    div-long/2addr v2, v5

    .line 20018
    invoke-virtual {v9, v0, v1, v2, v3}, Landroid/util/proto/ProtoOutputStream;->write(JJ)V

    .line 20020
    const-wide v0, 0x1030000001aL

    iget-object v2, v4, Lcom/android/server/am/ActivityManagerService;->mProcessList:Lcom/android/server/am/ProcessList;

    .line 20021
    invoke-virtual {v2}, Lcom/android/server/am/ProcessList;->getCachedRestoreThresholdKb()J

    move-result-wide v2

    .line 20020
    invoke-virtual {v9, v0, v1, v2, v3}, Landroid/util/proto/ProtoOutputStream;->write(JJ)V

    .line 20023
    const-wide v0, 0x1080000001bL

    invoke-static {}, Landroid/app/ActivityManager;->isLowRamDeviceStatic()Z

    move-result v2

    invoke-virtual {v9, v0, v1, v2}, Landroid/util/proto/ProtoOutputStream;->write(JZ)V

    .line 20024
    const-wide v0, 0x1080000001cL

    invoke-static {}, Landroid/app/ActivityManager;->isHighEndGfx()Z

    move-result v2

    invoke-virtual {v9, v0, v1, v2}, Landroid/util/proto/ProtoOutputStream;->write(JZ)V

    goto :goto_2f

    .line 19912
    :catchall_7
    move-exception v0

    :try_start_e
    monitor-exit v5
    :try_end_e
    .catchall {:try_start_e .. :try_end_e} :catchall_7

    throw v0

    .line 20028
    :cond_38
    move-object/from16 v9, v88

    :cond_39
    :goto_2f
    invoke-virtual {v9}, Landroid/util/proto/ProtoOutputStream;->flush()V

    .line 20029
    return-void
.end method

.method private final dumpApplicationMemoryUsage(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;Ljava/lang/String;Lcom/android/server/am/ActivityManagerService$MemoryUsageDumpOptions;[Ljava/lang/String;ZLjava/util/ArrayList;Ljava/io/PrintWriter;)V
    .locals 96
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "(",
            "Ljava/io/FileDescriptor;",
            "Ljava/io/PrintWriter;",
            "Ljava/lang/String;",
            "Lcom/android/server/am/ActivityManagerService$MemoryUsageDumpOptions;",
            "[",
            "Ljava/lang/String;",
            "Z",
            "Ljava/util/ArrayList<",
            "Lcom/android/server/am/ProcessRecord;",
            ">;",
            "Ljava/io/PrintWriter;",
            ")V"
        }
    .end annotation

    move-object/from16 v9, p0

    move-object/from16 v15, p2

    move-object/from16 v13, p4

    move-object/from16 v14, p5

    move-object/from16 v12, p7

    .line 19130
    invoke-static {}, Landroid/os/SystemClock;->uptimeMillis()J

    move-result-wide v3

    .line 19131
    invoke-static {}, Landroid/os/SystemClock;->elapsedRealtime()J

    move-result-wide v5

    .line 19132
    const/4 v11, 0x1

    new-array v10, v11, [J

    .line 19134
    const/4 v7, 0x0

    if-nez v12, :cond_d

    .line 19136
    const-string v0, "N/A"

    .line 19137
    array-length v1, v14

    if-lez v1, :cond_c

    .line 19138
    aget-object v1, v14, v7

    .line 19139
    invoke-virtual {v1, v7}, Ljava/lang/String;->charAt(I)C

    move-result v0

    const/16 v2, 0x2d

    if-eq v0, v2, :cond_a

    .line 19140
    new-instance v12, Ljava/util/ArrayList;

    invoke-direct {v12}, Ljava/util/ArrayList;-><init>()V

    .line 19142
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/am/ActivityManagerService;->updateCpuStatsNow()V

    .line 19143
    nop

    .line 19145
    :try_start_0
    aget-object v0, v14, v7

    invoke-static {v0}, Ljava/lang/Integer;->parseInt(Ljava/lang/String;)I

    move-result v0
    :try_end_0
    .catch Ljava/lang/NumberFormatException; {:try_start_0 .. :try_end_0} :catch_0

    .line 19147
    goto :goto_0

    .line 19146
    :catch_0
    move-exception v0

    .line 19148
    const/4 v0, -0x1

    :goto_0
    iget-object v2, v9, Lcom/android/server/am/ActivityManagerService;->mProcessCpuTracker:Lcom/android/internal/os/ProcessCpuTracker;

    monitor-enter v2

    .line 19149
    :try_start_1
    iget-object v8, v9, Lcom/android/server/am/ActivityManagerService;->mProcessCpuTracker:Lcom/android/internal/os/ProcessCpuTracker;

    invoke-virtual {v8}, Lcom/android/internal/os/ProcessCpuTracker;->countStats()I

    move-result v8

    .line 19150
    move v11, v7

    :goto_1
    if-ge v11, v8, :cond_3

    .line 19151
    iget-object v7, v9, Lcom/android/server/am/ActivityManagerService;->mProcessCpuTracker:Lcom/android/internal/os/ProcessCpuTracker;

    invoke-virtual {v7, v11}, Lcom/android/internal/os/ProcessCpuTracker;->getStats(I)Lcom/android/internal/os/ProcessCpuTracker$Stats;

    move-result-object v7

    .line 19152
    move-object/from16 v33, v1

    iget v1, v7, Lcom/android/internal/os/ProcessCpuTracker$Stats;->pid:I

    if-eq v1, v0, :cond_1

    iget-object v1, v7, Lcom/android/internal/os/ProcessCpuTracker$Stats;->baseName:Ljava/lang/String;

    if-eqz v1, :cond_0

    iget-object v1, v7, Lcom/android/internal/os/ProcessCpuTracker$Stats;->baseName:Ljava/lang/String;

    move/from16 v34, v0

    const/16 v16, 0x0

    aget-object v0, v14, v16

    .line 19153
    invoke-virtual {v1, v0}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v0

    if-eqz v0, :cond_2

    goto :goto_2

    .line 19150
    :cond_0
    move/from16 v34, v0

    const/16 v16, 0x0

    goto :goto_3

    .line 19154
    :cond_1
    move/from16 v34, v0

    const/16 v16, 0x0

    :goto_2
    invoke-virtual {v12, v7}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    .line 19150
    :cond_2
    :goto_3
    add-int/lit8 v11, v11, 0x1

    move/from16 v7, v16

    move-object/from16 v1, v33

    move/from16 v0, v34

    goto :goto_1

    .line 19157
    :cond_3
    move-object/from16 v33, v1

    move/from16 v16, v7

    monitor-exit v2
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 19158
    invoke-virtual {v12}, Ljava/util/ArrayList;->size()I

    move-result v0

    if-lez v0, :cond_b

    .line 19159
    iget-boolean v7, v13, Lcom/android/server/am/ActivityManagerService$MemoryUsageDumpOptions;->isCheckinRequest:Z

    iget-boolean v8, v13, Lcom/android/server/am/ActivityManagerService$MemoryUsageDumpOptions;->isCompact:Z

    move-object v1, v9

    move-object v2, v15

    move/from16 v32, v16

    const/4 v14, 0x0

    invoke-direct/range {v1 .. v8}, Lcom/android/server/am/ActivityManagerService;->dumpApplicationMemoryUsageHeader(Ljava/io/PrintWriter;JJZZ)V

    .line 19161
    nop

    .line 19162
    invoke-virtual {v12}, Ljava/util/ArrayList;->size()I

    move-result v0

    const/4 v1, 0x1

    sub-int/2addr v0, v1

    move-object v1, v14

    :goto_4
    if-ltz v0, :cond_9

    .line 19163
    invoke-virtual {v12, v0}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Lcom/android/internal/os/ProcessCpuTracker$Stats;

    .line 19164
    iget v7, v2, Lcom/android/internal/os/ProcessCpuTracker$Stats;->pid:I

    .line 19165
    iget-boolean v3, v13, Lcom/android/server/am/ActivityManagerService$MemoryUsageDumpOptions;->isCheckinRequest:Z

    if-nez v3, :cond_4

    iget-boolean v3, v13, Lcom/android/server/am/ActivityManagerService$MemoryUsageDumpOptions;->dumpDetails:Z

    if-eqz v3, :cond_4

    .line 19166
    new-instance v3, Ljava/lang/StringBuilder;

    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V

    const-string v4, "\n** MEMINFO in pid "

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v3, v7}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v4, " ["

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget-object v4, v2, Lcom/android/internal/os/ProcessCpuTracker$Stats;->baseName:Ljava/lang/String;

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v4, "] **"

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v3

    invoke-virtual {v15, v3}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 19168
    :cond_4
    if-nez v1, :cond_5

    .line 19169
    new-instance v1, Landroid/os/Debug$MemoryInfo;

    invoke-direct {v1}, Landroid/os/Debug$MemoryInfo;-><init>()V

    .line 19171
    :cond_5
    move-object v11, v1

    iget-boolean v1, v13, Lcom/android/server/am/ActivityManagerService$MemoryUsageDumpOptions;->dumpDetails:Z

    if-nez v1, :cond_7

    if-nez p6, :cond_6

    iget-boolean v1, v13, Lcom/android/server/am/ActivityManagerService$MemoryUsageDumpOptions;->oomOnly:Z

    if-nez v1, :cond_6

    goto :goto_5

    .line 19174
    :cond_6
    invoke-static {v7, v10, v14}, Landroid/os/Debug;->getPss(I[J[J)J

    move-result-wide v3

    long-to-int v1, v3

    iput v1, v11, Landroid/os/Debug$MemoryInfo;->dalvikPss:I

    .line 19175
    aget-wide v3, v10, v32

    long-to-int v1, v3

    iput v1, v11, Landroid/os/Debug$MemoryInfo;->dalvikPrivateDirty:I

    goto :goto_6

    .line 19172
    :cond_7
    :goto_5
    invoke-static {v7, v11}, Landroid/os/Debug;->getMemoryInfo(ILandroid/os/Debug$MemoryInfo;)V

    .line 19177
    :goto_6
    iget-boolean v3, v13, Lcom/android/server/am/ActivityManagerService$MemoryUsageDumpOptions;->isCheckinRequest:Z

    iget-boolean v4, v13, Lcom/android/server/am/ActivityManagerService$MemoryUsageDumpOptions;->dumpFullDetails:Z

    iget-boolean v5, v13, Lcom/android/server/am/ActivityManagerService$MemoryUsageDumpOptions;->dumpDalvik:Z

    iget-boolean v6, v13, Lcom/android/server/am/ActivityManagerService$MemoryUsageDumpOptions;->dumpSummaryOnly:Z

    iget-object v8, v2, Lcom/android/internal/os/ProcessCpuTracker$Stats;->baseName:Ljava/lang/String;

    const-wide/16 v16, 0x0

    const-wide/16 v18, 0x0

    const-wide/16 v20, 0x0

    const-wide/16 v22, 0x0

    const-wide/16 v24, 0x0

    const-wide/16 v26, 0x0

    move-object v1, v15

    move-object v2, v11

    move-object/from16 v35, v10

    move-wide/from16 v9, v16

    move-object/from16 v29, v11

    move-object/from16 v28, v12

    move-wide/from16 v11, v18

    move-wide/from16 v13, v20

    move-wide/from16 v15, v22

    move-wide/from16 v17, v24

    move-wide/from16 v19, v26

    invoke-static/range {v1 .. v20}, Landroid/app/ActivityThread;->dumpMemInfoTable(Ljava/io/PrintWriter;Landroid/os/Debug$MemoryInfo;ZZZZILjava/lang/String;JJJJJJ)V

    .line 19180
    move-object/from16 v15, p4

    iget-boolean v1, v15, Lcom/android/server/am/ActivityManagerService$MemoryUsageDumpOptions;->isCheckinRequest:Z

    if-eqz v1, :cond_8

    .line 19181
    invoke-virtual/range {p2 .. p2}, Ljava/io/PrintWriter;->println()V

    .line 19162
    :cond_8
    add-int/lit8 v0, v0, -0x1

    move-object v13, v15

    move-object/from16 v12, v28

    move-object/from16 v1, v29

    move-object/from16 v10, v35

    const/4 v14, 0x0

    move-object/from16 v15, p2

    goto/16 :goto_4

    .line 19184
    :cond_9
    return-void

    .line 19157
    :catchall_0
    move-exception v0

    :try_start_2
    monitor-exit v2
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    throw v0

    .line 19188
    :cond_a
    move-object/from16 v33, v1

    :cond_b
    move-object/from16 v0, v33

    :cond_c
    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string v2, "No process found for: "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v1, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    move-object/from16 v13, p2

    invoke-virtual {v13, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 19189
    return-void

    .line 19192
    :cond_d
    move/from16 v32, v7

    move-object/from16 v35, v10

    move-object/from16 v95, v15

    move-object v15, v13

    move-object/from16 v13, v95

    if-nez p6, :cond_f

    iget-boolean v0, v15, Lcom/android/server/am/ActivityManagerService$MemoryUsageDumpOptions;->oomOnly:Z

    if-nez v0, :cond_f

    invoke-virtual/range {p7 .. p7}, Ljava/util/ArrayList;->size()I

    move-result v0

    const/4 v1, 0x1

    if-eq v0, v1, :cond_e

    iget-boolean v0, v15, Lcom/android/server/am/ActivityManagerService$MemoryUsageDumpOptions;->isCheckinRequest:Z

    if-nez v0, :cond_e

    iget-boolean v0, v15, Lcom/android/server/am/ActivityManagerService$MemoryUsageDumpOptions;->packages:Z

    if-eqz v0, :cond_f

    .line 19193
    :cond_e
    const/4 v1, 0x1

    iput-boolean v1, v15, Lcom/android/server/am/ActivityManagerService$MemoryUsageDumpOptions;->dumpDetails:Z

    .line 19196
    :cond_f
    iget-boolean v7, v15, Lcom/android/server/am/ActivityManagerService$MemoryUsageDumpOptions;->isCheckinRequest:Z

    iget-boolean v8, v15, Lcom/android/server/am/ActivityManagerService$MemoryUsageDumpOptions;->isCompact:Z

    move-object v1, v9

    move-object v2, v13

    invoke-direct/range {v1 .. v8}, Lcom/android/server/am/ActivityManagerService;->dumpApplicationMemoryUsageHeader(Ljava/io/PrintWriter;JJZZ)V

    .line 19198
    new-instance v4, Ljava/util/ArrayList;

    invoke-direct {v4}, Ljava/util/ArrayList;-><init>()V

    .line 19199
    new-instance v1, Landroid/util/SparseArray;

    invoke-direct {v1}, Landroid/util/SparseArray;-><init>()V

    .line 19200
    nop

    .line 19201
    nop

    .line 19202
    nop

    .line 19203
    nop

    .line 19204
    iget-boolean v0, v15, Lcom/android/server/am/ActivityManagerService$MemoryUsageDumpOptions;->dumpDalvik:Z

    const/16 v2, 0xe

    if-eqz v0, :cond_10

    new-array v0, v2, [J

    .line 19206
    :goto_7
    move-object v3, v0

    goto :goto_8

    .line 19205
    :cond_10
    sget-object v0, Llibcore/util/EmptyArray;->LONG:[J

    goto :goto_7

    .line 19206
    :goto_8
    iget-boolean v0, v15, Lcom/android/server/am/ActivityManagerService$MemoryUsageDumpOptions;->dumpDalvik:Z

    if-eqz v0, :cond_11

    new-array v0, v2, [J

    .line 19208
    :goto_9
    move-object v2, v0

    goto :goto_a

    .line 19207
    :cond_11
    sget-object v0, Llibcore/util/EmptyArray;->LONG:[J

    goto :goto_9

    .line 19208
    :goto_a
    nop

    .line 19209
    nop

    .line 19210
    const/16 v5, 0x11

    new-array v6, v5, [J

    .line 19211
    new-array v7, v5, [J

    .line 19213
    sget-object v0, Lcom/android/server/am/ActivityManagerService;->DUMP_MEM_OOM_LABEL:[Ljava/lang/String;

    array-length v0, v0

    new-array v8, v0, [J

    .line 19214
    sget-object v0, Lcom/android/server/am/ActivityManagerService;->DUMP_MEM_OOM_LABEL:[Ljava/lang/String;

    array-length v0, v0

    new-array v11, v0, [J

    .line 19215
    sget-object v0, Lcom/android/server/am/ActivityManagerService;->DUMP_MEM_OOM_LABEL:[Ljava/lang/String;

    array-length v0, v0

    new-array v10, v0, [Ljava/util/ArrayList;

    .line 19218
    nop

    .line 19219
    nop

    .line 19220
    nop

    .line 19221
    nop

    .line 19222
    nop

    .line 19224
    nop

    .line 19225
    invoke-virtual/range {p7 .. p7}, Ljava/util/ArrayList;->size()I

    move-result v0

    const/16 v16, 0x1

    add-int/lit8 v0, v0, -0x1

    const-wide/16 v30, 0x0

    move v5, v0

    move-wide/from16 v33, v30

    move-wide/from16 v39, v33

    move-wide/from16 v41, v39

    move-wide/from16 v43, v41

    move-wide/from16 v45, v43

    move-wide/from16 v47, v45

    move-wide/from16 v49, v47

    move-wide/from16 v51, v49

    move-wide/from16 v53, v51

    move/from16 v17, v32

    const/4 v0, 0x0

    :goto_b
    const/16 v18, 0x4

    const/16 v19, 0x3

    if-ltz v5, :cond_29

    .line 19226
    invoke-virtual {v12, v5}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v20

    move/from16 v55, v5

    move-object/from16 v5, v20

    check-cast v5, Lcom/android/server/am/ProcessRecord;

    .line 19231
    monitor-enter p0

    :try_start_3
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    .line 19232
    move-object/from16 v56, v10

    iget-object v10, v5, Lcom/android/server/am/ProcessRecord;->thread:Landroid/app/IApplicationThread;

    .line 19233
    move-object/from16 v57, v8

    iget v8, v5, Lcom/android/server/am/ProcessRecord;->pid:I

    .line 19234
    move-object/from16 v58, v7

    invoke-virtual {v5}, Lcom/android/server/am/ProcessRecord;->getSetAdjWithServices()I

    move-result v7

    .line 19235
    move-object/from16 v59, v11

    iget-object v11, v5, Lcom/android/server/am/ProcessRecord;->activities:Ljava/util/ArrayList;

    invoke-virtual {v11}, Ljava/util/ArrayList;->size()I

    move-result v11

    if-lez v11, :cond_12

    .line 19236
    move/from16 v36, v16

    goto :goto_c

    .line 19235
    :cond_12
    nop

    .line 19236
    move/from16 v36, v32

    :goto_c
    monitor-exit p0
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_4

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    .line 19237
    if-eqz v10, :cond_28

    .line 19238
    iget-boolean v11, v15, Lcom/android/server/am/ActivityManagerService$MemoryUsageDumpOptions;->isCheckinRequest:Z

    if-nez v11, :cond_13

    iget-boolean v11, v15, Lcom/android/server/am/ActivityManagerService$MemoryUsageDumpOptions;->dumpDetails:Z

    if-eqz v11, :cond_13

    .line 19239
    new-instance v11, Ljava/lang/StringBuilder;

    invoke-direct {v11}, Ljava/lang/StringBuilder;-><init>()V

    const-string v12, "\n** MEMINFO in pid "

    invoke-virtual {v11, v12}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v11, v8}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v12, " ["

    invoke-virtual {v11, v12}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget-object v12, v5, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;

    invoke-virtual {v11, v12}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v12, "] **"

    invoke-virtual {v11, v12}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v11}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v11

    invoke-virtual {v13, v11}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 19241
    :cond_13
    if-nez v0, :cond_14

    .line 19242
    new-instance v0, Landroid/os/Debug$MemoryInfo;

    invoke-direct {v0}, Landroid/os/Debug$MemoryInfo;-><init>()V

    .line 19247
    :cond_14
    move-object v12, v0

    iget-boolean v0, v15, Lcom/android/server/am/ActivityManagerService$MemoryUsageDumpOptions;->dumpDetails:Z

    if-nez v0, :cond_16

    if-nez p6, :cond_15

    iget-boolean v0, v15, Lcom/android/server/am/ActivityManagerService$MemoryUsageDumpOptions;->oomOnly:Z

    if-nez v0, :cond_15

    goto :goto_d

    .line 19254
    :cond_15
    nop

    .line 19255
    invoke-static {}, Landroid/os/SystemClock;->currentThreadTimeMillis()J

    move-result-wide v20

    .line 19256
    move-object/from16 v62, v2

    move-object/from16 v61, v3

    move-object/from16 v60, v6

    move-object/from16 v11, v35

    const/4 v6, 0x0

    invoke-static {v8, v11, v6}, Landroid/os/Debug;->getPss(I[J[J)J

    move-result-wide v2

    long-to-int v0, v2

    iput v0, v12, Landroid/os/Debug$MemoryInfo;->dalvikPss:I

    .line 19257
    invoke-static {}, Landroid/os/SystemClock;->currentThreadTimeMillis()J

    move-result-wide v2

    .line 19258
    move/from16 v63, v7

    aget-wide v6, v11, v32

    long-to-int v0, v6

    iput v0, v12, Landroid/os/Debug$MemoryInfo;->dalvikPrivateDirty:I

    .line 19260
    move-wide v6, v2

    move/from16 v37, v17

    move/from16 v35, v19

    goto :goto_e

    .line 19248
    :cond_16
    :goto_d
    move-object/from16 v62, v2

    move-object/from16 v61, v3

    move-object/from16 v60, v6

    move/from16 v63, v7

    move-object/from16 v11, v35

    .line 19249
    invoke-static {}, Landroid/os/SystemClock;->currentThreadTimeMillis()J

    move-result-wide v20

    .line 19250
    invoke-static {v8, v12}, Landroid/os/Debug;->getMemoryInfo(ILandroid/os/Debug$MemoryInfo;)V

    .line 19251
    invoke-static {}, Landroid/os/SystemClock;->currentThreadTimeMillis()J

    move-result-wide v2

    .line 19252
    iget-boolean v0, v12, Landroid/os/Debug$MemoryInfo;->hasSwappedOutPss:Z

    .line 19260
    move/from16 v37, v0

    move-wide v6, v2

    move/from16 v35, v18

    :goto_e
    move-wide/from16 v2, v20

    iget-boolean v0, v15, Lcom/android/server/am/ActivityManagerService$MemoryUsageDumpOptions;->dumpDetails:Z

    if-eqz v0, :cond_1c

    .line 19261
    iget-boolean v0, v15, Lcom/android/server/am/ActivityManagerService$MemoryUsageDumpOptions;->localOnly:Z

    if-eqz v0, :cond_19

    .line 19262
    iget-boolean v0, v15, Lcom/android/server/am/ActivityManagerService$MemoryUsageDumpOptions;->isCheckinRequest:Z

    iget-boolean v10, v15, Lcom/android/server/am/ActivityManagerService$MemoryUsageDumpOptions;->dumpFullDetails:Z

    iget-boolean v14, v15, Lcom/android/server/am/ActivityManagerService$MemoryUsageDumpOptions;->dumpDalvik:Z

    move-object/from16 v66, v1

    iget-boolean v1, v15, Lcom/android/server/am/ActivityManagerService$MemoryUsageDumpOptions;->dumpSummaryOnly:Z

    move-object/from16 v67, v4

    iget-object v4, v5, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;

    const-wide/16 v18, 0x0

    const-wide/16 v20, 0x0

    const-wide/16 v22, 0x0

    const-wide/16 v24, 0x0

    const-wide/16 v26, 0x0

    const-wide/16 v28, 0x0

    move/from16 v17, v10

    move-object v10, v13

    move-object/from16 v68, v11

    move-object v11, v12

    move-object/from16 v70, v12

    move v12, v0

    move/from16 v13, v17

    move-wide/from16 v71, v2

    move-object v2, v15

    move v15, v1

    move/from16 v16, v8

    move-object/from16 v17, v4

    invoke-static/range {v10 .. v29}, Landroid/app/ActivityThread;->dumpMemInfoTable(Ljava/io/PrintWriter;Landroid/os/Debug$MemoryInfo;ZZZZILjava/lang/String;JJJJJJ)V

    .line 19264
    iget-boolean v0, v2, Lcom/android/server/am/ActivityManagerService$MemoryUsageDumpOptions;->isCheckinRequest:Z

    if-eqz v0, :cond_17

    .line 19265
    invoke-virtual/range {p2 .. p2}, Ljava/io/PrintWriter;->println()V

    .line 19293
    :cond_17
    move-object/from16 v10, p1

    :cond_18
    :goto_f
    move-object/from16 v11, p2

    goto/16 :goto_14

    .line 19268
    :cond_19
    move-object/from16 v66, v1

    move-wide/from16 v71, v2

    move-object/from16 v67, v4

    move-object/from16 v68, v11

    move-object/from16 v70, v12

    move-object v2, v15

    invoke-virtual/range {p2 .. p2}, Ljava/io/PrintWriter;->flush()V

    .line 19270
    :try_start_4
    new-instance v1, Lcom/android/internal/os/TransferPipe;

    invoke-direct {v1}, Lcom/android/internal/os/TransferPipe;-><init>()V
    :try_end_4
    .catch Ljava/io/IOException; {:try_start_4 .. :try_end_4} :catch_4
    .catch Landroid/os/RemoteException; {:try_start_4 .. :try_end_4} :catch_3

    .line 19272
    :try_start_5
    invoke-virtual {v1}, Lcom/android/internal/os/TransferPipe;->getWriteFd()Landroid/os/ParcelFileDescriptor;

    move-result-object v11

    iget-boolean v13, v2, Lcom/android/server/am/ActivityManagerService$MemoryUsageDumpOptions;->isCheckinRequest:Z

    iget-boolean v14, v2, Lcom/android/server/am/ActivityManagerService$MemoryUsageDumpOptions;->dumpFullDetails:Z

    iget-boolean v15, v2, Lcom/android/server/am/ActivityManagerService$MemoryUsageDumpOptions;->dumpDalvik:Z

    iget-boolean v0, v2, Lcom/android/server/am/ActivityManagerService$MemoryUsageDumpOptions;->dumpSummaryOnly:Z

    iget-boolean v3, v2, Lcom/android/server/am/ActivityManagerService$MemoryUsageDumpOptions;->dumpUnreachable:Z

    move-object/from16 v12, v70

    move/from16 v16, v0

    move/from16 v17, v3

    move-object/from16 v18, p5

    invoke-interface/range {v10 .. v18}, Landroid/app/IApplicationThread;->dumpMemInfo(Landroid/os/ParcelFileDescriptor;Landroid/os/Debug$MemoryInfo;ZZZZZ[Ljava/lang/String;)V

    .line 19275
    iget-boolean v0, v2, Lcom/android/server/am/ActivityManagerService$MemoryUsageDumpOptions;->dumpUnreachable:Z
    :try_end_5
    .catchall {:try_start_5 .. :try_end_5} :catchall_2

    if-eqz v0, :cond_1a

    const-wide/16 v3, 0x7530

    goto :goto_10

    :cond_1a
    const-wide/16 v3, 0x1388

    :goto_10
    move-object/from16 v10, p1

    :try_start_6
    invoke-virtual {v1, v10, v3, v4}, Lcom/android/internal/os/TransferPipe;->go(Ljava/io/FileDescriptor;J)V
    :try_end_6
    .catchall {:try_start_6 .. :try_end_6} :catchall_1

    .line 19277
    :try_start_7
    invoke-virtual {v1}, Lcom/android/internal/os/TransferPipe;->kill()V

    .line 19278
    nop

    .line 19289
    goto :goto_f

    .line 19277
    :catchall_1
    move-exception v0

    goto :goto_11

    :catchall_2
    move-exception v0

    move-object/from16 v10, p1

    :goto_11
    invoke-virtual {v1}, Lcom/android/internal/os/TransferPipe;->kill()V

    throw v0
    :try_end_7
    .catch Ljava/io/IOException; {:try_start_7 .. :try_end_7} :catch_2
    .catch Landroid/os/RemoteException; {:try_start_7 .. :try_end_7} :catch_1

    .line 19284
    :catch_1
    move-exception v0

    goto :goto_12

    .line 19279
    :catch_2
    move-exception v0

    goto :goto_13

    .line 19284
    :catch_3
    move-exception v0

    move-object/from16 v10, p1

    .line 19285
    :goto_12
    iget-boolean v1, v2, Lcom/android/server/am/ActivityManagerService$MemoryUsageDumpOptions;->isCheckinRequest:Z

    if-nez v1, :cond_18

    .line 19286
    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string v3, "Got RemoteException! "

    invoke-virtual {v1, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v1, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    move-object/from16 v11, p2

    invoke-virtual {v11, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 19287
    invoke-virtual/range {p2 .. p2}, Ljava/io/PrintWriter;->flush()V

    goto :goto_14

    .line 19279
    :catch_4
    move-exception v0

    move-object/from16 v10, p1

    :goto_13
    move-object/from16 v11, p2

    .line 19280
    iget-boolean v1, v2, Lcom/android/server/am/ActivityManagerService$MemoryUsageDumpOptions;->isCheckinRequest:Z

    if-nez v1, :cond_1b

    .line 19281
    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string v3, "Got IoException! "

    invoke-virtual {v1, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v1, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    invoke-virtual {v11, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 19282
    invoke-virtual/range {p2 .. p2}, Ljava/io/PrintWriter;->flush()V

    .line 19289
    :cond_1b
    goto :goto_14

    .line 19293
    :cond_1c
    move-object/from16 v10, p1

    move-object/from16 v66, v1

    move-wide/from16 v71, v2

    move-object/from16 v67, v4

    move-object/from16 v68, v11

    move-object/from16 v70, v12

    move-object v11, v13

    move-object v2, v15

    :goto_14
    move-object/from16 v1, v70

    invoke-virtual {v1}, Landroid/os/Debug$MemoryInfo;->getTotalPss()I

    move-result v0

    int-to-long v3, v0

    .line 19294
    invoke-virtual {v1}, Landroid/os/Debug$MemoryInfo;->getTotalUss()I

    move-result v0

    int-to-long v12, v0

    .line 19295
    invoke-virtual {v1}, Landroid/os/Debug$MemoryInfo;->getTotalRss()I

    move-result v0

    int-to-long v14, v0

    .line 19296
    invoke-virtual {v1}, Landroid/os/Debug$MemoryInfo;->getTotalSwappedOutPss()I

    move-result v0

    int-to-long v10, v0

    .line 19298
    monitor-enter p0

    :try_start_8
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    .line 19299
    iget-object v0, v5, Lcom/android/server/am/ProcessRecord;->thread:Landroid/app/IApplicationThread;

    if-eqz v0, :cond_1d

    invoke-virtual {v5}, Lcom/android/server/am/ProcessRecord;->getSetAdjWithServices()I

    move-result v0

    move/from16 v73, v8

    move/from16 v8, v63

    if-ne v8, v0, :cond_1e

    .line 19301
    iget-object v0, v5, Lcom/android/server/am/ProcessRecord;->baseProcessTracker:Lcom/android/internal/app/procstats/ProcessState;

    const/16 v24, 0x1

    sub-long v26, v6, v71

    iget-object v6, v5, Lcom/android/server/am/ProcessRecord;->pkgList:Landroid/util/ArrayMap;

    move-object/from16 v17, v0

    move-wide/from16 v18, v3

    move-wide/from16 v20, v12

    move-wide/from16 v22, v14

    move/from16 v25, v35

    move-object/from16 v28, v6

    invoke-virtual/range {v17 .. v28}, Lcom/android/internal/app/procstats/ProcessState;->addPss(JJJZIJLandroid/util/ArrayMap;)V

    goto :goto_15

    .line 19304
    :cond_1d
    move/from16 v73, v8

    move/from16 v8, v63

    :cond_1e
    :goto_15
    monitor-exit p0
    :try_end_8
    .catchall {:try_start_8 .. :try_end_8} :catchall_3

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    .line 19306
    iget-boolean v0, v2, Lcom/android/server/am/ActivityManagerService$MemoryUsageDumpOptions;->isCheckinRequest:Z

    if-nez v0, :cond_27

    if-eqz v1, :cond_27

    .line 19307
    add-long v51, v51, v3

    .line 19308
    add-long v49, v49, v10

    .line 19309
    new-instance v0, Lcom/android/server/am/ActivityManagerService$MemItem;

    new-instance v6, Ljava/lang/StringBuilder;

    invoke-direct {v6}, Ljava/lang/StringBuilder;-><init>()V

    iget-object v7, v5, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;

    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v7, " (pid "

    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move/from16 v7, v73

    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    .line 19310
    if-eqz v36, :cond_1f

    const-string v12, " / activities)"

    goto :goto_16

    :cond_1f
    const-string v12, ")"

    :goto_16
    invoke-virtual {v6, v12}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v6}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v21

    iget-object v5, v5, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;

    move-object/from16 v20, v0

    move-object/from16 v22, v5

    move-wide/from16 v23, v3

    move-wide/from16 v25, v10

    move/from16 v27, v7

    move/from16 v28, v36

    invoke-direct/range {v20 .. v28}, Lcom/android/server/am/ActivityManagerService$MemItem;-><init>(Ljava/lang/String;Ljava/lang/String;JJIZ)V

    .line 19312
    move-object/from16 v5, v67

    invoke-virtual {v5, v0}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    .line 19313
    move-object/from16 v6, v66

    invoke-virtual {v6, v7, v0}, Landroid/util/SparseArray;->put(ILjava/lang/Object;)V

    .line 19315
    iget v7, v1, Landroid/os/Debug$MemoryInfo;->nativePss:I

    int-to-long v12, v7

    add-long v45, v45, v12

    .line 19316
    iget v7, v1, Landroid/os/Debug$MemoryInfo;->nativeSwappedOutPss:I

    int-to-long v12, v7

    add-long v47, v47, v12

    .line 19317
    iget v7, v1, Landroid/os/Debug$MemoryInfo;->dalvikPss:I

    int-to-long v12, v7

    add-long v33, v33, v12

    .line 19318
    iget v7, v1, Landroid/os/Debug$MemoryInfo;->dalvikSwappedOutPss:I

    int-to-long v12, v7

    add-long v39, v39, v12

    .line 19319
    move/from16 v7, v32

    :goto_17
    move-object/from16 v12, v61

    array-length v13, v12

    if-ge v7, v13, :cond_20

    .line 19320
    aget-wide v13, v12, v7

    move-object/from16 v74, v5

    const/16 v15, 0x11

    add-int v5, v15, v7

    invoke-virtual {v1, v5}, Landroid/os/Debug$MemoryInfo;->getOtherPss(I)I

    move-result v15

    move-wide/from16 v75, v10

    int-to-long v10, v15

    add-long/2addr v13, v10

    aput-wide v13, v12, v7

    .line 19321
    aget-wide v10, v62, v7

    .line 19322
    invoke-virtual {v1, v5}, Landroid/os/Debug$MemoryInfo;->getOtherSwappedOutPss(I)I

    move-result v5

    int-to-long v13, v5

    add-long/2addr v10, v13

    aput-wide v10, v62, v7

    .line 19319
    add-int/lit8 v7, v7, 0x1

    move-object/from16 v61, v12

    move-object/from16 v5, v74

    move-wide/from16 v10, v75

    goto :goto_17

    .line 19324
    :cond_20
    move-object/from16 v74, v5

    move-wide/from16 v75, v10

    iget v5, v1, Landroid/os/Debug$MemoryInfo;->otherPss:I

    int-to-long v10, v5

    add-long v41, v41, v10

    .line 19325
    iget v5, v1, Landroid/os/Debug$MemoryInfo;->otherSwappedOutPss:I

    int-to-long v10, v5

    add-long v43, v43, v10

    .line 19326
    move/from16 v5, v32

    :goto_18
    const/16 v7, 0x11

    if-ge v5, v7, :cond_21

    .line 19327
    invoke-virtual {v1, v5}, Landroid/os/Debug$MemoryInfo;->getOtherPss(I)I

    move-result v7

    int-to-long v10, v7

    .line 19328
    aget-wide v13, v60, v5

    add-long/2addr v13, v10

    aput-wide v13, v60, v5

    .line 19329
    sub-long v41, v41, v10

    .line 19330
    invoke-virtual {v1, v5}, Landroid/os/Debug$MemoryInfo;->getOtherSwappedOutPss(I)I

    move-result v7

    int-to-long v10, v7

    .line 19331
    aget-wide v13, v58, v5

    add-long/2addr v13, v10

    aput-wide v13, v58, v5

    .line 19332
    sub-long v43, v43, v10

    .line 19326
    add-int/lit8 v5, v5, 0x1

    goto :goto_18

    .line 19335
    :cond_21
    const/16 v5, 0x384

    if-lt v8, v5, :cond_22

    .line 19336
    move-wide/from16 v10, v53

    add-long v53, v10, v3

    .line 19337
    goto :goto_19

    .line 19340
    :cond_22
    move-wide/from16 v10, v53

    :goto_19
    move/from16 v5, v32

    :goto_1a
    move-object/from16 v7, v57

    array-length v10, v7

    if-ge v5, v10, :cond_26

    .line 19341
    array-length v10, v7

    const/4 v13, 0x1

    sub-int/2addr v10, v13

    if-eq v5, v10, :cond_24

    sget-object v10, Lcom/android/server/am/ActivityManagerService;->DUMP_MEM_OOM_ADJ:[I

    aget v10, v10, v5

    if-lt v8, v10, :cond_23

    sget-object v10, Lcom/android/server/am/ActivityManagerService;->DUMP_MEM_OOM_ADJ:[I

    add-int/lit8 v11, v5, 0x1

    aget v10, v10, v11

    if-ge v8, v10, :cond_23

    goto :goto_1b

    .line 19340
    :cond_23
    add-int/lit8 v5, v5, 0x1

    move-object/from16 v57, v7

    goto :goto_1a

    .line 19344
    :cond_24
    :goto_1b
    aget-wide v10, v7, v5

    add-long/2addr v10, v3

    aput-wide v10, v7, v5

    .line 19345
    aget-wide v3, v59, v5

    add-long v3, v3, v75

    aput-wide v3, v59, v5

    .line 19346
    aget-object v3, v56, v5

    if-nez v3, :cond_25

    .line 19347
    new-instance v3, Ljava/util/ArrayList;

    invoke-direct {v3}, Ljava/util/ArrayList;-><init>()V

    aput-object v3, v56, v5

    .line 19349
    :cond_25
    aget-object v3, v56, v5

    invoke-virtual {v3, v0}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    .line 19350
    goto :goto_1c

    .line 19225
    :cond_26
    const/4 v13, 0x1

    :goto_1c
    move-object v0, v1

    goto :goto_1d

    :cond_27
    move-wide/from16 v10, v53

    move-object/from16 v7, v57

    move-object/from16 v12, v61

    move-object/from16 v6, v66

    move-object/from16 v74, v67

    const/4 v13, 0x1

    move-object v0, v1

    move-wide/from16 v53, v10

    :goto_1d
    move/from16 v17, v37

    goto :goto_1e

    .line 19304
    :catchall_3
    move-exception v0

    :try_start_9
    monitor-exit p0
    :try_end_9
    .catchall {:try_start_9 .. :try_end_9} :catchall_3

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw v0

    .line 19225
    :cond_28
    move-object/from16 v62, v2

    move-object v12, v3

    move-object/from16 v74, v4

    move-object/from16 v60, v6

    move-object v2, v15

    move/from16 v13, v16

    move-object/from16 v68, v35

    move-wide/from16 v10, v53

    move-object/from16 v7, v57

    move-object v6, v1

    :goto_1e
    add-int/lit8 v5, v55, -0x1

    move-object/from16 v14, p5

    move-object v15, v2

    move-object v1, v6

    move-object v8, v7

    move-object v3, v12

    move/from16 v16, v13

    move-object/from16 v10, v56

    move-object/from16 v7, v58

    move-object/from16 v11, v59

    move-object/from16 v6, v60

    move-object/from16 v2, v62

    move-object/from16 v35, v68

    move-object/from16 v4, v74

    move-object/from16 v13, p2

    move-object/from16 v12, p7

    goto/16 :goto_b

    .line 19236
    :catchall_4
    move-exception v0

    :try_start_a
    monitor-exit p0
    :try_end_a
    .catchall {:try_start_a .. :try_end_a} :catchall_4

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw v0

    .line 19357
    :cond_29
    move-object/from16 v62, v2

    move-object v12, v3

    move-object/from16 v74, v4

    move-object/from16 v60, v6

    move-object/from16 v58, v7

    move-object v7, v8

    move-object/from16 v56, v10

    move-object/from16 v59, v11

    move-object v2, v15

    move/from16 v13, v16

    move-object/from16 v68, v35

    move-wide/from16 v10, v53

    move-object v6, v1

    .line 19359
    iget-boolean v0, v2, Lcom/android/server/am/ActivityManagerService$MemoryUsageDumpOptions;->isCheckinRequest:Z

    if-nez v0, :cond_4f

    invoke-virtual/range {p7 .. p7}, Ljava/util/ArrayList;->size()I

    move-result v0

    if-le v0, v13, :cond_4f

    iget-boolean v0, v2, Lcom/android/server/am/ActivityManagerService$MemoryUsageDumpOptions;->packages:Z

    if-nez v0, :cond_4f

    .line 19362
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/am/ActivityManagerService;->updateCpuStatsNow()V

    .line 19363
    nop

    .line 19364
    iget-object v1, v9, Lcom/android/server/am/ActivityManagerService;->mProcessCpuTracker:Lcom/android/internal/os/ProcessCpuTracker;

    monitor-enter v1

    .line 19365
    :try_start_b
    iget-object v0, v9, Lcom/android/server/am/ActivityManagerService;->mProcessCpuTracker:Lcom/android/internal/os/ProcessCpuTracker;

    invoke-virtual {v0}, Lcom/android/internal/os/ProcessCpuTracker;->countStats()I

    move-result v0

    .line 19366
    move-wide/from16 v84, v30

    move/from16 v3, v32

    move-wide/from16 v23, v45

    move-wide/from16 v25, v47

    move-wide/from16 v14, v49

    move-wide/from16 v28, v51

    const/4 v4, 0x0

    move-wide/from16 v49, v41

    move-wide/from16 v51, v43

    move-wide/from16 v42, v33

    move-wide/from16 v44, v39

    :goto_1f
    if-ge v3, v0, :cond_30

    .line 19367
    iget-object v5, v9, Lcom/android/server/am/ActivityManagerService;->mProcessCpuTracker:Lcom/android/internal/os/ProcessCpuTracker;

    invoke-virtual {v5, v3}, Lcom/android/internal/os/ProcessCpuTracker;->getStats(I)Lcom/android/internal/os/ProcessCpuTracker$Stats;

    move-result-object v5

    .line 19368
    move-wide/from16 v86, v14

    iget-wide v13, v5, Lcom/android/internal/os/ProcessCpuTracker$Stats;->vsize:J

    cmp-long v8, v13, v30

    if-lez v8, :cond_2f

    iget v8, v5, Lcom/android/internal/os/ProcessCpuTracker$Stats;->pid:I

    invoke-virtual {v6, v8}, Landroid/util/SparseArray;->indexOfKey(I)I

    move-result v8

    if-gez v8, :cond_2f

    .line 19369
    if-nez v4, :cond_2a

    .line 19370
    new-instance v4, Landroid/os/Debug$MemoryInfo;

    invoke-direct {v4}, Landroid/os/Debug$MemoryInfo;-><init>()V

    .line 19372
    :cond_2a
    if-nez p6, :cond_2b

    iget-boolean v8, v2, Lcom/android/server/am/ActivityManagerService$MemoryUsageDumpOptions;->oomOnly:Z

    if-nez v8, :cond_2b

    .line 19373
    iget v8, v5, Lcom/android/internal/os/ProcessCpuTracker$Stats;->pid:I

    invoke-static {v8, v4}, Landroid/os/Debug;->getMemoryInfo(ILandroid/os/Debug$MemoryInfo;)V

    .line 19379
    move-wide/from16 v88, v10

    move-object/from16 v13, v68

    const/4 v14, 0x0

    goto :goto_20

    .line 19375
    :cond_2b
    iget v8, v5, Lcom/android/internal/os/ProcessCpuTracker$Stats;->pid:I

    move-wide/from16 v88, v10

    move-object/from16 v13, v68

    const/4 v14, 0x0

    invoke-static {v8, v13, v14}, Landroid/os/Debug;->getPss(I[J[J)J

    move-result-wide v10

    long-to-int v8, v10

    iput v8, v4, Landroid/os/Debug$MemoryInfo;->nativePss:I

    .line 19376
    aget-wide v10, v13, v32

    long-to-int v8, v10

    iput v8, v4, Landroid/os/Debug$MemoryInfo;->nativePrivateDirty:I

    .line 19379
    :goto_20
    invoke-virtual {v4}, Landroid/os/Debug$MemoryInfo;->getTotalPss()I

    move-result v8

    int-to-long v10, v8

    .line 19380
    invoke-virtual {v4}, Landroid/os/Debug$MemoryInfo;->getTotalSwappedOutPss()I

    move-result v8

    int-to-long v14, v8

    .line 19381
    add-long v28, v28, v10

    .line 19382
    add-long v20, v86, v14

    .line 19383
    add-long v84, v84, v10

    .line 19385
    new-instance v8, Lcom/android/server/am/ActivityManagerService$MemItem;

    move/from16 v90, v0

    new-instance v0, Ljava/lang/StringBuilder;

    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V

    move-object/from16 v91, v6

    iget-object v6, v5, Lcom/android/internal/os/ProcessCpuTracker$Stats;->name:Ljava/lang/String;

    invoke-virtual {v0, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v6, " (pid "

    invoke-virtual {v0, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget v6, v5, Lcom/android/internal/os/ProcessCpuTracker$Stats;->pid:I

    invoke-virtual {v0, v6}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v6, ")"

    invoke-virtual {v0, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v64

    iget-object v0, v5, Lcom/android/internal/os/ProcessCpuTracker$Stats;->name:Ljava/lang/String;

    .line 19386
    invoke-virtual {v4}, Landroid/os/Debug$MemoryInfo;->getSummaryTotalSwapPss()I

    move-result v6

    move/from16 v92, v3

    int-to-long v2, v6

    iget v5, v5, Lcom/android/internal/os/ProcessCpuTracker$Stats;->pid:I

    const/16 v71, 0x0

    move-object/from16 v63, v8

    move-object/from16 v65, v0

    move-wide/from16 v66, v10

    move-wide/from16 v68, v2

    move/from16 v70, v5

    invoke-direct/range {v63 .. v71}, Lcom/android/server/am/ActivityManagerService$MemItem;-><init>(Ljava/lang/String;Ljava/lang/String;JJIZ)V

    .line 19387
    move-object/from16 v5, v74

    invoke-virtual {v5, v8}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    .line 19389
    iget v0, v4, Landroid/os/Debug$MemoryInfo;->nativePss:I

    int-to-long v2, v0

    add-long v23, v23, v2

    .line 19390
    iget v0, v4, Landroid/os/Debug$MemoryInfo;->nativeSwappedOutPss:I

    int-to-long v2, v0

    add-long v25, v25, v2

    .line 19391
    iget v0, v4, Landroid/os/Debug$MemoryInfo;->dalvikPss:I

    int-to-long v2, v0

    add-long v42, v42, v2

    .line 19392
    iget v0, v4, Landroid/os/Debug$MemoryInfo;->dalvikSwappedOutPss:I

    int-to-long v2, v0

    add-long v44, v44, v2

    .line 19393
    move/from16 v0, v32

    :goto_21
    array-length v2, v12

    if-ge v0, v2, :cond_2c

    .line 19394
    aget-wide v2, v12, v0

    move-object/from16 v93, v13

    const/16 v6, 0x11

    add-int v13, v6, v0

    invoke-virtual {v4, v13}, Landroid/os/Debug$MemoryInfo;->getOtherPss(I)I

    move-result v6

    move-object/from16 v94, v5

    int-to-long v5, v6

    add-long/2addr v2, v5

    aput-wide v2, v12, v0

    .line 19395
    aget-wide v2, v62, v0

    .line 19396
    invoke-virtual {v4, v13}, Landroid/os/Debug$MemoryInfo;->getOtherSwappedOutPss(I)I

    move-result v5

    int-to-long v5, v5

    add-long/2addr v2, v5

    aput-wide v2, v62, v0

    .line 19393
    add-int/lit8 v0, v0, 0x1

    move-object/from16 v13, v93

    move-object/from16 v5, v94

    goto :goto_21

    .line 19398
    :cond_2c
    move-object/from16 v94, v5

    move-object/from16 v93, v13

    iget v0, v4, Landroid/os/Debug$MemoryInfo;->otherPss:I

    int-to-long v2, v0

    add-long v49, v49, v2

    .line 19399
    iget v0, v4, Landroid/os/Debug$MemoryInfo;->otherSwappedOutPss:I

    int-to-long v2, v0

    add-long v51, v51, v2

    .line 19400
    move/from16 v0, v32

    :goto_22
    const/16 v2, 0x11

    if-ge v0, v2, :cond_2d

    .line 19401
    invoke-virtual {v4, v0}, Landroid/os/Debug$MemoryInfo;->getOtherPss(I)I

    move-result v2

    int-to-long v2, v2

    .line 19402
    aget-wide v5, v60, v0

    add-long/2addr v5, v2

    aput-wide v5, v60, v0

    .line 19403
    sub-long v49, v49, v2

    .line 19404
    invoke-virtual {v4, v0}, Landroid/os/Debug$MemoryInfo;->getOtherSwappedOutPss(I)I

    move-result v2

    int-to-long v2, v2

    .line 19405
    aget-wide v5, v58, v0

    add-long/2addr v5, v2

    aput-wide v5, v58, v0

    .line 19406
    sub-long v51, v51, v2

    .line 19400
    add-int/lit8 v0, v0, 0x1

    goto :goto_22

    .line 19408
    :cond_2d
    aget-wide v2, v7, v32

    add-long/2addr v2, v10

    aput-wide v2, v7, v32

    .line 19409
    aget-wide v2, v59, v32

    add-long/2addr v2, v14

    aput-wide v2, v59, v32

    .line 19410
    aget-object v0, v56, v32

    if-nez v0, :cond_2e

    .line 19411
    new-instance v0, Ljava/util/ArrayList;

    invoke-direct {v0}, Ljava/util/ArrayList;-><init>()V

    aput-object v0, v56, v32

    .line 19413
    :cond_2e
    aget-object v0, v56, v32

    invoke-virtual {v0, v8}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    .line 19366
    move-wide/from16 v14, v20

    goto :goto_23

    :cond_2f
    move/from16 v90, v0

    move/from16 v92, v3

    move-object/from16 v91, v6

    move-wide/from16 v88, v10

    move-object/from16 v93, v68

    move-object/from16 v94, v74

    move-wide/from16 v14, v86

    :goto_23
    add-int/lit8 v3, v92, 0x1

    move-wide/from16 v10, v88

    move/from16 v0, v90

    move-object/from16 v6, v91

    move-object/from16 v68, v93

    move-object/from16 v74, v94

    move-object/from16 v2, p4

    const/4 v13, 0x1

    goto/16 :goto_1f

    .line 19416
    :cond_30
    move-wide/from16 v88, v10

    move-wide/from16 v86, v14

    move-object/from16 v94, v74

    monitor-exit v1
    :try_end_b
    .catchall {:try_start_b .. :try_end_b} :catchall_6

    .line 19418
    new-instance v0, Ljava/util/ArrayList;

    invoke-direct {v0}, Ljava/util/ArrayList;-><init>()V

    .line 19420
    new-instance v1, Lcom/android/server/am/ActivityManagerService$MemItem;

    const-string v21, "Native"

    const-string v22, "Native"

    const/16 v27, -0x1

    move-object/from16 v20, v1

    invoke-direct/range {v20 .. v27}, Lcom/android/server/am/ActivityManagerService$MemItem;-><init>(Ljava/lang/String;Ljava/lang/String;JJI)V

    invoke-virtual {v0, v1}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    .line 19422
    new-instance v1, Lcom/android/server/am/ActivityManagerService$MemItem;

    const-string v40, "Dalvik"

    const-string v41, "Dalvik"

    const/16 v46, -0x2

    move-object/from16 v39, v1

    invoke-direct/range {v39 .. v46}, Lcom/android/server/am/ActivityManagerService$MemItem;-><init>(Ljava/lang/String;Ljava/lang/String;JJI)V

    invoke-virtual {v0, v1}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    .line 19423
    new-instance v1, Lcom/android/server/am/ActivityManagerService$MemItem;

    const-string v47, "Unknown"

    const-string v48, "Unknown"

    const/16 v53, -0x3

    move-object/from16 v46, v1

    invoke-direct/range {v46 .. v53}, Lcom/android/server/am/ActivityManagerService$MemItem;-><init>(Ljava/lang/String;Ljava/lang/String;JJI)V

    invoke-virtual {v0, v1}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    .line 19424
    move/from16 v1, v32

    :goto_24
    const/16 v2, 0x11

    if-ge v1, v2, :cond_31

    .line 19425
    invoke-static {v1}, Landroid/os/Debug$MemoryInfo;->getOtherLabel(I)Ljava/lang/String;

    move-result-object v22

    .line 19426
    new-instance v2, Lcom/android/server/am/ActivityManagerService$MemItem;

    aget-wide v23, v60, v1

    aget-wide v25, v58, v1

    move-object/from16 v20, v2

    move-object/from16 v21, v22

    move/from16 v27, v1

    invoke-direct/range {v20 .. v27}, Lcom/android/server/am/ActivityManagerService$MemItem;-><init>(Ljava/lang/String;Ljava/lang/String;JJI)V

    invoke-virtual {v0, v2}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    .line 19424
    add-int/lit8 v1, v1, 0x1

    goto :goto_24

    .line 19428
    :cond_31
    array-length v1, v12

    if-lez v1, :cond_37

    .line 19430
    invoke-virtual {v0}, Ljava/util/ArrayList;->iterator()Ljava/util/Iterator;

    move-result-object v1

    :cond_32
    :goto_25
    invoke-interface {v1}, Ljava/util/Iterator;->hasNext()Z

    move-result v2

    if-eqz v2, :cond_37

    invoke-interface {v1}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Lcom/android/server/am/ActivityManagerService$MemItem;

    .line 19431
    nop

    .line 19432
    iget v3, v2, Lcom/android/server/am/ActivityManagerService$MemItem;->id:I

    const/4 v4, -0x2

    const/16 v5, 0xc

    if-ne v3, v4, :cond_33

    .line 19433
    nop

    .line 19434
    nop

    .line 19447
    move/from16 v3, v19

    move/from16 v5, v32

    goto :goto_26

    .line 19435
    :cond_33
    iget v3, v2, Lcom/android/server/am/ActivityManagerService$MemItem;->id:I

    if-nez v3, :cond_34

    .line 19436
    nop

    .line 19437
    const/16 v3, 0x8

    .line 19447
    move/from16 v5, v18

    goto :goto_26

    .line 19438
    :cond_34
    iget v3, v2, Lcom/android/server/am/ActivityManagerService$MemItem;->id:I

    const/16 v4, 0xa

    if-ne v3, v4, :cond_35

    .line 19439
    const/16 v3, 0x9

    .line 19440
    const/16 v4, 0xb

    .line 19447
    move v5, v3

    move v3, v4

    goto :goto_26

    .line 19441
    :cond_35
    iget v3, v2, Lcom/android/server/am/ActivityManagerService$MemItem;->id:I

    if-ne v3, v5, :cond_32

    .line 19442
    nop

    .line 19443
    const/16 v3, 0xd

    .line 19447
    :goto_26
    new-instance v4, Ljava/util/ArrayList;

    invoke-direct {v4}, Ljava/util/ArrayList;-><init>()V

    iput-object v4, v2, Lcom/android/server/am/ActivityManagerService$MemItem;->subitems:Ljava/util/ArrayList;

    .line 19448
    :goto_27
    if-gt v5, v3, :cond_36

    .line 19449
    const/16 v4, 0x11

    add-int v6, v4, v5

    invoke-static {v6}, Landroid/os/Debug$MemoryInfo;->getOtherLabel(I)Ljava/lang/String;

    move-result-object v22

    .line 19451
    iget-object v6, v2, Lcom/android/server/am/ActivityManagerService$MemItem;->subitems:Ljava/util/ArrayList;

    new-instance v8, Lcom/android/server/am/ActivityManagerService$MemItem;

    aget-wide v23, v12, v5

    aget-wide v25, v62, v5

    move-object/from16 v20, v8

    move-object/from16 v21, v22

    move/from16 v27, v5

    invoke-direct/range {v20 .. v27}, Lcom/android/server/am/ActivityManagerService$MemItem;-><init>(Ljava/lang/String;Ljava/lang/String;JJI)V

    invoke-virtual {v6, v8}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    .line 19448
    add-int/lit8 v5, v5, 0x1

    goto :goto_27

    .line 19454
    :cond_36
    const/16 v4, 0x11

    goto :goto_25

    .line 19457
    :cond_37
    new-instance v8, Ljava/util/ArrayList;

    invoke-direct {v8}, Ljava/util/ArrayList;-><init>()V

    .line 19458
    move/from16 v1, v32

    :goto_28
    array-length v2, v7

    if-ge v1, v2, :cond_3a

    .line 19459
    aget-wide v2, v7, v1

    cmp-long v2, v2, v30

    if-eqz v2, :cond_39

    .line 19460
    move-object/from16 v2, p4

    iget-boolean v3, v2, Lcom/android/server/am/ActivityManagerService$MemoryUsageDumpOptions;->isCompact:Z

    if-eqz v3, :cond_38

    sget-object v3, Lcom/android/server/am/ActivityManagerService;->DUMP_MEM_OOM_COMPACT_LABEL:[Ljava/lang/String;

    aget-object v3, v3, v1

    .line 19462
    :goto_29
    move-object/from16 v22, v3

    goto :goto_2a

    .line 19461
    :cond_38
    sget-object v3, Lcom/android/server/am/ActivityManagerService;->DUMP_MEM_OOM_LABEL:[Ljava/lang/String;

    aget-object v3, v3, v1

    goto :goto_29

    .line 19462
    :goto_2a
    new-instance v3, Lcom/android/server/am/ActivityManagerService$MemItem;

    aget-wide v23, v7, v1

    aget-wide v25, v59, v1

    sget-object v4, Lcom/android/server/am/ActivityManagerService;->DUMP_MEM_OOM_ADJ:[I

    aget v27, v4, v1

    move-object/from16 v20, v3

    move-object/from16 v21, v22

    invoke-direct/range {v20 .. v27}, Lcom/android/server/am/ActivityManagerService$MemItem;-><init>(Ljava/lang/String;Ljava/lang/String;JJI)V

    .line 19464
    aget-object v4, v56, v1

    iput-object v4, v3, Lcom/android/server/am/ActivityManagerService$MemItem;->subitems:Ljava/util/ArrayList;

    .line 19465
    invoke-virtual {v8, v3}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    goto :goto_2b

    .line 19458
    :cond_39
    move-object/from16 v2, p4

    :goto_2b
    add-int/lit8 v1, v1, 0x1

    goto :goto_28

    .line 19469
    :cond_3a
    move-object/from16 v2, p4

    iget-boolean v1, v2, Lcom/android/server/am/ActivityManagerService$MemoryUsageDumpOptions;->dumpSwapPss:Z

    if-eqz v1, :cond_3b

    if-eqz v17, :cond_3b

    cmp-long v1, v86, v30

    if-eqz v1, :cond_3b

    const/4 v1, 0x1

    goto :goto_2c

    :cond_3b
    move/from16 v1, v32

    :goto_2c
    iput-boolean v1, v2, Lcom/android/server/am/ActivityManagerService$MemoryUsageDumpOptions;->dumpSwapPss:Z

    .line 19470
    if-nez p6, :cond_3c

    iget-boolean v1, v2, Lcom/android/server/am/ActivityManagerService$MemoryUsageDumpOptions;->oomOnly:Z

    if-nez v1, :cond_3c

    iget-boolean v1, v2, Lcom/android/server/am/ActivityManagerService$MemoryUsageDumpOptions;->isCompact:Z

    if-nez v1, :cond_3c

    .line 19471
    move-object/from16 v10, p2

    invoke-virtual/range {p2 .. p2}, Ljava/io/PrintWriter;->println()V

    .line 19472
    const-string v1, "Total PSS by process:"

    invoke-virtual {v10, v1}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 19473
    const-string v3, "  "

    const-string/jumbo v4, "proc"

    const/4 v5, 0x1

    iget-boolean v6, v2, Lcom/android/server/am/ActivityManagerService$MemoryUsageDumpOptions;->isCompact:Z

    iget-boolean v7, v2, Lcom/android/server/am/ActivityManagerService$MemoryUsageDumpOptions;->dumpSwapPss:Z

    move-object v1, v10

    move-object v11, v2

    move-object v2, v3

    move-object v3, v4

    move-object/from16 v4, v94

    invoke-static/range {v1 .. v7}, Lcom/android/server/am/ActivityManagerService;->dumpMemItems(Ljava/io/PrintWriter;Ljava/lang/String;Ljava/lang/String;Ljava/util/ArrayList;ZZZ)V

    .line 19474
    invoke-virtual/range {p2 .. p2}, Ljava/io/PrintWriter;->println()V

    goto :goto_2d

    .line 19476
    :cond_3c
    move-object v11, v2

    move-object/from16 v10, p2

    :goto_2d
    iget-boolean v1, v11, Lcom/android/server/am/ActivityManagerService$MemoryUsageDumpOptions;->isCompact:Z

    if-nez v1, :cond_3d

    .line 19477
    const-string v1, "Total PSS by OOM adjustment:"

    invoke-virtual {v10, v1}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 19479
    :cond_3d
    const-string v2, "  "

    const-string/jumbo v3, "oom"

    const/4 v5, 0x0

    iget-boolean v6, v11, Lcom/android/server/am/ActivityManagerService$MemoryUsageDumpOptions;->isCompact:Z

    iget-boolean v7, v11, Lcom/android/server/am/ActivityManagerService$MemoryUsageDumpOptions;->dumpSwapPss:Z

    move-object v1, v10

    move-object v4, v8

    invoke-static/range {v1 .. v7}, Lcom/android/server/am/ActivityManagerService;->dumpMemItems(Ljava/io/PrintWriter;Ljava/lang/String;Ljava/lang/String;Ljava/util/ArrayList;ZZZ)V

    .line 19480
    if-nez p6, :cond_40

    iget-boolean v1, v11, Lcom/android/server/am/ActivityManagerService$MemoryUsageDumpOptions;->oomOnly:Z

    if-nez v1, :cond_40

    .line 19481
    if-eqz p8, :cond_3e

    .line 19482
    move-object/from16 v15, p8

    goto :goto_2e

    :cond_3e
    move-object v15, v10

    :goto_2e
    iget-boolean v1, v11, Lcom/android/server/am/ActivityManagerService$MemoryUsageDumpOptions;->isCompact:Z

    if-nez v1, :cond_3f

    .line 19483
    invoke-virtual {v15}, Ljava/io/PrintWriter;->println()V

    .line 19484
    const-string v1, "Total PSS by category:"

    invoke-virtual {v15, v1}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 19486
    :cond_3f
    const-string v64, "  "

    const-string v65, "cat"

    const/16 v67, 0x1

    iget-boolean v1, v11, Lcom/android/server/am/ActivityManagerService$MemoryUsageDumpOptions;->isCompact:Z

    iget-boolean v2, v11, Lcom/android/server/am/ActivityManagerService$MemoryUsageDumpOptions;->dumpSwapPss:Z

    move-object/from16 v63, v15

    move-object/from16 v66, v0

    move/from16 v68, v1

    move/from16 v69, v2

    invoke-static/range {v63 .. v69}, Lcom/android/server/am/ActivityManagerService;->dumpMemItems(Ljava/io/PrintWriter;Ljava/lang/String;Ljava/lang/String;Ljava/util/ArrayList;ZZZ)V

    .line 19488
    :cond_40
    iget-boolean v0, v11, Lcom/android/server/am/ActivityManagerService$MemoryUsageDumpOptions;->isCompact:Z

    if-nez v0, :cond_41

    .line 19489
    invoke-virtual/range {p2 .. p2}, Ljava/io/PrintWriter;->println()V

    .line 19491
    :cond_41
    new-instance v0, Lcom/android/internal/util/MemInfoReader;

    invoke-direct {v0}, Lcom/android/internal/util/MemInfoReader;-><init>()V

    .line 19492
    invoke-virtual {v0}, Lcom/android/internal/util/MemInfoReader;->readMemInfo()V

    .line 19493
    cmp-long v1, v84, v30

    const-wide/16 v2, 0x400

    if-lez v1, :cond_42

    .line 19494
    monitor-enter p0

    :try_start_c
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    .line 19495
    invoke-virtual {v0}, Lcom/android/internal/util/MemInfoReader;->getCachedSizeKb()J

    move-result-wide v76

    .line 19496
    invoke-virtual {v0}, Lcom/android/internal/util/MemInfoReader;->getFreeSizeKb()J

    move-result-wide v78

    .line 19497
    invoke-virtual {v0}, Lcom/android/internal/util/MemInfoReader;->getZramTotalSizeKb()J

    move-result-wide v80

    .line 19498
    invoke-virtual {v0}, Lcom/android/internal/util/MemInfoReader;->getKernelUsedSizeKb()J

    move-result-wide v82

    .line 19499
    mul-long v33, v76, v2

    mul-long v35, v78, v2

    mul-long v37, v80, v2

    mul-long v39, v82, v2

    mul-long v41, v84, v2

    invoke-static/range {v33 .. v42}, Lcom/android/server/am/EventLogTags;->writeAmMeminfo(JJJJJ)V

    .line 19501
    iget-object v1, v9, Lcom/android/server/am/ActivityManagerService;->mProcessStats:Lcom/android/server/am/ProcessStatsService;

    move-object/from16 v75, v1

    invoke-virtual/range {v75 .. v85}, Lcom/android/server/am/ProcessStatsService;->addSysMemUsageLocked(JJJJJ)V

    .line 19503
    monitor-exit p0
    :try_end_c
    .catchall {:try_start_c .. :try_end_c} :catchall_5

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    goto :goto_2f

    :catchall_5
    move-exception v0

    :try_start_d
    monitor-exit p0
    :try_end_d
    .catchall {:try_start_d .. :try_end_d} :catchall_5

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw v0

    .line 19505
    :cond_42
    :goto_2f
    if-nez p6, :cond_44

    .line 19506
    iget-boolean v1, v11, Lcom/android/server/am/ActivityManagerService$MemoryUsageDumpOptions;->isCompact:Z

    if-nez v1, :cond_43

    .line 19507
    const-string v1, "Total RAM: "

    invoke-virtual {v10, v1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    invoke-virtual {v0}, Lcom/android/internal/util/MemInfoReader;->getTotalSizeKb()J

    move-result-wide v4

    invoke-static {v4, v5}, Lcom/android/server/am/ActivityManagerService;->stringifyKBSize(J)Ljava/lang/String;

    move-result-object v1

    invoke-virtual {v10, v1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 19508
    const-string v1, " (status "

    invoke-virtual {v10, v1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 19509
    iget v1, v9, Lcom/android/server/am/ActivityManagerService;->mLastMemoryLevel:I

    packed-switch v1, :pswitch_data_0

    .line 19523
    iget v1, v9, Lcom/android/server/am/ActivityManagerService;->mLastMemoryLevel:I

    invoke-virtual {v10, v1}, Ljava/io/PrintWriter;->print(I)V

    .line 19524
    const-string v1, ")"

    invoke-virtual {v10, v1}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    goto :goto_30

    .line 19520
    :pswitch_0
    const-string v1, "critical)"

    invoke-virtual {v10, v1}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 19521
    goto :goto_30

    .line 19517
    :pswitch_1
    const-string v1, "low)"

    invoke-virtual {v10, v1}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 19518
    goto :goto_30

    .line 19514
    :pswitch_2
    const-string v1, "moderate)"

    invoke-virtual {v10, v1}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 19515
    goto :goto_30

    .line 19511
    :pswitch_3
    const-string v1, "normal)"

    invoke-virtual {v10, v1}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 19512
    nop

    .line 19527
    :goto_30
    const-string v1, " Free RAM: "

    invoke-virtual {v10, v1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 19528
    invoke-virtual {v0}, Lcom/android/internal/util/MemInfoReader;->getCachedSizeKb()J

    move-result-wide v4

    add-long v53, v88, v4

    .line 19529
    invoke-virtual {v0}, Lcom/android/internal/util/MemInfoReader;->getFreeSizeKb()J

    move-result-wide v4

    add-long v4, v53, v4

    .line 19528
    invoke-static {v4, v5}, Lcom/android/server/am/ActivityManagerService;->stringifyKBSize(J)Ljava/lang/String;

    move-result-object v1

    invoke-virtual {v10, v1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 19530
    const-string v1, " ("

    invoke-virtual {v10, v1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 19531
    move-wide/from16 v4, v88

    invoke-static {v4, v5}, Lcom/android/server/am/ActivityManagerService;->stringifyKBSize(J)Ljava/lang/String;

    move-result-object v1

    invoke-virtual {v10, v1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 19532
    const-string v1, " cached pss + "

    invoke-virtual {v10, v1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 19533
    invoke-virtual {v0}, Lcom/android/internal/util/MemInfoReader;->getCachedSizeKb()J

    move-result-wide v6

    invoke-static {v6, v7}, Lcom/android/server/am/ActivityManagerService;->stringifyKBSize(J)Ljava/lang/String;

    move-result-object v1

    invoke-virtual {v10, v1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 19534
    const-string v1, " cached kernel + "

    invoke-virtual {v10, v1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 19535
    invoke-virtual {v0}, Lcom/android/internal/util/MemInfoReader;->getFreeSizeKb()J

    move-result-wide v6

    invoke-static {v6, v7}, Lcom/android/server/am/ActivityManagerService;->stringifyKBSize(J)Ljava/lang/String;

    move-result-object v1

    invoke-virtual {v10, v1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 19536
    const-string v1, " free)"

    invoke-virtual {v10, v1}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    goto :goto_31

    .line 19538
    :cond_43
    move-wide/from16 v4, v88

    const-string/jumbo v1, "ram,"

    invoke-virtual {v10, v1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    invoke-virtual {v0}, Lcom/android/internal/util/MemInfoReader;->getTotalSizeKb()J

    move-result-wide v6

    invoke-virtual {v10, v6, v7}, Ljava/io/PrintWriter;->print(J)V

    const-string v1, ","

    invoke-virtual {v10, v1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 19539
    invoke-virtual {v0}, Lcom/android/internal/util/MemInfoReader;->getCachedSizeKb()J

    move-result-wide v6

    add-long v53, v4, v6

    .line 19540
    invoke-virtual {v0}, Lcom/android/internal/util/MemInfoReader;->getFreeSizeKb()J

    move-result-wide v6

    add-long v6, v53, v6

    .line 19539
    invoke-virtual {v10, v6, v7}, Ljava/io/PrintWriter;->print(J)V

    .line 19540
    const-string v1, ","

    invoke-virtual {v10, v1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 19541
    sub-long v6, v28, v4

    invoke-virtual {v10, v6, v7}, Ljava/io/PrintWriter;->println(J)V

    goto :goto_31

    .line 19544
    :cond_44
    move-wide/from16 v4, v88

    :goto_31
    invoke-virtual {v0}, Lcom/android/internal/util/MemInfoReader;->getTotalSizeKb()J

    move-result-wide v6

    sub-long v12, v28, v86

    sub-long/2addr v6, v12

    .line 19545
    invoke-virtual {v0}, Lcom/android/internal/util/MemInfoReader;->getFreeSizeKb()J

    move-result-wide v12

    sub-long/2addr v6, v12

    invoke-virtual {v0}, Lcom/android/internal/util/MemInfoReader;->getCachedSizeKb()J

    move-result-wide v12

    sub-long/2addr v6, v12

    .line 19546
    invoke-virtual {v0}, Lcom/android/internal/util/MemInfoReader;->getKernelUsedSizeKb()J

    move-result-wide v12

    sub-long/2addr v6, v12

    invoke-virtual {v0}, Lcom/android/internal/util/MemInfoReader;->getZramTotalSizeKb()J

    move-result-wide v12

    sub-long/2addr v6, v12

    .line 19547
    iget-boolean v1, v11, Lcom/android/server/am/ActivityManagerService$MemoryUsageDumpOptions;->isCompact:Z

    if-nez v1, :cond_45

    .line 19548
    const-string v1, " Used RAM: "

    invoke-virtual {v10, v1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    sub-long v4, v28, v4

    .line 19549
    invoke-virtual {v0}, Lcom/android/internal/util/MemInfoReader;->getKernelUsedSizeKb()J

    move-result-wide v12

    add-long/2addr v12, v4

    .line 19548
    invoke-static {v12, v13}, Lcom/android/server/am/ActivityManagerService;->stringifyKBSize(J)Ljava/lang/String;

    move-result-object v1

    invoke-virtual {v10, v1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 19549
    const-string v1, " ("

    invoke-virtual {v10, v1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 19550
    invoke-static {v4, v5}, Lcom/android/server/am/ActivityManagerService;->stringifyKBSize(J)Ljava/lang/String;

    move-result-object v1

    invoke-virtual {v10, v1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    const-string v1, " used pss + "

    invoke-virtual {v10, v1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 19551
    invoke-virtual {v0}, Lcom/android/internal/util/MemInfoReader;->getKernelUsedSizeKb()J

    move-result-wide v4

    invoke-static {v4, v5}, Lcom/android/server/am/ActivityManagerService;->stringifyKBSize(J)Ljava/lang/String;

    move-result-object v1

    invoke-virtual {v10, v1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    const-string v1, " kernel)\n"

    invoke-virtual {v10, v1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 19552
    const-string v1, " Lost RAM: "

    invoke-virtual {v10, v1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    invoke-static {v6, v7}, Lcom/android/server/am/ActivityManagerService;->stringifyKBSize(J)Ljava/lang/String;

    move-result-object v1

    invoke-virtual {v10, v1}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    goto :goto_32

    .line 19554
    :cond_45
    const-string v1, "lostram,"

    invoke-virtual {v10, v1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    invoke-virtual {v10, v6, v7}, Ljava/io/PrintWriter;->println(J)V

    .line 19556
    :goto_32
    if-nez p6, :cond_4f

    .line 19557
    invoke-virtual {v0}, Lcom/android/internal/util/MemInfoReader;->getZramTotalSizeKb()J

    move-result-wide v4

    cmp-long v1, v4, v30

    if-eqz v1, :cond_47

    .line 19558
    iget-boolean v1, v11, Lcom/android/server/am/ActivityManagerService$MemoryUsageDumpOptions;->isCompact:Z

    if-nez v1, :cond_46

    .line 19559
    const-string v1, "     ZRAM: "

    invoke-virtual {v10, v1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 19560
    invoke-virtual {v0}, Lcom/android/internal/util/MemInfoReader;->getZramTotalSizeKb()J

    move-result-wide v4

    invoke-static {v4, v5}, Lcom/android/server/am/ActivityManagerService;->stringifyKBSize(J)Ljava/lang/String;

    move-result-object v1

    invoke-virtual {v10, v1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 19561
    const-string v1, " physical used for "

    invoke-virtual {v10, v1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 19562
    invoke-virtual {v0}, Lcom/android/internal/util/MemInfoReader;->getSwapTotalSizeKb()J

    move-result-wide v4

    .line 19563
    invoke-virtual {v0}, Lcom/android/internal/util/MemInfoReader;->getSwapFreeSizeKb()J

    move-result-wide v6

    sub-long/2addr v4, v6

    .line 19562
    invoke-static {v4, v5}, Lcom/android/server/am/ActivityManagerService;->stringifyKBSize(J)Ljava/lang/String;

    move-result-object v1

    invoke-virtual {v10, v1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 19564
    const-string v1, " in swap ("

    invoke-virtual {v10, v1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 19565
    invoke-virtual {v0}, Lcom/android/internal/util/MemInfoReader;->getSwapTotalSizeKb()J

    move-result-wide v0

    invoke-static {v0, v1}, Lcom/android/server/am/ActivityManagerService;->stringifyKBSize(J)Ljava/lang/String;

    move-result-object v0

    invoke-virtual {v10, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 19566
    const-string v0, " total swap)"

    invoke-virtual {v10, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    goto :goto_33

    .line 19568
    :cond_46
    const-string/jumbo v1, "zram,"

    invoke-virtual {v10, v1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    invoke-virtual {v0}, Lcom/android/internal/util/MemInfoReader;->getZramTotalSizeKb()J

    move-result-wide v4

    invoke-virtual {v10, v4, v5}, Ljava/io/PrintWriter;->print(J)V

    const-string v1, ","

    invoke-virtual {v10, v1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 19569
    invoke-virtual {v0}, Lcom/android/internal/util/MemInfoReader;->getSwapTotalSizeKb()J

    move-result-wide v4

    invoke-virtual {v10, v4, v5}, Ljava/io/PrintWriter;->print(J)V

    const-string v1, ","

    invoke-virtual {v10, v1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 19570
    invoke-virtual {v0}, Lcom/android/internal/util/MemInfoReader;->getSwapFreeSizeKb()J

    move-result-wide v0

    invoke-virtual {v10, v0, v1}, Ljava/io/PrintWriter;->println(J)V

    .line 19573
    :cond_47
    :goto_33
    invoke-direct/range {p0 .. p0}, Lcom/android/server/am/ActivityManagerService;->getKsmInfo()[J

    move-result-object v0

    .line 19574
    iget-boolean v1, v11, Lcom/android/server/am/ActivityManagerService$MemoryUsageDumpOptions;->isCompact:Z

    const/16 v4, 0x38a

    const/4 v5, 0x2

    if-nez v1, :cond_4c

    .line 19575
    const/4 v1, 0x1

    aget-wide v2, v0, v1

    cmp-long v1, v2, v30

    if-nez v1, :cond_48

    aget-wide v1, v0, v32

    cmp-long v1, v1, v30

    if-nez v1, :cond_48

    aget-wide v1, v0, v5

    cmp-long v1, v1, v30

    if-nez v1, :cond_48

    aget-wide v1, v0, v19

    cmp-long v1, v1, v30

    if-eqz v1, :cond_49

    .line 19577
    :cond_48
    const-string v1, "      KSM: "

    invoke-virtual {v10, v1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    const/4 v1, 0x1

    aget-wide v1, v0, v1

    invoke-static {v1, v2}, Lcom/android/server/am/ActivityManagerService;->stringifyKBSize(J)Ljava/lang/String;

    move-result-object v1

    invoke-virtual {v10, v1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 19578
    const-string v1, " saved from shared "

    invoke-virtual {v10, v1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 19579
    aget-wide v1, v0, v32

    invoke-static {v1, v2}, Lcom/android/server/am/ActivityManagerService;->stringifyKBSize(J)Ljava/lang/String;

    move-result-object v1

    invoke-virtual {v10, v1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 19580
    const-string v1, "           "

    invoke-virtual {v10, v1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    aget-wide v1, v0, v5

    invoke-static {v1, v2}, Lcom/android/server/am/ActivityManagerService;->stringifyKBSize(J)Ljava/lang/String;

    move-result-object v1

    invoke-virtual {v10, v1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 19581
    const-string v1, " unshared; "

    invoke-virtual {v10, v1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 19582
    aget-wide v0, v0, v19

    invoke-static {v0, v1}, Lcom/android/server/am/ActivityManagerService;->stringifyKBSize(J)Ljava/lang/String;

    move-result-object v0

    invoke-virtual {v10, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 19583
    const-string v0, " volatile"

    invoke-virtual {v10, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 19585
    :cond_49
    const-string v0, "   Tuning: "

    invoke-virtual {v10, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 19586
    invoke-static {}, Landroid/app/ActivityManager;->staticGetMemoryClass()I

    move-result v0

    invoke-virtual {v10, v0}, Ljava/io/PrintWriter;->print(I)V

    .line 19587
    const-string v0, " (large "

    invoke-virtual {v10, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 19588
    invoke-static {}, Landroid/app/ActivityManager;->staticGetLargeMemoryClass()I

    move-result v0

    invoke-virtual {v10, v0}, Ljava/io/PrintWriter;->print(I)V

    .line 19589
    const-string v0, "), oom "

    invoke-virtual {v10, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 19590
    iget-object v0, v9, Lcom/android/server/am/ActivityManagerService;->mProcessList:Lcom/android/server/am/ProcessList;

    .line 19591
    invoke-virtual {v0, v4}, Lcom/android/server/am/ProcessList;->getMemLevel(I)J

    move-result-wide v0

    const/16 v2, 0x400

    .line 19590
    invoke-static {v0, v1, v2}, Lcom/android/server/am/ActivityManagerService;->stringifySize(JI)Ljava/lang/String;

    move-result-object v0

    invoke-virtual {v10, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 19592
    const-string v0, ", restore limit "

    invoke-virtual {v10, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 19593
    iget-object v0, v9, Lcom/android/server/am/ActivityManagerService;->mProcessList:Lcom/android/server/am/ProcessList;

    invoke-virtual {v0}, Lcom/android/server/am/ProcessList;->getCachedRestoreThresholdKb()J

    move-result-wide v0

    invoke-static {v0, v1}, Lcom/android/server/am/ActivityManagerService;->stringifyKBSize(J)Ljava/lang/String;

    move-result-object v0

    invoke-virtual {v10, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 19594
    invoke-static {}, Landroid/app/ActivityManager;->isLowRamDeviceStatic()Z

    move-result v0

    if-eqz v0, :cond_4a

    .line 19595
    const-string v0, " (low-ram)"

    invoke-virtual {v10, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 19597
    :cond_4a
    invoke-static {}, Landroid/app/ActivityManager;->isHighEndGfx()Z

    move-result v0

    if-eqz v0, :cond_4b

    .line 19598
    const-string v0, " (high-end-gfx)"

    invoke-virtual {v10, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 19600
    :cond_4b
    invoke-virtual/range {p2 .. p2}, Ljava/io/PrintWriter;->println()V

    goto :goto_34

    .line 19602
    :cond_4c
    const-string v1, "ksm,"

    invoke-virtual {v10, v1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    const/4 v1, 0x1

    aget-wide v6, v0, v1

    invoke-virtual {v10, v6, v7}, Ljava/io/PrintWriter;->print(J)V

    const-string v1, ","

    invoke-virtual {v10, v1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 19603
    aget-wide v6, v0, v32

    invoke-virtual {v10, v6, v7}, Ljava/io/PrintWriter;->print(J)V

    const-string v1, ","

    invoke-virtual {v10, v1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    aget-wide v5, v0, v5

    invoke-virtual {v10, v5, v6}, Ljava/io/PrintWriter;->print(J)V

    .line 19604
    const-string v1, ","

    invoke-virtual {v10, v1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    aget-wide v0, v0, v19

    invoke-virtual {v10, v0, v1}, Ljava/io/PrintWriter;->println(J)V

    .line 19605
    const-string/jumbo v0, "tuning,"

    invoke-virtual {v10, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 19606
    invoke-static {}, Landroid/app/ActivityManager;->staticGetMemoryClass()I

    move-result v0

    invoke-virtual {v10, v0}, Ljava/io/PrintWriter;->print(I)V

    .line 19607
    const/16 v0, 0x2c

    invoke-virtual {v10, v0}, Ljava/io/PrintWriter;->print(C)V

    .line 19608
    invoke-static {}, Landroid/app/ActivityManager;->staticGetLargeMemoryClass()I

    move-result v1

    invoke-virtual {v10, v1}, Ljava/io/PrintWriter;->print(I)V

    .line 19609
    invoke-virtual {v10, v0}, Ljava/io/PrintWriter;->print(C)V

    .line 19610
    iget-object v0, v9, Lcom/android/server/am/ActivityManagerService;->mProcessList:Lcom/android/server/am/ProcessList;

    invoke-virtual {v0, v4}, Lcom/android/server/am/ProcessList;->getMemLevel(I)J

    move-result-wide v0

    div-long/2addr v0, v2

    invoke-virtual {v10, v0, v1}, Ljava/io/PrintWriter;->print(J)V

    .line 19611
    invoke-static {}, Landroid/app/ActivityManager;->isLowRamDeviceStatic()Z

    move-result v0

    if-eqz v0, :cond_4d

    .line 19612
    const-string v0, ",low-ram"

    invoke-virtual {v10, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 19614
    :cond_4d
    invoke-static {}, Landroid/app/ActivityManager;->isHighEndGfx()Z

    move-result v0

    if-eqz v0, :cond_4e

    .line 19615
    const-string v0, ",high-end-gfx"

    invoke-virtual {v10, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 19617
    :cond_4e
    invoke-virtual/range {p2 .. p2}, Ljava/io/PrintWriter;->println()V

    goto :goto_34

    .line 19416
    :catchall_6
    move-exception v0

    :try_start_e
    monitor-exit v1
    :try_end_e
    .catchall {:try_start_e .. :try_end_e} :catchall_6

    throw v0

    .line 19621
    :cond_4f
    :goto_34
    return-void

    nop

    nop

    :pswitch_data_0
    .packed-switch 0x0
        :pswitch_3
        :pswitch_2
        :pswitch_1
        :pswitch_0
    .end packed-switch
.end method

.method private final dumpApplicationMemoryUsageHeader(Ljava/io/PrintWriter;JJZZ)V
    .locals 1

    .line 18966
    if-eqz p7, :cond_0

    .line 18967
    const-string/jumbo v0, "version,"

    invoke-virtual {p1, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    const/4 v0, 0x1

    invoke-virtual {p1, v0}, Ljava/io/PrintWriter;->println(I)V

    .line 18969
    :cond_0
    if-nez p6, :cond_2

    if-eqz p7, :cond_1

    goto :goto_0

    .line 18973
    :cond_1
    const-string p6, "Applications Memory Usage (in Kilobytes):"

    invoke-virtual {p1, p6}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 18974
    new-instance p6, Ljava/lang/StringBuilder;

    invoke-direct {p6}, Ljava/lang/StringBuilder;-><init>()V

    const-string p7, "Uptime: "

    invoke-virtual {p6, p7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {p6, p2, p3}, Ljava/lang/StringBuilder;->append(J)Ljava/lang/StringBuilder;

    const-string p2, " Realtime: "

    invoke-virtual {p6, p2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {p6, p4, p5}, Ljava/lang/StringBuilder;->append(J)Ljava/lang/StringBuilder;

    invoke-virtual {p6}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object p2

    invoke-virtual {p1, p2}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    goto :goto_1

    .line 18971
    :cond_2
    :goto_0
    const-string/jumbo p6, "time,"

    invoke-virtual {p1, p6}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    invoke-virtual {p1, p2, p3}, Ljava/io/PrintWriter;->print(J)V

    const-string p2, ","

    invoke-virtual {p1, p2}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    invoke-virtual {p1, p4, p5}, Ljava/io/PrintWriter;->println(J)V

    .line 18976
    :goto_1
    return-void
.end method

.method private static dumpJavaTracesTombstoned(ILjava/lang/String;J)J
    .locals 4

    .line 6511
    invoke-static {}, Landroid/os/SystemClock;->elapsedRealtime()J

    move-result-wide v0

    .line 6512
    const-wide/16 v2, 0x3e8

    div-long/2addr p2, v2

    long-to-int p2, p2

    invoke-static {p0, p1, p2}, Landroid/os/Debug;->dumpJavaBacktraceToFileTimeout(ILjava/lang/String;I)Z

    move-result p2

    if-nez p2, :cond_0

    .line 6513
    const/4 p2, 0x2

    invoke-static {p0, p1, p2}, Landroid/os/Debug;->dumpNativeBacktraceToFileTimeout(ILjava/lang/String;I)Z

    .line 6517
    :cond_0
    invoke-static {}, Landroid/os/SystemClock;->elapsedRealtime()J

    move-result-wide p0

    sub-long/2addr p0, v0

    return-wide p0
.end method

.method private dumpLastANRLocked(Ljava/io/PrintWriter;)V
    .locals 1

    .line 16808
    const-string v0, "ACTIVITY MANAGER LAST ANR (dumpsys activity lastanr)"

    invoke-virtual {p1, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 16809
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mLastANRState:Ljava/lang/String;

    if-nez v0, :cond_0

    .line 16810
    const-string v0, "  <no ANR has occurred since boot>"

    invoke-virtual {p1, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    goto :goto_0

    .line 16812
    :cond_0
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mLastANRState:Ljava/lang/String;

    invoke-virtual {p1, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 16814
    :goto_0
    return-void
.end method

.method static final dumpMemItems(Landroid/util/proto/ProtoOutputStream;JLjava/lang/String;Ljava/util/ArrayList;ZZ)V
    .locals 14
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "(",
            "Landroid/util/proto/ProtoOutputStream;",
            "J",
            "Ljava/lang/String;",
            "Ljava/util/ArrayList<",
            "Lcom/android/server/am/ActivityManagerService$MemItem;",
            ">;ZZ)V"
        }
    .end annotation

    move-object v7, p0

    .line 18885
    if-eqz p5, :cond_0

    .line 18886
    invoke-static/range {p4 .. p4}, Lcom/android/server/am/ActivityManagerService;->sortMemItems(Ljava/util/List;)V

    .line 18889
    :cond_0
    const/4 v0, 0x0

    move v8, v0

    :goto_0
    invoke-virtual/range {p4 .. p4}, Ljava/util/ArrayList;->size()I

    move-result v0

    if-ge v8, v0, :cond_3

    .line 18890
    move-object/from16 v9, p4

    invoke-virtual {v9, v8}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Lcom/android/server/am/ActivityManagerService$MemItem;

    .line 18891
    invoke-virtual/range {p0 .. p2}, Landroid/util/proto/ProtoOutputStream;->start(J)J

    move-result-wide v10

    .line 18893
    const-wide v1, 0x10900000001L

    move-object/from16 v12, p3

    invoke-virtual {v7, v1, v2, v12}, Landroid/util/proto/ProtoOutputStream;->write(JLjava/lang/String;)V

    .line 18894
    const-wide v1, 0x10900000002L

    iget-object v3, v0, Lcom/android/server/am/ActivityManagerService$MemItem;->shortLabel:Ljava/lang/String;

    invoke-virtual {v7, v1, v2, v3}, Landroid/util/proto/ProtoOutputStream;->write(JLjava/lang/String;)V

    .line 18895
    const-wide v1, 0x10800000004L

    iget-boolean v3, v0, Lcom/android/server/am/ActivityManagerService$MemItem;->isProc:Z

    invoke-virtual {v7, v1, v2, v3}, Landroid/util/proto/ProtoOutputStream;->write(JZ)V

    .line 18896
    const-wide v1, 0x10500000003L

    iget v3, v0, Lcom/android/server/am/ActivityManagerService$MemItem;->id:I

    invoke-virtual {v7, v1, v2, v3}, Landroid/util/proto/ProtoOutputStream;->write(JI)V

    .line 18897
    const-wide v1, 0x10800000005L

    iget-boolean v3, v0, Lcom/android/server/am/ActivityManagerService$MemItem;->hasActivities:Z

    invoke-virtual {v7, v1, v2, v3}, Landroid/util/proto/ProtoOutputStream;->write(JZ)V

    .line 18898
    const-wide v1, 0x10300000006L

    iget-wide v3, v0, Lcom/android/server/am/ActivityManagerService$MemItem;->pss:J

    invoke-virtual {v7, v1, v2, v3, v4}, Landroid/util/proto/ProtoOutputStream;->write(JJ)V

    .line 18899
    if-eqz p6, :cond_1

    .line 18900
    const-wide v1, 0x10300000007L

    iget-wide v3, v0, Lcom/android/server/am/ActivityManagerService$MemItem;->swapPss:J

    invoke-virtual {v7, v1, v2, v3, v4}, Landroid/util/proto/ProtoOutputStream;->write(JJ)V

    .line 18902
    :cond_1
    iget-object v1, v0, Lcom/android/server/am/ActivityManagerService$MemItem;->subitems:Ljava/util/ArrayList;

    if-eqz v1, :cond_2

    .line 18903
    const-wide v1, 0x20b00000008L

    iget-object v3, v0, Lcom/android/server/am/ActivityManagerService$MemItem;->shortLabel:Ljava/lang/String;

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService$MemItem;->subitems:Ljava/util/ArrayList;

    const/4 v5, 0x1

    move-object v0, v7

    move/from16 v6, p6

    invoke-static/range {v0 .. v6}, Lcom/android/server/am/ActivityManagerService;->dumpMemItems(Landroid/util/proto/ProtoOutputStream;JLjava/lang/String;Ljava/util/ArrayList;ZZ)V

    .line 18906
    :cond_2
    invoke-virtual {v7, v10, v11}, Landroid/util/proto/ProtoOutputStream;->end(J)V

    .line 18889
    add-int/lit8 v8, v8, 0x1

    goto :goto_0

    .line 18908
    :cond_3
    return-void
.end method

.method static final dumpMemItems(Ljava/io/PrintWriter;Ljava/lang/String;Ljava/lang/String;Ljava/util/ArrayList;ZZZ)V
    .locals 14
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "(",
            "Ljava/io/PrintWriter;",
            "Ljava/lang/String;",
            "Ljava/lang/String;",
            "Ljava/util/ArrayList<",
            "Lcom/android/server/am/ActivityManagerService$MemItem;",
            ">;ZZZ)V"
        }
    .end annotation

    move-object v7, p0

    move-object v8, p1

    move-object/from16 v9, p2

    .line 18854
    if-eqz p4, :cond_0

    if-nez p5, :cond_0

    .line 18855
    invoke-static/range {p3 .. p3}, Lcom/android/server/am/ActivityManagerService;->sortMemItems(Ljava/util/List;)V

    .line 18858
    :cond_0
    const/4 v10, 0x0

    move v11, v10

    :goto_0
    invoke-virtual/range {p3 .. p3}, Ljava/util/ArrayList;->size()I

    move-result v0

    if-ge v11, v0, :cond_8

    .line 18859
    move-object/from16 v12, p3

    invoke-virtual {v12, v11}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Lcom/android/server/am/ActivityManagerService$MemItem;

    .line 18860
    if-nez p5, :cond_2

    .line 18861
    const/4 v1, 0x3

    const/4 v2, 0x2

    const/4 v3, 0x1

    if-eqz p6, :cond_1

    .line 18862
    const-string v4, "%s%s: %-60s (%s in swap)\n"

    const/4 v5, 0x4

    new-array v5, v5, [Ljava/lang/Object;

    aput-object v8, v5, v10

    move v13, v11

    iget-wide v10, v0, Lcom/android/server/am/ActivityManagerService$MemItem;->pss:J

    invoke-static {v10, v11}, Lcom/android/server/am/ActivityManagerService;->stringifyKBSize(J)Ljava/lang/String;

    move-result-object v6

    aput-object v6, v5, v3

    iget-object v3, v0, Lcom/android/server/am/ActivityManagerService$MemItem;->label:Ljava/lang/String;

    aput-object v3, v5, v2

    iget-wide v2, v0, Lcom/android/server/am/ActivityManagerService$MemItem;->swapPss:J

    .line 18863
    invoke-static {v2, v3}, Lcom/android/server/am/ActivityManagerService;->stringifyKBSize(J)Ljava/lang/String;

    move-result-object v2

    aput-object v2, v5, v1

    .line 18862
    invoke-virtual {v7, v4, v5}, Ljava/io/PrintWriter;->printf(Ljava/lang/String;[Ljava/lang/Object;)Ljava/io/PrintWriter;

    .line 18876
    const/4 v10, 0x0

    goto/16 :goto_4

    .line 18865
    :cond_1
    move v13, v11

    const-string v4, "%s%s: %s\n"

    new-array v1, v1, [Ljava/lang/Object;

    const/4 v10, 0x0

    aput-object v8, v1, v10

    iget-wide v5, v0, Lcom/android/server/am/ActivityManagerService$MemItem;->pss:J

    invoke-static {v5, v6}, Lcom/android/server/am/ActivityManagerService;->stringifyKBSize(J)Ljava/lang/String;

    move-result-object v5

    aput-object v5, v1, v3

    iget-object v3, v0, Lcom/android/server/am/ActivityManagerService$MemItem;->label:Ljava/lang/String;

    aput-object v3, v1, v2

    invoke-virtual {v7, v4, v1}, Ljava/io/PrintWriter;->printf(Ljava/lang/String;[Ljava/lang/Object;)Ljava/io/PrintWriter;

    goto/16 :goto_4

    .line 18867
    :cond_2
    move v13, v11

    iget-boolean v1, v0, Lcom/android/server/am/ActivityManagerService$MemItem;->isProc:Z

    if-eqz v1, :cond_5

    .line 18868
    const-string/jumbo v1, "proc,"

    invoke-virtual {v7, v1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    invoke-virtual {v7, v9}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    const-string v1, ","

    invoke-virtual {v7, v1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    iget-object v1, v0, Lcom/android/server/am/ActivityManagerService$MemItem;->shortLabel:Ljava/lang/String;

    invoke-virtual {v7, v1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 18869
    const-string v1, ","

    invoke-virtual {v7, v1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    iget v1, v0, Lcom/android/server/am/ActivityManagerService$MemItem;->id:I

    invoke-virtual {v7, v1}, Ljava/io/PrintWriter;->print(I)V

    const-string v1, ","

    invoke-virtual {v7, v1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    iget-wide v1, v0, Lcom/android/server/am/ActivityManagerService$MemItem;->pss:J

    invoke-virtual {v7, v1, v2}, Ljava/io/PrintWriter;->print(J)V

    const-string v1, ","

    invoke-virtual {v7, v1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 18870
    if-eqz p6, :cond_3

    iget-wide v1, v0, Lcom/android/server/am/ActivityManagerService$MemItem;->swapPss:J

    invoke-static {v1, v2}, Ljava/lang/Long;->valueOf(J)Ljava/lang/Long;

    move-result-object v1

    goto :goto_1

    :cond_3
    const-string v1, "N/A"

    :goto_1
    invoke-virtual {v7, v1}, Ljava/io/PrintWriter;->print(Ljava/lang/Object;)V

    .line 18871
    iget-boolean v1, v0, Lcom/android/server/am/ActivityManagerService$MemItem;->hasActivities:Z

    if-eqz v1, :cond_4

    const-string v1, ",a"

    goto :goto_2

    :cond_4
    const-string v1, ",e"

    :goto_2
    invoke-virtual {v7, v1}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    goto :goto_4

    .line 18873
    :cond_5
    invoke-virtual {v7, v9}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    const-string v1, ","

    invoke-virtual {v7, v1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    iget-object v1, v0, Lcom/android/server/am/ActivityManagerService$MemItem;->shortLabel:Ljava/lang/String;

    invoke-virtual {v7, v1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    const-string v1, ","

    invoke-virtual {v7, v1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 18874
    iget-wide v1, v0, Lcom/android/server/am/ActivityManagerService$MemItem;->pss:J

    invoke-virtual {v7, v1, v2}, Ljava/io/PrintWriter;->print(J)V

    const-string v1, ","

    invoke-virtual {v7, v1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    if-eqz p6, :cond_6

    iget-wide v1, v0, Lcom/android/server/am/ActivityManagerService$MemItem;->swapPss:J

    invoke-static {v1, v2}, Ljava/lang/Long;->valueOf(J)Ljava/lang/Long;

    move-result-object v1

    goto :goto_3

    :cond_6
    const-string v1, "N/A"

    :goto_3
    invoke-virtual {v7, v1}, Ljava/io/PrintWriter;->println(Ljava/lang/Object;)V

    .line 18876
    :goto_4
    iget-object v1, v0, Lcom/android/server/am/ActivityManagerService$MemItem;->subitems:Ljava/util/ArrayList;

    if-eqz v1, :cond_7

    .line 18877
    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    invoke-virtual {v1, v8}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v2, "    "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService$MemItem;->shortLabel:Ljava/lang/String;

    iget-object v3, v0, Lcom/android/server/am/ActivityManagerService$MemItem;->subitems:Ljava/util/ArrayList;

    const/4 v4, 0x1

    move-object v0, v7

    move/from16 v5, p5

    move/from16 v6, p6

    invoke-static/range {v0 .. v6}, Lcom/android/server/am/ActivityManagerService;->dumpMemItems(Ljava/io/PrintWriter;Ljava/lang/String;Ljava/lang/String;Ljava/util/ArrayList;ZZZ)V

    .line 18858
    :cond_7
    add-int/lit8 v11, v13, 0x1

    goto/16 :goto_0

    .line 18881
    :cond_8
    return-void
.end method

.method private static final dumpProcessList(Ljava/io/PrintWriter;Lcom/android/server/am/ActivityManagerService;Ljava/util/List;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)I
    .locals 8

    .line 18430
    nop

    .line 18431
    invoke-interface {p2}, Ljava/util/List;->size()I

    move-result p1

    const/4 v0, 0x1

    sub-int/2addr p1, v0

    .line 18432
    const/4 v1, 0x0

    move v2, v1

    :goto_0
    if-ltz p1, :cond_3

    .line 18433
    invoke-interface {p2, p1}, Ljava/util/List;->get(I)Ljava/lang/Object;

    move-result-object v3

    check-cast v3, Lcom/android/server/am/ProcessRecord;

    .line 18434
    if-eqz p6, :cond_0

    iget-object v4, v3, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget-object v4, v4, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;

    invoke-virtual {p6, v4}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v4

    if-nez v4, :cond_0

    .line 18435
    goto :goto_2

    .line 18437
    :cond_0
    const-string v4, "%s%s #%2d: %s"

    const/4 v5, 0x4

    new-array v5, v5, [Ljava/lang/Object;

    aput-object p3, v5, v1

    .line 18438
    iget-boolean v6, v3, Lcom/android/server/am/ProcessRecord;->persistent:Z

    if-eqz v6, :cond_1

    move-object v6, p5

    goto :goto_1

    :cond_1
    move-object v6, p4

    :goto_1
    aput-object v6, v5, v0

    const/4 v6, 0x2

    .line 18439
    invoke-static {p1}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v7

    aput-object v7, v5, v6

    const/4 v6, 0x3

    invoke-virtual {v3}, Lcom/android/server/am/ProcessRecord;->toString()Ljava/lang/String;

    move-result-object v7

    aput-object v7, v5, v6

    .line 18437
    invoke-static {v4, v5}, Ljava/lang/String;->format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;

    move-result-object v4

    invoke-virtual {p0, v4}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 18440
    iget-boolean v3, v3, Lcom/android/server/am/ProcessRecord;->persistent:Z

    if-eqz v3, :cond_2

    .line 18441
    add-int/lit8 v2, v2, 0x1

    .line 18432
    :cond_2
    :goto_2
    add-int/lit8 p1, p1, -0x1

    goto :goto_0

    .line 18444
    :cond_3
    return v2
.end method

.method private static final dumpProcessOomList(Ljava/io/PrintWriter;Lcom/android/server/am/ActivityManagerService;Ljava/util/List;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)Z
    .locals 16
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "(",
            "Ljava/io/PrintWriter;",
            "Lcom/android/server/am/ActivityManagerService;",
            "Ljava/util/List<",
            "Lcom/android/server/am/ProcessRecord;",
            ">;",
            "Ljava/lang/String;",
            "Ljava/lang/String;",
            "Ljava/lang/String;",
            "Z",
            "Ljava/lang/String;",
            ")Z"
        }
    .end annotation

    move-object/from16 v0, p0

    move-object/from16 v1, p3

    .line 18583
    move-object/from16 v2, p2

    move-object/from16 v3, p7

    invoke-static {v2, v3}, Lcom/android/server/am/ActivityManagerService;->sortProcessOomList(Ljava/util/List;Ljava/lang/String;)Ljava/util/ArrayList;

    move-result-object v3

    .line 18584
    invoke-virtual {v3}, Ljava/util/ArrayList;->isEmpty()Z

    move-result v4

    if-eqz v4, :cond_0

    const/4 v0, 0x0

    return v0

    .line 18586
    :cond_0
    invoke-static {}, Landroid/os/SystemClock;->uptimeMillis()J

    move-result-wide v4

    .line 18587
    move-object/from16 v6, p1

    iget-wide v6, v6, Lcom/android/server/am/ActivityManagerService;->mLastPowerCheckUptime:J

    sub-long/2addr v4, v6

    .line 18589
    invoke-virtual {v3}, Ljava/util/ArrayList;->size()I

    move-result v6

    const/4 v7, 0x1

    sub-int/2addr v6, v7

    :goto_0
    if-ltz v6, :cond_d

    .line 18590
    invoke-virtual {v3, v6}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v8

    check-cast v8, Landroid/util/Pair;

    iget-object v8, v8, Landroid/util/Pair;->first:Ljava/lang/Object;

    check-cast v8, Lcom/android/server/am/ProcessRecord;

    .line 18591
    iget v9, v8, Lcom/android/server/am/ProcessRecord;->setAdj:I

    invoke-static {v9}, Lcom/android/server/am/ProcessList;->makeOomAdjString(I)Ljava/lang/String;

    move-result-object v9

    .line 18593
    iget v10, v8, Lcom/android/server/am/ProcessRecord;->setSchedGroup:I

    packed-switch v10, :pswitch_data_0

    .line 18607
    const/16 v10, 0x3f

    goto :goto_1

    .line 18601
    :pswitch_0
    const/16 v10, 0x54

    .line 18602
    goto :goto_1

    .line 18598
    :pswitch_1
    const/16 v10, 0x46

    .line 18599
    goto :goto_1

    .line 18604
    :pswitch_2
    const/16 v10, 0x52

    .line 18605
    goto :goto_1

    .line 18595
    :pswitch_3
    const/16 v10, 0x42

    .line 18596
    nop

    .line 18611
    :goto_1
    iget-boolean v11, v8, Lcom/android/server/am/ProcessRecord;->foregroundActivities:Z

    const/16 v12, 0x20

    if-eqz v11, :cond_1

    .line 18612
    const/16 v11, 0x41

    goto :goto_2

    .line 18613
    :cond_1
    iget-boolean v11, v8, Lcom/android/server/am/ProcessRecord;->foregroundServices:Z

    if-eqz v11, :cond_2

    .line 18614
    const/16 v11, 0x53

    goto :goto_2

    .line 18616
    :cond_2
    nop

    .line 18618
    move v11, v12

    :goto_2
    iget v13, v8, Lcom/android/server/am/ProcessRecord;->curProcState:I

    invoke-static {v13}, Lcom/android/server/am/ProcessList;->makeProcStateString(I)Ljava/lang/String;

    move-result-object v13

    .line 18619
    invoke-virtual {v0, v1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 18620
    iget-boolean v14, v8, Lcom/android/server/am/ProcessRecord;->persistent:Z

    if-eqz v14, :cond_3

    move-object/from16 v14, p5

    goto :goto_3

    :cond_3
    move-object/from16 v14, p4

    :goto_3
    invoke-virtual {v0, v14}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 18621
    const-string v14, " #"

    invoke-virtual {v0, v14}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 18622
    invoke-interface/range {p2 .. p2}, Ljava/util/List;->size()I

    move-result v14

    sub-int/2addr v14, v7

    invoke-virtual {v3, v6}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v15

    check-cast v15, Landroid/util/Pair;

    iget-object v15, v15, Landroid/util/Pair;->second:Ljava/lang/Object;

    check-cast v15, Ljava/lang/Integer;

    invoke-virtual {v15}, Ljava/lang/Integer;->intValue()I

    move-result v15

    sub-int/2addr v14, v15

    .line 18623
    const/16 v15, 0xa

    if-ge v14, v15, :cond_4

    invoke-virtual {v0, v12}, Ljava/io/PrintWriter;->print(C)V

    .line 18624
    :cond_4
    invoke-virtual {v0, v14}, Ljava/io/PrintWriter;->print(I)V

    .line 18625
    const-string v14, ": "

    invoke-virtual {v0, v14}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 18626
    invoke-virtual {v0, v9}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 18627
    invoke-virtual {v0, v12}, Ljava/io/PrintWriter;->print(C)V

    .line 18628
    invoke-virtual {v0, v10}, Ljava/io/PrintWriter;->print(C)V

    .line 18629
    const/16 v9, 0x2f

    invoke-virtual {v0, v9}, Ljava/io/PrintWriter;->print(C)V

    .line 18630
    invoke-virtual {v0, v11}, Ljava/io/PrintWriter;->print(C)V

    .line 18631
    invoke-virtual {v0, v9}, Ljava/io/PrintWriter;->print(C)V

    .line 18632
    invoke-virtual {v0, v13}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 18633
    const-string v9, " trm:"

    invoke-virtual {v0, v9}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 18634
    iget v9, v8, Lcom/android/server/am/ProcessRecord;->trimMemoryLevel:I

    if-ge v9, v15, :cond_5

    invoke-virtual {v0, v12}, Ljava/io/PrintWriter;->print(C)V

    .line 18635
    :cond_5
    iget v9, v8, Lcom/android/server/am/ProcessRecord;->trimMemoryLevel:I

    invoke-virtual {v0, v9}, Ljava/io/PrintWriter;->print(I)V

    .line 18636
    invoke-virtual {v0, v12}, Ljava/io/PrintWriter;->print(C)V

    .line 18637
    invoke-virtual {v8}, Lcom/android/server/am/ProcessRecord;->toShortString()Ljava/lang/String;

    move-result-object v9

    invoke-virtual {v0, v9}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 18638
    const-string v9, " ("

    invoke-virtual {v0, v9}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 18639
    iget-object v9, v8, Lcom/android/server/am/ProcessRecord;->adjType:Ljava/lang/String;

    invoke-virtual {v0, v9}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 18640
    const/16 v9, 0x29

    invoke-virtual {v0, v9}, Ljava/io/PrintWriter;->println(C)V

    .line 18641
    iget-object v9, v8, Lcom/android/server/am/ProcessRecord;->adjSource:Ljava/lang/Object;

    if-nez v9, :cond_6

    iget-object v9, v8, Lcom/android/server/am/ProcessRecord;->adjTarget:Ljava/lang/Object;

    if-eqz v9, :cond_b

    .line 18642
    :cond_6
    invoke-virtual {v0, v1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 18643
    const-string v9, "    "

    invoke-virtual {v0, v9}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 18644
    iget-object v9, v8, Lcom/android/server/am/ProcessRecord;->adjTarget:Ljava/lang/Object;

    instance-of v9, v9, Landroid/content/ComponentName;

    if-eqz v9, :cond_7

    .line 18645
    iget-object v9, v8, Lcom/android/server/am/ProcessRecord;->adjTarget:Ljava/lang/Object;

    check-cast v9, Landroid/content/ComponentName;

    invoke-virtual {v9}, Landroid/content/ComponentName;->flattenToShortString()Ljava/lang/String;

    move-result-object v9

    invoke-virtual {v0, v9}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    goto :goto_4

    .line 18646
    :cond_7
    iget-object v9, v8, Lcom/android/server/am/ProcessRecord;->adjTarget:Ljava/lang/Object;

    if-eqz v9, :cond_8

    .line 18647
    iget-object v9, v8, Lcom/android/server/am/ProcessRecord;->adjTarget:Ljava/lang/Object;

    invoke-virtual {v9}, Ljava/lang/Object;->toString()Ljava/lang/String;

    move-result-object v9

    invoke-virtual {v0, v9}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    goto :goto_4

    .line 18649
    :cond_8
    const-string/jumbo v9, "{null}"

    invoke-virtual {v0, v9}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 18651
    :goto_4
    const-string v9, "<="

    invoke-virtual {v0, v9}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 18652
    iget-object v9, v8, Lcom/android/server/am/ProcessRecord;->adjSource:Ljava/lang/Object;

    instance-of v9, v9, Lcom/android/server/am/ProcessRecord;

    if-eqz v9, :cond_9

    .line 18653
    const-string v9, "Proc{"

    invoke-virtual {v0, v9}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 18654
    iget-object v9, v8, Lcom/android/server/am/ProcessRecord;->adjSource:Ljava/lang/Object;

    check-cast v9, Lcom/android/server/am/ProcessRecord;

    invoke-virtual {v9}, Lcom/android/server/am/ProcessRecord;->toShortString()Ljava/lang/String;

    move-result-object v9

    invoke-virtual {v0, v9}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 18655
    const-string/jumbo v9, "}"

    invoke-virtual {v0, v9}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    goto :goto_5

    .line 18656
    :cond_9
    iget-object v9, v8, Lcom/android/server/am/ProcessRecord;->adjSource:Ljava/lang/Object;

    if-eqz v9, :cond_a

    .line 18657
    iget-object v9, v8, Lcom/android/server/am/ProcessRecord;->adjSource:Ljava/lang/Object;

    invoke-virtual {v9}, Ljava/lang/Object;->toString()Ljava/lang/String;

    move-result-object v9

    invoke-virtual {v0, v9}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    goto :goto_5

    .line 18659
    :cond_a
    const-string/jumbo v9, "{null}"

    invoke-virtual {v0, v9}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 18662
    :cond_b
    :goto_5
    if-eqz p6, :cond_c

    .line 18663
    invoke-virtual {v0, v1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 18664
    const-string v10, "    "

    invoke-virtual {v0, v10}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 18665
    const-string/jumbo v10, "oom: max="

    invoke-virtual {v0, v10}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    iget v10, v8, Lcom/android/server/am/ProcessRecord;->maxAdj:I

    invoke-virtual {v0, v10}, Ljava/io/PrintWriter;->print(I)V

    .line 18666
    const-string v10, " curRaw="

    invoke-virtual {v0, v10}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    iget v10, v8, Lcom/android/server/am/ProcessRecord;->curRawAdj:I

    invoke-virtual {v0, v10}, Ljava/io/PrintWriter;->print(I)V

    .line 18667
    const-string v10, " setRaw="

    invoke-virtual {v0, v10}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    iget v10, v8, Lcom/android/server/am/ProcessRecord;->setRawAdj:I

    invoke-virtual {v0, v10}, Ljava/io/PrintWriter;->print(I)V

    .line 18668
    const-string v10, " cur="

    invoke-virtual {v0, v10}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    iget v10, v8, Lcom/android/server/am/ProcessRecord;->curAdj:I

    invoke-virtual {v0, v10}, Ljava/io/PrintWriter;->print(I)V

    .line 18669
    const-string v10, " set="

    invoke-virtual {v0, v10}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    iget v10, v8, Lcom/android/server/am/ProcessRecord;->setAdj:I

    invoke-virtual {v0, v10}, Ljava/io/PrintWriter;->println(I)V

    .line 18670
    invoke-virtual {v0, v1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 18671
    const-string v10, "    "

    invoke-virtual {v0, v10}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 18672
    const-string/jumbo v10, "state: cur="

    invoke-virtual {v0, v10}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    iget v10, v8, Lcom/android/server/am/ProcessRecord;->curProcState:I

    invoke-static {v10}, Lcom/android/server/am/ProcessList;->makeProcStateString(I)Ljava/lang/String;

    move-result-object v10

    invoke-virtual {v0, v10}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 18673
    const-string v10, " set="

    invoke-virtual {v0, v10}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    iget v10, v8, Lcom/android/server/am/ProcessRecord;->setProcState:I

    invoke-static {v10}, Lcom/android/server/am/ProcessList;->makeProcStateString(I)Ljava/lang/String;

    move-result-object v10

    invoke-virtual {v0, v10}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 18674
    const-string v10, " lastPss="

    invoke-virtual {v0, v10}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    iget-wide v10, v8, Lcom/android/server/am/ProcessRecord;->lastPss:J

    const-wide/16 v12, 0x400

    mul-long/2addr v10, v12

    invoke-static {v0, v10, v11}, Landroid/util/DebugUtils;->printSizeValue(Ljava/io/PrintWriter;J)V

    .line 18675
    const-string v10, " lastSwapPss="

    invoke-virtual {v0, v10}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    iget-wide v10, v8, Lcom/android/server/am/ProcessRecord;->lastSwapPss:J

    mul-long/2addr v10, v12

    invoke-static {v0, v10, v11}, Landroid/util/DebugUtils;->printSizeValue(Ljava/io/PrintWriter;J)V

    .line 18676
    const-string v10, " lastCachedPss="

    invoke-virtual {v0, v10}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    iget-wide v10, v8, Lcom/android/server/am/ProcessRecord;->lastCachedPss:J

    mul-long/2addr v10, v12

    invoke-static {v0, v10, v11}, Landroid/util/DebugUtils;->printSizeValue(Ljava/io/PrintWriter;J)V

    .line 18677
    invoke-virtual/range {p0 .. p0}, Ljava/io/PrintWriter;->println()V

    .line 18678
    invoke-virtual {v0, v1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 18679
    const-string v10, "    "

    invoke-virtual {v0, v10}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 18680
    const-string v10, "cached="

    invoke-virtual {v0, v10}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    iget-boolean v10, v8, Lcom/android/server/am/ProcessRecord;->cached:Z

    invoke-virtual {v0, v10}, Ljava/io/PrintWriter;->print(Z)V

    .line 18681
    const-string v10, " empty="

    invoke-virtual {v0, v10}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    iget-boolean v10, v8, Lcom/android/server/am/ProcessRecord;->empty:Z

    invoke-virtual {v0, v10}, Ljava/io/PrintWriter;->print(Z)V

    .line 18682
    const-string v10, " hasAboveClient="

    invoke-virtual {v0, v10}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    iget-boolean v10, v8, Lcom/android/server/am/ProcessRecord;->hasAboveClient:Z

    invoke-virtual {v0, v10}, Ljava/io/PrintWriter;->println(Z)V

    .line 18684
    iget v10, v8, Lcom/android/server/am/ProcessRecord;->setProcState:I

    const/16 v11, 0x9

    if-lt v10, v11, :cond_c

    .line 18685
    iget-wide v10, v8, Lcom/android/server/am/ProcessRecord;->lastCpuTime:J

    const-wide/16 v12, 0x0

    cmp-long v10, v10, v12

    if-eqz v10, :cond_c

    .line 18686
    iget-wide v10, v8, Lcom/android/server/am/ProcessRecord;->curCpuTime:J

    iget-wide v12, v8, Lcom/android/server/am/ProcessRecord;->lastCpuTime:J

    sub-long/2addr v10, v12

    .line 18687
    invoke-virtual {v0, v1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 18688
    const-string v8, "    "

    invoke-virtual {v0, v8}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 18689
    const-string/jumbo v8, "run cpu over "

    invoke-virtual {v0, v8}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 18690
    invoke-static {v4, v5, v0}, Landroid/util/TimeUtils;->formatDuration(JLjava/io/PrintWriter;)V

    .line 18691
    const-string v8, " used "

    invoke-virtual {v0, v8}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 18692
    invoke-static {v10, v11, v0}, Landroid/util/TimeUtils;->formatDuration(JLjava/io/PrintWriter;)V

    .line 18693
    const-string v8, " ("

    invoke-virtual {v0, v8}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 18694
    const-wide/16 v12, 0x64

    mul-long/2addr v10, v12

    div-long/2addr v10, v4

    invoke-virtual {v0, v10, v11}, Ljava/io/PrintWriter;->print(J)V

    .line 18695
    const-string v8, "%)"

    invoke-virtual {v0, v8}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 18589
    :cond_c
    add-int/lit8 v6, v6, -0x1

    goto/16 :goto_0

    .line 18700
    :cond_d
    return v7

    nop

    :pswitch_data_0
    .packed-switch 0x0
        :pswitch_3
        :pswitch_2
        :pswitch_1
        :pswitch_0
    .end packed-switch
.end method

.method public static dumpStackTraces(ZLjava/util/ArrayList;Lcom/android/internal/os/ProcessCpuTracker;Landroid/util/SparseArray;Ljava/util/ArrayList;)Ljava/io/File;
    .locals 7
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "(Z",
            "Ljava/util/ArrayList<",
            "Ljava/lang/Integer;",
            ">;",
            "Lcom/android/internal/os/ProcessCpuTracker;",
            "Landroid/util/SparseArray<",
            "Ljava/lang/Boolean;",
            ">;",
            "Ljava/util/ArrayList<",
            "Ljava/lang/Integer;",
            ">;)",
            "Ljava/io/File;"
        }
    .end annotation

    .line 6311
    nop

    .line 6315
    const/4 v0, 0x0

    const/4 v1, 0x0

    if-eqz p2, :cond_1

    .line 6316
    invoke-virtual {p2}, Lcom/android/internal/os/ProcessCpuTracker;->init()V

    .line 6318
    const-wide/16 v2, 0xc8

    :try_start_0
    invoke-static {v2, v3}, Ljava/lang/Thread;->sleep(J)V
    :try_end_0
    .catch Ljava/lang/InterruptedException; {:try_start_0 .. :try_end_0} :catch_0

    .line 6320
    goto :goto_0

    .line 6319
    :catch_0
    move-exception v2

    .line 6322
    :goto_0
    invoke-virtual {p2}, Lcom/android/internal/os/ProcessCpuTracker;->update()V

    .line 6325
    invoke-virtual {p2}, Lcom/android/internal/os/ProcessCpuTracker;->countWorkingStats()I

    move-result v2

    .line 6326
    new-instance v3, Ljava/util/ArrayList;

    invoke-direct {v3}, Ljava/util/ArrayList;-><init>()V

    .line 6327
    move v4, v0

    :goto_1
    if-ge v4, v2, :cond_2

    invoke-virtual {v3}, Ljava/util/ArrayList;->size()I

    move-result v5

    const/4 v6, 0x5

    if-ge v5, v6, :cond_2

    .line 6328
    invoke-virtual {p2, v4}, Lcom/android/internal/os/ProcessCpuTracker;->getWorkingStats(I)Lcom/android/internal/os/ProcessCpuTracker$Stats;

    move-result-object v5

    .line 6329
    iget v6, v5, Lcom/android/internal/os/ProcessCpuTracker$Stats;->pid:I

    invoke-virtual {p3, v6}, Landroid/util/SparseArray;->indexOfKey(I)I

    move-result v6

    if-ltz v6, :cond_0

    .line 6332
    iget v5, v5, Lcom/android/internal/os/ProcessCpuTracker$Stats;->pid:I

    invoke-static {v5}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v5

    invoke-virtual {v3, v5}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    .line 6327
    :cond_0
    add-int/lit8 v4, v4, 0x1

    goto :goto_1

    .line 6340
    :cond_1
    move-object v3, v1

    .line 6343
    :cond_2
    const-string p2, "dalvik.vm.stack-trace-dir"

    const-string p3, ""

    invoke-static {p2, p3}, Landroid/os/SystemProperties;->get(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;

    move-result-object p2

    .line 6344
    invoke-virtual {p2}, Ljava/lang/String;->isEmpty()Z

    move-result p3

    if-eqz p3, :cond_5

    .line 6353
    const-string p2, "dalvik.vm.stack-trace-file"

    invoke-static {p2, v1}, Landroid/os/SystemProperties;->get(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;

    move-result-object p2

    .line 6354
    invoke-virtual {p2}, Ljava/lang/String;->isEmpty()Z

    move-result p3

    if-eqz p3, :cond_3

    .line 6355
    const-string p0, "ActivityManager"

    const-string p1, "dumpStackTraces: no trace path configured"

    invoke-static {p0, p1}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 6356
    return-object v1

    .line 6359
    :cond_3
    new-instance p3, Ljava/io/File;

    invoke-direct {p3, p2}, Ljava/io/File;-><init>(Ljava/lang/String;)V

    .line 6361
    if-eqz p0, :cond_4

    :try_start_1
    invoke-virtual {p3}, Ljava/io/File;->exists()Z

    move-result p0

    if-eqz p0, :cond_4

    .line 6362
    invoke-virtual {p3}, Ljava/io/File;->delete()Z

    goto :goto_2

    .line 6367
    :catch_1
    move-exception p0

    goto :goto_3

    .line 6365
    :cond_4
    :goto_2
    invoke-virtual {p3}, Ljava/io/File;->createNewFile()Z

    .line 6366
    const/16 p0, 0x1b6

    const/4 v2, -0x1

    invoke-static {p2, p0, v2, v2}, Landroid/os/FileUtils;->setPermissions(Ljava/lang/String;III)I
    :try_end_1
    .catch Ljava/io/IOException; {:try_start_1 .. :try_end_1} :catch_1

    .line 6370
    nop

    .line 6371
    goto :goto_4

    .line 6367
    :goto_3
    nop

    .line 6368
    const-string p1, "ActivityManager"

    new-instance p2, Ljava/lang/StringBuilder;

    invoke-direct {p2}, Ljava/lang/StringBuilder;-><init>()V

    const-string p4, "Unable to prepare ANR traces file: "

    invoke-virtual {p2, p4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {p2, p3}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    invoke-virtual {p2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object p2

    invoke-static {p1, p2, p0}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I

    .line 6369
    return-object v1

    .line 6372
    :cond_5
    new-instance p0, Ljava/io/File;

    invoke-direct {p0, p2}, Ljava/io/File;-><init>(Ljava/lang/String;)V

    .line 6376
    invoke-static {p0}, Lcom/android/server/am/ActivityManagerService;->maybePruneOldTraces(Ljava/io/File;)V

    .line 6381
    invoke-static {p0}, Lcom/android/server/am/ActivityManagerService;->createAnrDumpFile(Ljava/io/File;)Ljava/io/File;

    move-result-object p3

    .line 6382
    if-nez p3, :cond_6

    .line 6383
    return-object v1

    .line 6386
    :cond_6
    nop

    .line 6389
    const/4 v0, 0x1

    :goto_4
    invoke-virtual {p3}, Ljava/io/File;->getAbsolutePath()Ljava/lang/String;

    move-result-object p0

    invoke-static {p0, p1, p4, v3, v0}, Lcom/android/server/am/ActivityManagerService;->dumpStackTraces(Ljava/lang/String;Ljava/util/ArrayList;Ljava/util/ArrayList;Ljava/util/ArrayList;Z)V

    .line 6391
    return-object p3
.end method

.method private static dumpStackTraces(Ljava/lang/String;Ljava/util/ArrayList;Ljava/util/ArrayList;Ljava/util/ArrayList;Z)V
    .locals 11
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "(",
            "Ljava/lang/String;",
            "Ljava/util/ArrayList<",
            "Ljava/lang/Integer;",
            ">;",
            "Ljava/util/ArrayList<",
            "Ljava/lang/Integer;",
            ">;",
            "Ljava/util/ArrayList<",
            "Ljava/lang/Integer;",
            ">;Z)V"
        }
    .end annotation

    .line 6528
    if-eqz p4, :cond_0

    .line 6529
    const/4 v0, 0x0

    goto :goto_0

    .line 6533
    :cond_0
    new-instance v0, Lcom/android/server/am/ActivityManagerService$DumpStackFileObserver;

    invoke-direct {v0, p0}, Lcom/android/server/am/ActivityManagerService$DumpStackFileObserver;-><init>(Ljava/lang/String;)V

    .line 6537
    :goto_0
    const-wide/16 v1, 0x4e20

    .line 6539
    if-eqz v0, :cond_1

    .line 6540
    :try_start_0
    invoke-virtual {v0}, Lcom/android/server/am/ActivityManagerService$DumpStackFileObserver;->startWatching()V

    goto :goto_1

    .line 6618
    :catchall_0
    move-exception p0

    goto/16 :goto_7

    .line 6544
    :cond_1
    :goto_1
    const-wide/16 v3, 0x0

    if-eqz p1, :cond_5

    .line 6545
    invoke-virtual {p1}, Ljava/util/ArrayList;->size()I

    move-result v5

    .line 6546
    const/4 v6, 0x0

    :goto_2
    if-ge v6, v5, :cond_5

    .line 6550
    if-eqz p4, :cond_2

    .line 6551
    invoke-virtual {p1, v6}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v7

    check-cast v7, Ljava/lang/Integer;

    invoke-virtual {v7}, Ljava/lang/Integer;->intValue()I

    move-result v7

    invoke-static {v7, p0, v1, v2}, Lcom/android/server/am/ActivityManagerService;->dumpJavaTracesTombstoned(ILjava/lang/String;J)J

    move-result-wide v7

    goto :goto_3

    .line 6553
    :cond_2
    invoke-virtual {p1, v6}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v7

    check-cast v7, Ljava/lang/Integer;

    invoke-virtual {v7}, Ljava/lang/Integer;->intValue()I

    move-result v7

    invoke-virtual {v0, v7, v1, v2}, Lcom/android/server/am/ActivityManagerService$DumpStackFileObserver;->dumpWithTimeout(IJ)J

    move-result-wide v7

    .line 6556
    :goto_3
    sub-long/2addr v1, v7

    .line 6557
    cmp-long v7, v1, v3

    if-gtz v7, :cond_4

    .line 6558
    const-string p0, "ActivityManager"

    new-instance p2, Ljava/lang/StringBuilder;

    invoke-direct {p2}, Ljava/lang/StringBuilder;-><init>()V

    const-string p3, "Aborting stack trace dump (current firstPid="

    invoke-virtual {p2, p3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {p1, v6}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object p1

    invoke-virtual {p2, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    const-string p1, "); deadline exceeded."

    invoke-virtual {p2, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {p2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object p1

    invoke-static {p0, p1}, Landroid/util/Slog;->e(Ljava/lang/String;Ljava/lang/String;)I
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 6618
    if-eqz v0, :cond_3

    .line 6619
    invoke-virtual {v0}, Lcom/android/server/am/ActivityManagerService$DumpStackFileObserver;->stopWatching()V

    .line 6560
    :cond_3
    return-void

    .line 6546
    :cond_4
    add-int/lit8 v6, v6, 0x1

    goto :goto_2

    .line 6570
    :cond_5
    if-eqz p2, :cond_8

    .line 6571
    :try_start_1
    invoke-virtual {p2}, Ljava/util/ArrayList;->iterator()Ljava/util/Iterator;

    move-result-object p1

    :goto_4
    invoke-interface {p1}, Ljava/util/Iterator;->hasNext()Z

    move-result p2

    if-eqz p2, :cond_8

    invoke-interface {p1}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object p2

    check-cast p2, Ljava/lang/Integer;

    invoke-virtual {p2}, Ljava/lang/Integer;->intValue()I

    move-result p2

    .line 6573
    const-wide/16 v5, 0x7d0

    invoke-static {v5, v6, v1, v2}, Ljava/lang/Math;->min(JJ)J

    move-result-wide v5

    .line 6575
    invoke-static {}, Landroid/os/SystemClock;->elapsedRealtime()J

    move-result-wide v7

    .line 6576
    const-wide/16 v9, 0x3e8

    div-long/2addr v5, v9

    long-to-int v5, v5

    invoke-static {p2, p0, v5}, Landroid/os/Debug;->dumpNativeBacktraceToFileTimeout(ILjava/lang/String;I)Z

    .line 6578
    invoke-static {}, Landroid/os/SystemClock;->elapsedRealtime()J

    move-result-wide v5

    sub-long/2addr v5, v7

    .line 6580
    sub-long/2addr v1, v5

    .line 6581
    cmp-long v5, v1, v3

    if-gtz v5, :cond_7

    .line 6582
    const-string p0, "ActivityManager"

    new-instance p1, Ljava/lang/StringBuilder;

    invoke-direct {p1}, Ljava/lang/StringBuilder;-><init>()V

    const-string p3, "Aborting stack trace dump (current native pid="

    invoke-virtual {p1, p3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {p1, p2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string p2, "); deadline exceeded."

    invoke-virtual {p1, p2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {p1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object p1

    invoke-static {p0, p1}, Landroid/util/Slog;->e(Ljava/lang/String;Ljava/lang/String;)I
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 6618
    if-eqz v0, :cond_6

    .line 6619
    invoke-virtual {v0}, Lcom/android/server/am/ActivityManagerService$DumpStackFileObserver;->stopWatching()V

    .line 6584
    :cond_6
    return-void

    .line 6590
    :cond_7
    goto :goto_4

    .line 6594
    :cond_8
    if-eqz p3, :cond_d

    .line 6595
    :try_start_2
    invoke-virtual {p3}, Ljava/util/ArrayList;->iterator()Ljava/util/Iterator;

    move-result-object p1

    :goto_5
    invoke-interface {p1}, Ljava/util/Iterator;->hasNext()Z

    move-result p2

    if-eqz p2, :cond_d

    invoke-interface {p1}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object p2

    check-cast p2, Ljava/lang/Integer;

    invoke-virtual {p2}, Ljava/lang/Integer;->intValue()I

    move-result p2

    .line 6599
    if-eqz p4, :cond_9

    .line 6600
    invoke-static {p2, p0, v1, v2}, Lcom/android/server/am/ActivityManagerService;->dumpJavaTracesTombstoned(ILjava/lang/String;J)J

    move-result-wide v5

    goto :goto_6

    .line 6602
    :cond_9
    invoke-virtual {v0, p2, v1, v2}, Lcom/android/server/am/ActivityManagerService$DumpStackFileObserver;->dumpWithTimeout(IJ)J

    move-result-wide v5

    .line 6605
    :goto_6
    sub-long/2addr v1, v5

    .line 6606
    cmp-long p3, v1, v3

    if-gtz p3, :cond_b

    .line 6607
    const-string p0, "ActivityManager"

    new-instance p1, Ljava/lang/StringBuilder;

    invoke-direct {p1}, Ljava/lang/StringBuilder;-><init>()V

    const-string p3, "Aborting stack trace dump (current extra pid="

    invoke-virtual {p1, p3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {p1, p2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string p2, "); deadline exceeded."

    invoke-virtual {p1, p2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {p1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object p1

    invoke-static {p0, p1}, Landroid/util/Slog;->e(Ljava/lang/String;Ljava/lang/String;)I
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    .line 6618
    if-eqz v0, :cond_a

    .line 6619
    invoke-virtual {v0}, Lcom/android/server/am/ActivityManagerService$DumpStackFileObserver;->stopWatching()V

    .line 6609
    :cond_a
    return-void

    .line 6615
    :cond_b
    goto :goto_5

    .line 6618
    :goto_7
    if-eqz v0, :cond_c

    .line 6619
    invoke-virtual {v0}, Lcom/android/server/am/ActivityManagerService$DumpStackFileObserver;->stopWatching()V

    :cond_c
    throw p0

    .line 6618
    :cond_d
    if-eqz v0, :cond_e

    .line 6619
    invoke-virtual {v0}, Lcom/android/server/am/ActivityManagerService$DumpStackFileObserver;->stopWatching()V

    .line 6622
    :cond_e
    return-void
.end method

.method private enforceSystemHasVrFeature()V
    .locals 2

    .line 14729
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mContext:Landroid/content/Context;

    invoke-virtual {v0}, Landroid/content/Context;->getPackageManager()Landroid/content/pm/PackageManager;

    move-result-object v0

    const-string v1, "android.hardware.vr.high_performance"

    invoke-virtual {v0, v1}, Landroid/content/pm/PackageManager;->hasSystemFeature(Ljava/lang/String;)Z

    move-result v0

    if-eqz v0, :cond_0

    .line 14733
    return-void

    .line 14731
    :cond_0
    new-instance v0, Ljava/lang/UnsupportedOperationException;

    const-string v1, "VR mode not supported on this device!"

    invoke-direct {v0, v1}, Ljava/lang/UnsupportedOperationException;-><init>(Ljava/lang/String;)V

    throw v0
.end method

.method private enforceWriteSettingsPermission(Ljava/lang/String;)V
    .locals 4

    .line 22714
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v0

    .line 22715
    if-nez v0, :cond_0

    .line 22716
    return-void

    .line 22719
    :cond_0
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mContext:Landroid/content/Context;

    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mContext:Landroid/content/Context;

    .line 22720
    invoke-static {v2, v0}, Landroid/provider/Settings;->getPackageNameForUid(Landroid/content/Context;I)Ljava/lang/String;

    move-result-object v2

    const/4 v3, 0x0

    .line 22719
    invoke-static {v1, v0, v2, v3}, Landroid/provider/Settings;->checkAndNoteWriteSettingsOperation(Landroid/content/Context;ILjava/lang/String;Z)Z

    move-result v1

    if-eqz v1, :cond_1

    .line 22721
    return-void

    .line 22724
    :cond_1
    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string v2, "Permission Denial: "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v1, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string p1, " from pid="

    invoke-virtual {v1, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 22725
    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result p1

    invoke-virtual {v1, p1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string p1, ", uid="

    invoke-virtual {v1, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v1, v0}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string p1, " requires "

    invoke-virtual {v1, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string p1, "android.permission.WRITE_SETTINGS"

    invoke-virtual {v1, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object p1

    .line 22728
    const-string v0, "ActivityManager"

    invoke-static {v0, p1}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 22729
    new-instance v0, Ljava/lang/SecurityException;

    invoke-direct {v0, p1}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v0
.end method

.method private enqueueAssistContext(ILandroid/content/Intent;Ljava/lang/String;Landroid/app/IAssistDataReceiver;Landroid/os/Bundle;Landroid/os/IBinder;ZZILandroid/os/Bundle;JI)Lcom/android/server/am/ActivityManagerService$PendingAssistExtras;
    .locals 19

    move-object/from16 v10, p0

    move-object/from16 v0, p6

    move-object/from16 v1, p10

    .line 14312
    const-string v2, "android.permission.GET_TOP_ACTIVITY_INFO"

    const-string v3, "enqueueAssistContext()"

    invoke-virtual {v10, v2, v3}, Lcom/android/server/am/ActivityManagerService;->enforceCallingPermission(Ljava/lang/String;Ljava/lang/String;)V

    .line 14315
    monitor-enter p0

    :try_start_0
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    .line 14316
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/am/ActivityManagerService;->getFocusedStack()Lcom/android/server/am/ActivityStack;

    move-result-object v2

    invoke-virtual {v2}, Lcom/android/server/am/ActivityStack;->getTopActivity()Lcom/android/server/am/ActivityRecord;

    move-result-object v2

    .line 14317
    const/4 v11, 0x0

    if-nez v2, :cond_0

    .line 14318
    const-string v0, "ActivityManager"

    const-string v1, "getAssistContextExtras failed: no top activity"

    invoke-static {v0, v1}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 14319
    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    return-object v11

    .line 14321
    :cond_0
    :try_start_1
    iget-object v3, v2, Lcom/android/server/am/ActivityRecord;->app:Lcom/android/server/am/ProcessRecord;

    if-eqz v3, :cond_9

    iget-object v3, v2, Lcom/android/server/am/ActivityRecord;->app:Lcom/android/server/am/ProcessRecord;

    iget-object v3, v3, Lcom/android/server/am/ProcessRecord;->thread:Landroid/app/IApplicationThread;

    if-nez v3, :cond_1

    goto/16 :goto_2

    .line 14325
    :cond_1
    if-eqz p7, :cond_4

    .line 14326
    if-eqz v0, :cond_3

    .line 14327
    invoke-static/range {p6 .. p6}, Lcom/android/server/am/ActivityRecord;->forTokenLocked(Landroid/os/IBinder;)Lcom/android/server/am/ActivityRecord;

    move-result-object v0

    .line 14328
    if-eq v2, v0, :cond_2

    .line 14329
    const-string v1, "ActivityManager"

    new-instance v3, Ljava/lang/StringBuilder;

    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V

    const-string v4, "enqueueAssistContext failed: caller "

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v3, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    const-string v0, " is not current top "

    invoke-virtual {v3, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v3, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    invoke-static {v1, v0}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 14331
    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    return-object v11

    .line 14333
    :cond_2
    nop

    .line 14348
    :cond_3
    move-object v12, v2

    goto :goto_0

    .line 14335
    :cond_4
    :try_start_2
    invoke-static/range {p6 .. p6}, Lcom/android/server/am/ActivityRecord;->forTokenLocked(Landroid/os/IBinder;)Lcom/android/server/am/ActivityRecord;

    move-result-object v2

    .line 14336
    if-nez v2, :cond_5

    .line 14337
    const-string v1, "ActivityManager"

    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    const-string v3, "enqueueAssistContext failed: activity for token="

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v2, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    const-string v0, " couldn\'t be found"

    invoke-virtual {v2, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    invoke-static {v1, v0}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 14339
    monitor-exit p0
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    return-object v11

    .line 14341
    :cond_5
    :try_start_3
    iget-object v0, v2, Lcom/android/server/am/ActivityRecord;->app:Lcom/android/server/am/ProcessRecord;

    if-eqz v0, :cond_8

    iget-object v0, v2, Lcom/android/server/am/ActivityRecord;->app:Lcom/android/server/am/ProcessRecord;

    iget-object v0, v0, Lcom/android/server/am/ProcessRecord;->thread:Landroid/app/IApplicationThread;

    if-nez v0, :cond_3

    goto/16 :goto_1

    .line 14348
    :goto_0
    new-instance v4, Landroid/os/Bundle;

    invoke-direct {v4}, Landroid/os/Bundle;-><init>()V

    .line 14349
    if-eqz v1, :cond_6

    .line 14350
    invoke-virtual {v4, v1}, Landroid/os/Bundle;->putAll(Landroid/os/Bundle;)V

    .line 14352
    :cond_6
    const-string v0, "android.intent.extra.ASSIST_PACKAGE"

    iget-object v1, v12, Lcom/android/server/am/ActivityRecord;->packageName:Ljava/lang/String;

    invoke-virtual {v4, v0, v1}, Landroid/os/Bundle;->putString(Ljava/lang/String;Ljava/lang/String;)V

    .line 14353
    const-string v0, "android.intent.extra.ASSIST_UID"

    iget-object v1, v12, Lcom/android/server/am/ActivityRecord;->app:Lcom/android/server/am/ProcessRecord;

    iget v1, v1, Lcom/android/server/am/ProcessRecord;->uid:I

    invoke-virtual {v4, v0, v1}, Landroid/os/Bundle;->putInt(Ljava/lang/String;I)V

    .line 14355
    new-instance v0, Lcom/android/server/am/ActivityManagerService$PendingAssistExtras;

    move-object v1, v0

    move-object v2, v10

    move-object v3, v12

    move-object/from16 v5, p2

    move-object/from16 v6, p3

    move-object/from16 v7, p4

    move-object/from16 v8, p5

    move/from16 v9, p9

    invoke-direct/range {v1 .. v9}, Lcom/android/server/am/ActivityManagerService$PendingAssistExtras;-><init>(Lcom/android/server/am/ActivityManagerService;Lcom/android/server/am/ActivityRecord;Landroid/os/Bundle;Landroid/content/Intent;Ljava/lang/String;Landroid/app/IAssistDataReceiver;Landroid/os/Bundle;I)V

    .line 14357
    invoke-virtual {v12}, Lcom/android/server/am/ActivityRecord;->isActivityTypeHome()Z

    move-result v1

    iput-boolean v1, v0, Lcom/android/server/am/ActivityManagerService$PendingAssistExtras;->isHome:Z

    .line 14360
    if-eqz p8, :cond_7

    .line 14361
    iget v1, v10, Lcom/android/server/am/ActivityManagerService;->mViSessionId:I

    add-int/lit8 v1, v1, 0x1

    iput v1, v10, Lcom/android/server/am/ActivityManagerService;->mViSessionId:I
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_0

    .line 14364
    :cond_7
    :try_start_4
    iget-object v1, v12, Lcom/android/server/am/ActivityRecord;->app:Lcom/android/server/am/ProcessRecord;

    iget-object v13, v1, Lcom/android/server/am/ProcessRecord;->thread:Landroid/app/IApplicationThread;

    iget-object v14, v12, Lcom/android/server/am/ActivityRecord;->appToken:Landroid/view/IApplicationToken$Stub;

    iget v1, v10, Lcom/android/server/am/ActivityManagerService;->mViSessionId:I

    move-object v15, v0

    move/from16 v16, p1

    move/from16 v17, v1

    move/from16 v18, p13

    invoke-interface/range {v13 .. v18}, Landroid/app/IApplicationThread;->requestAssistContextExtras(Landroid/os/IBinder;Landroid/os/IBinder;III)V

    .line 14366
    iget-object v1, v10, Lcom/android/server/am/ActivityManagerService;->mPendingAssistExtras:Ljava/util/ArrayList;

    invoke-virtual {v1, v0}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    .line 14367
    iget-object v1, v10, Lcom/android/server/am/ActivityManagerService;->mUiHandler:Landroid/os/Handler;

    move-wide/from16 v2, p11

    invoke-virtual {v1, v0, v2, v3}, Landroid/os/Handler;->postDelayed(Ljava/lang/Runnable;J)Z
    :try_end_4
    .catch Landroid/os/RemoteException; {:try_start_4 .. :try_end_4} :catch_0
    .catchall {:try_start_4 .. :try_end_4} :catchall_0

    .line 14371
    nop

    .line 14372
    :try_start_5
    monitor-exit p0
    :try_end_5
    .catchall {:try_start_5 .. :try_end_5} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    return-object v0

    .line 14368
    :catch_0
    move-exception v0

    .line 14369
    :try_start_6
    const-string v0, "ActivityManager"

    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string v2, "getAssistContextExtras failed: crash calling "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v1, v12}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-static {v0, v1}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 14370
    monitor-exit p0
    :try_end_6
    .catchall {:try_start_6 .. :try_end_6} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    return-object v11

    .line 14342
    :cond_8
    :goto_1
    :try_start_7
    const-string v0, "ActivityManager"

    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string v3, "enqueueAssistContext failed: no process for "

    invoke-virtual {v1, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-static {v0, v1}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 14343
    monitor-exit p0
    :try_end_7
    .catchall {:try_start_7 .. :try_end_7} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    return-object v11

    .line 14322
    :cond_9
    :goto_2
    :try_start_8
    const-string v0, "ActivityManager"

    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string v3, "getAssistContextExtras failed: no process for "

    invoke-virtual {v1, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-static {v0, v1}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 14323
    monitor-exit p0
    :try_end_8
    .catchall {:try_start_8 .. :try_end_8} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    return-object v11

    .line 14373
    :catchall_0
    move-exception v0

    :try_start_9
    monitor-exit p0
    :try_end_9
    .catchall {:try_start_9 .. :try_end_9} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw v0
.end method

.method private ensureConfigAndVisibilityAfterUpdate(Lcom/android/server/am/ActivityRecord;I)Z
    .locals 3

    .line 23105
    nop

    .line 23106
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mStackSupervisor:Lcom/android/server/am/ActivityStackSupervisor;

    invoke-virtual {v0}, Lcom/android/server/am/ActivityStackSupervisor;->getFocusedStack()Lcom/android/server/am/ActivityStack;

    move-result-object v0

    .line 23108
    if-eqz v0, :cond_1

    .line 23109
    if-eqz p2, :cond_0

    if-nez p1, :cond_0

    .line 23113
    invoke-virtual {v0}, Lcom/android/server/am/ActivityStack;->topRunningActivityLocked()Lcom/android/server/am/ActivityRecord;

    move-result-object p1

    .line 23116
    :cond_0
    if-eqz p1, :cond_1

    .line 23117
    const/4 v0, 0x0

    invoke-virtual {p1, p2, v0}, Lcom/android/server/am/ActivityRecord;->ensureActivityConfiguration(IZ)Z

    move-result v1

    .line 23121
    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mStackSupervisor:Lcom/android/server/am/ActivityStackSupervisor;

    invoke-virtual {v2, p1, p2, v0}, Lcom/android/server/am/ActivityStackSupervisor;->ensureActivitiesVisibleLocked(Lcom/android/server/am/ActivityRecord;IZ)V

    goto :goto_0

    .line 23126
    :cond_1
    const/4 v1, 0x1

    :goto_0
    return v1
.end method

.method private ensureValidPictureInPictureActivityParamsLocked(Ljava/lang/String;Landroid/os/IBinder;Landroid/app/PictureInPictureParams;)Lcom/android/server/am/ActivityRecord;
    .locals 4

    .line 9166
    iget-boolean v0, p0, Lcom/android/server/am/ActivityManagerService;->mSupportsPictureInPicture:Z

    if-eqz v0, :cond_4

    .line 9171
    invoke-static {p2}, Lcom/android/server/am/ActivityRecord;->forTokenLocked(Landroid/os/IBinder;)Lcom/android/server/am/ActivityRecord;

    move-result-object v0

    .line 9172
    if-eqz v0, :cond_3

    .line 9177
    invoke-virtual {v0}, Lcom/android/server/am/ActivityRecord;->supportsPictureInPicture()Z

    move-result v1

    if-eqz v1, :cond_2

    .line 9182
    invoke-virtual {p3}, Landroid/app/PictureInPictureParams;->hasSetAspectRatio()Z

    move-result v1

    if-eqz v1, :cond_1

    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mWindowManager:Lcom/android/server/wm/WindowManagerService;

    .line 9183
    invoke-virtual {v0}, Lcom/android/server/am/ActivityRecord;->getStack()Lcom/android/server/am/ActivityStack;

    move-result-object v2

    iget v2, v2, Lcom/android/server/am/ActivityStack;->mDisplayId:I

    .line 9184
    invoke-virtual {p3}, Landroid/app/PictureInPictureParams;->getAspectRatio()F

    move-result v3

    .line 9183
    invoke-virtual {v1, v2, v3}, Lcom/android/server/wm/WindowManagerService;->isValidPictureInPictureAspectRatio(IF)Z

    move-result v1

    if-eqz v1, :cond_0

    goto :goto_0

    .line 9185
    :cond_0
    iget-object p2, p0, Lcom/android/server/am/ActivityManagerService;->mContext:Landroid/content/Context;

    invoke-virtual {p2}, Landroid/content/Context;->getResources()Landroid/content/res/Resources;

    move-result-object p2

    const p3, 0x105004d

    invoke-virtual {p2, p3}, Landroid/content/res/Resources;->getFloat(I)F

    move-result p2

    .line 9187
    iget-object p3, p0, Lcom/android/server/am/ActivityManagerService;->mContext:Landroid/content/Context;

    invoke-virtual {p3}, Landroid/content/Context;->getResources()Landroid/content/res/Resources;

    move-result-object p3

    const v0, 0x105004c

    invoke-virtual {p3, v0}, Landroid/content/res/Resources;->getFloat(I)F

    move-result p3

    .line 9189
    new-instance v0, Ljava/lang/IllegalArgumentException;

    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    invoke-virtual {v1, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string p1, ": Aspect ratio is too extreme (must be between %f and %f)."

    invoke-virtual {v1, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object p1

    const/4 v1, 0x2

    new-array v1, v1, [Ljava/lang/Object;

    const/4 v2, 0x0

    .line 9191
    invoke-static {p2}, Ljava/lang/Float;->valueOf(F)Ljava/lang/Float;

    move-result-object p2

    aput-object p2, v1, v2

    const/4 p2, 0x1

    invoke-static {p3}, Ljava/lang/Float;->valueOf(F)Ljava/lang/Float;

    move-result-object p3

    aput-object p3, v1, p2

    .line 9189
    invoke-static {p1, v1}, Ljava/lang/String;->format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;

    move-result-object p1

    invoke-direct {v0, p1}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v0

    .line 9195
    :cond_1
    :goto_0
    invoke-virtual {p0, p2}, Lcom/android/server/am/ActivityManagerService;->getMaxNumPictureInPictureActions(Landroid/os/IBinder;)I

    move-result p1

    invoke-virtual {p3, p1}, Landroid/app/PictureInPictureParams;->truncateActions(I)V

    .line 9197
    return-object v0

    .line 9178
    :cond_2
    new-instance p2, Ljava/lang/IllegalStateException;

    new-instance p3, Ljava/lang/StringBuilder;

    invoke-direct {p3}, Ljava/lang/StringBuilder;-><init>()V

    invoke-virtual {p3, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string p1, ": Current activity does not support picture-in-picture."

    invoke-virtual {p3, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {p3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object p1

    invoke-direct {p2, p1}, Ljava/lang/IllegalStateException;-><init>(Ljava/lang/String;)V

    throw p2

    .line 9173
    :cond_3
    new-instance p3, Ljava/lang/IllegalStateException;

    new-instance v0, Ljava/lang/StringBuilder;

    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V

    invoke-virtual {v0, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string p1, ": Can\'t find activity for token="

    invoke-virtual {v0, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0, p2}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object p1

    invoke-direct {p3, p1}, Ljava/lang/IllegalStateException;-><init>(Ljava/lang/String;)V

    throw p3

    .line 9167
    :cond_4
    new-instance p2, Ljava/lang/IllegalStateException;

    new-instance p3, Ljava/lang/StringBuilder;

    invoke-direct {p3}, Ljava/lang/StringBuilder;-><init>()V

    invoke-virtual {p3, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string p1, ": Device doesn\'t support picture-in-picture mode."

    invoke-virtual {p3, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {p3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object p1

    invoke-direct {p2, p1}, Ljava/lang/IllegalStateException;-><init>(Ljava/lang/String;)V

    throw p2
.end method

.method private fillInProcMemInfo(Lcom/android/server/am/ProcessRecord;Landroid/app/ActivityManager$RunningAppProcessInfo;I)V
    .locals 2

    .line 16179
    iget v0, p1, Lcom/android/server/am/ProcessRecord;->pid:I

    iput v0, p2, Landroid/app/ActivityManager$RunningAppProcessInfo;->pid:I

    .line 16180
    iget-object v0, p1, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget v0, v0, Landroid/content/pm/ApplicationInfo;->uid:I

    iput v0, p2, Landroid/app/ActivityManager$RunningAppProcessInfo;->uid:I

    .line 16181
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mHeavyWeightProcess:Lcom/android/server/am/ProcessRecord;

    if-ne v0, p1, :cond_0

    .line 16182
    iget v0, p2, Landroid/app/ActivityManager$RunningAppProcessInfo;->flags:I

    or-int/lit8 v0, v0, 0x1

    iput v0, p2, Landroid/app/ActivityManager$RunningAppProcessInfo;->flags:I

    .line 16184
    :cond_0
    iget-boolean v0, p1, Lcom/android/server/am/ProcessRecord;->persistent:Z

    if-eqz v0, :cond_1

    .line 16185
    iget v0, p2, Landroid/app/ActivityManager$RunningAppProcessInfo;->flags:I

    or-int/lit8 v0, v0, 0x2

    iput v0, p2, Landroid/app/ActivityManager$RunningAppProcessInfo;->flags:I

    .line 16187
    :cond_1
    iget-object v0, p1, Lcom/android/server/am/ProcessRecord;->activities:Ljava/util/ArrayList;

    invoke-virtual {v0}, Ljava/util/ArrayList;->size()I

    move-result v0

    if-lez v0, :cond_2

    .line 16188
    iget v0, p2, Landroid/app/ActivityManager$RunningAppProcessInfo;->flags:I

    or-int/lit8 v0, v0, 0x4

    iput v0, p2, Landroid/app/ActivityManager$RunningAppProcessInfo;->flags:I

    .line 16190
    :cond_2
    iget v0, p1, Lcom/android/server/am/ProcessRecord;->trimMemoryLevel:I

    iput v0, p2, Landroid/app/ActivityManager$RunningAppProcessInfo;->lastTrimLevel:I

    .line 16191
    iget v0, p1, Lcom/android/server/am/ProcessRecord;->curAdj:I

    .line 16192
    iget v1, p1, Lcom/android/server/am/ProcessRecord;->curProcState:I

    .line 16193
    invoke-static {v1, v0, p2, p3}, Lcom/android/server/am/ActivityManagerService;->procStateToImportance(IILandroid/app/ActivityManager$RunningAppProcessInfo;I)I

    move-result p3

    iput p3, p2, Landroid/app/ActivityManager$RunningAppProcessInfo;->importance:I

    .line 16194
    iget p3, p1, Lcom/android/server/am/ProcessRecord;->adjTypeCode:I

    iput p3, p2, Landroid/app/ActivityManager$RunningAppProcessInfo;->importanceReasonCode:I

    .line 16195
    iget p1, p1, Lcom/android/server/am/ProcessRecord;->curProcState:I

    iput p1, p2, Landroid/app/ActivityManager$RunningAppProcessInfo;->processState:I

    .line 16196
    return-void
.end method

.method private findAppProcess(Landroid/os/IBinder;Ljava/lang/String;)Lcom/android/server/am/ProcessRecord;
    .locals 9

    .line 15902
    const/4 v0, 0x0

    if-nez p1, :cond_0

    .line 15903
    return-object v0

    .line 15906
    :cond_0
    monitor-enter p0

    :try_start_0
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    .line 15907
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mProcessNames:Lcom/android/internal/app/ProcessMap;

    invoke-virtual {v1}, Lcom/android/internal/app/ProcessMap;->getMap()Landroid/util/ArrayMap;

    move-result-object v1

    invoke-virtual {v1}, Landroid/util/ArrayMap;->size()I

    move-result v1

    .line 15908
    const/4 v2, 0x0

    move v3, v2

    :goto_0
    if-ge v3, v1, :cond_3

    .line 15909
    iget-object v4, p0, Lcom/android/server/am/ActivityManagerService;->mProcessNames:Lcom/android/internal/app/ProcessMap;

    invoke-virtual {v4}, Lcom/android/internal/app/ProcessMap;->getMap()Landroid/util/ArrayMap;

    move-result-object v4

    invoke-virtual {v4, v3}, Landroid/util/ArrayMap;->valueAt(I)Ljava/lang/Object;

    move-result-object v4

    check-cast v4, Landroid/util/SparseArray;

    .line 15910
    invoke-virtual {v4}, Landroid/util/SparseArray;->size()I

    move-result v5

    .line 15911
    move v6, v2

    :goto_1
    if-ge v6, v5, :cond_2

    .line 15912
    invoke-virtual {v4, v6}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;

    move-result-object v7

    check-cast v7, Lcom/android/server/am/ProcessRecord;

    .line 15913
    iget-object v8, v7, Lcom/android/server/am/ProcessRecord;->thread:Landroid/app/IApplicationThread;

    if-eqz v8, :cond_1

    iget-object v8, v7, Lcom/android/server/am/ProcessRecord;->thread:Landroid/app/IApplicationThread;

    invoke-interface {v8}, Landroid/app/IApplicationThread;->asBinder()Landroid/os/IBinder;

    move-result-object v8

    if-ne v8, p1, :cond_1

    .line 15914
    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    return-object v7

    .line 15911
    :cond_1
    add-int/lit8 v6, v6, 0x1

    goto :goto_1

    .line 15908
    :cond_2
    add-int/lit8 v3, v3, 0x1

    goto :goto_0

    .line 15919
    :cond_3
    :try_start_1
    const-string v1, "ActivityManager"

    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    const-string v3, "Can\'t find mystery application for "

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v2, p2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string p2, " from pid="

    invoke-virtual {v2, p2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 15920
    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result p2

    invoke-virtual {v2, p2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string p2, " uid="

    invoke-virtual {v2, p2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 15921
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result p2

    invoke-virtual {v2, p2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string p2, ": "

    invoke-virtual {v2, p2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v2, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object p1

    .line 15919
    invoke-static {v1, p1}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 15922
    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    return-object v0

    .line 15923
    :catchall_0
    move-exception p1

    :try_start_2
    monitor-exit p0
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw p1
.end method

.method private findOrCreateUriPermissionLocked(Ljava/lang/String;Ljava/lang/String;ILcom/android/server/am/ActivityManagerService$GrantUri;)Lcom/android/server/am/UriPermission;
    .locals 2
    .annotation build Lcom/android/internal/annotations/GuardedBy;
        value = "this"
    .end annotation

    .line 9706
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mGrantedUriPermissions:Landroid/util/SparseArray;

    invoke-virtual {v0, p3}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Landroid/util/ArrayMap;

    .line 9707
    if-nez v0, :cond_0

    .line 9708
    invoke-static {}, Lcom/google/android/collect/Maps;->newArrayMap()Landroid/util/ArrayMap;

    move-result-object v0

    .line 9709
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mGrantedUriPermissions:Landroid/util/SparseArray;

    invoke-virtual {v1, p3, v0}, Landroid/util/SparseArray;->put(ILjava/lang/Object;)V

    .line 9712
    :cond_0
    invoke-virtual {v0, p4}, Landroid/util/ArrayMap;->get(Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object v1

    check-cast v1, Lcom/android/server/am/UriPermission;

    .line 9713
    if-nez v1, :cond_1

    .line 9714
    new-instance v1, Lcom/android/server/am/UriPermission;

    invoke-direct {v1, p1, p2, p3, p4}, Lcom/android/server/am/UriPermission;-><init>(Ljava/lang/String;Ljava/lang/String;ILcom/android/server/am/ActivityManagerService$GrantUri;)V

    .line 9715
    invoke-virtual {v0, p4, v1}, Landroid/util/ArrayMap;->put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    .line 9718
    :cond_1
    return-object v1
.end method

.method private findProcessLocked(Ljava/lang/String;ILjava/lang/String;)Lcom/android/server/am/ProcessRecord;
    .locals 9

    .line 26368
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mUserController:Lcom/android/server/am/UserController;

    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result v1

    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v2

    const/4 v4, 0x1

    const/4 v5, 0x2

    const/4 v7, 0x0

    move v3, p2

    move-object v6, p3

    invoke-virtual/range {v0 .. v7}, Lcom/android/server/am/UserController;->handleIncomingUser(IIIZILjava/lang/String;Ljava/lang/String;)I

    move-result p2

    .line 26370
    nop

    .line 26372
    const/4 p3, 0x0

    :try_start_0
    invoke-static {p1}, Ljava/lang/Integer;->parseInt(Ljava/lang/String;)I

    move-result v0

    .line 26373
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Landroid/util/SparseArray;

    monitor-enter v1
    :try_end_0
    .catch Ljava/lang/NumberFormatException; {:try_start_0 .. :try_end_0} :catch_0

    .line 26374
    :try_start_1
    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Landroid/util/SparseArray;

    invoke-virtual {v2, v0}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Lcom/android/server/am/ProcessRecord;
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_1

    .line 26375
    :try_start_2
    monitor-exit v1
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    .line 26377
    goto :goto_1

    .line 26375
    :catchall_0
    move-exception p3

    move-object v8, v0

    move-object v0, p3

    move-object p3, v8

    goto :goto_0

    :catchall_1
    move-exception v0

    :goto_0
    :try_start_3
    monitor-exit v1
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_1

    :try_start_4
    throw v0
    :try_end_4
    .catch Ljava/lang/NumberFormatException; {:try_start_4 .. :try_end_4} :catch_0

    .line 26376
    :catch_0
    move-exception v0

    move-object v0, p3

    .line 26379
    :goto_1
    if-nez v0, :cond_1

    .line 26380
    iget-object p3, p0, Lcom/android/server/am/ActivityManagerService;->mProcessNames:Lcom/android/internal/app/ProcessMap;

    .line 26381
    invoke-virtual {p3}, Lcom/android/internal/app/ProcessMap;->getMap()Landroid/util/ArrayMap;

    move-result-object p3

    .line 26382
    invoke-virtual {p3, p1}, Landroid/util/ArrayMap;->get(Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object p1

    check-cast p1, Landroid/util/SparseArray;

    .line 26383
    if-eqz p1, :cond_1

    invoke-virtual {p1}, Landroid/util/SparseArray;->size()I

    move-result p3

    if-lez p3, :cond_1

    .line 26384
    const/4 p3, 0x0

    invoke-virtual {p1, p3}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;

    move-result-object p3

    move-object v0, p3

    check-cast v0, Lcom/android/server/am/ProcessRecord;

    .line 26385
    const/4 p3, -0x1

    if-eq p2, p3, :cond_1

    iget p3, v0, Lcom/android/server/am/ProcessRecord;->userId:I

    if-eq p3, p2, :cond_1

    .line 26386
    const/4 p3, 0x1

    :goto_2
    invoke-virtual {p1}, Landroid/util/SparseArray;->size()I

    move-result v1

    if-ge p3, v1, :cond_1

    .line 26387
    invoke-virtual {p1, p3}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;

    move-result-object v1

    check-cast v1, Lcom/android/server/am/ProcessRecord;

    .line 26388
    iget v2, v1, Lcom/android/server/am/ProcessRecord;->userId:I

    if-ne v2, p2, :cond_0

    .line 26389
    nop

    .line 26390
    nop

    .line 26397
    move-object v0, v1

    goto :goto_3

    .line 26386
    :cond_0
    add-int/lit8 p3, p3, 0x1

    goto :goto_2

    .line 26397
    :cond_1
    :goto_3
    return-object v0
.end method

.method private findUriPermissionLocked(ILcom/android/server/am/ActivityManagerService$GrantUri;)Lcom/android/server/am/UriPermission;
    .locals 1
    .annotation build Lcom/android/internal/annotations/GuardedBy;
        value = "this"
    .end annotation

    .line 9696
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mGrantedUriPermissions:Landroid/util/SparseArray;

    invoke-virtual {v0, p1}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    move-result-object p1

    check-cast p1, Landroid/util/ArrayMap;

    .line 9697
    if-eqz p1, :cond_0

    .line 9698
    invoke-virtual {p1, p2}, Landroid/util/ArrayMap;->get(Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object p1

    check-cast p1, Lcom/android/server/am/UriPermission;

    return-object p1

    .line 9700
    :cond_0
    const/4 p1, 0x0

    return-object p1
.end method

.method private finishForceStopPackageLocked(Ljava/lang/String;I)V
    .locals 18
    .annotation build Lcom/android/internal/annotations/GuardedBy;
        value = "this"
    .end annotation

    .line 7247
    new-instance v3, Landroid/content/Intent;

    const-string v0, "android.intent.action.PACKAGE_RESTARTED"

    const-string/jumbo v1, "package"

    .line 7248
    const/4 v2, 0x0

    move-object/from16 v4, p1

    invoke-static {v1, v4, v2}, Landroid/net/Uri;->fromParts(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Landroid/net/Uri;

    move-result-object v1

    invoke-direct {v3, v0, v1}, Landroid/content/Intent;-><init>(Ljava/lang/String;Landroid/net/Uri;)V

    .line 7249
    move-object/from16 v0, p0

    iget-boolean v1, v0, Lcom/android/server/am/ActivityManagerService;->mProcessesReady:Z

    if-nez v1, :cond_0

    .line 7250
    const/high16 v1, 0x50000000

    invoke-virtual {v3, v1}, Landroid/content/Intent;->addFlags(I)Landroid/content/Intent;

    .line 7253
    :cond_0
    const-string v1, "android.intent.extra.UID"

    move/from16 v2, p2

    invoke-virtual {v3, v1, v2}, Landroid/content/Intent;->putExtra(Ljava/lang/String;I)Landroid/content/Intent;

    .line 7254
    const-string v1, "android.intent.extra.user_handle"

    invoke-static/range {p2 .. p2}, Landroid/os/UserHandle;->getUserId(I)I

    move-result v4

    invoke-virtual {v3, v1, v4}, Landroid/content/Intent;->putExtra(Ljava/lang/String;I)Landroid/content/Intent;

    .line 7255
    const/4 v1, 0x0

    const/4 v4, 0x0

    const/4 v5, 0x0

    const/4 v6, 0x0

    const/4 v7, 0x0

    const/4 v8, 0x0

    const/4 v9, 0x0

    const/4 v10, 0x0

    const/4 v11, -0x1

    const/4 v12, 0x0

    const/4 v13, 0x0

    const/4 v14, 0x0

    sget v15, Lcom/android/server/am/ActivityManagerService;->MY_PID:I

    const/16 v16, 0x3e8

    .line 7257
    invoke-static/range {p2 .. p2}, Landroid/os/UserHandle;->getUserId(I)I

    move-result v17

    .line 7255
    move-object v2, v4

    move-object v4, v5

    move-object v5, v6

    move v6, v7

    move-object v7, v8

    move-object v8, v9

    move-object v9, v10

    move v10, v11

    move-object v11, v12

    move v12, v13

    move v13, v14

    move v14, v15

    move/from16 v15, v16

    move/from16 v16, v17

    invoke-virtual/range {v0 .. v16}, Lcom/android/server/am/ActivityManagerService;->broadcastIntentLocked(Lcom/android/server/am/ProcessRecord;Ljava/lang/String;Landroid/content/Intent;Ljava/lang/String;Landroid/content/IIntentReceiver;ILjava/lang/String;Landroid/os/Bundle;[Ljava/lang/String;ILandroid/os/Bundle;ZZIII)I

    .line 7258
    return-void
.end method

.method private forceStopPackageLocked(Ljava/lang/String;ILjava/lang/String;)V
    .locals 10
    .annotation build Lcom/android/internal/annotations/GuardedBy;
        value = "this"
    .end annotation

    .line 7241
    invoke-static {p2}, Landroid/os/UserHandle;->getAppId(I)I

    move-result v2

    .line 7242
    invoke-static {p2}, Landroid/os/UserHandle;->getUserId(I)I

    move-result v8

    .line 7241
    const/4 v3, 0x0

    const/4 v4, 0x0

    const/4 v5, 0x1

    const/4 v6, 0x0

    const/4 v7, 0x0

    move-object v0, p0

    move-object v1, p1

    move-object v9, p3

    invoke-virtual/range {v0 .. v9}, Lcom/android/server/am/ActivityManagerService;->forceStopPackageLocked(Ljava/lang/String;IZZZZZILjava/lang/String;)Z

    .line 7243
    return-void
.end method

.method private final generateApplicationProvidersLocked(Lcom/android/server/am/ProcessRecord;)Ljava/util/List;
    .locals 13
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "(",
            "Lcom/android/server/am/ProcessRecord;",
            ")",
            "Ljava/util/List<",
            "Landroid/content/pm/ProviderInfo;",
            ">;"
        }
    .end annotation

    .line 12061
    nop

    .line 12063
    const/4 v0, 0x0

    :try_start_0
    invoke-static {}, Landroid/app/AppGlobals;->getPackageManager()Landroid/content/pm/IPackageManager;

    move-result-object v1

    iget-object v2, p1, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;

    iget v3, p1, Lcom/android/server/am/ProcessRecord;->uid:I

    const v4, 0x10000c00

    .line 12064
    invoke-interface {v1, v2, v3, v4, v0}, Landroid/content/pm/IPackageManager;->queryContentProviders(Ljava/lang/String;IILjava/lang/String;)Landroid/content/pm/ParceledListSlice;

    move-result-object v1

    .line 12067
    invoke-virtual {v1}, Landroid/content/pm/ParceledListSlice;->getList()Ljava/util/List;

    move-result-object v1
    :try_end_0
    .catch Landroid/os/RemoteException; {:try_start_0 .. :try_end_0} :catch_0

    .line 12069
    nop

    .line 12072
    move-object v0, v1

    goto :goto_0

    .line 12068
    :catch_0
    move-exception v1

    .line 12072
    :goto_0
    iget v1, p1, Lcom/android/server/am/ProcessRecord;->userId:I

    .line 12073
    if-eqz v0, :cond_4

    .line 12074
    invoke-interface {v0}, Ljava/util/List;->size()I

    move-result v2

    .line 12075
    iget-object v3, p1, Lcom/android/server/am/ProcessRecord;->pubProviders:Landroid/util/ArrayMap;

    iget-object v4, p1, Lcom/android/server/am/ProcessRecord;->pubProviders:Landroid/util/ArrayMap;

    invoke-virtual {v4}, Landroid/util/ArrayMap;->size()I

    move-result v4

    add-int/2addr v4, v2

    invoke-virtual {v3, v4}, Landroid/util/ArrayMap;->ensureCapacity(I)V

    .line 12076
    const/4 v3, 0x0

    :goto_1
    if-ge v3, v2, :cond_4

    .line 12078
    nop

    .line 12079
    invoke-interface {v0, v3}, Ljava/util/List;->get(I)Ljava/lang/Object;

    move-result-object v4

    check-cast v4, Landroid/content/pm/ProviderInfo;

    .line 12080
    iget-object v5, v4, Landroid/content/pm/ProviderInfo;->processName:Ljava/lang/String;

    iget-object v6, v4, Landroid/content/pm/ProviderInfo;->applicationInfo:Landroid/content/pm/ApplicationInfo;

    iget-object v7, v4, Landroid/content/pm/ProviderInfo;->name:Ljava/lang/String;

    iget v8, v4, Landroid/content/pm/ProviderInfo;->flags:I

    invoke-virtual {p0, v5, v6, v7, v8}, Lcom/android/server/am/ActivityManagerService;->isSingleton(Ljava/lang/String;Landroid/content/pm/ApplicationInfo;Ljava/lang/String;I)Z

    move-result v10

    .line 12082
    if-eqz v10, :cond_0

    iget v5, p1, Lcom/android/server/am/ProcessRecord;->uid:I

    invoke-static {v5}, Landroid/os/UserHandle;->getUserId(I)I

    move-result v5

    if-eqz v5, :cond_0

    .line 12087
    invoke-interface {v0, v3}, Ljava/util/List;->remove(I)Ljava/lang/Object;

    .line 12088
    add-int/lit8 v2, v2, -0x1

    .line 12089
    add-int/lit8 v3, v3, -0x1

    .line 12090
    goto :goto_3

    .line 12093
    :cond_0
    new-instance v11, Landroid/content/ComponentName;

    iget-object v5, v4, Landroid/content/pm/ProviderInfo;->packageName:Ljava/lang/String;

    iget-object v6, v4, Landroid/content/pm/ProviderInfo;->name:Ljava/lang/String;

    invoke-direct {v11, v5, v6}, Landroid/content/ComponentName;-><init>(Ljava/lang/String;Ljava/lang/String;)V

    .line 12094
    iget-object v5, p0, Lcom/android/server/am/ActivityManagerService;->mProviderMap:Lcom/android/server/am/ProviderMap;

    invoke-virtual {v5, v11, v1}, Lcom/android/server/am/ProviderMap;->getProviderByClass(Landroid/content/ComponentName;I)Lcom/android/server/am/ContentProviderRecord;

    move-result-object v5

    .line 12095
    if-nez v5, :cond_1

    .line 12096
    new-instance v12, Lcom/android/server/am/ContentProviderRecord;

    iget-object v8, p1, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    move-object v5, v12

    move-object v6, p0

    move-object v7, v4

    move-object v9, v11

    invoke-direct/range {v5 .. v10}, Lcom/android/server/am/ContentProviderRecord;-><init>(Lcom/android/server/am/ActivityManagerService;Landroid/content/pm/ProviderInfo;Landroid/content/pm/ApplicationInfo;Landroid/content/ComponentName;Z)V

    .line 12097
    iget-object v5, p0, Lcom/android/server/am/ActivityManagerService;->mProviderMap:Lcom/android/server/am/ProviderMap;

    invoke-virtual {v5, v11, v12}, Lcom/android/server/am/ProviderMap;->putProviderByClass(Landroid/content/ComponentName;Lcom/android/server/am/ContentProviderRecord;)V

    goto :goto_2

    .line 12101
    :cond_1
    move-object v12, v5

    :goto_2
    iget-object v5, p1, Lcom/android/server/am/ProcessRecord;->pubProviders:Landroid/util/ArrayMap;

    iget-object v6, v4, Landroid/content/pm/ProviderInfo;->name:Ljava/lang/String;

    invoke-virtual {v5, v6, v12}, Landroid/util/ArrayMap;->put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    .line 12102
    iget-boolean v5, v4, Landroid/content/pm/ProviderInfo;->multiprocess:Z

    if-eqz v5, :cond_2

    const-string v5, "android"

    iget-object v6, v4, Landroid/content/pm/ProviderInfo;->packageName:Ljava/lang/String;

    invoke-virtual {v5, v6}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v5

    if-nez v5, :cond_3

    .line 12107
    :cond_2
    iget-object v5, v4, Landroid/content/pm/ProviderInfo;->applicationInfo:Landroid/content/pm/ApplicationInfo;

    iget-object v5, v5, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;

    iget-object v6, v4, Landroid/content/pm/ProviderInfo;->applicationInfo:Landroid/content/pm/ApplicationInfo;

    iget v6, v6, Landroid/content/pm/ApplicationInfo;->versionCode:I

    int-to-long v6, v6

    iget-object v8, p0, Lcom/android/server/am/ActivityManagerService;->mProcessStats:Lcom/android/server/am/ProcessStatsService;

    invoke-virtual {p1, v5, v6, v7, v8}, Lcom/android/server/am/ProcessRecord;->addPackage(Ljava/lang/String;JLcom/android/server/am/ProcessStatsService;)Z

    .line 12110
    :cond_3
    iget-object v4, v4, Landroid/content/pm/ProviderInfo;->applicationInfo:Landroid/content/pm/ApplicationInfo;

    iget-object v4, v4, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;

    const/4 v5, 0x4

    invoke-virtual {p0, v4, v5}, Lcom/android/server/am/ActivityManagerService;->notifyPackageUse(Ljava/lang/String;I)V

    .line 12076
    :goto_3
    add-int/lit8 v3, v3, 0x1

    goto :goto_1

    .line 12114
    :cond_4
    return-object v0
.end method

.method private getAppId(Ljava/lang/String;)I
    .locals 2

    .line 16952
    if-eqz p1, :cond_0

    .line 16954
    :try_start_0
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mContext:Landroid/content/Context;

    invoke-virtual {v0}, Landroid/content/Context;->getPackageManager()Landroid/content/pm/PackageManager;

    move-result-object v0

    const/4 v1, 0x0

    invoke-virtual {v0, p1, v1}, Landroid/content/pm/PackageManager;->getApplicationInfo(Ljava/lang/String;I)Landroid/content/pm/ApplicationInfo;

    move-result-object p1

    .line 16956
    iget p1, p1, Landroid/content/pm/ApplicationInfo;->uid:I

    invoke-static {p1}, Landroid/os/UserHandle;->getAppId(I)I

    move-result p1
    :try_end_0
    .catch Landroid/content/pm/PackageManager$NameNotFoundException; {:try_start_0 .. :try_end_0} :catch_0

    return p1

    .line 16957
    :catch_0
    move-exception p1

    .line 16958
    invoke-virtual {p1}, Landroid/content/pm/PackageManager$NameNotFoundException;->printStackTrace()V

    .line 16961
    :cond_0
    const/4 p1, -0x1

    return p1
.end method

.method private getBackgroundLaunchBroadcasts()Landroid/util/ArraySet;
    .locals 1
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "()",
            "Landroid/util/ArraySet<",
            "Ljava/lang/String;",
            ">;"
        }
    .end annotation

    .line 3367
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mBackgroundLaunchBroadcasts:Landroid/util/ArraySet;

    if-nez v0, :cond_0

    .line 3368
    invoke-static {}, Lcom/android/server/SystemConfig;->getInstance()Lcom/android/server/SystemConfig;

    move-result-object v0

    invoke-virtual {v0}, Lcom/android/server/SystemConfig;->getAllowImplicitBroadcasts()Landroid/util/ArraySet;

    move-result-object v0

    iput-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mBackgroundLaunchBroadcasts:Landroid/util/ArraySet;

    .line 3370
    :cond_0
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mBackgroundLaunchBroadcasts:Landroid/util/ArraySet;

    return-object v0
.end method

.method private getCallingRecordLocked(Landroid/os/IBinder;)Lcom/android/server/am/ActivityRecord;
    .locals 0

    .line 8465
    invoke-static {p1}, Lcom/android/server/am/ActivityRecord;->isInStackLocked(Landroid/os/IBinder;)Lcom/android/server/am/ActivityRecord;

    move-result-object p1

    .line 8466
    if-nez p1, :cond_0

    .line 8467
    const/4 p1, 0x0

    return-object p1

    .line 8469
    :cond_0
    iget-object p1, p1, Lcom/android/server/am/ActivityRecord;->resultTo:Lcom/android/server/am/ActivityRecord;

    return-object p1
.end method

.method private getCommonServicesLocked(Z)Landroid/util/ArrayMap;
    .locals 1
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "(Z)",
            "Landroid/util/ArrayMap<",
            "Ljava/lang/String;",
            "Landroid/os/IBinder;",
            ">;"
        }
    .end annotation

    .line 3567
    if-eqz p1, :cond_1

    .line 3568
    iget-object p1, p0, Lcom/android/server/am/ActivityManagerService;->mIsolatedAppBindArgs:Landroid/util/ArrayMap;

    if-nez p1, :cond_0

    .line 3569
    new-instance p1, Landroid/util/ArrayMap;

    const/4 v0, 0x1

    invoke-direct {p1, v0}, Landroid/util/ArrayMap;-><init>(I)V

    iput-object p1, p0, Lcom/android/server/am/ActivityManagerService;->mIsolatedAppBindArgs:Landroid/util/ArrayMap;

    .line 3570
    iget-object p1, p0, Lcom/android/server/am/ActivityManagerService;->mIsolatedAppBindArgs:Landroid/util/ArrayMap;

    const-string/jumbo v0, "package"

    invoke-static {p1, v0}, Lcom/android/server/am/ActivityManagerService;->addServiceToMap(Landroid/util/ArrayMap;Ljava/lang/String;)V

    .line 3572
    :cond_0
    iget-object p1, p0, Lcom/android/server/am/ActivityManagerService;->mIsolatedAppBindArgs:Landroid/util/ArrayMap;

    return-object p1

    .line 3575
    :cond_1
    iget-object p1, p0, Lcom/android/server/am/ActivityManagerService;->mAppBindArgs:Landroid/util/ArrayMap;

    if-nez p1, :cond_2

    .line 3576
    new-instance p1, Landroid/util/ArrayMap;

    invoke-direct {p1}, Landroid/util/ArrayMap;-><init>()V

    iput-object p1, p0, Lcom/android/server/am/ActivityManagerService;->mAppBindArgs:Landroid/util/ArrayMap;

    .line 3581
    iget-object p1, p0, Lcom/android/server/am/ActivityManagerService;->mAppBindArgs:Landroid/util/ArrayMap;

    const-string/jumbo v0, "package"

    invoke-static {p1, v0}, Lcom/android/server/am/ActivityManagerService;->addServiceToMap(Landroid/util/ArrayMap;Ljava/lang/String;)V

    .line 3582
    iget-object p1, p0, Lcom/android/server/am/ActivityManagerService;->mAppBindArgs:Landroid/util/ArrayMap;

    const-string/jumbo v0, "window"

    invoke-static {p1, v0}, Lcom/android/server/am/ActivityManagerService;->addServiceToMap(Landroid/util/ArrayMap;Ljava/lang/String;)V

    .line 3583
    iget-object p1, p0, Lcom/android/server/am/ActivityManagerService;->mAppBindArgs:Landroid/util/ArrayMap;

    const-string v0, "alarm"

    invoke-static {p1, v0}, Lcom/android/server/am/ActivityManagerService;->addServiceToMap(Landroid/util/ArrayMap;Ljava/lang/String;)V

    .line 3584
    iget-object p1, p0, Lcom/android/server/am/ActivityManagerService;->mAppBindArgs:Landroid/util/ArrayMap;

    const-string v0, "display"

    invoke-static {p1, v0}, Lcom/android/server/am/ActivityManagerService;->addServiceToMap(Landroid/util/ArrayMap;Ljava/lang/String;)V

    .line 3585
    iget-object p1, p0, Lcom/android/server/am/ActivityManagerService;->mAppBindArgs:Landroid/util/ArrayMap;

    const-string v0, "network_management"

    invoke-static {p1, v0}, Lcom/android/server/am/ActivityManagerService;->addServiceToMap(Landroid/util/ArrayMap;Ljava/lang/String;)V

    .line 3586
    iget-object p1, p0, Lcom/android/server/am/ActivityManagerService;->mAppBindArgs:Landroid/util/ArrayMap;

    const-string v0, "connectivity"

    invoke-static {p1, v0}, Lcom/android/server/am/ActivityManagerService;->addServiceToMap(Landroid/util/ArrayMap;Ljava/lang/String;)V

    .line 3587
    iget-object p1, p0, Lcom/android/server/am/ActivityManagerService;->mAppBindArgs:Landroid/util/ArrayMap;

    const-string v0, "accessibility"

    invoke-static {p1, v0}, Lcom/android/server/am/ActivityManagerService;->addServiceToMap(Landroid/util/ArrayMap;Ljava/lang/String;)V

    .line 3588
    iget-object p1, p0, Lcom/android/server/am/ActivityManagerService;->mAppBindArgs:Landroid/util/ArrayMap;

    const-string v0, "input_method"

    invoke-static {p1, v0}, Lcom/android/server/am/ActivityManagerService;->addServiceToMap(Landroid/util/ArrayMap;Ljava/lang/String;)V

    .line 3589
    iget-object p1, p0, Lcom/android/server/am/ActivityManagerService;->mAppBindArgs:Landroid/util/ArrayMap;

    const-string v0, "input"

    invoke-static {p1, v0}, Lcom/android/server/am/ActivityManagerService;->addServiceToMap(Landroid/util/ArrayMap;Ljava/lang/String;)V

    .line 3590
    iget-object p1, p0, Lcom/android/server/am/ActivityManagerService;->mAppBindArgs:Landroid/util/ArrayMap;

    const-string v0, "graphicsstats"

    invoke-static {p1, v0}, Lcom/android/server/am/ActivityManagerService;->addServiceToMap(Landroid/util/ArrayMap;Ljava/lang/String;)V

    .line 3591
    iget-object p1, p0, Lcom/android/server/am/ActivityManagerService;->mAppBindArgs:Landroid/util/ArrayMap;

    const-string v0, "appops"

    invoke-static {p1, v0}, Lcom/android/server/am/ActivityManagerService;->addServiceToMap(Landroid/util/ArrayMap;Ljava/lang/String;)V

    .line 3592
    iget-object p1, p0, Lcom/android/server/am/ActivityManagerService;->mAppBindArgs:Landroid/util/ArrayMap;

    const-string v0, "content"

    invoke-static {p1, v0}, Lcom/android/server/am/ActivityManagerService;->addServiceToMap(Landroid/util/ArrayMap;Ljava/lang/String;)V

    .line 3593
    iget-object p1, p0, Lcom/android/server/am/ActivityManagerService;->mAppBindArgs:Landroid/util/ArrayMap;

    const-string v0, "jobscheduler"

    invoke-static {p1, v0}, Lcom/android/server/am/ActivityManagerService;->addServiceToMap(Landroid/util/ArrayMap;Ljava/lang/String;)V

    .line 3594
    iget-object p1, p0, Lcom/android/server/am/ActivityManagerService;->mAppBindArgs:Landroid/util/ArrayMap;

    const-string v0, "notification"

    invoke-static {p1, v0}, Lcom/android/server/am/ActivityManagerService;->addServiceToMap(Landroid/util/ArrayMap;Ljava/lang/String;)V

    .line 3595
    iget-object p1, p0, Lcom/android/server/am/ActivityManagerService;->mAppBindArgs:Landroid/util/ArrayMap;

    const-string/jumbo v0, "vibrator"

    invoke-static {p1, v0}, Lcom/android/server/am/ActivityManagerService;->addServiceToMap(Landroid/util/ArrayMap;Ljava/lang/String;)V

    .line 3596
    iget-object p1, p0, Lcom/android/server/am/ActivityManagerService;->mAppBindArgs:Landroid/util/ArrayMap;

    const-string v0, "account"

    invoke-static {p1, v0}, Lcom/android/server/am/ActivityManagerService;->addServiceToMap(Landroid/util/ArrayMap;Ljava/lang/String;)V

    .line 3597
    iget-object p1, p0, Lcom/android/server/am/ActivityManagerService;->mAppBindArgs:Landroid/util/ArrayMap;

    const-string/jumbo v0, "power"

    invoke-static {p1, v0}, Lcom/android/server/am/ActivityManagerService;->addServiceToMap(Landroid/util/ArrayMap;Ljava/lang/String;)V

    .line 3598
    iget-object p1, p0, Lcom/android/server/am/ActivityManagerService;->mAppBindArgs:Landroid/util/ArrayMap;

    const-string/jumbo v0, "user"

    invoke-static {p1, v0}, Lcom/android/server/am/ActivityManagerService;->addServiceToMap(Landroid/util/ArrayMap;Ljava/lang/String;)V

    .line 3599
    iget-object p1, p0, Lcom/android/server/am/ActivityManagerService;->mAppBindArgs:Landroid/util/ArrayMap;

    const-string v0, "mount"

    invoke-static {p1, v0}, Lcom/android/server/am/ActivityManagerService;->addServiceToMap(Landroid/util/ArrayMap;Ljava/lang/String;)V

    .line 3601
    :cond_2
    iget-object p1, p0, Lcom/android/server/am/ActivityManagerService;->mAppBindArgs:Landroid/util/ArrayMap;

    return-object p1
.end method

.method private getContentProviderExternalUnchecked(Ljava/lang/String;Landroid/os/IBinder;I)Landroid/app/ContentProviderHolder;
    .locals 6

    .line 12871
    const/4 v1, 0x0

    const/4 v4, 0x1

    move-object v0, p0

    move-object v2, p1

    move-object v3, p2

    move v5, p3

    invoke-direct/range {v0 .. v5}, Lcom/android/server/am/ActivityManagerService;->getContentProviderImpl(Landroid/app/IApplicationThread;Ljava/lang/String;Landroid/os/IBinder;ZI)Landroid/app/ContentProviderHolder;

    move-result-object p1

    return-object p1
.end method

.method private getContentProviderImpl(Landroid/app/IApplicationThread;Ljava/lang/String;Landroid/os/IBinder;ZI)Landroid/app/ContentProviderHolder;
    .locals 28

    move-object/from16 v11, p0

    move-object/from16 v0, p1

    move-object/from16 v12, p2

    move-object/from16 v13, p3

    move/from16 v14, p4

    .line 12382
    move/from16 v1, p5

    .line 12383
    nop

    .line 12384
    nop

    .line 12386
    monitor-enter p0

    :try_start_0
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    .line 12387
    invoke-static {}, Landroid/os/SystemClock;->uptimeMillis()J

    move-result-wide v9

    .line 12389
    nop

    .line 12390
    const/4 v15, 0x0

    if-eqz v0, :cond_1

    .line 12391
    invoke-virtual/range {p0 .. p1}, Lcom/android/server/am/ActivityManagerService;->getRecordForAppLocked(Landroid/app/IApplicationThread;)Lcom/android/server/am/ProcessRecord;

    move-result-object v2

    .line 12392
    if-eqz v2, :cond_0

    .line 12400
    move-object v8, v2

    goto :goto_0

    .line 12393
    :cond_0
    new-instance v1, Ljava/lang/SecurityException;

    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    const-string v3, "Unable to find app for caller "

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v2, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    const-string v0, " (pid="

    invoke-virtual {v2, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 12395
    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result v0

    invoke-virtual {v2, v0}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v0, ") when getting content provider "

    invoke-virtual {v2, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v2, v12}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    invoke-direct {v1, v0}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v1

    .line 12400
    :cond_1
    move-object v8, v15

    .line 12402
    :goto_0
    const-string v0, "getContentProviderImpl: getProviderByName"

    invoke-direct {v11, v9, v10, v0}, Lcom/android/server/am/ActivityManagerService;->checkTime(JLjava/lang/String;)V

    .line 12405
    iget-object v0, v11, Lcom/android/server/am/ActivityManagerService;->mProviderMap:Lcom/android/server/am/ProviderMap;

    invoke-virtual {v0, v12, v1}, Lcom/android/server/am/ProviderMap;->getProviderByName(Ljava/lang/String;I)Lcom/android/server/am/ContentProviderRecord;

    move-result-object v0

    .line 12408
    const/4 v7, 0x1

    const/4 v6, 0x0

    if-nez v0, :cond_3

    if-eqz v1, :cond_3

    .line 12409
    iget-object v0, v11, Lcom/android/server/am/ActivityManagerService;->mProviderMap:Lcom/android/server/am/ProviderMap;

    invoke-virtual {v0, v12, v6}, Lcom/android/server/am/ProviderMap;->getProviderByName(Ljava/lang/String;I)Lcom/android/server/am/ContentProviderRecord;

    move-result-object v0

    .line 12410
    if-eqz v0, :cond_3

    .line 12411
    iget-object v2, v0, Lcom/android/server/am/ContentProviderRecord;->info:Landroid/content/pm/ProviderInfo;

    .line 12412
    iget-object v3, v2, Landroid/content/pm/ProviderInfo;->processName:Ljava/lang/String;

    iget-object v4, v2, Landroid/content/pm/ProviderInfo;->applicationInfo:Landroid/content/pm/ApplicationInfo;

    iget-object v5, v2, Landroid/content/pm/ProviderInfo;->name:Ljava/lang/String;

    iget v6, v2, Landroid/content/pm/ProviderInfo;->flags:I

    invoke-virtual {v11, v3, v4, v5, v6}, Lcom/android/server/am/ActivityManagerService;->isSingleton(Ljava/lang/String;Landroid/content/pm/ApplicationInfo;Ljava/lang/String;I)Z

    move-result v3

    if-eqz v3, :cond_2

    iget v3, v8, Lcom/android/server/am/ProcessRecord;->uid:I

    iget-object v4, v2, Landroid/content/pm/ProviderInfo;->applicationInfo:Landroid/content/pm/ApplicationInfo;

    iget v4, v4, Landroid/content/pm/ApplicationInfo;->uid:I

    .line 12414
    invoke-virtual {v11, v3, v4}, Lcom/android/server/am/ActivityManagerService;->isValidSingletonCall(II)Z

    move-result v3

    if-eqz v3, :cond_2

    .line 12415
    nop

    .line 12416
    nop

    .line 12424
    move-object v1, v0

    const/4 v0, 0x0

    const/4 v6, 0x0

    goto :goto_1

    .line 12418
    :cond_2
    nop

    .line 12419
    nop

    .line 12424
    move v6, v1

    move v0, v7

    move-object v1, v15

    move-object v2, v1

    goto :goto_1

    :cond_3
    move v6, v1

    move-object v2, v15

    move-object v1, v0

    move v0, v7

    :goto_1
    if-eqz v1, :cond_4

    iget-object v3, v1, Lcom/android/server/am/ContentProviderRecord;->proc:Lcom/android/server/am/ProcessRecord;

    if-eqz v3, :cond_4

    .line 12425
    iget-object v3, v1, Lcom/android/server/am/ContentProviderRecord;->proc:Lcom/android/server/am/ProcessRecord;

    iget-boolean v3, v3, Lcom/android/server/am/ProcessRecord;->killed:Z

    .line 12432
    xor-int/2addr v3, v7

    iget-object v4, v1, Lcom/android/server/am/ContentProviderRecord;->proc:Lcom/android/server/am/ProcessRecord;

    iget-boolean v4, v4, Lcom/android/server/am/ProcessRecord;->killed:Z

    if-eqz v4, :cond_5

    iget-object v4, v1, Lcom/android/server/am/ContentProviderRecord;->proc:Lcom/android/server/am/ProcessRecord;

    iget-boolean v4, v4, Lcom/android/server/am/ProcessRecord;->killedByAm:Z

    if-eqz v4, :cond_5

    .line 12433
    const-string v4, "getContentProviderImpl: before appDied (killedByAm)"

    invoke-direct {v11, v9, v10, v4}, Lcom/android/server/am/ActivityManagerService;->checkTime(JLjava/lang/String;)V

    .line 12434
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v4
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_8

    .line 12436
    :try_start_1
    iget-object v7, v1, Lcom/android/server/am/ContentProviderRecord;->proc:Lcom/android/server/am/ProcessRecord;

    invoke-virtual {v11, v7}, Lcom/android/server/am/ActivityManagerService;->appDiedLocked(Lcom/android/server/am/ProcessRecord;)V
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 12438
    :try_start_2
    invoke-static {v4, v5}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 12439
    nop

    .line 12440
    const-string v4, "getContentProviderImpl: after appDied (killedByAm)"

    invoke-direct {v11, v9, v10, v4}, Lcom/android/server/am/ActivityManagerService;->checkTime(JLjava/lang/String;)V

    goto :goto_2

    .line 12438
    :catchall_0
    move-exception v0

    invoke-static {v4, v5}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    throw v0

    .line 12444
    :cond_4
    const/4 v3, 0x0

    :cond_5
    :goto_2
    if-eqz v3, :cond_d

    .line 12445
    iget-object v2, v1, Lcom/android/server/am/ContentProviderRecord;->info:Landroid/content/pm/ProviderInfo;

    .line 12447
    const-string v4, "getContentProviderImpl: before checkContentProviderPermission"

    invoke-direct {v11, v9, v10, v4}, Lcom/android/server/am/ActivityManagerService;->checkTime(JLjava/lang/String;)V

    .line 12448
    invoke-direct {v11, v2, v8, v6, v0}, Lcom/android/server/am/ActivityManagerService;->checkContentProviderPermissionLocked(Landroid/content/pm/ProviderInfo;Lcom/android/server/am/ProcessRecord;IZ)Ljava/lang/String;

    move-result-object v0

    if-nez v0, :cond_c

    .line 12452
    const-string v0, "getContentProviderImpl: after checkContentProviderPermission"

    invoke-direct {v11, v9, v10, v0}, Lcom/android/server/am/ActivityManagerService;->checkTime(JLjava/lang/String;)V

    .line 12454
    if-eqz v8, :cond_6

    invoke-virtual {v1, v8}, Lcom/android/server/am/ContentProviderRecord;->canRunHere(Lcom/android/server/am/ProcessRecord;)Z

    move-result v0

    if-eqz v0, :cond_6

    .line 12459
    invoke-virtual {v1, v15}, Lcom/android/server/am/ContentProviderRecord;->newHolder(Lcom/android/server/am/ContentProviderConnection;)Landroid/app/ContentProviderHolder;

    move-result-object v0

    .line 12462
    iput-object v15, v0, Landroid/app/ContentProviderHolder;->provider:Landroid/content/IContentProvider;

    .line 12463
    monitor-exit p0
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_8

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    return-object v0

    .line 12467
    :cond_6
    :try_start_3
    invoke-static {}, Landroid/app/AppGlobals;->getPackageManager()Landroid/content/pm/IPackageManager;

    move-result-object v0

    .line 12468
    const/4 v4, 0x0

    invoke-interface {v0, v12, v4, v6}, Landroid/content/pm/IPackageManager;->resolveContentProvider(Ljava/lang/String;II)Landroid/content/pm/ProviderInfo;

    move-result-object v0
    :try_end_3
    .catch Landroid/os/RemoteException; {:try_start_3 .. :try_end_3} :catch_0
    .catchall {:try_start_3 .. :try_end_3} :catchall_8

    if-nez v0, :cond_7

    .line 12469
    :try_start_4
    monitor-exit p0
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_8

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    return-object v15

    .line 12472
    :cond_7
    goto :goto_3

    .line 12471
    :catch_0
    move-exception v0

    .line 12474
    :goto_3
    :try_start_5
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v4

    .line 12476
    const-string v0, "getContentProviderImpl: incProviderCountLocked"

    invoke-direct {v11, v9, v10, v0}, Lcom/android/server/am/ActivityManagerService;->checkTime(JLjava/lang/String;)V

    .line 12480
    invoke-virtual {v11, v8, v1, v13, v14}, Lcom/android/server/am/ActivityManagerService;->incProviderCountLocked(Lcom/android/server/am/ProcessRecord;Lcom/android/server/am/ContentProviderRecord;Landroid/os/IBinder;Z)Lcom/android/server/am/ContentProviderConnection;

    move-result-object v0

    .line 12481
    if-eqz v0, :cond_8

    iget v7, v0, Lcom/android/server/am/ContentProviderConnection;->stableCount:I

    iget v15, v0, Lcom/android/server/am/ContentProviderConnection;->unstableCount:I

    add-int/2addr v7, v15

    const/4 v15, 0x1

    if-ne v7, v15, :cond_8

    .line 12482
    iget-object v7, v1, Lcom/android/server/am/ContentProviderRecord;->proc:Lcom/android/server/am/ProcessRecord;

    if-eqz v7, :cond_8

    iget v7, v8, Lcom/android/server/am/ProcessRecord;->setAdj:I

    const/16 v15, 0xc8

    if-gt v7, v15, :cond_8

    .line 12487
    const-string v7, "getContentProviderImpl: before updateLruProcess"

    invoke-direct {v11, v9, v10, v7}, Lcom/android/server/am/ActivityManagerService;->checkTime(JLjava/lang/String;)V

    .line 12488
    iget-object v7, v1, Lcom/android/server/am/ContentProviderRecord;->proc:Lcom/android/server/am/ProcessRecord;

    move-object/from16 v18, v2

    const/4 v2, 0x0

    const/4 v15, 0x0

    invoke-virtual {v11, v7, v2, v15}, Lcom/android/server/am/ActivityManagerService;->updateLruProcessLocked(Lcom/android/server/am/ProcessRecord;ZLcom/android/server/am/ProcessRecord;)V

    .line 12489
    const-string v2, "getContentProviderImpl: after updateLruProcess"

    invoke-direct {v11, v9, v10, v2}, Lcom/android/server/am/ActivityManagerService;->checkTime(JLjava/lang/String;)V

    goto :goto_4

    .line 12493
    :cond_8
    move-object/from16 v18, v2

    :goto_4
    const-string v2, "getContentProviderImpl: before updateOomAdj"

    invoke-direct {v11, v9, v10, v2}, Lcom/android/server/am/ActivityManagerService;->checkTime(JLjava/lang/String;)V

    .line 12494
    iget-object v2, v1, Lcom/android/server/am/ContentProviderRecord;->proc:Lcom/android/server/am/ProcessRecord;

    iget v2, v2, Lcom/android/server/am/ProcessRecord;->verifiedAdj:I

    .line 12495
    iget-object v7, v1, Lcom/android/server/am/ContentProviderRecord;->proc:Lcom/android/server/am/ProcessRecord;

    const/4 v15, 0x1

    invoke-virtual {v11, v7, v15}, Lcom/android/server/am/ActivityManagerService;->updateOomAdjLocked(Lcom/android/server/am/ProcessRecord;Z)Z

    move-result v7

    .line 12501
    if-eqz v7, :cond_9

    iget-object v15, v1, Lcom/android/server/am/ContentProviderRecord;->proc:Lcom/android/server/am/ProcessRecord;

    iget v15, v15, Lcom/android/server/am/ProcessRecord;->setAdj:I

    if-eq v2, v15, :cond_9

    iget-object v2, v1, Lcom/android/server/am/ContentProviderRecord;->proc:Lcom/android/server/am/ProcessRecord;

    invoke-direct {v11, v2}, Lcom/android/server/am/ActivityManagerService;->isProcessAliveLocked(Lcom/android/server/am/ProcessRecord;)Z

    move-result v2

    if-nez v2, :cond_9

    .line 12502
    nop

    .line 12504
    const/4 v7, 0x0

    :cond_9
    iget-object v2, v1, Lcom/android/server/am/ContentProviderRecord;->info:Landroid/content/pm/ProviderInfo;

    iget-object v2, v2, Landroid/content/pm/ProviderInfo;->packageName:Ljava/lang/String;

    invoke-direct {v11, v8, v2, v12}, Lcom/android/server/am/ActivityManagerService;->maybeUpdateProviderUsageStatsLocked(Lcom/android/server/am/ProcessRecord;Ljava/lang/String;Ljava/lang/String;)V

    .line 12505
    const-string v2, "getContentProviderImpl: after updateOomAdj"

    invoke-direct {v11, v9, v10, v2}, Lcom/android/server/am/ActivityManagerService;->checkTime(JLjava/lang/String;)V

    .line 12511
    if-nez v7, :cond_b

    .line 12516
    const-string v2, "ActivityManager"

    new-instance v3, Ljava/lang/StringBuilder;

    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V

    const-string v7, "Existing provider "

    invoke-virtual {v3, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget-object v7, v1, Lcom/android/server/am/ContentProviderRecord;->name:Landroid/content/ComponentName;

    invoke-virtual {v7}, Landroid/content/ComponentName;->flattenToShortString()Ljava/lang/String;

    move-result-object v7

    invoke-virtual {v3, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v7, " is crashing; detaching "

    invoke-virtual {v3, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v3, v8}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v3

    invoke-static {v2, v3}, Landroid/util/Slog;->i(Ljava/lang/String;Ljava/lang/String;)I

    .line 12518
    invoke-virtual {v11, v0, v1, v13, v14}, Lcom/android/server/am/ActivityManagerService;->decProviderCountLocked(Lcom/android/server/am/ContentProviderConnection;Lcom/android/server/am/ContentProviderRecord;Landroid/os/IBinder;Z)Z

    move-result v0

    .line 12519
    const-string v2, "getContentProviderImpl: before appDied"

    invoke-direct {v11, v9, v10, v2}, Lcom/android/server/am/ActivityManagerService;->checkTime(JLjava/lang/String;)V

    .line 12520
    iget-object v2, v1, Lcom/android/server/am/ContentProviderRecord;->proc:Lcom/android/server/am/ProcessRecord;

    invoke-virtual {v11, v2}, Lcom/android/server/am/ActivityManagerService;->appDiedLocked(Lcom/android/server/am/ProcessRecord;)V

    .line 12521
    const-string v2, "getContentProviderImpl: after appDied"

    invoke-direct {v11, v9, v10, v2}, Lcom/android/server/am/ActivityManagerService;->checkTime(JLjava/lang/String;)V

    .line 12522
    if-nez v0, :cond_a

    .line 12525
    monitor-exit p0
    :try_end_5
    .catchall {:try_start_5 .. :try_end_5} :catchall_8

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    const/4 v1, 0x0

    return-object v1

    .line 12527
    :cond_a
    nop

    .line 12528
    nop

    .line 12529
    nop

    .line 12533
    const/4 v3, 0x0

    const/4 v15, 0x0

    goto :goto_5

    .line 12530
    :cond_b
    :try_start_6
    iget-object v2, v1, Lcom/android/server/am/ContentProviderRecord;->proc:Lcom/android/server/am/ProcessRecord;

    iget-object v7, v1, Lcom/android/server/am/ContentProviderRecord;->proc:Lcom/android/server/am/ProcessRecord;

    iget v7, v7, Lcom/android/server/am/ProcessRecord;->setAdj:I

    iput v7, v2, Lcom/android/server/am/ProcessRecord;->verifiedAdj:I

    .line 12533
    move-object v15, v0

    :goto_5
    invoke-static {v4, v5}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 12536
    move-object v0, v15

    move-object/from16 v2, v18

    move v15, v3

    goto :goto_6

    .line 12450
    :cond_c
    new-instance v1, Ljava/lang/SecurityException;

    invoke-direct {v1, v0}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v1
    :try_end_6
    .catchall {:try_start_6 .. :try_end_6} :catchall_8

    .line 12536
    :cond_d
    move v15, v3

    const/4 v0, 0x0

    :goto_6
    if-nez v15, :cond_24

    .line 12538
    :try_start_7
    const-string v0, "getContentProviderImpl: before resolveContentProvider"

    invoke-direct {v11, v9, v10, v0}, Lcom/android/server/am/ActivityManagerService;->checkTime(JLjava/lang/String;)V

    .line 12539
    invoke-static {}, Landroid/app/AppGlobals;->getPackageManager()Landroid/content/pm/IPackageManager;

    move-result-object v0

    const/16 v1, 0xc00

    .line 12540
    invoke-interface {v0, v12, v1, v6}, Landroid/content/pm/IPackageManager;->resolveContentProvider(Ljava/lang/String;II)Landroid/content/pm/ProviderInfo;

    move-result-object v1
    :try_end_7
    .catch Landroid/os/RemoteException; {:try_start_7 .. :try_end_7} :catch_2
    .catchall {:try_start_7 .. :try_end_7} :catchall_8

    .line 12542
    :try_start_8
    const-string v0, "getContentProviderImpl: after resolveContentProvider"

    invoke-direct {v11, v9, v10, v0}, Lcom/android/server/am/ActivityManagerService;->checkTime(JLjava/lang/String;)V
    :try_end_8
    .catch Landroid/os/RemoteException; {:try_start_8 .. :try_end_8} :catch_1
    .catchall {:try_start_8 .. :try_end_8} :catchall_8

    .line 12544
    nop

    .line 12545
    move-object v7, v1

    goto :goto_8

    .line 12543
    :catch_1
    move-exception v0

    move-object v2, v1

    goto :goto_7

    :catch_2
    move-exception v0

    .line 12545
    :goto_7
    move-object v7, v2

    :goto_8
    if-nez v7, :cond_e

    .line 12546
    :try_start_9
    monitor-exit p0
    :try_end_9
    .catchall {:try_start_9 .. :try_end_9} :catchall_8

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    const/4 v1, 0x0

    return-object v1

    .line 12552
    :cond_e
    :try_start_a
    iget-object v0, v7, Landroid/content/pm/ProviderInfo;->processName:Ljava/lang/String;

    iget-object v1, v7, Landroid/content/pm/ProviderInfo;->applicationInfo:Landroid/content/pm/ApplicationInfo;

    iget-object v2, v7, Landroid/content/pm/ProviderInfo;->name:Ljava/lang/String;

    iget v3, v7, Landroid/content/pm/ProviderInfo;->flags:I

    invoke-virtual {v11, v0, v1, v2, v3}, Lcom/android/server/am/ActivityManagerService;->isSingleton(Ljava/lang/String;Landroid/content/pm/ApplicationInfo;Ljava/lang/String;I)Z

    move-result v0

    if-eqz v0, :cond_f

    iget v0, v8, Lcom/android/server/am/ProcessRecord;->uid:I

    iget-object v1, v7, Landroid/content/pm/ProviderInfo;->applicationInfo:Landroid/content/pm/ApplicationInfo;

    iget v1, v1, Landroid/content/pm/ApplicationInfo;->uid:I

    .line 12554
    invoke-virtual {v11, v0, v1}, Lcom/android/server/am/ActivityManagerService;->isValidSingletonCall(II)Z

    move-result v0

    if-eqz v0, :cond_f

    .line 12555
    const/4 v0, 0x1

    goto :goto_9

    .line 12554
    :cond_f
    nop

    .line 12555
    const/4 v0, 0x0

    :goto_9
    if-eqz v0, :cond_10

    .line 12556
    nop

    .line 12558
    const/4 v6, 0x0

    :cond_10
    iget-object v1, v7, Landroid/content/pm/ProviderInfo;->applicationInfo:Landroid/content/pm/ApplicationInfo;

    invoke-virtual {v11, v1, v6}, Lcom/android/server/am/ActivityManagerService;->getAppInfoForUser(Landroid/content/pm/ApplicationInfo;I)Landroid/content/pm/ApplicationInfo;

    move-result-object v1

    iput-object v1, v7, Landroid/content/pm/ProviderInfo;->applicationInfo:Landroid/content/pm/ApplicationInfo;

    .line 12559
    const-string v1, "getContentProviderImpl: got app info for user"

    invoke-direct {v11, v9, v10, v1}, Lcom/android/server/am/ActivityManagerService;->checkTime(JLjava/lang/String;)V

    .line 12562
    const-string v1, "getContentProviderImpl: before checkContentProviderPermission"

    invoke-direct {v11, v9, v10, v1}, Lcom/android/server/am/ActivityManagerService;->checkTime(JLjava/lang/String;)V

    .line 12563
    xor-int/lit8 v1, v0, 0x1

    invoke-direct {v11, v7, v8, v6, v1}, Lcom/android/server/am/ActivityManagerService;->checkContentProviderPermissionLocked(Landroid/content/pm/ProviderInfo;Lcom/android/server/am/ProcessRecord;IZ)Ljava/lang/String;

    move-result-object v1

    if-nez v1, :cond_23

    .line 12567
    const-string v1, "getContentProviderImpl: after checkContentProviderPermission"

    invoke-direct {v11, v9, v10, v1}, Lcom/android/server/am/ActivityManagerService;->checkTime(JLjava/lang/String;)V

    .line 12569
    iget-boolean v1, v11, Lcom/android/server/am/ActivityManagerService;->mProcessesReady:Z

    if-nez v1, :cond_12

    iget-object v1, v7, Landroid/content/pm/ProviderInfo;->processName:Ljava/lang/String;

    const-string/jumbo v2, "system"

    .line 12570
    invoke-virtual {v1, v2}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v1

    if-eqz v1, :cond_11

    goto :goto_a

    .line 12574
    :cond_11
    new-instance v0, Ljava/lang/IllegalArgumentException;

    const-string v1, "Attempt to launch content provider before system ready"

    invoke-direct {v0, v1}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v0

    .line 12580
    :cond_12
    :goto_a
    iget-boolean v1, v11, Lcom/android/server/am/ActivityManagerService;->mSystemProvidersInstalled:Z

    if-nez v1, :cond_14

    iget-object v1, v7, Landroid/content/pm/ProviderInfo;->applicationInfo:Landroid/content/pm/ApplicationInfo;

    invoke-virtual {v1}, Landroid/content/pm/ApplicationInfo;->isSystemApp()Z

    move-result v1

    if-eqz v1, :cond_14

    const-string/jumbo v1, "system"

    iget-object v2, v7, Landroid/content/pm/ProviderInfo;->processName:Ljava/lang/String;

    .line 12581
    invoke-virtual {v1, v2}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v1

    if-nez v1, :cond_13

    goto :goto_b

    .line 12582
    :cond_13
    new-instance v0, Ljava/lang/IllegalStateException;

    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string v2, "Cannot access system provider: \'"

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget-object v2, v7, Landroid/content/pm/ProviderInfo;->authority:Ljava/lang/String;

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v2, "\' before system providers are installed!"

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-direct {v0, v1}, Ljava/lang/IllegalStateException;-><init>(Ljava/lang/String;)V

    throw v0

    .line 12588
    :cond_14
    :goto_b
    iget-object v1, v11, Lcom/android/server/am/ActivityManagerService;->mUserController:Lcom/android/server/am/UserController;

    const/4 v5, 0x0

    invoke-virtual {v1, v6, v5}, Lcom/android/server/am/UserController;->isUserRunning(II)Z

    move-result v1

    if-nez v1, :cond_15

    .line 12589
    const-string v0, "ActivityManager"

    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string v2, "Unable to launch app "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget-object v2, v7, Landroid/content/pm/ProviderInfo;->applicationInfo:Landroid/content/pm/ApplicationInfo;

    iget-object v2, v2, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v2, "/"

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget-object v2, v7, Landroid/content/pm/ProviderInfo;->applicationInfo:Landroid/content/pm/ApplicationInfo;

    iget v2, v2, Landroid/content/pm/ApplicationInfo;->uid:I

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v2, " for provider "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v1, v12}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v2, ": user "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v1, v6}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v2, " is stopped"

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-static {v0, v1}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 12593
    monitor-exit p0
    :try_end_a
    .catchall {:try_start_a .. :try_end_a} :catchall_8

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    const/4 v1, 0x0

    return-object v1

    .line 12596
    :cond_15
    :try_start_b
    new-instance v4, Landroid/content/ComponentName;

    iget-object v1, v7, Landroid/content/pm/ProviderInfo;->packageName:Ljava/lang/String;

    iget-object v2, v7, Landroid/content/pm/ProviderInfo;->name:Ljava/lang/String;

    invoke-direct {v4, v1, v2}, Landroid/content/ComponentName;-><init>(Ljava/lang/String;Ljava/lang/String;)V

    .line 12597
    const-string v1, "getContentProviderImpl: before getProviderByClass"

    invoke-direct {v11, v9, v10, v1}, Lcom/android/server/am/ActivityManagerService;->checkTime(JLjava/lang/String;)V

    .line 12598
    iget-object v1, v11, Lcom/android/server/am/ActivityManagerService;->mProviderMap:Lcom/android/server/am/ProviderMap;

    invoke-virtual {v1, v4, v6}, Lcom/android/server/am/ProviderMap;->getProviderByClass(Landroid/content/ComponentName;I)Lcom/android/server/am/ContentProviderRecord;

    move-result-object v16

    .line 12599
    const-string v1, "getContentProviderImpl: after getProviderByClass"

    invoke-direct {v11, v9, v10, v1}, Lcom/android/server/am/ActivityManagerService;->checkTime(JLjava/lang/String;)V

    .line 12600
    if-nez v16, :cond_16

    .line 12601
    const/16 v17, 0x1

    goto :goto_c

    .line 12600
    :cond_16
    nop

    .line 12601
    move/from16 v17, v5

    :goto_c
    if-eqz v17, :cond_19

    .line 12602
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v2

    .line 12607
    iget-boolean v1, v11, Lcom/android/server/am/ActivityManagerService;->mPermissionReviewRequired:Z

    if-eqz v1, :cond_17

    .line 12608
    invoke-direct {v11, v7, v8, v6}, Lcom/android/server/am/ActivityManagerService;->requestTargetProviderPermissionsReviewIfNeededLocked(Landroid/content/pm/ProviderInfo;Lcom/android/server/am/ProcessRecord;I)Z

    move-result v1

    if-nez v1, :cond_17

    .line 12609
    monitor-exit p0
    :try_end_b
    .catchall {:try_start_b .. :try_end_b} :catchall_8

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    const/4 v1, 0x0

    return-object v1

    .line 12614
    :cond_17
    :try_start_c
    const-string v1, "getContentProviderImpl: before getApplicationInfo"

    invoke-direct {v11, v9, v10, v1}, Lcom/android/server/am/ActivityManagerService;->checkTime(JLjava/lang/String;)V

    .line 12616
    invoke-static {}, Landroid/app/AppGlobals;->getPackageManager()Landroid/content/pm/IPackageManager;

    move-result-object v1
    :try_end_c
    .catch Landroid/os/RemoteException; {:try_start_c .. :try_end_c} :catch_6
    .catchall {:try_start_c .. :try_end_c} :catchall_2

    :try_start_d
    iget-object v5, v7, Landroid/content/pm/ProviderInfo;->applicationInfo:Landroid/content/pm/ApplicationInfo;

    iget-object v5, v5, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;
    :try_end_d
    .catch Landroid/os/RemoteException; {:try_start_d .. :try_end_d} :catch_5
    .catchall {:try_start_d .. :try_end_d} :catchall_2

    move-object/from16 v20, v4

    const/16 v4, 0x400

    .line 12617
    :try_start_e
    invoke-interface {v1, v5, v4, v6}, Landroid/content/pm/IPackageManager;->getApplicationInfo(Ljava/lang/String;II)Landroid/content/pm/ApplicationInfo;

    move-result-object v1

    .line 12620
    const-string v4, "getContentProviderImpl: after getApplicationInfo"

    invoke-direct {v11, v9, v10, v4}, Lcom/android/server/am/ActivityManagerService;->checkTime(JLjava/lang/String;)V

    .line 12621
    if-nez v1, :cond_18

    .line 12622
    const-string v0, "ActivityManager"

    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string v4, "No package info for content provider "

    invoke-virtual {v1, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget-object v4, v7, Landroid/content/pm/ProviderInfo;->name:Ljava/lang/String;

    invoke-virtual {v1, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-static {v0, v1}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I
    :try_end_e
    .catch Landroid/os/RemoteException; {:try_start_e .. :try_end_e} :catch_4
    .catchall {:try_start_e .. :try_end_e} :catchall_2

    .line 12624
    nop

    .line 12631
    :try_start_f
    invoke-static {v2, v3}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    monitor-exit p0
    :try_end_f
    .catchall {:try_start_f .. :try_end_f} :catchall_8

    .line 12624
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    const/4 v1, 0x0

    return-object v1

    .line 12626
    :cond_18
    :try_start_10
    invoke-virtual {v11, v1, v6}, Lcom/android/server/am/ActivityManagerService;->getAppInfoForUser(Landroid/content/pm/ApplicationInfo;I)Landroid/content/pm/ApplicationInfo;

    move-result-object v4

    .line 12627
    new-instance v18, Lcom/android/server/am/ContentProviderRecord;
    :try_end_10
    .catch Landroid/os/RemoteException; {:try_start_10 .. :try_end_10} :catch_4
    .catchall {:try_start_10 .. :try_end_10} :catchall_2

    move-object/from16 v1, v18

    move-wide v13, v2

    move-object v2, v11

    move-object v3, v7

    move-object/from16 v5, v20

    move-object/from16 v21, v5

    const/16 v19, 0x0

    move/from16 v22, v15

    move/from16 v12, v19

    move v15, v6

    move v6, v0

    :try_start_11
    invoke-direct/range {v1 .. v6}, Lcom/android/server/am/ContentProviderRecord;-><init>(Lcom/android/server/am/ActivityManagerService;Landroid/content/pm/ProviderInfo;Landroid/content/pm/ApplicationInfo;Landroid/content/ComponentName;Z)V
    :try_end_11
    .catch Landroid/os/RemoteException; {:try_start_11 .. :try_end_11} :catch_3
    .catchall {:try_start_11 .. :try_end_11} :catchall_1

    .line 12631
    :try_start_12
    invoke-static {v13, v14}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 12632
    nop

    .line 12635
    move-object/from16 v13, v18

    goto :goto_12

    .line 12631
    :catchall_1
    move-exception v0

    goto :goto_e

    .line 12628
    :catch_3
    move-exception v0

    goto :goto_10

    :catch_4
    move-exception v0

    move-wide v13, v2

    move/from16 v22, v15

    move-object/from16 v21, v20

    goto :goto_d

    :catch_5
    move-exception v0

    move-wide v13, v2

    move-object/from16 v21, v4

    move/from16 v22, v15

    :goto_d
    const/4 v12, 0x0

    goto :goto_f

    .line 12631
    :catchall_2
    move-exception v0

    move-wide v13, v2

    :goto_e
    invoke-static {v13, v14}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    throw v0

    .line 12628
    :catch_6
    move-exception v0

    move-wide v13, v2

    move-object/from16 v21, v4

    move v12, v5

    move/from16 v22, v15

    :goto_f
    move v15, v6

    .line 12631
    :goto_10
    invoke-static {v13, v14}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 12632
    goto :goto_11

    .line 12635
    :cond_19
    move-object/from16 v21, v4

    move v12, v5

    move/from16 v22, v15

    move v15, v6

    :goto_11
    move-object/from16 v13, v16

    :goto_12
    const-string v0, "getContentProviderImpl: now have ContentProviderRecord"

    invoke-direct {v11, v9, v10, v0}, Lcom/android/server/am/ActivityManagerService;->checkTime(JLjava/lang/String;)V

    .line 12637
    if-eqz v8, :cond_1a

    invoke-virtual {v13, v8}, Lcom/android/server/am/ContentProviderRecord;->canRunHere(Lcom/android/server/am/ProcessRecord;)Z

    move-result v0

    if-eqz v0, :cond_1a

    .line 12642
    const/4 v1, 0x0

    invoke-virtual {v13, v1}, Lcom/android/server/am/ContentProviderRecord;->newHolder(Lcom/android/server/am/ContentProviderConnection;)Landroid/app/ContentProviderHolder;

    move-result-object v0

    monitor-exit p0
    :try_end_12
    .catchall {:try_start_12 .. :try_end_12} :catchall_8

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    return-object v0

    .line 12652
    :cond_1a
    :try_start_13
    iget-object v0, v11, Lcom/android/server/am/ActivityManagerService;->mLaunchingProviders:Ljava/util/ArrayList;

    invoke-virtual {v0}, Ljava/util/ArrayList;->size()I

    move-result v0

    .line 12654
    move v1, v12

    :goto_13
    if-ge v1, v0, :cond_1c

    .line 12655
    iget-object v2, v11, Lcom/android/server/am/ActivityManagerService;->mLaunchingProviders:Ljava/util/ArrayList;

    invoke-virtual {v2, v1}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v2

    if-ne v2, v13, :cond_1b

    .line 12656
    goto :goto_14

    .line 12654
    :cond_1b
    add-int/lit8 v1, v1, 0x1

    goto :goto_13

    .line 12662
    :cond_1c
    :goto_14
    if-lt v1, v0, :cond_20

    .line 12663
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v5
    :try_end_13
    .catchall {:try_start_13 .. :try_end_13} :catchall_8

    .line 12668
    :try_start_14
    const-string v0, "getContentProviderImpl: before set stopped state"

    invoke-direct {v11, v9, v10, v0}, Lcom/android/server/am/ActivityManagerService;->checkTime(JLjava/lang/String;)V

    .line 12669
    invoke-static {}, Landroid/app/AppGlobals;->getPackageManager()Landroid/content/pm/IPackageManager;

    move-result-object v0

    iget-object v1, v13, Lcom/android/server/am/ContentProviderRecord;->appInfo:Landroid/content/pm/ApplicationInfo;

    iget-object v1, v1, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;

    invoke-interface {v0, v1, v12, v15}, Landroid/content/pm/IPackageManager;->setPackageStoppedState(Ljava/lang/String;ZI)V

    .line 12671
    const-string v0, "getContentProviderImpl: after set stopped state"

    invoke-direct {v11, v9, v10, v0}, Lcom/android/server/am/ActivityManagerService;->checkTime(JLjava/lang/String;)V
    :try_end_14
    .catch Landroid/os/RemoteException; {:try_start_14 .. :try_end_14} :catch_8
    .catch Ljava/lang/IllegalArgumentException; {:try_start_14 .. :try_end_14} :catch_7
    .catchall {:try_start_14 .. :try_end_14} :catchall_3

    goto :goto_15

    .line 12711
    :catchall_3
    move-exception v0

    move-wide v6, v5

    goto/16 :goto_19

    .line 12673
    :catch_7
    move-exception v0

    .line 12674
    :try_start_15
    const-string v1, "ActivityManager"

    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    const-string v3, "Failed trying to unstop package "

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget-object v3, v13, Lcom/android/server/am/ContentProviderRecord;->appInfo:Landroid/content/pm/ApplicationInfo;

    iget-object v3, v3, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v3, ": "

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v2, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    invoke-static {v1, v0}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    goto :goto_16

    .line 12672
    :catch_8
    move-exception v0

    .line 12676
    :goto_15
    nop

    .line 12679
    :goto_16
    const-string v0, "getContentProviderImpl: looking for process record"

    invoke-direct {v11, v9, v10, v0}, Lcom/android/server/am/ActivityManagerService;->checkTime(JLjava/lang/String;)V

    .line 12680
    iget-object v0, v7, Landroid/content/pm/ProviderInfo;->processName:Ljava/lang/String;

    iget-object v1, v13, Lcom/android/server/am/ContentProviderRecord;->appInfo:Landroid/content/pm/ApplicationInfo;

    iget v1, v1, Landroid/content/pm/ApplicationInfo;->uid:I

    invoke-virtual {v11, v0, v1, v12}, Lcom/android/server/am/ActivityManagerService;->getProcessRecordLocked(Ljava/lang/String;IZ)Lcom/android/server/am/ProcessRecord;

    move-result-object v1

    .line 12682
    if-eqz v1, :cond_1e

    iget-object v0, v1, Lcom/android/server/am/ProcessRecord;->thread:Landroid/app/IApplicationThread;

    if-eqz v0, :cond_1e

    iget-boolean v0, v1, Lcom/android/server/am/ProcessRecord;->killed:Z

    if-nez v0, :cond_1e

    .line 12685
    iget-object v0, v1, Lcom/android/server/am/ProcessRecord;->pubProviders:Landroid/util/ArrayMap;

    iget-object v2, v7, Landroid/content/pm/ProviderInfo;->name:Ljava/lang/String;

    invoke-virtual {v0, v2}, Landroid/util/ArrayMap;->containsKey(Ljava/lang/Object;)Z

    move-result v0

    if-nez v0, :cond_1d

    .line 12686
    const-string v0, "getContentProviderImpl: scheduling install"

    invoke-direct {v11, v9, v10, v0}, Lcom/android/server/am/ActivityManagerService;->checkTime(JLjava/lang/String;)V

    .line 12687
    iget-object v0, v1, Lcom/android/server/am/ProcessRecord;->pubProviders:Landroid/util/ArrayMap;

    iget-object v2, v7, Landroid/content/pm/ProviderInfo;->name:Ljava/lang/String;

    invoke-virtual {v0, v2, v13}, Landroid/util/ArrayMap;->put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    :try_end_15
    .catchall {:try_start_15 .. :try_end_15} :catchall_3

    .line 12689
    :try_start_16
    iget-object v0, v1, Lcom/android/server/am/ProcessRecord;->thread:Landroid/app/IApplicationThread;

    invoke-interface {v0, v7}, Landroid/app/IApplicationThread;->scheduleInstallProvider(Landroid/content/pm/ProviderInfo;)V
    :try_end_16
    .catch Landroid/os/RemoteException; {:try_start_16 .. :try_end_16} :catch_9
    .catchall {:try_start_16 .. :try_end_16} :catchall_3

    goto :goto_17

    .line 12690
    :catch_9
    move-exception v0

    .line 12691
    :goto_17
    nop

    .line 12708
    :cond_1d
    move-object v14, v7

    move-object/from16 v25, v8

    move-wide v3, v9

    move v8, v12

    move-wide v6, v5

    move-object/from16 v5, p2

    goto/16 :goto_18

    .line 12694
    :cond_1e
    :try_start_17
    const-string v0, "getContentProviderImpl: before start process"

    invoke-direct {v11, v9, v10, v0}, Lcom/android/server/am/ActivityManagerService;->checkTime(JLjava/lang/String;)V

    .line 12695
    iget-object v2, v7, Landroid/content/pm/ProviderInfo;->processName:Ljava/lang/String;

    iget-object v3, v13, Lcom/android/server/am/ContentProviderRecord;->appInfo:Landroid/content/pm/ApplicationInfo;

    const/4 v4, 0x0

    const-string v14, "content provider"

    new-instance v1, Landroid/content/ComponentName;

    iget-object v12, v7, Landroid/content/pm/ProviderInfo;->applicationInfo:Landroid/content/pm/ApplicationInfo;

    iget-object v12, v12, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;

    iget-object v0, v7, Landroid/content/pm/ProviderInfo;->name:Ljava/lang/String;

    invoke-direct {v1, v12, v0}, Landroid/content/ComponentName;-><init>(Ljava/lang/String;Ljava/lang/String;)V
    :try_end_17
    .catchall {:try_start_17 .. :try_end_17} :catchall_3

    const/4 v0, 0x0

    const/4 v12, 0x0

    const/16 v16, 0x0

    move-object/from16 v18, v1

    move-object v1, v11

    move-wide/from16 v23, v5

    const/4 v5, 0x0

    move-object v6, v14

    move-object v14, v7

    move-object/from16 v7, v18

    move-object/from16 v25, v8

    move v8, v0

    move-wide/from16 v26, v9

    move v9, v12

    move/from16 v10, v16

    :try_start_18
    invoke-virtual/range {v1 .. v10}, Lcom/android/server/am/ActivityManagerService;->startProcessLocked(Ljava/lang/String;Landroid/content/pm/ApplicationInfo;ZILjava/lang/String;Landroid/content/ComponentName;ZZZ)Lcom/android/server/am/ProcessRecord;

    move-result-object v1

    .line 12699
    const-string v0, "getContentProviderImpl: after start process"

    move-wide/from16 v3, v26

    invoke-direct {v11, v3, v4, v0}, Lcom/android/server/am/ActivityManagerService;->checkTime(JLjava/lang/String;)V

    .line 12700
    if-nez v1, :cond_1f

    .line 12701
    const-string v0, "ActivityManager"

    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string v2, "Unable to launch app "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget-object v2, v14, Landroid/content/pm/ProviderInfo;->applicationInfo:Landroid/content/pm/ApplicationInfo;

    iget-object v2, v2, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v2, "/"

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget-object v2, v14, Landroid/content/pm/ProviderInfo;->applicationInfo:Landroid/content/pm/ApplicationInfo;

    iget v2, v2, Landroid/content/pm/ApplicationInfo;->uid:I

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v2, " for provider "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-object/from16 v5, p2

    invoke-virtual {v1, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v2, ": process is bad"

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-static {v0, v1}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I
    :try_end_18
    .catchall {:try_start_18 .. :try_end_18} :catchall_5

    .line 12705
    nop

    .line 12711
    move-wide/from16 v6, v23

    :try_start_19
    invoke-static {v6, v7}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    monitor-exit p0
    :try_end_19
    .catchall {:try_start_19 .. :try_end_19} :catchall_8

    .line 12705
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    const/4 v1, 0x0

    return-object v1

    .line 12708
    :cond_1f
    move-wide/from16 v6, v23

    move-object/from16 v5, p2

    const/4 v8, 0x0

    :goto_18
    :try_start_1a
    iput-object v1, v13, Lcom/android/server/am/ContentProviderRecord;->launchingApp:Lcom/android/server/am/ProcessRecord;

    .line 12709
    iget-object v0, v11, Lcom/android/server/am/ActivityManagerService;->mLaunchingProviders:Ljava/util/ArrayList;

    invoke-virtual {v0, v13}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z
    :try_end_1a
    .catchall {:try_start_1a .. :try_end_1a} :catchall_4

    .line 12711
    :try_start_1b
    invoke-static {v6, v7}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 12712
    goto :goto_1a

    .line 12711
    :catchall_4
    move-exception v0

    goto :goto_19

    :catchall_5
    move-exception v0

    move-wide/from16 v6, v23

    :goto_19
    invoke-static {v6, v7}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    throw v0

    .line 12715
    :cond_20
    move-object v14, v7

    move-object/from16 v25, v8

    move-wide v3, v9

    move v8, v12

    move-object/from16 v5, p2

    :goto_1a
    const-string v0, "getContentProviderImpl: updating data structures"

    invoke-direct {v11, v3, v4, v0}, Lcom/android/server/am/ActivityManagerService;->checkTime(JLjava/lang/String;)V

    .line 12719
    if-eqz v17, :cond_21

    .line 12720
    iget-object v0, v11, Lcom/android/server/am/ActivityManagerService;->mProviderMap:Lcom/android/server/am/ProviderMap;

    move-object/from16 v1, v21

    invoke-virtual {v0, v1, v13}, Lcom/android/server/am/ProviderMap;->putProviderByClass(Landroid/content/ComponentName;Lcom/android/server/am/ContentProviderRecord;)V

    .line 12723
    :cond_21
    iget-object v0, v11, Lcom/android/server/am/ActivityManagerService;->mProviderMap:Lcom/android/server/am/ProviderMap;

    invoke-virtual {v0, v5, v13}, Lcom/android/server/am/ProviderMap;->putProviderByName(Ljava/lang/String;Lcom/android/server/am/ContentProviderRecord;)V

    .line 12724
    move-object/from16 v6, v25

    move-object/from16 v1, p3

    move/from16 v2, p4

    invoke-virtual {v11, v6, v13, v1, v2}, Lcom/android/server/am/ActivityManagerService;->incProviderCountLocked(Lcom/android/server/am/ProcessRecord;Lcom/android/server/am/ContentProviderRecord;Landroid/os/IBinder;Z)Lcom/android/server/am/ContentProviderConnection;

    move-result-object v0

    .line 12725
    if-eqz v0, :cond_22

    .line 12726
    const/4 v7, 0x1

    iput-boolean v7, v0, Lcom/android/server/am/ContentProviderConnection;->waiting:Z

    goto :goto_1b

    .line 12729
    :cond_22
    const/4 v7, 0x1

    goto :goto_1b

    .line 12565
    :cond_23
    new-instance v0, Ljava/lang/SecurityException;

    invoke-direct {v0, v1}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v0

    .line 12729
    :cond_24
    move-wide v3, v9

    move-object v5, v12

    move/from16 v22, v15

    const/4 v7, 0x1

    const/4 v8, 0x0

    move-object v13, v1

    move-object v14, v2

    move v15, v6

    :goto_1b
    move-object v1, v0

    const-string v0, "getContentProviderImpl: done!"

    invoke-direct {v11, v3, v4, v0}, Lcom/android/server/am/ActivityManagerService;->checkTime(JLjava/lang/String;)V

    .line 12731
    iget-object v0, v14, Landroid/content/pm/ProviderInfo;->applicationInfo:Landroid/content/pm/ApplicationInfo;

    iget v0, v0, Landroid/content/pm/ApplicationInfo;->uid:I

    .line 12732
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v2

    invoke-static {v2}, Landroid/os/UserHandle;->getAppId(I)I

    move-result v2

    .line 12731
    const/4 v3, 0x0

    invoke-virtual {v11, v15, v3, v0, v2}, Lcom/android/server/am/ActivityManagerService;->grantEphemeralAccessLocked(ILandroid/content/Intent;II)V

    .line 12733
    monitor-exit p0
    :try_end_1b
    .catchall {:try_start_1b .. :try_end_1b} :catchall_8

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    .line 12736
    invoke-static {}, Landroid/os/SystemClock;->uptimeMillis()J

    move-result-wide v2

    const-wide/16 v9, 0x4e20

    add-long/2addr v2, v9

    .line 12737
    monitor-enter v13

    .line 12738
    :goto_1c
    :try_start_1c
    iget-object v0, v13, Lcom/android/server/am/ContentProviderRecord;->provider:Landroid/content/IContentProvider;

    if-nez v0, :cond_2b

    .line 12739
    iget-object v0, v13, Lcom/android/server/am/ContentProviderRecord;->launchingApp:Lcom/android/server/am/ProcessRecord;

    if-nez v0, :cond_25

    .line 12740
    const-string v0, "ActivityManager"

    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string v2, "Unable to launch app "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget-object v2, v14, Landroid/content/pm/ProviderInfo;->applicationInfo:Landroid/content/pm/ApplicationInfo;

    iget-object v2, v2, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v2, "/"

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget-object v2, v14, Landroid/content/pm/ProviderInfo;->applicationInfo:Landroid/content/pm/ApplicationInfo;

    iget v2, v2, Landroid/content/pm/ApplicationInfo;->uid:I

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v2, " for provider "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v1, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v2, ": launching app became null"

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-static {v0, v1}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 12744
    const/16 v0, 0x7554

    const/4 v1, 0x4

    new-array v1, v1, [Ljava/lang/Object;

    iget-object v2, v14, Landroid/content/pm/ProviderInfo;->applicationInfo:Landroid/content/pm/ApplicationInfo;

    iget v2, v2, Landroid/content/pm/ApplicationInfo;->uid:I

    .line 12745
    invoke-static {v2}, Landroid/os/UserHandle;->getUserId(I)I

    move-result v2

    invoke-static {v2}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v2

    aput-object v2, v1, v8

    iget-object v2, v14, Landroid/content/pm/ProviderInfo;->applicationInfo:Landroid/content/pm/ApplicationInfo;

    iget-object v2, v2, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;

    aput-object v2, v1, v7

    const/4 v2, 0x2

    iget-object v3, v14, Landroid/content/pm/ProviderInfo;->applicationInfo:Landroid/content/pm/ApplicationInfo;

    iget v3, v3, Landroid/content/pm/ApplicationInfo;->uid:I

    .line 12747
    invoke-static {v3}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v3

    aput-object v3, v1, v2

    const/4 v2, 0x3

    aput-object v5, v1, v2

    .line 12744
    invoke-static {v0, v1}, Landroid/util/EventLog;->writeEvent(I[Ljava/lang/Object;)I

    .line 12748
    monitor-exit v13
    :try_end_1c
    .catchall {:try_start_1c .. :try_end_1c} :catchall_7

    const/4 v1, 0x0

    return-object v1

    .line 12751
    :cond_25
    const-wide/16 v9, 0x0

    :try_start_1d
    invoke-static {}, Landroid/os/SystemClock;->uptimeMillis()J

    move-result-wide v11

    sub-long v11, v2, v11

    invoke-static {v9, v10, v11, v12}, Ljava/lang/Math;->max(JJ)J

    move-result-wide v9

    .line 12755
    if-eqz v1, :cond_26

    .line 12756
    iput-boolean v7, v1, Lcom/android/server/am/ContentProviderConnection;->waiting:Z

    .line 12758
    :cond_26
    invoke-virtual {v13, v9, v10}, Ljava/lang/Object;->wait(J)V

    .line 12759
    iget-object v0, v13, Lcom/android/server/am/ContentProviderRecord;->provider:Landroid/content/IContentProvider;

    if-nez v0, :cond_28

    .line 12760
    const-string v0, "ActivityManager"

    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    const-string v6, "Timeout waiting for provider "

    invoke-virtual {v4, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget-object v6, v14, Landroid/content/pm/ProviderInfo;->applicationInfo:Landroid/content/pm/ApplicationInfo;

    iget-object v6, v6, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;

    invoke-virtual {v4, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v6, "/"

    invoke-virtual {v4, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget-object v6, v14, Landroid/content/pm/ProviderInfo;->applicationInfo:Landroid/content/pm/ApplicationInfo;

    iget v6, v6, Landroid/content/pm/ApplicationInfo;->uid:I

    invoke-virtual {v4, v6}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v6, " for provider "

    invoke-virtual {v4, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v6, " providerRunning="

    invoke-virtual {v4, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
    :try_end_1d
    .catch Ljava/lang/InterruptedException; {:try_start_1d .. :try_end_1d} :catch_b
    .catchall {:try_start_1d .. :try_end_1d} :catchall_6

    move/from16 v6, v22

    :try_start_1e
    invoke-virtual {v4, v6}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v4

    invoke-static {v0, v4}, Landroid/util/Slog;->wtf(Ljava/lang/String;Ljava/lang/String;)I
    :try_end_1e
    .catch Ljava/lang/InterruptedException; {:try_start_1e .. :try_end_1e} :catch_a
    .catchall {:try_start_1e .. :try_end_1e} :catchall_6

    .line 12765
    nop

    .line 12769
    if-eqz v1, :cond_27

    .line 12770
    :try_start_1f
    iput-boolean v8, v1, Lcom/android/server/am/ContentProviderConnection;->waiting:Z

    :cond_27
    monitor-exit v13

    .line 12765
    const/4 v15, 0x0

    return-object v15

    .line 12767
    :catch_a
    move-exception v0

    goto :goto_1e

    .line 12769
    :cond_28
    move/from16 v6, v22

    const/4 v15, 0x0

    if-eqz v1, :cond_2a

    .line 12770
    :goto_1d
    iput-boolean v8, v1, Lcom/android/server/am/ContentProviderConnection;->waiting:Z

    goto :goto_1f

    .line 12769
    :catchall_6
    move-exception v0

    if-eqz v1, :cond_29

    .line 12770
    iput-boolean v8, v1, Lcom/android/server/am/ContentProviderConnection;->waiting:Z

    :cond_29
    throw v0

    .line 12767
    :catch_b
    move-exception v0

    move/from16 v6, v22

    :goto_1e
    const/4 v15, 0x0

    .line 12769
    if-eqz v1, :cond_2a

    goto :goto_1d

    .line 12738
    :cond_2a
    :goto_1f
    move/from16 v22, v6

    goto/16 :goto_1c

    .line 12774
    :cond_2b
    const/4 v15, 0x0

    monitor-exit v13
    :try_end_1f
    .catchall {:try_start_1f .. :try_end_1f} :catchall_7

    .line 12775
    if-eqz v13, :cond_2c

    invoke-virtual {v13, v1}, Lcom/android/server/am/ContentProviderRecord;->newHolder(Lcom/android/server/am/ContentProviderConnection;)Landroid/app/ContentProviderHolder;

    move-result-object v15

    nop

    :cond_2c
    return-object v15

    .line 12774
    :catchall_7
    move-exception v0

    :try_start_20
    monitor-exit v13
    :try_end_20
    .catchall {:try_start_20 .. :try_end_20} :catchall_7

    throw v0

    .line 12733
    :catchall_8
    move-exception v0

    :try_start_21
    monitor-exit p0
    :try_end_21
    .catchall {:try_start_21 .. :try_end_21} :catchall_8

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw v0
.end method

.method public static getInputDispatchingTimeoutLocked(Lcom/android/server/am/ActivityRecord;)J
    .locals 2

    .line 14147
    if-eqz p0, :cond_0

    iget-object p0, p0, Lcom/android/server/am/ActivityRecord;->app:Lcom/android/server/am/ProcessRecord;

    invoke-static {p0}, Lcom/android/server/am/ActivityManagerService;->getInputDispatchingTimeoutLocked(Lcom/android/server/am/ProcessRecord;)J

    move-result-wide v0

    goto :goto_0

    :cond_0
    const-wide/16 v0, 0x1388

    :goto_0
    return-wide v0
.end method

.method public static getInputDispatchingTimeoutLocked(Lcom/android/server/am/ProcessRecord;)J
    .locals 2

    .line 14151
    if-eqz p0, :cond_1

    iget-object v0, p0, Lcom/android/server/am/ProcessRecord;->instr:Lcom/android/server/am/ActiveInstrumentation;

    if-nez v0, :cond_0

    iget-boolean p0, p0, Lcom/android/server/am/ProcessRecord;->usingWrapper:Z

    if-eqz p0, :cond_1

    .line 14152
    :cond_0
    const-wide/32 v0, 0xea60

    return-wide v0

    .line 14154
    :cond_1
    const-wide/16 v0, 0x1388

    return-wide v0
.end method

.method private final getKsmInfo()[J
    .locals 15

    .line 18984
    const/4 v0, 0x4

    new-array v0, v0, [J

    .line 18985
    const/4 v1, 0x1

    new-array v2, v1, [I

    const/4 v3, 0x0

    const/16 v4, 0x2020

    aput v4, v2, v3

    .line 18988
    new-array v4, v1, [J

    .line 18989
    const-string v5, "/sys/kernel/mm/ksm/pages_shared"

    const/4 v6, 0x0

    invoke-static {v5, v2, v6, v4, v6}, Landroid/os/Process;->readProcFile(Ljava/lang/String;[I[Ljava/lang/String;[J[F)Z

    .line 18991
    aget-wide v7, v4, v3

    const-wide/16 v9, 0x1000

    mul-long/2addr v7, v9

    const-wide/16 v11, 0x400

    div-long/2addr v7, v11

    aput-wide v7, v0, v3

    .line 18992
    const-wide/16 v7, 0x0

    aput-wide v7, v4, v3

    .line 18993
    const-string v5, "/sys/kernel/mm/ksm/pages_sharing"

    invoke-static {v5, v2, v6, v4, v6}, Landroid/os/Process;->readProcFile(Ljava/lang/String;[I[Ljava/lang/String;[J[F)Z

    .line 18995
    aget-wide v13, v4, v3

    mul-long/2addr v13, v9

    div-long/2addr v13, v11

    aput-wide v13, v0, v1

    .line 18996
    aput-wide v7, v4, v3

    .line 18997
    const-string v1, "/sys/kernel/mm/ksm/pages_unshared"

    invoke-static {v1, v2, v6, v4, v6}, Landroid/os/Process;->readProcFile(Ljava/lang/String;[I[Ljava/lang/String;[J[F)Z

    .line 18999
    aget-wide v13, v4, v3

    mul-long/2addr v13, v9

    div-long/2addr v13, v11

    const/4 v1, 0x2

    aput-wide v13, v0, v1

    .line 19000
    aput-wide v7, v4, v3

    .line 19001
    const-string v1, "/sys/kernel/mm/ksm/pages_volatile"

    invoke-static {v1, v2, v6, v4, v6}, Landroid/os/Process;->readProcFile(Ljava/lang/String;[I[Ljava/lang/String;[J[F)Z

    .line 19003
    aget-wide v1, v4, v3

    mul-long/2addr v1, v9

    div-long/2addr v1, v11

    const/4 v3, 0x3

    aput-wide v1, v0, v3

    .line 19004
    return-object v0
.end method

.method private final getLRURecordIndexForAppLocked(Landroid/app/IApplicationThread;)I
    .locals 3

    .line 6119
    invoke-interface {p1}, Landroid/app/IApplicationThread;->asBinder()Landroid/os/IBinder;

    move-result-object p1

    .line 6121
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mLruProcesses:Ljava/util/ArrayList;

    invoke-virtual {v0}, Ljava/util/ArrayList;->size()I

    move-result v0

    add-int/lit8 v0, v0, -0x1

    :goto_0
    if-ltz v0, :cond_1

    .line 6122
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mLruProcesses:Ljava/util/ArrayList;

    invoke-virtual {v1, v0}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v1

    check-cast v1, Lcom/android/server/am/ProcessRecord;

    .line 6123
    iget-object v2, v1, Lcom/android/server/am/ProcessRecord;->thread:Landroid/app/IApplicationThread;

    if-eqz v2, :cond_0

    iget-object v1, v1, Lcom/android/server/am/ProcessRecord;->thread:Landroid/app/IApplicationThread;

    invoke-interface {v1}, Landroid/app/IApplicationThread;->asBinder()Landroid/os/IBinder;

    move-result-object v1

    if-ne v1, p1, :cond_0

    .line 6124
    return v0

    .line 6121
    :cond_0
    add-int/lit8 v0, v0, -0x1

    goto :goto_0

    .line 6127
    :cond_1
    const/4 p1, -0x1

    return p1
.end method

.method private getLowRamTimeSinceIdle(J)J
    .locals 6

    .line 15250
    iget-wide v0, p0, Lcom/android/server/am/ActivityManagerService;->mLowRamTimeSinceLastIdle:J

    iget-wide v2, p0, Lcom/android/server/am/ActivityManagerService;->mLowRamStartTime:J

    const-wide/16 v4, 0x0

    cmp-long v2, v2, v4

    if-lez v2, :cond_0

    iget-wide v2, p0, Lcom/android/server/am/ActivityManagerService;->mLowRamStartTime:J

    sub-long v4, p1, v2

    nop

    :cond_0
    add-long/2addr v0, v4

    return-wide v0
.end method

.method private getProviderInfoLocked(Ljava/lang/String;II)Landroid/content/pm/ProviderInfo;
    .locals 2

    .line 9673
    nop

    .line 9674
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mProviderMap:Lcom/android/server/am/ProviderMap;

    invoke-virtual {v0, p1, p2}, Lcom/android/server/am/ProviderMap;->getProviderByName(Ljava/lang/String;I)Lcom/android/server/am/ContentProviderRecord;

    move-result-object v0

    .line 9675
    if-eqz v0, :cond_0

    .line 9676
    iget-object p1, v0, Lcom/android/server/am/ContentProviderRecord;->info:Landroid/content/pm/ProviderInfo;

    goto :goto_0

    .line 9679
    :cond_0
    :try_start_0
    invoke-static {}, Landroid/app/AppGlobals;->getPackageManager()Landroid/content/pm/IPackageManager;

    move-result-object v0

    const/16 v1, 0x800

    or-int/2addr p3, v1

    invoke-interface {v0, p1, p3, p2}, Landroid/content/pm/IPackageManager;->resolveContentProvider(Ljava/lang/String;II)Landroid/content/pm/ProviderInfo;

    move-result-object p1
    :try_end_0
    .catch Landroid/os/RemoteException; {:try_start_0 .. :try_end_0} :catch_0

    .line 9683
    goto :goto_0

    .line 9682
    :catch_0
    move-exception p1

    .line 9685
    const/4 p1, 0x0

    :goto_0
    return-object p1
.end method

.method private getUidFromIntent(Landroid/content/Intent;)I
    .locals 3

    .line 22169
    const/4 v0, -0x1

    if-nez p1, :cond_0

    .line 22170
    return v0

    .line 22172
    :cond_0
    invoke-virtual {p1}, Landroid/content/Intent;->getExtras()Landroid/os/Bundle;

    move-result-object v1

    .line 22173
    const-string v2, "android.intent.extra.UID"

    invoke-virtual {p1, v2}, Landroid/content/Intent;->hasExtra(Ljava/lang/String;)Z

    move-result p1

    if-eqz p1, :cond_1

    .line 22174
    const-string p1, "android.intent.extra.UID"

    invoke-virtual {v1, p1}, Landroid/os/Bundle;->getInt(Ljava/lang/String;)I

    move-result v0

    nop

    .line 22173
    :cond_1
    return v0
.end method

.method private final handleAppDiedLocked(Lcom/android/server/am/ProcessRecord;ZZ)V
    .locals 8
    .annotation build Lcom/android/internal/annotations/GuardedBy;
        value = "this"
    .end annotation

    .line 6073
    iget v0, p1, Lcom/android/server/am/ProcessRecord;->pid:I

    .line 6074
    if-nez p2, :cond_0

    iget-boolean v1, p1, Lcom/android/server/am/ProcessRecord;->removed:Z

    if-eqz v1, :cond_0

    iget-boolean v1, p1, Lcom/android/server/am/ProcessRecord;->foregroundActivities:Z

    .line 6075
    :cond_0
    const/4 v6, -0x1

    const/4 v7, 0x0

    move-object v2, p0

    move-object v3, p1

    move v4, p2

    move v5, p3

    invoke-direct/range {v2 .. v7}, Lcom/android/server/am/ActivityManagerService;->cleanUpApplicationRecordLocked(Lcom/android/server/am/ProcessRecord;ZZIZ)Z

    move-result p3

    .line 6077
    if-nez p3, :cond_1

    if-nez p2, :cond_1

    .line 6078
    invoke-virtual {p0, p1}, Lcom/android/server/am/ActivityManagerService;->removeLruProcessLocked(Lcom/android/server/am/ProcessRecord;)V

    .line 6079
    if-lez v0, :cond_1

    .line 6080
    invoke-static {v0}, Lcom/android/server/am/ProcessList;->remove(I)V

    .line 6084
    :cond_1
    iget-object p3, p0, Lcom/android/server/am/ActivityManagerService;->mProfileProc:Lcom/android/server/am/ProcessRecord;

    if-ne p3, p1, :cond_2

    .line 6085
    invoke-direct {p0}, Lcom/android/server/am/ActivityManagerService;->clearProfilerLocked()V

    .line 6089
    :cond_2
    iget-object p3, p0, Lcom/android/server/am/ActivityManagerService;->mStackSupervisor:Lcom/android/server/am/ActivityStackSupervisor;

    invoke-virtual {p3, p1}, Lcom/android/server/am/ActivityStackSupervisor;->handleAppDiedLocked(Lcom/android/server/am/ProcessRecord;)Z

    move-result p3

    .line 6091
    invoke-virtual {p1}, Lcom/android/server/am/ProcessRecord;->clearRecentTasks()V

    .line 6093
    iget-object v0, p1, Lcom/android/server/am/ProcessRecord;->activities:Ljava/util/ArrayList;

    invoke-virtual {v0}, Ljava/util/ArrayList;->clear()V

    .line 6095
    iget-object v0, p1, Lcom/android/server/am/ProcessRecord;->instr:Lcom/android/server/am/ActiveInstrumentation;

    const/4 v1, 0x0

    if-eqz v0, :cond_3

    .line 6096
    const-string v0, "ActivityManager"

    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    const-string v3, "Crash of app "

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget-object v3, p1, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v3, " running instrumentation "

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget-object v3, p1, Lcom/android/server/am/ProcessRecord;->instr:Lcom/android/server/am/ActiveInstrumentation;

    iget-object v3, v3, Lcom/android/server/am/ActiveInstrumentation;->mClass:Landroid/content/ComponentName;

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v2

    invoke-static {v0, v2}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 6098
    new-instance v0, Landroid/os/Bundle;

    invoke-direct {v0}, Landroid/os/Bundle;-><init>()V

    .line 6099
    const-string/jumbo v2, "shortMsg"

    const-string v3, "Process crashed."

    invoke-virtual {v0, v2, v3}, Landroid/os/Bundle;->putString(Ljava/lang/String;Ljava/lang/String;)V

    .line 6100
    invoke-virtual {p0, p1, v1, v0}, Lcom/android/server/am/ActivityManagerService;->finishInstrumentationLocked(Lcom/android/server/am/ProcessRecord;ILandroid/os/Bundle;)V

    .line 6103
    :cond_3
    iget-object p1, p0, Lcom/android/server/am/ActivityManagerService;->mWindowManager:Lcom/android/server/wm/WindowManagerService;

    invoke-virtual {p1}, Lcom/android/server/wm/WindowManagerService;->deferSurfaceLayout()V

    .line 6105
    if-nez p2, :cond_4

    if-eqz p3, :cond_4

    :try_start_0
    iget-object p1, p0, Lcom/android/server/am/ActivityManagerService;->mStackSupervisor:Lcom/android/server/am/ActivityStackSupervisor;

    .line 6106
    invoke-virtual {p1}, Lcom/android/server/am/ActivityStackSupervisor;->resumeFocusedStackTopActivityLocked()Z

    move-result p1

    if-nez p1, :cond_4

    .line 6110
    iget-object p1, p0, Lcom/android/server/am/ActivityManagerService;->mStackSupervisor:Lcom/android/server/am/ActivityStackSupervisor;

    const/4 p2, 0x0

    invoke-virtual {p1, p2, v1, v1}, Lcom/android/server/am/ActivityStackSupervisor;->ensureActivitiesVisibleLocked(Lcom/android/server/am/ActivityRecord;IZ)V
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    goto :goto_0

    .line 6113
    :catchall_0
    move-exception p1

    iget-object p2, p0, Lcom/android/server/am/ActivityManagerService;->mWindowManager:Lcom/android/server/wm/WindowManagerService;

    invoke-virtual {p2}, Lcom/android/server/wm/WindowManagerService;->continueSurfaceLayout()V

    throw p1

    :cond_4
    :goto_0
    iget-object p1, p0, Lcom/android/server/am/ActivityManagerService;->mWindowManager:Lcom/android/server/wm/WindowManagerService;

    invoke-virtual {p1}, Lcom/android/server/wm/WindowManagerService;->continueSurfaceLayout()V

    .line 6114
    nop

    .line 6116
    return-void
.end method

.method private handleProcessStartedLocked(Lcom/android/server/am/ProcessRecord;IZJZ)Z
    .locals 13
    .annotation build Lcom/android/internal/annotations/GuardedBy;
        value = "this"
    .end annotation

    move-object v7, p0

    move-object v8, p1

    move v9, p2

    move/from16 v10, p3

    move-wide/from16 v0, p4

    .line 4678
    iget-object v2, v7, Lcom/android/server/am/ActivityManagerService;->mPendingStarts:Landroid/util/LongSparseArray;

    invoke-virtual {v2, v0, v1}, Landroid/util/LongSparseArray;->remove(J)V

    .line 4679
    invoke-direct {v7, v8, v0, v1}, Lcom/android/server/am/ActivityManagerService;->isProcStartValidLocked(Lcom/android/server/am/ProcessRecord;J)Ljava/lang/String;

    move-result-object v0

    .line 4680
    const/4 v11, 0x0

    if-eqz v0, :cond_0

    .line 4681
    const-string v1, "ActivityManager"

    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    invoke-virtual {v2, v8}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    const-string v3, " start not valid, killing pid="

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v2, v9}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v3, ", "

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v2, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    invoke-static {v1, v0}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 4683
    iput-boolean v11, v8, Lcom/android/server/am/ProcessRecord;->pendingStart:Z

    .line 4684
    invoke-static {v9}, Landroid/os/Process;->killProcessQuiet(I)V

    .line 4685
    iget v0, v8, Lcom/android/server/am/ProcessRecord;->uid:I

    iget v1, v8, Lcom/android/server/am/ProcessRecord;->pid:I

    invoke-static {v0, v1}, Landroid/os/Process;->killProcessGroup(II)I

    .line 4686
    return v11

    .line 4688
    :cond_0
    iget-object v0, v7, Lcom/android/server/am/ActivityManagerService;->mBatteryStatsService:Lcom/android/server/am/BatteryStatsService;

    iget-object v1, v8, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;

    iget-object v2, v8, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget v2, v2, Landroid/content/pm/ApplicationInfo;->uid:I

    invoke-virtual {v0, v1, v2}, Lcom/android/server/am/BatteryStatsService;->noteProcessStart(Ljava/lang/String;I)V

    .line 4689
    iget-wide v0, v8, Lcom/android/server/am/ProcessRecord;->startTime:J

    const-string/jumbo v2, "startProcess: done updating battery stats"

    invoke-direct {v7, v0, v1, v2}, Lcom/android/server/am/ActivityManagerService;->checkTime(JLjava/lang/String;)V

    .line 4691
    const/16 v0, 0x753e

    const/4 v1, 0x6

    new-array v1, v1, [Ljava/lang/Object;

    iget v2, v8, Lcom/android/server/am/ProcessRecord;->startUid:I

    .line 4692
    invoke-static {v2}, Landroid/os/UserHandle;->getUserId(I)I

    move-result v2

    invoke-static {v2}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v2

    aput-object v2, v1, v11

    invoke-static {v9}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v2

    const/4 v12, 0x1

    aput-object v2, v1, v12

    const/4 v2, 0x2

    iget v3, v8, Lcom/android/server/am/ProcessRecord;->startUid:I

    invoke-static {v3}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v3

    aput-object v3, v1, v2

    const/4 v2, 0x3

    iget-object v3, v8, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;

    aput-object v3, v1, v2

    const/4 v2, 0x4

    iget-object v3, v8, Lcom/android/server/am/ProcessRecord;->hostingType:Ljava/lang/String;

    aput-object v3, v1, v2

    const/4 v2, 0x5

    .line 4694
    iget-object v3, v8, Lcom/android/server/am/ProcessRecord;->hostingNameStr:Ljava/lang/String;

    if-eqz v3, :cond_1

    iget-object v3, v8, Lcom/android/server/am/ProcessRecord;->hostingNameStr:Ljava/lang/String;

    goto :goto_0

    :cond_1
    const-string v3, ""

    :goto_0
    aput-object v3, v1, v2

    .line 4691
    invoke-static {v0, v1}, Landroid/util/EventLog;->writeEvent(I[Ljava/lang/Object;)I

    .line 4697
    :try_start_0
    invoke-static {}, Landroid/app/AppGlobals;->getPackageManager()Landroid/content/pm/IPackageManager;

    move-result-object v1

    iget-object v2, v8, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;

    iget v3, v8, Lcom/android/server/am/ProcessRecord;->uid:I

    iget-object v4, v8, Lcom/android/server/am/ProcessRecord;->seInfo:Ljava/lang/String;

    iget-object v0, v8, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget-object v5, v0, Landroid/content/pm/ApplicationInfo;->sourceDir:Ljava/lang/String;

    move v6, v9

    invoke-interface/range {v1 .. v6}, Landroid/content/pm/IPackageManager;->logAppProcessStartIfNeeded(Ljava/lang/String;ILjava/lang/String;Ljava/lang/String;I)V
    :try_end_0
    .catch Landroid/os/RemoteException; {:try_start_0 .. :try_end_0} :catch_0

    .line 4701
    goto :goto_1

    .line 4699
    :catch_0
    move-exception v0

    .line 4703
    :goto_1
    iget-boolean v0, v8, Lcom/android/server/am/ProcessRecord;->persistent:Z

    if-eqz v0, :cond_2

    .line 4704
    invoke-static {}, Lcom/android/server/Watchdog;->getInstance()Lcom/android/server/Watchdog;

    move-result-object v0

    iget-object v1, v8, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;

    invoke-virtual {v0, v1, v9}, Lcom/android/server/Watchdog;->processStarted(Ljava/lang/String;I)V

    .line 4707
    :cond_2
    iget-wide v0, v8, Lcom/android/server/am/ProcessRecord;->startTime:J

    const-string/jumbo v2, "startProcess: building log message"

    invoke-direct {v7, v0, v1, v2}, Lcom/android/server/am/ActivityManagerService;->checkTime(JLjava/lang/String;)V

    .line 4708
    iget-object v0, v7, Lcom/android/server/am/ActivityManagerService;->mStringBuilder:Ljava/lang/StringBuilder;

    .line 4709
    invoke-virtual {v0, v11}, Ljava/lang/StringBuilder;->setLength(I)V

    .line 4710
    const-string v1, "Start proc "

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 4711
    invoke-virtual {v0, v9}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    .line 4712
    const/16 v1, 0x3a

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(C)Ljava/lang/StringBuilder;

    .line 4713
    iget-object v1, v8, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 4714
    const/16 v1, 0x2f

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(C)Ljava/lang/StringBuilder;

    .line 4715
    iget v1, v8, Lcom/android/server/am/ProcessRecord;->startUid:I

    invoke-static {v0, v1}, Landroid/os/UserHandle;->formatUid(Ljava/lang/StringBuilder;I)V

    .line 4716
    iget-object v1, v8, Lcom/android/server/am/ProcessRecord;->isolatedEntryPoint:Ljava/lang/String;

    if-eqz v1, :cond_3

    .line 4717
    const-string v1, " ["

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 4718
    iget-object v1, v8, Lcom/android/server/am/ProcessRecord;->isolatedEntryPoint:Ljava/lang/String;

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 4719
    const-string v1, "]"

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 4721
    :cond_3
    const-string v1, " for "

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 4722
    iget-object v1, v8, Lcom/android/server/am/ProcessRecord;->hostingType:Ljava/lang/String;

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 4723
    iget-object v1, v8, Lcom/android/server/am/ProcessRecord;->hostingNameStr:Ljava/lang/String;

    if-eqz v1, :cond_4

    .line 4724
    const-string v1, " "

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 4725
    iget-object v1, v8, Lcom/android/server/am/ProcessRecord;->hostingNameStr:Ljava/lang/String;

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 4727
    :cond_4
    const-string v1, "ActivityManager"

    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    iget v2, v8, Lcom/android/server/am/ProcessRecord;->startUid:I

    invoke-virtual {v7, v1, v0, v2}, Lcom/android/server/am/ActivityManagerService;->reportUidInfoMessageLocked(Ljava/lang/String;Ljava/lang/String;I)V

    .line 4728
    invoke-virtual {v8, v9}, Lcom/android/server/am/ProcessRecord;->setPid(I)V

    .line 4729
    iput-boolean v10, v8, Lcom/android/server/am/ProcessRecord;->usingWrapper:Z

    .line 4730
    iput-boolean v11, v8, Lcom/android/server/am/ProcessRecord;->pendingStart:Z

    .line 4731
    iget-wide v0, v8, Lcom/android/server/am/ProcessRecord;->startTime:J

    const-string/jumbo v2, "startProcess: starting to update pids map"

    invoke-direct {v7, v0, v1, v2}, Lcom/android/server/am/ActivityManagerService;->checkTime(JLjava/lang/String;)V

    .line 4733
    iget-object v1, v7, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Landroid/util/SparseArray;

    monitor-enter v1

    .line 4734
    :try_start_1
    iget-object v0, v7, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Landroid/util/SparseArray;

    invoke-virtual {v0, v9}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    move-result-object v0

    move-object v2, v0

    check-cast v2, Lcom/android/server/am/ProcessRecord;

    .line 4735
    monitor-exit v1
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_1

    .line 4737
    if-eqz v2, :cond_5

    iget-boolean v0, v8, Lcom/android/server/am/ProcessRecord;->isolated:Z

    if-nez v0, :cond_5

    .line 4739
    const-string v0, "ActivityManager"

    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string v3, "handleProcessStartedLocked process:"

    invoke-virtual {v1, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget-object v3, v8, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;

    invoke-virtual {v1, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v3, " startSeq:"

    invoke-virtual {v1, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget-wide v3, v8, Lcom/android/server/am/ProcessRecord;->startSeq:J

    invoke-virtual {v1, v3, v4}, Ljava/lang/StringBuilder;->append(J)Ljava/lang/StringBuilder;

    const-string v3, " pid:"

    invoke-virtual {v1, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v1, v9}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v3, " belongs to another existing app:"

    invoke-virtual {v1, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget-object v3, v2, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;

    invoke-virtual {v1, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v3, " startSeq:"

    invoke-virtual {v1, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget-wide v3, v2, Lcom/android/server/am/ProcessRecord;->startSeq:J

    invoke-virtual {v1, v3, v4}, Ljava/lang/StringBuilder;->append(J)Ljava/lang/StringBuilder;

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-static {v0, v1}, Landroid/util/Slog;->wtf(Ljava/lang/String;Ljava/lang/String;)I

    .line 4744
    const/4 v3, 0x0

    const/4 v4, 0x0

    const/4 v5, -0x1

    const/4 v6, 0x1

    move-object v1, v7

    invoke-direct/range {v1 .. v6}, Lcom/android/server/am/ActivityManagerService;->cleanUpApplicationRecordLocked(Lcom/android/server/am/ProcessRecord;ZZIZ)Z

    .line 4747
    :cond_5
    iget-object v2, v7, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Landroid/util/SparseArray;

    monitor-enter v2

    .line 4748
    :try_start_2
    iget-object v0, v7, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Landroid/util/SparseArray;

    invoke-virtual {v0, v9, v8}, Landroid/util/SparseArray;->put(ILjava/lang/Object;)V

    .line 4749
    if-nez p6, :cond_7

    .line 4750
    iget-object v0, v7, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    const/16 v1, 0x14

    invoke-virtual {v0, v1}, Lcom/android/server/am/ActivityManagerService$MainHandler;->obtainMessage(I)Landroid/os/Message;

    move-result-object v0

    .line 4751
    iput-object v8, v0, Landroid/os/Message;->obj:Ljava/lang/Object;

    .line 4752
    iget-object v1, v7, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    if-eqz v10, :cond_6

    .line 4753
    const-wide/32 v3, 0x124f80

    goto :goto_2

    :cond_6
    const-wide/16 v3, 0x2710

    .line 4752
    :goto_2
    invoke-virtual {v1, v0, v3, v4}, Lcom/android/server/am/ActivityManagerService$MainHandler;->sendMessageDelayed(Landroid/os/Message;J)Z

    .line 4755
    :cond_7
    monitor-exit v2
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    .line 4756
    iget-wide v0, v8, Lcom/android/server/am/ProcessRecord;->startTime:J

    const-string/jumbo v2, "startProcess: done updating pids map"

    invoke-direct {v7, v0, v1, v2}, Lcom/android/server/am/ActivityManagerService;->checkTime(JLjava/lang/String;)V

    .line 4757
    return v12

    .line 4755
    :catchall_0
    move-exception v0

    :try_start_3
    monitor-exit v2
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_0

    throw v0

    .line 4735
    :catchall_1
    move-exception v0

    :try_start_4
    monitor-exit v1
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_1

    throw v0
.end method

.method private handleProcessStartedLocked(Lcom/android/server/am/ProcessRecord;Landroid/os/Process$ProcessStartResult;J)Z
    .locals 7
    .annotation build Lcom/android/internal/annotations/GuardedBy;
        value = "this"
    .end annotation

    .line 4664
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mPendingStarts:Landroid/util/LongSparseArray;

    invoke-virtual {v0, p3, p4}, Landroid/util/LongSparseArray;->get(J)Ljava/lang/Object;

    move-result-object v0

    if-nez v0, :cond_1

    .line 4665
    iget p3, p1, Lcom/android/server/am/ProcessRecord;->pid:I

    iget p4, p2, Landroid/os/Process$ProcessStartResult;->pid:I

    if-ne p3, p4, :cond_0

    .line 4666
    iget-boolean p2, p2, Landroid/os/Process$ProcessStartResult;->usingWrapper:Z

    iput-boolean p2, p1, Lcom/android/server/am/ProcessRecord;->usingWrapper:Z

    .line 4669
    :cond_0
    const/4 p1, 0x0

    return p1

    .line 4671
    :cond_1
    iget v2, p2, Landroid/os/Process$ProcessStartResult;->pid:I

    iget-boolean v3, p2, Landroid/os/Process$ProcessStartResult;->usingWrapper:Z

    const/4 v6, 0x0

    move-object v0, p0

    move-object v1, p1

    move-wide v4, p3

    invoke-direct/range {v0 .. v6}, Lcom/android/server/am/ActivityManagerService;->handleProcessStartedLocked(Lcom/android/server/am/ProcessRecord;IZJZ)Z

    move-result p1

    return p1
.end method

.method private hasUsageStatsPermission(Ljava/lang/String;)Z
    .locals 3

    .line 4926
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mAppOpsService:Lcom/android/server/AppOpsService;

    .line 4927
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v1

    .line 4926
    const/16 v2, 0x2b

    invoke-virtual {v0, v2, v1, p1}, Lcom/android/server/AppOpsService;->noteOperation(IILjava/lang/String;)I

    move-result p1

    .line 4928
    const/4 v0, 0x0

    const/4 v1, 0x1

    const/4 v2, 0x3

    if-ne p1, v2, :cond_1

    .line 4929
    const-string p1, "android.permission.PACKAGE_USAGE_STATS"

    invoke-virtual {p0, p1}, Lcom/android/server/am/ActivityManagerService;->checkCallingPermission(Ljava/lang/String;)I

    move-result p1

    if-nez p1, :cond_0

    move v0, v1

    nop

    :cond_0
    return v0

    .line 4932
    :cond_1
    if-nez p1, :cond_2

    move v0, v1

    nop

    :cond_2
    return v0
.end method

.method private isAppForegroundInternal(I)Z
    .locals 2

    .line 8984
    monitor-enter p0

    :try_start_0
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    .line 8985
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mActiveUids:Landroid/util/SparseArray;

    invoke-virtual {v0, p1}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    move-result-object p1

    check-cast p1, Lcom/android/server/am/UidRecord;

    .line 8986
    const/4 v0, 0x0

    if-eqz p1, :cond_2

    iget-boolean v1, p1, Lcom/android/server/am/UidRecord;->idle:Z

    if-eqz v1, :cond_0

    goto :goto_0

    .line 8989
    :cond_0
    iget p1, p1, Lcom/android/server/am/UidRecord;->curProcState:I

    const/4 v1, 0x5

    if-gt p1, v1, :cond_1

    const/4 v0, 0x1

    nop

    :cond_1
    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    return v0

    .line 8987
    :cond_2
    :goto_0
    :try_start_1
    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    return v0

    .line 8990
    :catchall_0
    move-exception p1

    :try_start_2
    monitor-exit p0
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw p1
.end method

.method private isEphemeralLocked(I)Z
    .locals 4

    .line 25005
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mContext:Landroid/content/Context;

    invoke-virtual {v0}, Landroid/content/Context;->getPackageManager()Landroid/content/pm/PackageManager;

    move-result-object v0

    invoke-virtual {v0, p1}, Landroid/content/pm/PackageManager;->getPackagesForUid(I)[Ljava/lang/String;

    move-result-object v0

    .line 25006
    const/4 v1, 0x0

    if-eqz v0, :cond_1

    array-length v2, v0

    const/4 v3, 0x1

    if-eq v2, v3, :cond_0

    goto :goto_0

    .line 25009
    :cond_0
    invoke-virtual {p0}, Lcom/android/server/am/ActivityManagerService;->getPackageManagerInternalLocked()Landroid/content/pm/PackageManagerInternal;

    move-result-object v2

    invoke-static {p1}, Landroid/os/UserHandle;->getUserId(I)I

    move-result p1

    aget-object v0, v0, v1

    invoke-virtual {v2, p1, v0}, Landroid/content/pm/PackageManagerInternal;->isPackageEphemeral(ILjava/lang/String;)Z

    move-result p1

    return p1

    .line 25007
    :cond_1
    :goto_0
    return v1
.end method

.method private isGetTasksAllowed(Ljava/lang/String;II)Z
    .locals 2

    .line 10918
    iget-object p1, p0, Lcom/android/server/am/ActivityManagerService;->mRecentTasks:Lcom/android/server/am/RecentTasks;

    invoke-virtual {p1, p3}, Lcom/android/server/am/RecentTasks;->isCallerRecents(I)Z

    move-result p1

    const/4 v0, 0x1

    if-eqz p1, :cond_0

    .line 10920
    return v0

    .line 10923
    :cond_0
    const-string p1, "android.permission.REAL_GET_TASKS"

    invoke-virtual {p0, p1, p2, p3}, Lcom/android/server/am/ActivityManagerService;->checkPermission(Ljava/lang/String;II)I

    move-result p1

    if-nez p1, :cond_1

    .line 10925
    move p1, v0

    goto :goto_0

    .line 10923
    :cond_1
    const/4 p1, 0x0

    .line 10925
    :goto_0
    if-nez p1, :cond_3

    .line 10926
    const-string v1, "android.permission.GET_TASKS"

    invoke-virtual {p0, v1, p2, p3}, Lcom/android/server/am/ActivityManagerService;->checkPermission(Ljava/lang/String;II)I

    move-result p2

    if-nez p2, :cond_3

    .line 10933
    :try_start_0
    invoke-static {}, Landroid/app/AppGlobals;->getPackageManager()Landroid/content/pm/IPackageManager;

    move-result-object p2

    invoke-interface {p2, p3}, Landroid/content/pm/IPackageManager;->isUidPrivileged(I)Z

    move-result p2
    :try_end_0
    .catch Landroid/os/RemoteException; {:try_start_0 .. :try_end_0} :catch_0

    if-eqz p2, :cond_2

    .line 10934
    nop

    .line 10939
    move p1, v0

    :cond_2
    goto :goto_1

    .line 10938
    :catch_0
    move-exception p2

    .line 10942
    :cond_3
    :goto_1
    nop

    .line 10946
    return p1
.end method

.method private isInPictureInPictureMode(Lcom/android/server/am/ActivityRecord;)Z
    .locals 1

    .line 9036
    if-eqz p1, :cond_1

    invoke-virtual {p1}, Lcom/android/server/am/ActivityRecord;->getStack()Lcom/android/server/am/ActivityStack;

    move-result-object v0

    if-eqz v0, :cond_1

    invoke-virtual {p1}, Lcom/android/server/am/ActivityRecord;->inPinnedWindowingMode()Z

    move-result v0

    if-eqz v0, :cond_1

    .line 9037
    invoke-virtual {p1}, Lcom/android/server/am/ActivityRecord;->getStack()Lcom/android/server/am/ActivityStack;

    move-result-object v0

    invoke-virtual {v0, p1}, Lcom/android/server/am/ActivityStack;->isInStackLocked(Lcom/android/server/am/ActivityRecord;)Lcom/android/server/am/ActivityRecord;

    move-result-object v0

    if-nez v0, :cond_0

    goto :goto_0

    .line 9043
    :cond_0
    invoke-virtual {p1}, Lcom/android/server/am/ActivityRecord;->getStack()Lcom/android/server/am/ActivityStack;

    move-result-object p1

    check-cast p1, Lcom/android/server/am/PinnedActivityStack;

    .line 9044
    invoke-virtual {p1}, Lcom/android/server/am/PinnedActivityStack;->getWindowContainerController()Lcom/android/server/wm/StackWindowController;

    move-result-object p1

    check-cast p1, Lcom/android/server/wm/PinnedStackWindowController;

    .line 9045
    invoke-virtual {p1}, Lcom/android/server/wm/PinnedStackWindowController;->isAnimatingBoundsToFullscreen()Z

    move-result p1

    xor-int/lit8 p1, p1, 0x1

    return p1

    .line 9038
    :cond_1
    :goto_0
    const/4 p1, 0x0

    return p1
.end method

.method private isInstantApp(Lcom/android/server/am/ProcessRecord;Ljava/lang/String;I)Z
    .locals 3

    .line 21064
    invoke-static {p3}, Landroid/os/UserHandle;->getAppId(I)I

    move-result v0

    const/4 v1, 0x0

    const/16 v2, 0x2710

    if-ge v0, v2, :cond_0

    .line 21065
    return v1

    .line 21068
    :cond_0
    if-eqz p1, :cond_1

    .line 21069
    iget-object p1, p1, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    invoke-virtual {p1}, Landroid/content/pm/ApplicationInfo;->isInstantApp()Z

    move-result p1

    return p1

    .line 21072
    :cond_1
    invoke-static {}, Landroid/app/AppGlobals;->getPackageManager()Landroid/content/pm/IPackageManager;

    move-result-object p1

    .line 21074
    if-nez p2, :cond_3

    .line 21075
    :try_start_0
    invoke-interface {p1, p3}, Landroid/content/pm/IPackageManager;->getPackagesForUid(I)[Ljava/lang/String;

    move-result-object v0

    .line 21076
    if-eqz v0, :cond_2

    array-length v2, v0

    if-eqz v2, :cond_2

    .line 21080
    aget-object v0, v0, v1

    .line 21082
    move-object p2, v0

    goto :goto_0

    .line 21077
    :cond_2
    new-instance p1, Ljava/lang/IllegalArgumentException;

    const-string p3, "Unable to determine caller package name"

    invoke-direct {p1, p3}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw p1

    .line 21084
    :catch_0
    move-exception p1

    goto :goto_1

    .line 21082
    :cond_3
    :goto_0
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mAppOpsService:Lcom/android/server/AppOpsService;

    invoke-virtual {v0, p3, p2}, Lcom/android/server/AppOpsService;->checkPackage(ILjava/lang/String;)I

    .line 21083
    invoke-static {p3}, Landroid/os/UserHandle;->getUserId(I)I

    move-result p3

    invoke-interface {p1, p2, p3}, Landroid/content/pm/IPackageManager;->isInstantApp(Ljava/lang/String;I)Z

    move-result p1
    :try_end_0
    .catch Landroid/os/RemoteException; {:try_start_0 .. :try_end_0} :catch_0

    return p1

    .line 21084
    :goto_1
    nop

    .line 21085
    const-string p3, "ActivityManager"

    new-instance v0, Ljava/lang/StringBuilder;

    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V

    const-string v1, "Error looking up if "

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0, p2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string p2, " is an instant app."

    invoke-virtual {v0, p2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object p2

    invoke-static {p3, p2, p1}, Landroid/util/Slog;->e(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I

    .line 21086
    const/4 p1, 0x1

    return p1
.end method

.method private isPermittedShellBroadcast(Landroid/content/Intent;)Z
    .locals 1

    .line 21432
    const-string v0, "com.android.internal.intent.action.REMOTE_BUGREPORT_FINISHED"

    invoke-virtual {p1}, Landroid/content/Intent;->getAction()Ljava/lang/String;

    move-result-object p1

    invoke-virtual {v0, p1}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result p1

    return p1
.end method

.method private isProcStartValidLocked(Lcom/android/server/am/ProcessRecord;J)Ljava/lang/String;
    .locals 5
    .annotation build Lcom/android/internal/annotations/GuardedBy;
        value = "this"
    .end annotation

    .line 4640
    nop

    .line 4641
    iget-boolean v0, p1, Lcom/android/server/am/ProcessRecord;->killedByAm:Z

    const/4 v1, 0x0

    if-eqz v0, :cond_0

    .line 4642
    new-instance v0, Ljava/lang/StringBuilder;

    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V

    .line 4643
    const-string v2, "killedByAm=true;"

    invoke-virtual {v0, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    goto :goto_0

    .line 4645
    :cond_0
    move-object v0, v1

    :goto_0
    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mProcessNames:Lcom/android/internal/app/ProcessMap;

    iget-object v3, p1, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;

    iget v4, p1, Lcom/android/server/am/ProcessRecord;->uid:I

    invoke-virtual {v2, v3, v4}, Lcom/android/internal/app/ProcessMap;->get(Ljava/lang/String;I)Ljava/lang/Object;

    move-result-object v2

    if-eq v2, p1, :cond_2

    .line 4646
    if-nez v0, :cond_1

    new-instance v0, Ljava/lang/StringBuilder;

    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V

    .line 4647
    :cond_1
    const-string v2, "No entry in mProcessNames;"

    invoke-virtual {v0, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 4649
    :cond_2
    iget-boolean v2, p1, Lcom/android/server/am/ProcessRecord;->pendingStart:Z

    if-nez v2, :cond_4

    .line 4650
    if-nez v0, :cond_3

    new-instance v0, Ljava/lang/StringBuilder;

    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V

    .line 4651
    :cond_3
    const-string/jumbo v2, "pendingStart=false;"

    invoke-virtual {v0, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 4653
    :cond_4
    iget-wide v2, p1, Lcom/android/server/am/ProcessRecord;->startSeq:J

    cmp-long v2, v2, p2

    if-lez v2, :cond_6

    .line 4654
    if-nez v0, :cond_5

    new-instance v0, Ljava/lang/StringBuilder;

    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V

    .line 4655
    :cond_5
    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v3, "seq="

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget-wide v3, p1, Lcom/android/server/am/ProcessRecord;->startSeq:J

    invoke-virtual {v2, v3, v4}, Ljava/lang/StringBuilder;->append(J)Ljava/lang/StringBuilder;

    const-string p1, ",expected="

    invoke-virtual {v2, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v2, p2, p3}, Ljava/lang/StringBuilder;->append(J)Ljava/lang/StringBuilder;

    const-string p1, ";"

    invoke-virtual {v2, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object p1

    invoke-virtual {v0, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 4657
    :cond_6
    if-nez v0, :cond_7

    goto :goto_1

    :cond_7
    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    :goto_1
    return-object v1
.end method

.method private isProcessAliveLocked(Lcom/android/server/am/ProcessRecord;)Z
    .locals 6

    .line 12360
    iget v0, p1, Lcom/android/server/am/ProcessRecord;->pid:I

    const/4 v1, 0x0

    if-gtz v0, :cond_0

    .line 12362
    return v1

    .line 12364
    :cond_0
    iget-object v0, p1, Lcom/android/server/am/ProcessRecord;->procStatFile:Ljava/lang/String;

    if-nez v0, :cond_1

    .line 12365
    new-instance v0, Ljava/lang/StringBuilder;

    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V

    const-string v2, "/proc/"

    invoke-virtual {v0, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget v2, p1, Lcom/android/server/am/ProcessRecord;->pid:I

    invoke-virtual {v0, v2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v2, "/stat"

    invoke-virtual {v0, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    iput-object v0, p1, Lcom/android/server/am/ProcessRecord;->procStatFile:Ljava/lang/String;

    .line 12367
    :cond_1
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mProcessStateStatsLongs:[J

    const-wide/16 v2, 0x0

    aput-wide v2, v0, v1

    .line 12368
    iget-object p1, p1, Lcom/android/server/am/ProcessRecord;->procStatFile:Ljava/lang/String;

    sget-object v0, Lcom/android/server/am/ActivityManagerService;->PROCESS_STATE_STATS_FORMAT:[I

    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mProcessStateStatsLongs:[J

    const/4 v3, 0x0

    invoke-static {p1, v0, v3, v2, v3}, Landroid/os/Process;->readProcFile(Ljava/lang/String;[I[Ljava/lang/String;[J[F)Z

    move-result p1

    if-nez p1, :cond_2

    .line 12371
    return v1

    .line 12373
    :cond_2
    iget-object p1, p0, Lcom/android/server/am/ActivityManagerService;->mProcessStateStatsLongs:[J

    aget-wide v2, p1, v1

    .line 12376
    const-wide/16 v4, 0x5a

    cmp-long p1, v2, v4

    if-eqz p1, :cond_3

    const-wide/16 v4, 0x58

    cmp-long p1, v2, v4

    if-eqz p1, :cond_3

    const-wide/16 v4, 0x78

    cmp-long p1, v2, v4

    if-eqz p1, :cond_3

    const-wide/16 v4, 0x4b

    cmp-long p1, v2, v4

    if-eqz p1, :cond_3

    const/4 v1, 0x1

    nop

    :cond_3
    return v1
.end method

.method private isReceivingBroadcastLocked(Lcom/android/server/am/ProcessRecord;Landroid/util/ArraySet;)Z
    .locals 6
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "(",
            "Lcom/android/server/am/ProcessRecord;",
            "Landroid/util/ArraySet<",
            "Lcom/android/server/am/BroadcastQueue;",
            ">;)Z"
        }
    .end annotation

    .line 23228
    iget-object v0, p1, Lcom/android/server/am/ProcessRecord;->curReceivers:Landroid/util/ArraySet;

    invoke-virtual {v0}, Landroid/util/ArraySet;->size()I

    move-result v0

    .line 23229
    const/4 v1, 0x0

    const/4 v2, 0x1

    if-lez v0, :cond_1

    .line 23230
    :goto_0
    if-ge v1, v0, :cond_0

    .line 23231
    iget-object v3, p1, Lcom/android/server/am/ProcessRecord;->curReceivers:Landroid/util/ArraySet;

    invoke-virtual {v3, v1}, Landroid/util/ArraySet;->valueAt(I)Ljava/lang/Object;

    move-result-object v3

    check-cast v3, Lcom/android/server/am/BroadcastRecord;

    iget-object v3, v3, Lcom/android/server/am/BroadcastRecord;->queue:Lcom/android/server/am/BroadcastQueue;

    invoke-virtual {p2, v3}, Landroid/util/ArraySet;->add(Ljava/lang/Object;)Z

    .line 23230
    add-int/lit8 v1, v1, 0x1

    goto :goto_0

    .line 23233
    :cond_0
    return v2

    .line 23237
    :cond_1
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mBroadcastQueues:[Lcom/android/server/am/BroadcastQueue;

    array-length v3, v0

    :goto_1
    if-ge v1, v3, :cond_3

    aget-object v4, v0, v1

    .line 23238
    iget-object v5, v4, Lcom/android/server/am/BroadcastQueue;->mPendingBroadcast:Lcom/android/server/am/BroadcastRecord;

    .line 23239
    if-eqz v5, :cond_2

    iget-object v5, v5, Lcom/android/server/am/BroadcastRecord;->curApp:Lcom/android/server/am/ProcessRecord;

    if-ne v5, p1, :cond_2

    .line 23241
    invoke-virtual {p2, v4}, Landroid/util/ArraySet;->add(Ljava/lang/Object;)Z

    .line 23237
    :cond_2
    add-int/lit8 v1, v1, 0x1

    goto :goto_1

    .line 23245
    :cond_3
    invoke-virtual {p2}, Landroid/util/ArraySet;->isEmpty()Z

    move-result p1

    xor-int/2addr p1, v2

    return p1
.end method

.method private static isSplitConfigurationChange(I)Z
    .locals 0

    .line 22836
    and-int/lit16 p0, p0, 0x1004

    if-eqz p0, :cond_0

    const/4 p0, 0x1

    goto :goto_0

    :cond_0
    const/4 p0, 0x0

    :goto_0
    return p0
.end method

.method private killAllBackgroundProcessesExcept(II)V
    .locals 12

    .line 6956
    const-string v0, "android.permission.KILL_BACKGROUND_PROCESSES"

    invoke-virtual {p0, v0}, Lcom/android/server/am/ActivityManagerService;->checkCallingPermission(Ljava/lang/String;)I

    move-result v0

    if-nez v0, :cond_7

    .line 6965
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v0

    .line 6967
    :try_start_0
    monitor-enter p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_1

    :try_start_1
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    .line 6968
    new-instance v2, Ljava/util/ArrayList;

    invoke-direct {v2}, Ljava/util/ArrayList;-><init>()V

    .line 6969
    iget-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mProcessNames:Lcom/android/internal/app/ProcessMap;

    invoke-virtual {v3}, Lcom/android/internal/app/ProcessMap;->getMap()Landroid/util/ArrayMap;

    move-result-object v3

    invoke-virtual {v3}, Landroid/util/ArrayMap;->size()I

    move-result v3

    .line 6970
    const/4 v4, 0x0

    move v5, v4

    :goto_0
    const/4 v6, 0x1

    if-ge v5, v3, :cond_5

    .line 6971
    iget-object v7, p0, Lcom/android/server/am/ActivityManagerService;->mProcessNames:Lcom/android/internal/app/ProcessMap;

    invoke-virtual {v7}, Lcom/android/internal/app/ProcessMap;->getMap()Landroid/util/ArrayMap;

    move-result-object v7

    invoke-virtual {v7, v5}, Landroid/util/ArrayMap;->valueAt(I)Ljava/lang/Object;

    move-result-object v7

    check-cast v7, Landroid/util/SparseArray;

    .line 6972
    invoke-virtual {v7}, Landroid/util/SparseArray;->size()I

    move-result v8

    .line 6973
    move v9, v4

    :goto_1
    if-ge v9, v8, :cond_4

    .line 6974
    invoke-virtual {v7, v9}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;

    move-result-object v10

    check-cast v10, Lcom/android/server/am/ProcessRecord;

    .line 6975
    iget-boolean v11, v10, Lcom/android/server/am/ProcessRecord;->removed:Z

    if-eqz v11, :cond_0

    .line 6976
    invoke-virtual {v2, v10}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    goto :goto_2

    .line 6977
    :cond_0
    if-ltz p1, :cond_1

    iget-object v11, v10, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget v11, v11, Landroid/content/pm/ApplicationInfo;->targetSdkVersion:I

    if-ge v11, p1, :cond_3

    :cond_1
    if-ltz p2, :cond_2

    iget v11, v10, Lcom/android/server/am/ProcessRecord;->setProcState:I

    if-le v11, p2, :cond_3

    .line 6979
    :cond_2
    iput-boolean v6, v10, Lcom/android/server/am/ProcessRecord;->removed:Z

    .line 6980
    invoke-virtual {v2, v10}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    .line 6973
    :cond_3
    :goto_2
    add-int/lit8 v9, v9, 0x1

    goto :goto_1

    .line 6970
    :cond_4
    add-int/lit8 v5, v5, 0x1

    goto :goto_0

    .line 6985
    :cond_5
    invoke-virtual {v2}, Ljava/util/ArrayList;->size()I

    move-result p1

    .line 6986
    move p2, v4

    :goto_3
    if-ge p2, p1, :cond_6

    .line 6987
    invoke-virtual {v2, p2}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v3

    check-cast v3, Lcom/android/server/am/ProcessRecord;

    const-string v5, "kill all background except"

    invoke-virtual {p0, v3, v4, v6, v5}, Lcom/android/server/am/ActivityManagerService;->removeProcessLocked(Lcom/android/server/am/ProcessRecord;ZZLjava/lang/String;)Z

    .line 6986
    add-int/lit8 p2, p2, 0x1

    goto :goto_3

    .line 6989
    :cond_6
    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    :try_start_2
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_1

    .line 6991
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 6992
    nop

    .line 6993
    return-void

    .line 6989
    :catchall_0
    move-exception p1

    :try_start_3
    monitor-exit p0
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_0

    :try_start_4
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw p1
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_1

    .line 6991
    :catchall_1
    move-exception p1

    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    throw p1

    .line 6958
    :cond_7
    new-instance p1, Ljava/lang/StringBuilder;

    invoke-direct {p1}, Ljava/lang/StringBuilder;-><init>()V

    const-string p2, "Permission Denial: killAllBackgroundProcessesExcept() from pid="

    invoke-virtual {p1, p2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 6959
    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result p2

    invoke-virtual {p1, p2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string p2, ", uid="

    invoke-virtual {p1, p2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result p2

    invoke-virtual {p1, p2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string p2, " requires "

    invoke-virtual {p1, p2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string p2, "android.permission.KILL_BACKGROUND_PROCESSES"

    invoke-virtual {p1, p2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {p1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object p1

    .line 6961
    const-string p2, "ActivityManager"

    invoke-static {p2, p1}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 6962
    new-instance p2, Ljava/lang/SecurityException;

    invoke-direct {p2, p1}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw p2
.end method

.method private final killPackageProcessesLocked(Ljava/lang/String;IIIZZZZLjava/lang/String;)Z
    .locals 17
    .annotation build Lcom/android/internal/annotations/GuardedBy;
        value = "this"
    .end annotation

    move-object/from16 v0, p0

    move-object/from16 v1, p1

    move/from16 v2, p2

    move/from16 v3, p3

    .line 7265
    new-instance v5, Ljava/util/ArrayList;

    invoke-direct {v5}, Ljava/util/ArrayList;-><init>()V

    .line 7270
    iget-object v6, v0, Lcom/android/server/am/ActivityManagerService;->mProcessNames:Lcom/android/internal/app/ProcessMap;

    invoke-virtual {v6}, Lcom/android/internal/app/ProcessMap;->getMap()Landroid/util/ArrayMap;

    move-result-object v6

    invoke-virtual {v6}, Landroid/util/ArrayMap;->size()I

    move-result v6

    .line 7271
    const/4 v8, 0x0

    :goto_0
    if-ge v8, v6, :cond_c

    .line 7272
    iget-object v10, v0, Lcom/android/server/am/ActivityManagerService;->mProcessNames:Lcom/android/internal/app/ProcessMap;

    invoke-virtual {v10}, Lcom/android/internal/app/ProcessMap;->getMap()Landroid/util/ArrayMap;

    move-result-object v10

    invoke-virtual {v10, v8}, Landroid/util/ArrayMap;->valueAt(I)Ljava/lang/Object;

    move-result-object v10

    check-cast v10, Landroid/util/SparseArray;

    .line 7273
    invoke-virtual {v10}, Landroid/util/SparseArray;->size()I

    move-result v11

    .line 7274
    const/4 v12, 0x0

    :goto_1
    if-ge v12, v11, :cond_b

    .line 7275
    invoke-virtual {v10, v12}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;

    move-result-object v13

    check-cast v13, Lcom/android/server/am/ProcessRecord;

    .line 7276
    iget-boolean v14, v13, Lcom/android/server/am/ProcessRecord;->persistent:Z

    if-eqz v14, :cond_1

    if-nez p8, :cond_1

    .line 7278
    nop

    .line 7274
    :cond_0
    :goto_2
    move/from16 v7, p4

    :goto_3
    const/4 v9, 0x1

    goto/16 :goto_5

    .line 7280
    :cond_1
    iget-boolean v15, v13, Lcom/android/server/am/ProcessRecord;->removed:Z

    if-eqz v15, :cond_2

    .line 7281
    if-eqz p7, :cond_0

    .line 7282
    invoke-virtual {v5, v13}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    goto :goto_2

    .line 7288
    :cond_2
    iget v15, v13, Lcom/android/server/am/ProcessRecord;->setAdj:I

    move/from16 v7, p4

    if-ge v15, v7, :cond_3

    .line 7289
    goto :goto_3

    .line 7294
    :cond_3
    const/4 v15, -0x1

    if-nez v1, :cond_5

    .line 7295
    if-eq v3, v15, :cond_4

    iget v15, v13, Lcom/android/server/am/ProcessRecord;->userId:I

    if-eq v15, v3, :cond_4

    .line 7296
    goto :goto_3

    .line 7298
    :cond_4
    if-ltz v2, :cond_9

    iget v15, v13, Lcom/android/server/am/ProcessRecord;->uid:I

    invoke-static {v15}, Landroid/os/UserHandle;->getAppId(I)I

    move-result v15

    if-eq v15, v2, :cond_9

    .line 7299
    goto :goto_3

    .line 7305
    :cond_5
    iget-object v9, v13, Lcom/android/server/am/ProcessRecord;->pkgDeps:Landroid/util/ArraySet;

    if-eqz v9, :cond_6

    iget-object v9, v13, Lcom/android/server/am/ProcessRecord;->pkgDeps:Landroid/util/ArraySet;

    .line 7306
    invoke-virtual {v9, v1}, Landroid/util/ArraySet;->contains(Ljava/lang/Object;)Z

    move-result v9

    if-eqz v9, :cond_6

    .line 7307
    const/4 v9, 0x1

    goto :goto_4

    .line 7306
    :cond_6
    nop

    .line 7307
    const/4 v9, 0x0

    :goto_4
    if-nez v9, :cond_7

    iget v15, v13, Lcom/android/server/am/ProcessRecord;->uid:I

    invoke-static {v15}, Landroid/os/UserHandle;->getAppId(I)I

    move-result v15

    if-eq v15, v2, :cond_7

    .line 7308
    goto :goto_3

    .line 7310
    :cond_7
    const/4 v15, -0x1

    if-eq v3, v15, :cond_8

    iget v15, v13, Lcom/android/server/am/ProcessRecord;->userId:I

    if-eq v15, v3, :cond_8

    .line 7311
    goto :goto_3

    .line 7313
    :cond_8
    iget-object v15, v13, Lcom/android/server/am/ProcessRecord;->pkgList:Landroid/util/ArrayMap;

    invoke-virtual {v15, v1}, Landroid/util/ArrayMap;->containsKey(Ljava/lang/Object;)Z

    move-result v15

    if-nez v15, :cond_9

    if-nez v9, :cond_9

    .line 7314
    goto :goto_3

    .line 7319
    :cond_9
    if-nez p7, :cond_a

    .line 7320
    const/4 v9, 0x1

    return v9

    .line 7322
    :cond_a
    const/4 v9, 0x1

    iput-boolean v9, v13, Lcom/android/server/am/ProcessRecord;->removed:Z

    .line 7323
    invoke-virtual {v5, v13}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    .line 7274
    :goto_5
    add-int/lit8 v12, v12, 0x1

    goto :goto_1

    .line 7271
    :cond_b
    move/from16 v7, p4

    add-int/lit8 v8, v8, 0x1

    goto/16 :goto_0

    .line 7327
    :cond_c
    const/4 v9, 0x1

    invoke-virtual {v5}, Ljava/util/ArrayList;->size()I

    move-result v1

    .line 7328
    const/4 v2, 0x0

    :goto_6
    if-ge v2, v1, :cond_d

    .line 7329
    invoke-virtual {v5, v2}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v3

    check-cast v3, Lcom/android/server/am/ProcessRecord;

    move/from16 v4, p5

    move/from16 v6, p6

    move-object/from16 v7, p9

    invoke-virtual {v0, v3, v4, v6, v7}, Lcom/android/server/am/ActivityManagerService;->removeProcessLocked(Lcom/android/server/am/ProcessRecord;ZZLjava/lang/String;)Z

    .line 7328
    add-int/lit8 v2, v2, 0x1

    goto :goto_6

    .line 7331
    :cond_d
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/am/ActivityManagerService;->updateOomAdjLocked()V

    .line 7332
    if-lez v1, :cond_e

    goto :goto_7

    :cond_e
    const/4 v9, 0x0

    :goto_7
    return v9
.end method

.method static killProcessGroup(II)V
    .locals 3

    .line 3865
    sget-object v0, Lcom/android/server/am/ActivityManagerService;->sKillHandler:Lcom/android/server/am/ActivityManagerService$KillHandler;

    if-eqz v0, :cond_0

    .line 3866
    sget-object v0, Lcom/android/server/am/ActivityManagerService;->sKillHandler:Lcom/android/server/am/ActivityManagerService$KillHandler;

    sget-object v1, Lcom/android/server/am/ActivityManagerService;->sKillHandler:Lcom/android/server/am/ActivityManagerService$KillHandler;

    const/16 v2, 0xfa0

    .line 3867
    invoke-virtual {v1, v2, p0, p1}, Lcom/android/server/am/ActivityManagerService$KillHandler;->obtainMessage(III)Landroid/os/Message;

    move-result-object p0

    .line 3866
    invoke-virtual {v0, p0}, Lcom/android/server/am/ActivityManagerService$KillHandler;->sendMessage(Landroid/os/Message;)Z

    goto :goto_0

    .line 3869
    :cond_0
    const-string v0, "ActivityManager"

    const-string v1, "Asked to kill process group before system bringup!"

    invoke-static {v0, v1}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 3870
    invoke-static {p0, p1}, Landroid/os/Process;->killProcessGroup(II)I

    .line 3872
    :goto_0
    return-void
.end method

.method private killProcessesBelowAdj(ILjava/lang/String;)Z
    .locals 7

    .line 15156
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v0

    const/16 v1, 0x3e8

    if-ne v0, v1, :cond_3

    .line 15160
    nop

    .line 15161
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Landroid/util/SparseArray;

    monitor-enter v0

    .line 15162
    :try_start_0
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Landroid/util/SparseArray;

    invoke-virtual {v1}, Landroid/util/SparseArray;->size()I

    move-result v1

    .line 15163
    const/4 v2, 0x0

    move v3, v2

    :goto_0
    if-ge v2, v1, :cond_2

    .line 15164
    iget-object v4, p0, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Landroid/util/SparseArray;

    invoke-virtual {v4, v2}, Landroid/util/SparseArray;->keyAt(I)I

    .line 15165
    iget-object v4, p0, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Landroid/util/SparseArray;

    invoke-virtual {v4, v2}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;

    move-result-object v4

    check-cast v4, Lcom/android/server/am/ProcessRecord;

    .line 15166
    const/4 v5, 0x1

    if-nez v4, :cond_0

    goto :goto_1

    .line 15168
    :cond_0
    iget v6, v4, Lcom/android/server/am/ProcessRecord;->setAdj:I

    .line 15169
    if-le v6, p1, :cond_1

    iget-boolean v6, v4, Lcom/android/server/am/ProcessRecord;->killedByAm:Z

    if-nez v6, :cond_1

    .line 15170
    invoke-virtual {v4, p2, v5}, Lcom/android/server/am/ProcessRecord;->kill(Ljava/lang/String;Z)V

    .line 15171
    nop

    .line 15163
    move v3, v5

    :cond_1
    :goto_1
    add-int/lit8 v2, v2, 0x1

    goto :goto_0

    .line 15174
    :cond_2
    monitor-exit v0

    .line 15175
    return v3

    .line 15174
    :catchall_0
    move-exception p1

    monitor-exit v0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    throw p1

    .line 15157
    :cond_3
    new-instance p1, Ljava/lang/SecurityException;

    const-string p2, "killProcessesBelowAdj() only available to system"

    invoke-direct {p1, p2}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw p1
.end method

.method public static synthetic lambda$enterPictureInPictureMode$1(Lcom/android/server/am/ActivityManagerService;Lcom/android/server/am/ActivityRecord;Landroid/app/PictureInPictureParams;)V
    .locals 5

    .line 9069
    iget-boolean v0, p1, Lcom/android/server/am/ActivityRecord;->finishing:Z

    if-nez v0, :cond_1

    invoke-virtual {p1}, Lcom/android/server/am/ActivityRecord;->getTask()Lcom/android/server/am/TaskRecord;

    move-result-object v0

    if-nez v0, :cond_0

    goto :goto_0

    .line 9071
    :cond_0
    iget-object v0, p1, Lcom/android/server/am/ActivityRecord;->pictureInPictureArgs:Landroid/app/PictureInPictureParams;

    invoke-virtual {v0, p2}, Landroid/app/PictureInPictureParams;->copyOnlySet(Landroid/app/PictureInPictureParams;)V

    .line 9072
    iget-object v0, p1, Lcom/android/server/am/ActivityRecord;->pictureInPictureArgs:Landroid/app/PictureInPictureParams;

    invoke-virtual {v0}, Landroid/app/PictureInPictureParams;->getAspectRatio()F

    move-result v0

    .line 9073
    iget-object v1, p1, Lcom/android/server/am/ActivityRecord;->pictureInPictureArgs:Landroid/app/PictureInPictureParams;

    invoke-virtual {v1}, Landroid/app/PictureInPictureParams;->getActions()Ljava/util/List;

    move-result-object v1

    .line 9075
    new-instance v2, Landroid/graphics/Rect;

    iget-object v3, p1, Lcom/android/server/am/ActivityRecord;->pictureInPictureArgs:Landroid/app/PictureInPictureParams;

    invoke-virtual {v3}, Landroid/app/PictureInPictureParams;->getSourceRectHint()Landroid/graphics/Rect;

    move-result-object v3

    invoke-direct {v2, v3}, Landroid/graphics/Rect;-><init>(Landroid/graphics/Rect;)V

    .line 9076
    iget-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mStackSupervisor:Lcom/android/server/am/ActivityStackSupervisor;

    const-string v4, "enterPictureInPictureMode"

    invoke-virtual {v3, p1, v2, v0, v4}, Lcom/android/server/am/ActivityStackSupervisor;->moveActivityToPinnedStackLocked(Lcom/android/server/am/ActivityRecord;Landroid/graphics/Rect;FLjava/lang/String;)V

    .line 9078
    invoke-virtual {p1}, Lcom/android/server/am/ActivityRecord;->getStack()Lcom/android/server/am/ActivityStack;

    move-result-object v2

    check-cast v2, Lcom/android/server/am/PinnedActivityStack;

    .line 9079
    invoke-virtual {v2, v0}, Lcom/android/server/am/PinnedActivityStack;->setPictureInPictureAspectRatio(F)V

    .line 9080
    invoke-virtual {v2, v1}, Lcom/android/server/am/PinnedActivityStack;->setPictureInPictureActions(Ljava/util/List;)V

    .line 9081
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mContext:Landroid/content/Context;

    iget-object v1, p1, Lcom/android/server/am/ActivityRecord;->appInfo:Landroid/content/pm/ApplicationInfo;

    iget v1, v1, Landroid/content/pm/ApplicationInfo;->uid:I

    iget-object v2, p1, Lcom/android/server/am/ActivityRecord;->shortComponentName:Ljava/lang/String;

    iget-boolean p1, p1, Lcom/android/server/am/ActivityRecord;->supportsEnterPipOnTaskSwitch:Z

    invoke-static {v0, v1, v2, p1}, Lcom/android/internal/os/logging/MetricsLoggerWrapper;->logPictureInPictureEnter(Landroid/content/Context;ILjava/lang/String;Z)V

    .line 9083
    invoke-direct {p0, p2}, Lcom/android/server/am/ActivityManagerService;->logPictureInPictureArgs(Landroid/app/PictureInPictureParams;)V

    .line 9084
    return-void

    .line 9069
    :cond_1
    :goto_0
    return-void
.end method

.method public static synthetic lambda$gATL8uvTPRd405IfefK1RL9bNqA(Landroid/hardware/display/DisplayManagerInternal;)V
    .locals 0

    invoke-virtual {p0}, Landroid/hardware/display/DisplayManagerInternal;->onOverlayChanged()V

    return-void
.end method

.method static synthetic lambda$logStrictModeViolationToDropBox$3(Landroid/os/DropBoxManager;Ljava/lang/String;Ljava/lang/String;)V
    .locals 0

    .line 15836
    invoke-virtual {p0, p1, p2}, Landroid/os/DropBoxManager;->addText(Ljava/lang/String;Ljava/lang/String;)V

    .line 15837
    return-void
.end method

.method static synthetic lambda$reportMemUsage$4(Lcom/android/internal/os/ProcessCpuTracker$Stats;)Z
    .locals 4

    .line 20074
    iget-wide v0, p0, Lcom/android/internal/os/ProcessCpuTracker$Stats;->vsize:J

    const-wide/16 v2, 0x0

    cmp-long p0, v0, v2

    if-lez p0, :cond_0

    const/4 p0, 0x1

    goto :goto_0

    :cond_0
    const/4 p0, 0x0

    :goto_0
    return p0
.end method

.method public static synthetic lambda$startProcessLocked$0(Lcom/android/server/am/ActivityManagerService;Lcom/android/server/am/ProcessRecord;JLjava/lang/String;Ljava/lang/String;[IIILjava/lang/String;Ljava/lang/String;Z)V
    .locals 19

    move-object/from16 v14, p0

    move-object/from16 v15, p1

    move-wide/from16 v12, p2

    .line 4548
    const/4 v11, 0x0

    :try_start_0
    monitor-enter p0
    :try_end_0
    .catch Ljava/lang/RuntimeException; {:try_start_0 .. :try_end_0} :catch_3

    :try_start_1
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    .line 4549
    invoke-direct/range {p0 .. p3}, Lcom/android/server/am/ActivityManagerService;->isProcStartValidLocked(Lcom/android/server/am/ProcessRecord;J)Ljava/lang/String;

    move-result-object v0

    .line 4550
    if-eqz v0, :cond_0

    .line 4551
    const-string v1, "ActivityManager"

    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    invoke-virtual {v2, v15}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    const-string v3, " not valid anymore, don\'t start process, "

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v2, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    invoke-static {v1, v0}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 4553
    iput-boolean v11, v15, Lcom/android/server/am/ProcessRecord;->pendingStart:Z

    .line 4554
    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_2

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    return-void

    .line 4556
    :cond_0
    if-nez p4, :cond_2

    :try_start_2
    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v2, "wrap."

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget-object v2, v15, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    .line 4557
    invoke-static {v1}, Landroid/os/SystemProperties;->get(Ljava/lang/String;)Ljava/lang/String;

    move-result-object v1

    if-eqz v1, :cond_1

    goto :goto_0

    :cond_1
    move v1, v11

    goto :goto_1

    :cond_2
    :goto_0
    const/4 v1, 0x1

    :goto_1
    iput-boolean v1, v15, Lcom/android/server/am/ProcessRecord;->usingWrapper:Z

    .line 4558
    iget-object v1, v14, Lcom/android/server/am/ActivityManagerService;->mPendingStarts:Landroid/util/LongSparseArray;

    invoke-virtual {v1, v12, v13, v15}, Landroid/util/LongSparseArray;->put(JLjava/lang/Object;)V

    .line 4559
    monitor-exit p0
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_2

    :try_start_3
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    .line 4560
    iget-object v2, v15, Lcom/android/server/am/ProcessRecord;->hostingType:Ljava/lang/String;

    iget v5, v15, Lcom/android/server/am/ProcessRecord;->startUid:I

    iget-object v9, v15, Lcom/android/server/am/ProcessRecord;->seInfo:Ljava/lang/String;

    iget-wide v7, v15, Lcom/android/server/am/ProcessRecord;->startTime:J
    :try_end_3
    .catch Ljava/lang/RuntimeException; {:try_start_3 .. :try_end_3} :catch_3

    move-object v1, v14

    move-object/from16 v3, p5

    move-object v4, v15

    move-object/from16 v6, p6

    move-wide/from16 v16, v7

    move/from16 v7, p7

    move/from16 v8, p8

    move-object/from16 v10, p9

    move-object/from16 v11, p10

    move-object/from16 v12, p4

    move/from16 v13, p11

    move-wide/from16 v14, v16

    :try_start_4
    invoke-direct/range {v1 .. v15}, Lcom/android/server/am/ActivityManagerService;->startProcess(Ljava/lang/String;Ljava/lang/String;Lcom/android/server/am/ProcessRecord;I[IIILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;ZJ)Landroid/os/Process$ProcessStartResult;

    move-result-object v0
    :try_end_4
    .catch Ljava/lang/RuntimeException; {:try_start_4 .. :try_end_4} :catch_1

    .line 4563
    move-object/from16 v11, p0

    :try_start_5
    monitor-enter p0
    :try_end_5
    .catch Ljava/lang/RuntimeException; {:try_start_5 .. :try_end_5} :catch_0

    :try_start_6
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V
    :try_end_6
    .catchall {:try_start_6 .. :try_end_6} :catchall_1

    .line 4564
    move-object/from16 v1, p1

    move-wide/from16 v2, p2

    :try_start_7
    invoke-direct {v11, v1, v0, v2, v3}, Lcom/android/server/am/ActivityManagerService;->handleProcessStartedLocked(Lcom/android/server/am/ProcessRecord;Landroid/os/Process$ProcessStartResult;J)Z

    .line 4565
    monitor-exit p0
    :try_end_7
    .catchall {:try_start_7 .. :try_end_7} :catchall_0

    :try_start_8
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V
    :try_end_8
    .catch Ljava/lang/RuntimeException; {:try_start_8 .. :try_end_8} :catch_2

    .line 4575
    goto/16 :goto_5

    .line 4565
    :catchall_0
    move-exception v0

    goto :goto_2

    :catchall_1
    move-exception v0

    move-object/from16 v1, p1

    move-wide/from16 v2, p2

    :goto_2
    :try_start_9
    monitor-exit p0
    :try_end_9
    .catchall {:try_start_9 .. :try_end_9} :catchall_0

    :try_start_a
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw v0
    :try_end_a
    .catch Ljava/lang/RuntimeException; {:try_start_a .. :try_end_a} :catch_2

    .line 4566
    :catch_0
    move-exception v0

    move-object/from16 v1, p1

    move-wide/from16 v2, p2

    goto :goto_4

    :catch_1
    move-exception v0

    move-object/from16 v1, p1

    move-wide/from16 v2, p2

    move-object/from16 v11, p0

    goto :goto_4

    .line 4559
    :catchall_2
    move-exception v0

    move-wide v2, v12

    move-object v11, v14

    move-object v1, v15

    :goto_3
    :try_start_b
    monitor-exit p0
    :try_end_b
    .catchall {:try_start_b .. :try_end_b} :catchall_3

    :try_start_c
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw v0
    :try_end_c
    .catch Ljava/lang/RuntimeException; {:try_start_c .. :try_end_c} :catch_2

    .line 4566
    :catch_2
    move-exception v0

    goto :goto_4

    .line 4559
    :catchall_3
    move-exception v0

    goto :goto_3

    .line 4566
    :catch_3
    move-exception v0

    move-wide v2, v12

    move-object v11, v14

    move-object v1, v15

    .line 4567
    :goto_4
    monitor-enter p0

    :try_start_d
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    .line 4568
    const-string v4, "ActivityManager"

    new-instance v5, Ljava/lang/StringBuilder;

    invoke-direct {v5}, Ljava/lang/StringBuilder;-><init>()V

    const-string v6, "Failure starting process "

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget-object v6, v1, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v5}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v5

    invoke-static {v4, v5, v0}, Landroid/util/Slog;->e(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I

    .line 4569
    iget-object v0, v11, Lcom/android/server/am/ActivityManagerService;->mPendingStarts:Landroid/util/LongSparseArray;

    invoke-virtual {v0, v2, v3}, Landroid/util/LongSparseArray;->remove(J)V

    .line 4570
    const/4 v2, 0x0

    iput-boolean v2, v1, Lcom/android/server/am/ProcessRecord;->pendingStart:Z

    .line 4571
    iget-object v0, v1, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget-object v2, v0, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;

    iget v0, v1, Lcom/android/server/am/ProcessRecord;->uid:I

    invoke-static {v0}, Landroid/os/UserHandle;->getAppId(I)I

    move-result v3

    const/4 v4, 0x0

    const/4 v5, 0x0

    const/4 v6, 0x1

    const/4 v7, 0x0

    const/4 v8, 0x0

    iget v0, v1, Lcom/android/server/am/ProcessRecord;->userId:I

    .line 4573
    invoke-static {v0}, Landroid/os/UserHandle;->getUserId(I)I

    move-result v9

    const-string/jumbo v10, "start failure"

    .line 4571
    move-object v1, v11

    invoke-virtual/range {v1 .. v10}, Lcom/android/server/am/ActivityManagerService;->forceStopPackageLocked(Ljava/lang/String;IZZZZZILjava/lang/String;)Z

    .line 4574
    monitor-exit p0
    :try_end_d
    .catchall {:try_start_d .. :try_end_d} :catchall_4

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    .line 4576
    :goto_5
    return-void

    .line 4574
    :catchall_4
    move-exception v0

    :try_start_e
    monitor-exit p0
    :try_end_e
    .catchall {:try_start_e .. :try_end_e} :catchall_4

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw v0
.end method

.method public static synthetic lambda$systemReady$2(Lcom/android/server/am/ActivityManagerService;Landroid/os/PowerSaveState;)V
    .locals 0

    .line 15540
    iget-boolean p1, p1, Landroid/os/PowerSaveState;->batterySaverEnabled:Z

    invoke-direct {p0, p1}, Lcom/android/server/am/ActivityManagerService;->updateForceBackgroundCheck(Z)V

    return-void
.end method

.method private logPictureInPictureArgs(Landroid/app/PictureInPictureParams;)V
    .locals 3

    .line 9147
    invoke-virtual {p1}, Landroid/app/PictureInPictureParams;->hasSetActions()Z

    move-result v0

    if-eqz v0, :cond_0

    .line 9148
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mContext:Landroid/content/Context;

    const-string/jumbo v1, "tron_varz_picture_in_picture_actions_count"

    .line 9149
    invoke-virtual {p1}, Landroid/app/PictureInPictureParams;->getActions()Ljava/util/List;

    move-result-object v2

    invoke-interface {v2}, Ljava/util/List;->size()I

    move-result v2

    .line 9148
    invoke-static {v0, v1, v2}, Lcom/android/internal/logging/MetricsLogger;->histogram(Landroid/content/Context;Ljava/lang/String;I)V

    .line 9151
    :cond_0
    invoke-virtual {p1}, Landroid/app/PictureInPictureParams;->hasSetAspectRatio()Z

    move-result v0

    if-eqz v0, :cond_1

    .line 9152
    new-instance v0, Landroid/metrics/LogMaker;

    const/16 v1, 0x338

    invoke-direct {v0, v1}, Landroid/metrics/LogMaker;-><init>(I)V

    .line 9153
    const/16 v1, 0x339

    invoke-virtual {p1}, Landroid/app/PictureInPictureParams;->getAspectRatio()F

    move-result p1

    invoke-static {p1}, Ljava/lang/Float;->valueOf(F)Ljava/lang/Float;

    move-result-object p1

    invoke-virtual {v0, v1, p1}, Landroid/metrics/LogMaker;->addTaggedData(ILjava/lang/Object;)Landroid/metrics/LogMaker;

    .line 9154
    invoke-static {v0}, Lcom/android/internal/logging/MetricsLogger;->action(Landroid/metrics/LogMaker;)V

    .line 9156
    :cond_1
    return-void
.end method

.method private logStrictModeViolationToDropBox(Lcom/android/server/am/ProcessRecord;Landroid/os/StrictMode$ViolationInfo;)V
    .locals 8

    .line 15785
    if-nez p2, :cond_0

    .line 15786
    return-void

    .line 15788
    :cond_0
    const/4 v0, 0x0

    if-eqz p1, :cond_2

    iget-object v1, p1, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget v1, v1, Landroid/content/pm/ApplicationInfo;->flags:I

    and-int/lit16 v1, v1, 0x81

    if-eqz v1, :cond_1

    goto :goto_0

    .line 15791
    :cond_1
    move v1, v0

    goto :goto_1

    .line 15788
    :cond_2
    :goto_0
    nop

    .line 15791
    const/4 v1, 0x1

    :goto_1
    if-nez p1, :cond_3

    const-string/jumbo v2, "unknown"

    goto :goto_2

    :cond_3
    iget-object v2, p1, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;

    .line 15792
    :goto_2
    iget-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mContext:Landroid/content/Context;

    const-string v4, "dropbox"

    .line 15793
    invoke-virtual {v3, v4}, Landroid/content/Context;->getSystemService(Ljava/lang/String;)Ljava/lang/Object;

    move-result-object v3

    check-cast v3, Landroid/os/DropBoxManager;

    .line 15796
    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    invoke-static {p1}, Lcom/android/server/am/ActivityManagerService;->processClass(Lcom/android/server/am/ProcessRecord;)Ljava/lang/String;

    move-result-object v5

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v5, "_strictmode"

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v4

    .line 15797
    if-eqz v3, :cond_c

    invoke-virtual {v3, v4}, Landroid/os/DropBoxManager;->isTagEnabled(Ljava/lang/String;)Z

    move-result v5

    if-nez v5, :cond_4

    goto/16 :goto_4

    .line 15799
    :cond_4
    new-instance v5, Ljava/lang/StringBuilder;

    const/16 v6, 0x400

    invoke-direct {v5, v6}, Ljava/lang/StringBuilder;-><init>(I)V

    .line 15800
    monitor-enter v5

    .line 15801
    :try_start_0
    invoke-direct {p0, p1, v2, v5}, Lcom/android/server/am/ActivityManagerService;->appendDropBoxProcessHeaders(Lcom/android/server/am/ProcessRecord;Ljava/lang/String;Ljava/lang/StringBuilder;)V

    .line 15802
    const-string p1, "Build: "

    invoke-virtual {v5, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    sget-object p1, Landroid/os/Build;->FINGERPRINT:Ljava/lang/String;

    invoke-virtual {v5, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string p1, "\n"

    invoke-virtual {v5, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 15803
    const-string p1, "System-App: "

    invoke-virtual {v5, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v5, v1}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    const-string p1, "\n"

    invoke-virtual {v5, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 15804
    const-string p1, "Uptime-Millis: "

    invoke-virtual {v5, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget-wide v1, p2, Landroid/os/StrictMode$ViolationInfo;->violationUptimeMillis:J

    invoke-virtual {v5, v1, v2}, Ljava/lang/StringBuilder;->append(J)Ljava/lang/StringBuilder;

    const-string p1, "\n"

    invoke-virtual {v5, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 15805
    iget p1, p2, Landroid/os/StrictMode$ViolationInfo;->violationNumThisLoop:I

    if-eqz p1, :cond_5

    .line 15806
    const-string p1, "Loop-Violation-Number: "

    invoke-virtual {v5, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget p1, p2, Landroid/os/StrictMode$ViolationInfo;->violationNumThisLoop:I

    invoke-virtual {v5, p1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string p1, "\n"

    invoke-virtual {v5, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 15808
    :cond_5
    iget p1, p2, Landroid/os/StrictMode$ViolationInfo;->numAnimationsRunning:I

    if-eqz p1, :cond_6

    .line 15809
    const-string p1, "Animations-Running: "

    invoke-virtual {v5, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget p1, p2, Landroid/os/StrictMode$ViolationInfo;->numAnimationsRunning:I

    invoke-virtual {v5, p1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string p1, "\n"

    invoke-virtual {v5, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 15811
    :cond_6
    iget-object p1, p2, Landroid/os/StrictMode$ViolationInfo;->broadcastIntentAction:Ljava/lang/String;

    if-eqz p1, :cond_7

    .line 15812
    const-string p1, "Broadcast-Intent-Action: "

    invoke-virtual {v5, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget-object p1, p2, Landroid/os/StrictMode$ViolationInfo;->broadcastIntentAction:Ljava/lang/String;

    invoke-virtual {v5, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string p1, "\n"

    invoke-virtual {v5, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 15814
    :cond_7
    iget p1, p2, Landroid/os/StrictMode$ViolationInfo;->durationMillis:I

    const/4 v1, -0x1

    if-eq p1, v1, :cond_8

    .line 15815
    const-string p1, "Duration-Millis: "

    invoke-virtual {v5, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget p1, p2, Landroid/os/StrictMode$ViolationInfo;->durationMillis:I

    invoke-virtual {v5, p1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string p1, "\n"

    invoke-virtual {v5, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 15817
    :cond_8
    iget-wide v1, p2, Landroid/os/StrictMode$ViolationInfo;->numInstances:J

    const-wide/16 v6, -0x1

    cmp-long p1, v1, v6

    if-eqz p1, :cond_9

    .line 15818
    const-string p1, "Instance-Count: "

    invoke-virtual {v5, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget-wide v1, p2, Landroid/os/StrictMode$ViolationInfo;->numInstances:J

    invoke-virtual {v5, v1, v2}, Ljava/lang/StringBuilder;->append(J)Ljava/lang/StringBuilder;

    const-string p1, "\n"

    invoke-virtual {v5, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 15820
    :cond_9
    iget-object p1, p2, Landroid/os/StrictMode$ViolationInfo;->tags:[Ljava/lang/String;

    if-eqz p1, :cond_a

    .line 15821
    iget-object p1, p2, Landroid/os/StrictMode$ViolationInfo;->tags:[Ljava/lang/String;

    array-length v1, p1

    :goto_3
    if-ge v0, v1, :cond_a

    aget-object v2, p1, v0

    .line 15822
    const-string v6, "Span-Tag: "

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v5, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v2, "\n"

    invoke-virtual {v5, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 15821
    add-int/lit8 v0, v0, 0x1

    goto :goto_3

    .line 15825
    :cond_a
    const-string p1, "\n"

    invoke-virtual {v5, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 15826
    invoke-virtual {p2}, Landroid/os/StrictMode$ViolationInfo;->getStackTrace()Ljava/lang/String;

    move-result-object p1

    invoke-virtual {v5, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 15827
    const-string p1, "\n"

    invoke-virtual {v5, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 15828
    invoke-virtual {p2}, Landroid/os/StrictMode$ViolationInfo;->getViolationDetails()Ljava/lang/String;

    move-result-object p1

    if-eqz p1, :cond_b

    .line 15829
    invoke-virtual {p2}, Landroid/os/StrictMode$ViolationInfo;->getViolationDetails()Ljava/lang/String;

    move-result-object p1

    invoke-virtual {v5, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 15830
    const-string p1, "\n"

    invoke-virtual {v5, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 15832
    :cond_b
    monitor-exit v5
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 15834
    invoke-virtual {v5}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object p1

    .line 15835
    invoke-static {}, Lcom/android/server/IoThread;->getHandler()Landroid/os/Handler;

    move-result-object p2

    new-instance v0, Lcom/android/server/am/-$$Lambda$ActivityManagerService$w5jCshLsk1jfv4UDTmEfq_HU0OQ;

    invoke-direct {v0, v3, v4, p1}, Lcom/android/server/am/-$$Lambda$ActivityManagerService$w5jCshLsk1jfv4UDTmEfq_HU0OQ;-><init>(Landroid/os/DropBoxManager;Ljava/lang/String;Ljava/lang/String;)V

    invoke-virtual {p2, v0}, Landroid/os/Handler;->post(Ljava/lang/Runnable;)Z

    .line 15838
    return-void

    .line 15832
    :catchall_0
    move-exception p1

    :try_start_1
    monitor-exit v5
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    throw p1

    .line 15797
    :cond_c
    :goto_4
    return-void
.end method

.method private static maybePruneOldTraces(Ljava/io/File;)V
    .locals 9

    .line 6427
    invoke-static {}, Ljava/lang/System;->currentTimeMillis()J

    move-result-wide v0

    .line 6428
    invoke-virtual {p0}, Ljava/io/File;->listFiles()[Ljava/io/File;

    move-result-object p0

    .line 6430
    if-eqz p0, :cond_1

    .line 6431
    array-length v2, p0

    const/4 v3, 0x0

    :goto_0
    if-ge v3, v2, :cond_1

    aget-object v4, p0, v3

    .line 6432
    invoke-virtual {v4}, Ljava/io/File;->lastModified()J

    move-result-wide v5

    sub-long v5, v0, v5

    const-wide/32 v7, 0x5265c00

    cmp-long v5, v5, v7

    if-lez v5, :cond_0

    .line 6433
    invoke-virtual {v4}, Ljava/io/File;->delete()Z

    move-result v5

    if-nez v5, :cond_0

    .line 6434
    const-string v5, "ActivityManager"

    new-instance v6, Ljava/lang/StringBuilder;

    invoke-direct {v6}, Ljava/lang/StringBuilder;-><init>()V

    const-string v7, "Unable to prune stale trace file: "

    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v6, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    invoke-virtual {v6}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v4

    invoke-static {v5, v4}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 6431
    :cond_0
    add-int/lit8 v3, v3, 0x1

    goto :goto_0

    .line 6439
    :cond_1
    return-void
.end method

.method private maybePrunePersistedUriGrantsLocked(I)Z
    .locals 5
    .annotation build Lcom/android/internal/annotations/GuardedBy;
        value = "this"
    .end annotation

    .line 10732
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mGrantedUriPermissions:Landroid/util/SparseArray;

    invoke-virtual {v0, p1}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    move-result-object p1

    check-cast p1, Landroid/util/ArrayMap;

    .line 10733
    const/4 v0, 0x0

    if-nez p1, :cond_0

    return v0

    .line 10734
    :cond_0
    invoke-virtual {p1}, Landroid/util/ArrayMap;->size()I

    move-result v1

    const/16 v2, 0x80

    if-ge v1, v2, :cond_1

    return v0

    .line 10736
    :cond_1
    invoke-static {}, Lcom/google/android/collect/Lists;->newArrayList()Ljava/util/ArrayList;

    move-result-object v1

    .line 10737
    invoke-virtual {p1}, Landroid/util/ArrayMap;->values()Ljava/util/Collection;

    move-result-object p1

    invoke-interface {p1}, Ljava/util/Collection;->iterator()Ljava/util/Iterator;

    move-result-object p1

    :goto_0
    invoke-interface {p1}, Ljava/util/Iterator;->hasNext()Z

    move-result v3

    if-eqz v3, :cond_3

    invoke-interface {p1}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v3

    check-cast v3, Lcom/android/server/am/UriPermission;

    .line 10738
    iget v4, v3, Lcom/android/server/am/UriPermission;->persistedModeFlags:I

    if-eqz v4, :cond_2

    .line 10739
    invoke-virtual {v1, v3}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    .line 10741
    :cond_2
    goto :goto_0

    .line 10743
    :cond_3
    invoke-virtual {v1}, Ljava/util/ArrayList;->size()I

    move-result p1

    sub-int/2addr p1, v2

    .line 10744
    if-gtz p1, :cond_4

    return v0

    .line 10746
    :cond_4
    new-instance v2, Lcom/android/server/am/UriPermission$PersistedTimeComparator;

    invoke-direct {v2}, Lcom/android/server/am/UriPermission$PersistedTimeComparator;-><init>()V

    invoke-static {v1, v2}, Ljava/util/Collections;->sort(Ljava/util/List;Ljava/util/Comparator;)V

    .line 10747
    :goto_1
    if-ge v0, p1, :cond_5

    .line 10748
    invoke-virtual {v1, v0}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Lcom/android/server/am/UriPermission;

    .line 10753
    const/4 v3, -0x1

    invoke-virtual {v2, v3}, Lcom/android/server/am/UriPermission;->releasePersistableModes(I)Z

    .line 10754
    invoke-virtual {p0, v2}, Lcom/android/server/am/ActivityManagerService;->removeUriPermissionIfNeededLocked(Lcom/android/server/am/UriPermission;)V

    .line 10747
    add-int/lit8 v0, v0, 0x1

    goto :goto_1

    .line 10757
    :cond_5
    const/4 p1, 0x1

    return p1
.end method

.method private maybeUpdateLastTopTime(Lcom/android/server/am/ProcessRecord;J)V
    .locals 2

    .line 25164
    iget v0, p1, Lcom/android/server/am/ProcessRecord;->setProcState:I

    const/4 v1, 0x2

    if-gt v0, v1, :cond_0

    iget v0, p1, Lcom/android/server/am/ProcessRecord;->curProcState:I

    if-le v0, v1, :cond_0

    .line 25166
    iput-wide p2, p1, Lcom/android/server/am/ProcessRecord;->lastTopTime:J

    .line 25168
    :cond_0
    return-void
.end method

.method private maybeUpdateProviderUsageStatsLocked(Lcom/android/server/am/ProcessRecord;Ljava/lang/String;Ljava/lang/String;)V
    .locals 7

    .line 25101
    if-nez p1, :cond_0

    return-void

    .line 25102
    :cond_0
    iget v0, p1, Lcom/android/server/am/ProcessRecord;->curProcState:I

    const/4 v1, 0x5

    if-gt v0, v1, :cond_4

    .line 25103
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mUserController:Lcom/android/server/am/UserController;

    iget v1, p1, Lcom/android/server/am/ProcessRecord;->userId:I

    invoke-virtual {v0, v1}, Lcom/android/server/am/UserController;->getStartedUserState(I)Lcom/android/server/am/UserState;

    move-result-object v0

    .line 25104
    if-nez v0, :cond_1

    return-void

    .line 25105
    :cond_1
    invoke-static {}, Landroid/os/SystemClock;->elapsedRealtime()J

    move-result-wide v1

    .line 25106
    iget-object v3, v0, Lcom/android/server/am/UserState;->mProviderLastReportedFg:Landroid/util/ArrayMap;

    invoke-virtual {v3, p3}, Landroid/util/ArrayMap;->get(Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object v3

    check-cast v3, Ljava/lang/Long;

    .line 25107
    if-eqz v3, :cond_2

    invoke-virtual {v3}, Ljava/lang/Long;->longValue()J

    move-result-wide v3

    const-wide/32 v5, 0xea60

    sub-long v5, v1, v5

    cmp-long v3, v3, v5

    if-gez v3, :cond_4

    .line 25108
    :cond_2
    iget-boolean v3, p0, Lcom/android/server/am/ActivityManagerService;->mSystemReady:Z

    if-eqz v3, :cond_3

    .line 25110
    iget-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mUsageStatsService:Landroid/app/usage/UsageStatsManagerInternal;

    iget p1, p1, Lcom/android/server/am/ProcessRecord;->userId:I

    invoke-virtual {v3, p3, p2, p1}, Landroid/app/usage/UsageStatsManagerInternal;->reportContentProviderUsage(Ljava/lang/String;Ljava/lang/String;I)V

    .line 25113
    :cond_3
    iget-object p1, v0, Lcom/android/server/am/UserState;->mProviderLastReportedFg:Landroid/util/ArrayMap;

    invoke-static {v1, v2}, Ljava/lang/Long;->valueOf(J)Ljava/lang/Long;

    move-result-object p2

    invoke-virtual {p1, p3, p2}, Landroid/util/ArrayMap;->put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    .line 25116
    :cond_4
    return-void
.end method

.method private maybeUpdateUsageStatsLocked(Lcom/android/server/am/ProcessRecord;J)V
    .locals 8

    .line 25124
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mUsageStatsService:Landroid/app/usage/UsageStatsManagerInternal;

    if-nez v0, :cond_0

    .line 25125
    return-void

    .line 25131
    :cond_0
    iget v0, p1, Lcom/android/server/am/ProcessRecord;->curProcState:I

    const/4 v1, 0x2

    const/4 v2, 0x0

    const-wide/16 v3, 0x0

    const/4 v5, 0x1

    if-gt v0, v1, :cond_1

    .line 25132
    nop

    .line 25133
    iput-wide v3, p1, Lcom/android/server/am/ProcessRecord;->fgInteractionTime:J

    goto :goto_2

    .line 25134
    :cond_1
    iget v0, p1, Lcom/android/server/am/ProcessRecord;->curProcState:I

    const/4 v1, 0x3

    if-gt v0, v1, :cond_4

    .line 25135
    iget-wide v0, p1, Lcom/android/server/am/ProcessRecord;->fgInteractionTime:J

    cmp-long v0, v0, v3

    if-nez v0, :cond_2

    .line 25136
    iput-wide p2, p1, Lcom/android/server/am/ProcessRecord;->fgInteractionTime:J

    .line 25137
    nop

    .line 25146
    :goto_0
    move v5, v2

    goto :goto_2

    .line 25139
    :cond_2
    iget-wide v0, p1, Lcom/android/server/am/ProcessRecord;->fgInteractionTime:J

    iget-object v6, p0, Lcom/android/server/am/ActivityManagerService;->mConstants:Lcom/android/server/am/ActivityManagerConstants;

    iget-wide v6, v6, Lcom/android/server/am/ActivityManagerConstants;->SERVICE_USAGE_INTERACTION_TIME:J

    add-long/2addr v0, v6

    cmp-long v0, p2, v0

    if-lez v0, :cond_3

    goto :goto_2

    :cond_3
    goto :goto_0

    .line 25143
    :cond_4
    iget v0, p1, Lcom/android/server/am/ProcessRecord;->curProcState:I

    const/4 v1, 0x5

    if-gt v0, v1, :cond_5

    goto :goto_1

    .line 25144
    :cond_5
    move v5, v2

    :goto_1
    iput-wide v3, p1, Lcom/android/server/am/ProcessRecord;->fgInteractionTime:J

    .line 25146
    :goto_2
    if-eqz v5, :cond_7

    iget-boolean v0, p1, Lcom/android/server/am/ProcessRecord;->reportedInteraction:Z

    if-eqz v0, :cond_6

    iget-wide v0, p1, Lcom/android/server/am/ProcessRecord;->interactionEventTime:J

    sub-long v0, p2, v0

    iget-object v6, p0, Lcom/android/server/am/ActivityManagerService;->mConstants:Lcom/android/server/am/ActivityManagerConstants;

    iget-wide v6, v6, Lcom/android/server/am/ActivityManagerConstants;->USAGE_STATS_INTERACTION_INTERVAL:J

    cmp-long v0, v0, v6

    if-lez v0, :cond_7

    .line 25148
    :cond_6
    iput-wide p2, p1, Lcom/android/server/am/ProcessRecord;->interactionEventTime:J

    .line 25149
    invoke-virtual {p1}, Lcom/android/server/am/ProcessRecord;->getPackageList()[Ljava/lang/String;

    move-result-object p2

    .line 25150
    if-eqz p2, :cond_7

    .line 25151
    :goto_3
    array-length p3, p2

    if-ge v2, p3, :cond_7

    .line 25152
    iget-object p3, p0, Lcom/android/server/am/ActivityManagerService;->mUsageStatsService:Landroid/app/usage/UsageStatsManagerInternal;

    aget-object v0, p2, v2

    iget v1, p1, Lcom/android/server/am/ProcessRecord;->userId:I

    const/4 v6, 0x6

    invoke-virtual {p3, v0, v1, v6}, Landroid/app/usage/UsageStatsManagerInternal;->reportEvent(Ljava/lang/String;II)V

    .line 25151
    add-int/lit8 v2, v2, 0x1

    goto :goto_3

    .line 25157
    :cond_7
    iput-boolean v5, p1, Lcom/android/server/am/ProcessRecord;->reportedInteraction:Z

    .line 25158
    if-nez v5, :cond_8

    .line 25159
    iput-wide v3, p1, Lcom/android/server/am/ProcessRecord;->interactionEventTime:J

    .line 25161
    :cond_8
    return-void
.end method

.method private final moveTaskBackwardsLocked(I)V
    .locals 1

    .line 11440
    const-string p1, "ActivityManager"

    const-string v0, "moveTaskBackwards not yet implemented!"

    invoke-static {p1, v0}, Landroid/util/Slog;->e(Ljava/lang/String;Ljava/lang/String;)I

    .line 11441
    return-void
.end method

.method private noteUidProcessState(II)V
    .locals 19

    move-object/from16 v0, p0

    move/from16 v1, p1

    .line 23317
    move/from16 v2, p2

    iget-object v3, v0, Lcom/android/server/am/ActivityManagerService;->mBatteryStatsService:Lcom/android/server/am/BatteryStatsService;

    invoke-virtual {v3, v1, v2}, Lcom/android/server/am/BatteryStatsService;->noteUidProcessState(II)V

    .line 23318
    iget-object v3, v0, Lcom/android/server/am/ActivityManagerService;->mAppOpsService:Lcom/android/server/AppOpsService;

    invoke-virtual {v3, v1, v2}, Lcom/android/server/AppOpsService;->updateUidProcState(II)V

    .line 23319
    iget-boolean v3, v0, Lcom/android/server/am/ActivityManagerService;->mTrackingAssociations:Z

    if-eqz v3, :cond_3

    .line 23320
    iget-object v3, v0, Lcom/android/server/am/ActivityManagerService;->mAssociations:Landroid/util/SparseArray;

    invoke-virtual {v3}, Landroid/util/SparseArray;->size()I

    move-result v3

    const/4 v4, 0x0

    move v5, v4

    :goto_0
    if-ge v5, v3, :cond_3

    .line 23321
    iget-object v6, v0, Lcom/android/server/am/ActivityManagerService;->mAssociations:Landroid/util/SparseArray;

    .line 23322
    invoke-virtual {v6, v5}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;

    move-result-object v6

    check-cast v6, Landroid/util/ArrayMap;

    .line 23323
    invoke-virtual {v6}, Landroid/util/ArrayMap;->size()I

    move-result v7

    move v8, v4

    :goto_1
    if-ge v8, v7, :cond_2

    .line 23324
    nop

    .line 23325
    invoke-virtual {v6, v8}, Landroid/util/ArrayMap;->valueAt(I)Ljava/lang/Object;

    move-result-object v9

    check-cast v9, Landroid/util/SparseArray;

    .line 23326
    invoke-virtual {v9, v1}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    move-result-object v9

    check-cast v9, Landroid/util/ArrayMap;

    .line 23327
    if-eqz v9, :cond_1

    .line 23328
    invoke-virtual {v9}, Landroid/util/ArrayMap;->size()I

    move-result v10

    move v11, v4

    :goto_2
    if-ge v11, v10, :cond_1

    .line 23329
    invoke-virtual {v9, v11}, Landroid/util/ArrayMap;->valueAt(I)Ljava/lang/Object;

    move-result-object v12

    check-cast v12, Lcom/android/server/am/ActivityManagerService$Association;

    .line 23330
    iget v13, v12, Lcom/android/server/am/ActivityManagerService$Association;->mNesting:I

    const/4 v14, 0x1

    if-lt v13, v14, :cond_0

    .line 23332
    invoke-static {}, Landroid/os/SystemClock;->uptimeMillis()J

    move-result-wide v13

    .line 23333
    iget-object v15, v12, Lcom/android/server/am/ActivityManagerService$Association;->mStateTimes:[J

    iget v0, v12, Lcom/android/server/am/ActivityManagerService$Association;->mLastState:I

    sub-int/2addr v0, v4

    aget-wide v16, v15, v0

    move/from16 v18, v5

    iget-wide v4, v12, Lcom/android/server/am/ActivityManagerService$Association;->mLastStateUptime:J

    sub-long v4, v13, v4

    add-long v16, v16, v4

    aput-wide v16, v15, v0

    .line 23335
    iput v2, v12, Lcom/android/server/am/ActivityManagerService$Association;->mLastState:I

    .line 23336
    iput-wide v13, v12, Lcom/android/server/am/ActivityManagerService$Association;->mLastStateUptime:J

    goto :goto_3

    .line 23328
    :cond_0
    move/from16 v18, v5

    :goto_3
    add-int/lit8 v11, v11, 0x1

    move/from16 v5, v18

    move-object/from16 v0, p0

    const/4 v4, 0x0

    goto :goto_2

    .line 23323
    :cond_1
    move/from16 v18, v5

    add-int/lit8 v8, v8, 0x1

    move/from16 v5, v18

    move-object/from16 v0, p0

    const/4 v4, 0x0

    goto :goto_1

    .line 23320
    :cond_2
    move/from16 v18, v5

    add-int/lit8 v5, v18, 0x1

    move-object/from16 v0, p0

    const/4 v4, 0x0

    goto :goto_0

    .line 23343
    :cond_3
    return-void
.end method

.method private performDisplayOverrideConfigUpdate(Landroid/content/res/Configuration;ZI)I
    .locals 4

    .line 23070
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mTempConfig:Landroid/content/res/Configuration;

    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mStackSupervisor:Lcom/android/server/am/ActivityStackSupervisor;

    invoke-virtual {v1, p3}, Lcom/android/server/am/ActivityStackSupervisor;->getDisplayOverrideConfiguration(I)Landroid/content/res/Configuration;

    move-result-object v1

    invoke-virtual {v0, v1}, Landroid/content/res/Configuration;->setTo(Landroid/content/res/Configuration;)V

    .line 23071
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mTempConfig:Landroid/content/res/Configuration;

    invoke-virtual {v0, p1}, Landroid/content/res/Configuration;->updateFrom(Landroid/content/res/Configuration;)I

    move-result p1

    .line 23072
    const/4 v0, 0x0

    if-eqz p1, :cond_1

    .line 23073
    const-string v1, "ActivityManager"

    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    const-string v3, "Override config changes="

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-static {p1}, Ljava/lang/Integer;->toHexString(I)Ljava/lang/String;

    move-result-object v3

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v3, " "

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mTempConfig:Landroid/content/res/Configuration;

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    const-string v3, " for displayId="

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v2, p3}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v2

    invoke-static {v1, v2}, Landroid/util/Slog;->i(Ljava/lang/String;Ljava/lang/String;)I

    .line 23075
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mStackSupervisor:Lcom/android/server/am/ActivityStackSupervisor;

    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mTempConfig:Landroid/content/res/Configuration;

    invoke-virtual {v1, v2, p3}, Lcom/android/server/am/ActivityStackSupervisor;->setDisplayOverrideConfiguration(Landroid/content/res/Configuration;I)V

    .line 23077
    and-int/lit16 v1, p1, 0x1000

    if-eqz v1, :cond_0

    .line 23078
    const/4 v1, 0x1

    goto :goto_0

    .line 23077
    :cond_0
    nop

    .line 23078
    move v1, v0

    :goto_0
    if-eqz v1, :cond_1

    if-nez p3, :cond_1

    .line 23079
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mAppWarnings:Lcom/android/server/am/AppWarnings;

    invoke-virtual {v1}, Lcom/android/server/am/AppWarnings;->onDensityChanged()V

    .line 23081
    const/16 v1, 0x18

    const/4 v2, 0x4

    invoke-direct {p0, v1, v2}, Lcom/android/server/am/ActivityManagerService;->killAllBackgroundProcessesExcept(II)V

    .line 23090
    :cond_1
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mWindowManager:Lcom/android/server/wm/WindowManagerService;

    if-eqz v1, :cond_2

    .line 23091
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mWindowManager:Lcom/android/server/wm/WindowManagerService;

    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mTempConfig:Landroid/content/res/Configuration;

    .line 23092
    invoke-virtual {v1, v2, p3}, Lcom/android/server/wm/WindowManagerService;->setNewDisplayOverrideConfiguration(Landroid/content/res/Configuration;I)[I

    move-result-object p3

    .line 23093
    if-eqz p3, :cond_2

    .line 23094
    array-length v1, p3

    :goto_1
    if-ge v0, v1, :cond_2

    aget v2, p3, v0

    .line 23095
    invoke-direct {p0, v2, p2}, Lcom/android/server/am/ActivityManagerService;->resizeStackWithBoundsFromWindowManager(IZ)V

    .line 23094
    add-int/lit8 v0, v0, 0x1

    goto :goto_1

    .line 23100
    :cond_2
    return p1
.end method

.method static procStateToImportance(IILandroid/app/ActivityManager$RunningAppProcessInfo;I)I
    .locals 0

    .line 16166
    invoke-static {p0, p3}, Landroid/app/ActivityManager$RunningAppProcessInfo;->procStateToImportanceForTargetSdk(II)I

    move-result p0

    .line 16168
    const/16 p3, 0x190

    if-ne p0, p3, :cond_0

    .line 16169
    iput p1, p2, Landroid/app/ActivityManager$RunningAppProcessInfo;->lru:I

    goto :goto_0

    .line 16171
    :cond_0
    const/4 p1, 0x0

    iput p1, p2, Landroid/app/ActivityManager$RunningAppProcessInfo;->lru:I

    .line 16173
    :goto_0
    return p0
.end method

.method private static processClass(Lcom/android/server/am/ProcessRecord;)Ljava/lang/String;
    .locals 2

    .line 15974
    if-eqz p0, :cond_2

    iget v0, p0, Lcom/android/server/am/ProcessRecord;->pid:I

    sget v1, Lcom/android/server/am/ActivityManagerService;->MY_PID:I

    if-ne v0, v1, :cond_0

    goto :goto_0

    .line 15976
    :cond_0
    iget-object p0, p0, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget p0, p0, Landroid/content/pm/ApplicationInfo;->flags:I

    and-int/lit8 p0, p0, 0x1

    if-eqz p0, :cond_1

    .line 15977
    const-string/jumbo p0, "system_app"

    return-object p0

    .line 15979
    :cond_1
    const-string p0, "data_app"

    return-object p0

    .line 15975
    :cond_2
    :goto_0
    const-string/jumbo p0, "system_server"

    return-object p0
.end method

.method private final processContentProviderPublishTimedOutLocked(Lcom/android/server/am/ProcessRecord;)V
    .locals 3
    .annotation build Lcom/android/internal/annotations/GuardedBy;
        value = "this"
    .end annotation

    .line 7706
    const/4 v0, 0x1

    invoke-virtual {p0, p1, v0}, Lcom/android/server/am/ActivityManagerService;->cleanupAppInLaunchingProvidersLocked(Lcom/android/server/am/ProcessRecord;Z)Z

    .line 7707
    const-string/jumbo v1, "timeout publishing content providers"

    const/4 v2, 0x0

    invoke-virtual {p0, p1, v2, v0, v1}, Lcom/android/server/am/ActivityManagerService;->removeProcessLocked(Lcom/android/server/am/ProcessRecord;ZZLjava/lang/String;)Z

    .line 7708
    return-void
.end method

.method private processSanityChecksLocked(Lcom/android/server/am/ProcessRecord;)Z
    .locals 4

    .line 26625
    const/4 v0, 0x0

    if-eqz p1, :cond_2

    iget-object v1, p1, Lcom/android/server/am/ProcessRecord;->thread:Landroid/app/IApplicationThread;

    if-nez v1, :cond_0

    goto :goto_0

    .line 26629
    :cond_0
    const-string v1, "1"

    const-string/jumbo v2, "ro.debuggable"

    const-string v3, "0"

    invoke-static {v2, v3}, Landroid/os/SystemProperties;->get(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;

    move-result-object v2

    invoke-virtual {v1, v2}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v1

    .line 26630
    if-nez v1, :cond_1

    .line 26631
    iget-object p1, p1, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget p1, p1, Landroid/content/pm/ApplicationInfo;->flags:I

    and-int/lit8 p1, p1, 0x2

    if-nez p1, :cond_1

    .line 26632
    return v0

    .line 26636
    :cond_1
    const/4 p1, 0x1

    return p1

    .line 26626
    :cond_2
    :goto_0
    return v0
.end method

.method private final processStartTimedOutLocked(Lcom/android/server/am/ProcessRecord;)V
    .locals 7

    .line 7711
    iget v0, p1, Lcom/android/server/am/ProcessRecord;->pid:I

    .line 7712
    nop

    .line 7713
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Landroid/util/SparseArray;

    monitor-enter v1

    .line 7714
    :try_start_0
    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Landroid/util/SparseArray;

    invoke-virtual {v2, v0}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Lcom/android/server/am/ProcessRecord;

    .line 7715
    const/4 v3, 0x0

    const/4 v4, 0x1

    if-eqz v2, :cond_0

    iget-object v2, v2, Lcom/android/server/am/ProcessRecord;->thread:Landroid/app/IApplicationThread;

    if-nez v2, :cond_0

    .line 7716
    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Landroid/util/SparseArray;

    invoke-virtual {v2, v0}, Landroid/util/SparseArray;->remove(I)V

    .line 7717
    nop

    .line 7719
    move v2, v4

    goto :goto_0

    :cond_0
    move v2, v3

    :goto_0
    monitor-exit v1
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 7721
    if-eqz v2, :cond_4

    .line 7722
    const-string v1, "ActivityManager"

    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    const-string v5, "Process "

    invoke-virtual {v2, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v2, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    const-string v5, " failed to attach"

    invoke-virtual {v2, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v2

    invoke-static {v1, v2}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 7723
    const/16 v1, 0x7555

    const/4 v2, 0x4

    new-array v2, v2, [Ljava/lang/Object;

    iget v5, p1, Lcom/android/server/am/ProcessRecord;->userId:I

    invoke-static {v5}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v5

    aput-object v5, v2, v3

    .line 7724
    invoke-static {v0}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v5

    aput-object v5, v2, v4

    const/4 v5, 0x2

    iget v6, p1, Lcom/android/server/am/ProcessRecord;->uid:I

    invoke-static {v6}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v6

    aput-object v6, v2, v5

    const/4 v5, 0x3

    iget-object v6, p1, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;

    aput-object v6, v2, v5

    .line 7723
    invoke-static {v1, v2}, Landroid/util/EventLog;->writeEvent(I[Ljava/lang/Object;)I

    .line 7725
    iget-object v1, p1, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;

    iget v2, p1, Lcom/android/server/am/ProcessRecord;->uid:I

    invoke-direct {p0, v1, v2}, Lcom/android/server/am/ActivityManagerService;->removeProcessNameLocked(Ljava/lang/String;I)Lcom/android/server/am/ProcessRecord;

    .line 7726
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mHeavyWeightProcess:Lcom/android/server/am/ProcessRecord;

    if-ne v1, p1, :cond_1

    .line 7727
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    const/16 v5, 0x19

    iget-object v6, p0, Lcom/android/server/am/ActivityManagerService;->mHeavyWeightProcess:Lcom/android/server/am/ProcessRecord;

    iget v6, v6, Lcom/android/server/am/ProcessRecord;->userId:I

    invoke-virtual {v2, v5, v6, v3}, Lcom/android/server/am/ActivityManagerService$MainHandler;->obtainMessage(III)Landroid/os/Message;

    move-result-object v2

    invoke-virtual {v1, v2}, Lcom/android/server/am/ActivityManagerService$MainHandler;->sendMessage(Landroid/os/Message;)Z

    .line 7729
    const/4 v1, 0x0

    iput-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mHeavyWeightProcess:Lcom/android/server/am/ProcessRecord;

    .line 7731
    :cond_1
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mBatteryStatsService:Lcom/android/server/am/BatteryStatsService;

    iget-object v2, p1, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;

    iget-object v3, p1, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget v3, v3, Landroid/content/pm/ApplicationInfo;->uid:I

    invoke-virtual {v1, v2, v3}, Lcom/android/server/am/BatteryStatsService;->noteProcessFinish(Ljava/lang/String;I)V

    .line 7733
    invoke-virtual {p0, p1, v4}, Lcom/android/server/am/ActivityManagerService;->cleanupAppInLaunchingProvidersLocked(Lcom/android/server/am/ProcessRecord;Z)Z

    .line 7735
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mServices:Lcom/android/server/am/ActiveServices;

    invoke-virtual {v1, p1}, Lcom/android/server/am/ActiveServices;->processStartTimedOutLocked(Lcom/android/server/am/ProcessRecord;)V

    .line 7736
    const-string/jumbo v1, "start timeout"

    invoke-virtual {p1, v1, v4}, Lcom/android/server/am/ProcessRecord;->kill(Ljava/lang/String;Z)V

    .line 7737
    iget-boolean v1, p1, Lcom/android/server/am/ProcessRecord;->isolated:Z

    if-eqz v1, :cond_2

    .line 7738
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mBatteryStatsService:Lcom/android/server/am/BatteryStatsService;

    iget v2, p1, Lcom/android/server/am/ProcessRecord;->uid:I

    iget-object v3, p1, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget v3, v3, Landroid/content/pm/ApplicationInfo;->uid:I

    invoke-virtual {v1, v2, v3}, Lcom/android/server/am/BatteryStatsService;->removeIsolatedUid(II)V

    .line 7740
    :cond_2
    invoke-virtual {p0, p1}, Lcom/android/server/am/ActivityManagerService;->removeLruProcessLocked(Lcom/android/server/am/ProcessRecord;)V

    .line 7741
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mBackupTarget:Lcom/android/server/am/BackupRecord;

    if-eqz v1, :cond_3

    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mBackupTarget:Lcom/android/server/am/BackupRecord;

    iget-object v1, v1, Lcom/android/server/am/BackupRecord;->app:Lcom/android/server/am/ProcessRecord;

    iget v1, v1, Lcom/android/server/am/ProcessRecord;->pid:I

    if-ne v1, v0, :cond_3

    .line 7742
    const-string v1, "ActivityManager"

    const-string v2, "Unattached app died before backup, skipping"

    invoke-static {v1, v2}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 7743
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    new-instance v2, Lcom/android/server/am/ActivityManagerService$8;

    invoke-direct {v2, p0, p1}, Lcom/android/server/am/ActivityManagerService$8;-><init>(Lcom/android/server/am/ActivityManagerService;Lcom/android/server/am/ProcessRecord;)V

    invoke-virtual {v1, v2}, Lcom/android/server/am/ActivityManagerService$MainHandler;->post(Ljava/lang/Runnable;)Z

    .line 7756
    :cond_3
    invoke-virtual {p0, v0}, Lcom/android/server/am/ActivityManagerService;->isPendingBroadcastProcessLocked(I)Z

    move-result p1

    if-eqz p1, :cond_5

    .line 7757
    const-string p1, "ActivityManager"

    const-string v1, "Unattached app died before broadcast acknowledged, skipping"

    invoke-static {p1, v1}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 7758
    invoke-virtual {p0, v0}, Lcom/android/server/am/ActivityManagerService;->skipPendingBroadcastLocked(I)V

    goto :goto_1

    .line 7761
    :cond_4
    const-string v0, "ActivityManager"

    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string v2, "Spurious process start timeout - pid not known for "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v1, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object p1

    invoke-static {v0, p1}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 7763
    :cond_5
    :goto_1
    return-void

    .line 7719
    :catchall_0
    move-exception p1

    :try_start_1
    monitor-exit v1
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    throw p1
.end method

.method private readGrantedUriPermissionsLocked()V
    .locals 17
    .annotation build Lcom/android/internal/annotations/GuardedBy;
        value = "this"
    .end annotation

    .line 10550
    move-object/from16 v1, p0

    invoke-static {}, Ljava/lang/System;->currentTimeMillis()J

    move-result-wide v2

    .line 10552
    nop

    .line 10554
    const/4 v4, 0x0

    :try_start_0
    iget-object v0, v1, Lcom/android/server/am/ActivityManagerService;->mGrantFile:Landroid/util/AtomicFile;

    invoke-virtual {v0}, Landroid/util/AtomicFile;->openRead()Ljava/io/FileInputStream;

    move-result-object v5
    :try_end_0
    .catch Ljava/io/FileNotFoundException; {:try_start_0 .. :try_end_0} :catch_6
    .catch Ljava/io/IOException; {:try_start_0 .. :try_end_0} :catch_5
    .catch Lorg/xmlpull/v1/XmlPullParserException; {:try_start_0 .. :try_end_0} :catch_4
    .catchall {:try_start_0 .. :try_end_0} :catchall_1

    .line 10555
    :try_start_1
    invoke-static {}, Landroid/util/Xml;->newPullParser()Lorg/xmlpull/v1/XmlPullParser;

    move-result-object v6

    .line 10556
    sget-object v0, Ljava/nio/charset/StandardCharsets;->UTF_8:Ljava/nio/charset/Charset;

    invoke-virtual {v0}, Ljava/nio/charset/Charset;->name()Ljava/lang/String;

    move-result-object v0

    invoke-interface {v6, v5, v0}, Lorg/xmlpull/v1/XmlPullParser;->setInput(Ljava/io/InputStream;Ljava/lang/String;)V

    .line 10559
    :goto_0
    invoke-interface {v6}, Lorg/xmlpull/v1/XmlPullParser;->next()I

    move-result v0

    const/4 v7, 0x1

    if-eq v0, v7, :cond_4

    .line 10560
    invoke-interface {v6}, Lorg/xmlpull/v1/XmlPullParser;->getName()Ljava/lang/String;

    move-result-object v7

    .line 10561
    const/4 v8, 0x2

    if-ne v0, v8, :cond_3

    .line 10562
    const-string/jumbo v0, "uri-grant"

    invoke-virtual {v0, v7}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v0

    if-eqz v0, :cond_3

    .line 10565
    const-string/jumbo v0, "userHandle"

    const/16 v7, -0x2710

    invoke-static {v6, v0, v7}, Lcom/android/internal/util/XmlUtils;->readIntAttribute(Lorg/xmlpull/v1/XmlPullParser;Ljava/lang/String;I)I

    move-result v0

    .line 10567
    if-eq v0, v7, :cond_0

    .line 10569
    nop

    .line 10570
    nop

    .line 10575
    move v7, v0

    goto :goto_1

    .line 10572
    :cond_0
    const-string/jumbo v0, "sourceUserId"

    invoke-static {v6, v0}, Lcom/android/internal/util/XmlUtils;->readIntAttribute(Lorg/xmlpull/v1/XmlPullParser;Ljava/lang/String;)I

    move-result v0

    .line 10573
    const-string/jumbo v7, "targetUserId"

    invoke-static {v6, v7}, Lcom/android/internal/util/XmlUtils;->readIntAttribute(Lorg/xmlpull/v1/XmlPullParser;Ljava/lang/String;)I

    move-result v7

    .line 10575
    move/from16 v16, v7

    move v7, v0

    move/from16 v0, v16

    :goto_1
    const-string/jumbo v8, "sourcePkg"

    invoke-interface {v6, v4, v8}, Lorg/xmlpull/v1/XmlPullParser;->getAttributeValue(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;

    move-result-object v8

    .line 10576
    const-string/jumbo v9, "targetPkg"

    invoke-interface {v6, v4, v9}, Lorg/xmlpull/v1/XmlPullParser;->getAttributeValue(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;

    move-result-object v9

    .line 10577
    const-string/jumbo v10, "uri"

    invoke-interface {v6, v4, v10}, Lorg/xmlpull/v1/XmlPullParser;->getAttributeValue(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;

    move-result-object v10

    invoke-static {v10}, Landroid/net/Uri;->parse(Ljava/lang/String;)Landroid/net/Uri;

    move-result-object v10

    .line 10578
    const-string/jumbo v11, "prefix"

    invoke-static {v6, v11}, Lcom/android/internal/util/XmlUtils;->readBooleanAttribute(Lorg/xmlpull/v1/XmlPullParser;Ljava/lang/String;)Z

    move-result v11

    .line 10579
    const-string v12, "modeFlags"

    invoke-static {v6, v12}, Lcom/android/internal/util/XmlUtils;->readIntAttribute(Lorg/xmlpull/v1/XmlPullParser;Ljava/lang/String;)I

    move-result v12

    .line 10580
    const-string v13, "createdTime"

    invoke-static {v6, v13, v2, v3}, Lcom/android/internal/util/XmlUtils;->readLongAttribute(Lorg/xmlpull/v1/XmlPullParser;Ljava/lang/String;J)J

    move-result-wide v13

    .line 10585
    nop

    .line 10586
    invoke-virtual {v10}, Landroid/net/Uri;->getAuthority()Ljava/lang/String;

    move-result-object v15

    const/high16 v4, 0xc0000

    .line 10585
    invoke-direct {v1, v15, v7, v4}, Lcom/android/server/am/ActivityManagerService;->getProviderInfoLocked(Ljava/lang/String;II)Landroid/content/pm/ProviderInfo;

    move-result-object v4

    .line 10588
    if-eqz v4, :cond_2

    iget-object v15, v4, Landroid/content/pm/ProviderInfo;->packageName:Ljava/lang/String;

    invoke-virtual {v8, v15}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v15
    :try_end_1
    .catch Ljava/io/FileNotFoundException; {:try_start_1 .. :try_end_1} :catch_3
    .catch Ljava/io/IOException; {:try_start_1 .. :try_end_1} :catch_2
    .catch Lorg/xmlpull/v1/XmlPullParserException; {:try_start_1 .. :try_end_1} :catch_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    if-eqz v15, :cond_2

    .line 10589
    nop

    .line 10591
    :try_start_2
    invoke-static {}, Landroid/app/AppGlobals;->getPackageManager()Landroid/content/pm/IPackageManager;

    move-result-object v15

    const/16 v4, 0x2000

    invoke-interface {v15, v9, v4, v0}, Landroid/content/pm/IPackageManager;->getPackageUid(Ljava/lang/String;II)I

    move-result v4
    :try_end_2
    .catch Landroid/os/RemoteException; {:try_start_2 .. :try_end_2} :catch_0
    .catch Ljava/io/FileNotFoundException; {:try_start_2 .. :try_end_2} :catch_3
    .catch Ljava/io/IOException; {:try_start_2 .. :try_end_2} :catch_2
    .catch Lorg/xmlpull/v1/XmlPullParserException; {:try_start_2 .. :try_end_2} :catch_1
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    .line 10594
    goto :goto_2

    .line 10593
    :catch_0
    move-exception v0

    .line 10595
    const/4 v4, -0x1

    :goto_2
    const/4 v15, -0x1

    if-eq v4, v15, :cond_1

    .line 10596
    :try_start_3
    new-instance v0, Lcom/android/server/am/ActivityManagerService$GrantUri;

    invoke-direct {v0, v7, v10, v11}, Lcom/android/server/am/ActivityManagerService$GrantUri;-><init>(ILandroid/net/Uri;Z)V

    invoke-direct {v1, v8, v9, v4, v0}, Lcom/android/server/am/ActivityManagerService;->findOrCreateUriPermissionLocked(Ljava/lang/String;Ljava/lang/String;ILcom/android/server/am/ActivityManagerService$GrantUri;)Lcom/android/server/am/UriPermission;

    move-result-object v0

    .line 10599
    invoke-virtual {v0, v12, v13, v14}, Lcom/android/server/am/UriPermission;->initPersistedModes(IJ)V

    .line 10601
    :cond_1
    goto :goto_3

    .line 10602
    :cond_2
    const-string v0, "ActivityManager"

    new-instance v7, Ljava/lang/StringBuilder;

    invoke-direct {v7}, Ljava/lang/StringBuilder;-><init>()V

    const-string v9, "Persisted grant for "

    invoke-virtual {v7, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v7, v10}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    const-string v9, " had source "

    invoke-virtual {v7, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v7, v8}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v8, " but instead found "

    invoke-virtual {v7, v8}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v7, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    invoke-virtual {v7}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v4

    invoke-static {v0, v4}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I
    :try_end_3
    .catch Ljava/io/FileNotFoundException; {:try_start_3 .. :try_end_3} :catch_3
    .catch Ljava/io/IOException; {:try_start_3 .. :try_end_3} :catch_2
    .catch Lorg/xmlpull/v1/XmlPullParserException; {:try_start_3 .. :try_end_3} :catch_1
    .catchall {:try_start_3 .. :try_end_3} :catchall_0

    .line 10607
    :cond_3
    :goto_3
    nop

    .line 10559
    const/4 v4, 0x0

    goto/16 :goto_0

    .line 10615
    :catchall_0
    move-exception v0

    goto :goto_7

    .line 10612
    :catch_1
    move-exception v0

    move-object v4, v5

    goto :goto_4

    .line 10610
    :catch_2
    move-exception v0

    move-object v4, v5

    goto :goto_5

    .line 10608
    :catch_3
    move-exception v0

    goto :goto_8

    .line 10615
    :catchall_1
    move-exception v0

    const/4 v5, 0x0

    goto :goto_7

    .line 10612
    :catch_4
    move-exception v0

    const/4 v4, 0x0

    .line 10613
    :goto_4
    :try_start_4
    const-string v1, "ActivityManager"

    const-string v2, "Failed reading Uri grants"

    invoke-static {v1, v2, v0}, Landroid/util/Slog;->wtf(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I

    goto :goto_6

    .line 10610
    :catch_5
    move-exception v0

    const/4 v4, 0x0

    .line 10611
    :goto_5
    const-string v1, "ActivityManager"

    const-string v2, "Failed reading Uri grants"

    invoke-static {v1, v2, v0}, Landroid/util/Slog;->wtf(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_2

    .line 10615
    :goto_6
    invoke-static {v4}, Llibcore/io/IoUtils;->closeQuietly(Ljava/lang/AutoCloseable;)V

    goto :goto_9

    :catchall_2
    move-exception v0

    move-object v5, v4

    :goto_7
    invoke-static {v5}, Llibcore/io/IoUtils;->closeQuietly(Ljava/lang/AutoCloseable;)V

    throw v0

    .line 10608
    :catch_6
    move-exception v0

    const/4 v5, 0x0

    .line 10615
    :cond_4
    :goto_8
    invoke-static {v5}, Llibcore/io/IoUtils;->closeQuietly(Ljava/lang/AutoCloseable;)V

    .line 10616
    :goto_9
    nop

    .line 10617
    return-void
.end method

.method private removeContentProviderExternalUnchecked(Ljava/lang/String;Landroid/os/IBinder;I)V
    .locals 2

    .line 12916
    monitor-enter p0

    :try_start_0
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    .line 12917
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mProviderMap:Lcom/android/server/am/ProviderMap;

    invoke-virtual {v0, p1, p3}, Lcom/android/server/am/ProviderMap;->getProviderByName(Ljava/lang/String;I)Lcom/android/server/am/ContentProviderRecord;

    move-result-object p1

    .line 12918
    if-nez p1, :cond_0

    .line 12921
    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    return-void

    .line 12925
    :cond_0
    :try_start_1
    new-instance v0, Landroid/content/ComponentName;

    iget-object v1, p1, Lcom/android/server/am/ContentProviderRecord;->info:Landroid/content/pm/ProviderInfo;

    iget-object v1, v1, Landroid/content/pm/ProviderInfo;->packageName:Ljava/lang/String;

    iget-object p1, p1, Lcom/android/server/am/ContentProviderRecord;->info:Landroid/content/pm/ProviderInfo;

    iget-object p1, p1, Landroid/content/pm/ProviderInfo;->name:Ljava/lang/String;

    invoke-direct {v0, v1, p1}, Landroid/content/ComponentName;-><init>(Ljava/lang/String;Ljava/lang/String;)V

    .line 12926
    iget-object p1, p0, Lcom/android/server/am/ActivityManagerService;->mProviderMap:Lcom/android/server/am/ProviderMap;

    invoke-virtual {p1, v0, p3}, Lcom/android/server/am/ProviderMap;->getProviderByClass(Landroid/content/ComponentName;I)Lcom/android/server/am/ContentProviderRecord;

    move-result-object p1

    .line 12927
    invoke-virtual {p1}, Lcom/android/server/am/ContentProviderRecord;->hasExternalProcessHandles()Z

    move-result p3

    if-eqz p3, :cond_2

    .line 12928
    invoke-virtual {p1, p2}, Lcom/android/server/am/ContentProviderRecord;->removeExternalProcessHandleLocked(Landroid/os/IBinder;)Z

    move-result p3

    if-eqz p3, :cond_1

    .line 12929
    invoke-virtual {p0}, Lcom/android/server/am/ActivityManagerService;->updateOomAdjLocked()V

    goto :goto_0

    .line 12931
    :cond_1
    const-string p3, "ActivityManager"

    new-instance v0, Ljava/lang/StringBuilder;

    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V

    const-string v1, "Attmpt to remove content provider "

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    const-string p1, " with no external reference for token: "

    invoke-virtual {v0, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0, p2}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    const-string p1, "."

    invoke-virtual {v0, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object p1

    invoke-static {p3, p1}, Landroid/util/Slog;->e(Ljava/lang/String;Ljava/lang/String;)I

    goto :goto_0

    .line 12936
    :cond_2
    const-string p2, "ActivityManager"

    new-instance p3, Ljava/lang/StringBuilder;

    invoke-direct {p3}, Ljava/lang/StringBuilder;-><init>()V

    const-string v0, "Attmpt to remove content provider: "

    invoke-virtual {p3, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {p3, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    const-string p1, " with no external references."

    invoke-virtual {p3, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {p3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object p1

    invoke-static {p2, p1}, Landroid/util/Slog;->e(Ljava/lang/String;Ljava/lang/String;)I

    .line 12939
    :goto_0
    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    .line 12940
    return-void

    .line 12939
    :catchall_0
    move-exception p1

    :try_start_2
    monitor-exit p0
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw p1
.end method

.method private final removeDyingProviderLocked(Lcom/android/server/am/ProcessRecord;Lcom/android/server/am/ContentProviderRecord;Z)Z
    .locals 7

    .line 20339
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mLaunchingProviders:Ljava/util/ArrayList;

    invoke-virtual {v0, p2}, Ljava/util/ArrayList;->contains(Ljava/lang/Object;)Z

    move-result v0

    .line 20341
    if-eqz v0, :cond_0

    if-eqz p3, :cond_1

    .line 20342
    :cond_0
    monitor-enter p2

    .line 20343
    const/4 v1, 0x0

    :try_start_0
    iput-object v1, p2, Lcom/android/server/am/ContentProviderRecord;->launchingApp:Lcom/android/server/am/ProcessRecord;

    .line 20344
    invoke-virtual {p2}, Ljava/lang/Object;->notifyAll()V

    .line 20345
    monitor-exit p2
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 20346
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mProviderMap:Lcom/android/server/am/ProviderMap;

    iget-object v2, p2, Lcom/android/server/am/ContentProviderRecord;->name:Landroid/content/ComponentName;

    iget v3, p2, Lcom/android/server/am/ContentProviderRecord;->uid:I

    invoke-static {v3}, Landroid/os/UserHandle;->getUserId(I)I

    move-result v3

    invoke-virtual {v1, v2, v3}, Lcom/android/server/am/ProviderMap;->removeProviderByClass(Landroid/content/ComponentName;I)V

    .line 20347
    iget-object v1, p2, Lcom/android/server/am/ContentProviderRecord;->info:Landroid/content/pm/ProviderInfo;

    iget-object v1, v1, Landroid/content/pm/ProviderInfo;->authority:Ljava/lang/String;

    const-string v2, ";"

    invoke-virtual {v1, v2}, Ljava/lang/String;->split(Ljava/lang/String;)[Ljava/lang/String;

    move-result-object v1

    .line 20348
    const/4 v2, 0x0

    :goto_0
    array-length v3, v1

    if-ge v2, v3, :cond_1

    .line 20349
    iget-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mProviderMap:Lcom/android/server/am/ProviderMap;

    aget-object v4, v1, v2

    iget v5, p2, Lcom/android/server/am/ContentProviderRecord;->uid:I

    invoke-static {v5}, Landroid/os/UserHandle;->getUserId(I)I

    move-result v5

    invoke-virtual {v3, v4, v5}, Lcom/android/server/am/ProviderMap;->removeProviderByName(Ljava/lang/String;I)V

    .line 20348
    add-int/lit8 v2, v2, 0x1

    goto :goto_0

    .line 20353
    :cond_1
    iget-object v1, p2, Lcom/android/server/am/ContentProviderRecord;->connections:Ljava/util/ArrayList;

    invoke-virtual {v1}, Ljava/util/ArrayList;->size()I

    move-result v1

    const/4 v2, 0x1

    sub-int/2addr v1, v2

    :goto_1
    if-ltz v1, :cond_7

    .line 20354
    iget-object v3, p2, Lcom/android/server/am/ContentProviderRecord;->connections:Ljava/util/ArrayList;

    invoke-virtual {v3, v1}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v3

    check-cast v3, Lcom/android/server/am/ContentProviderConnection;

    .line 20355
    iget-boolean v4, v3, Lcom/android/server/am/ContentProviderConnection;->waiting:Z

    if-eqz v4, :cond_2

    .line 20359
    if-eqz v0, :cond_2

    if-nez p3, :cond_2

    .line 20360
    goto/16 :goto_5

    .line 20363
    :cond_2
    iget-object v4, v3, Lcom/android/server/am/ContentProviderConnection;->client:Lcom/android/server/am/ProcessRecord;

    .line 20364
    iput-boolean v2, v3, Lcom/android/server/am/ContentProviderConnection;->dead:Z

    .line 20365
    iget v5, v3, Lcom/android/server/am/ContentProviderConnection;->stableCount:I

    if-lez v5, :cond_5

    .line 20366
    iget-boolean v3, v4, Lcom/android/server/am/ProcessRecord;->persistent:Z

    if-nez v3, :cond_6

    iget-object v3, v4, Lcom/android/server/am/ProcessRecord;->thread:Landroid/app/IApplicationThread;

    if-eqz v3, :cond_6

    iget v3, v4, Lcom/android/server/am/ProcessRecord;->pid:I

    if-eqz v3, :cond_6

    iget v3, v4, Lcom/android/server/am/ProcessRecord;->pid:I

    sget v5, Lcom/android/server/am/ActivityManagerService;->MY_PID:I

    if-eq v3, v5, :cond_6

    .line 20369
    new-instance v3, Ljava/lang/StringBuilder;

    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V

    const-string v5, "depends on provider "

    invoke-virtual {v3, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget-object v5, p2, Lcom/android/server/am/ContentProviderRecord;->name:Landroid/content/ComponentName;

    .line 20370
    invoke-virtual {v5}, Landroid/content/ComponentName;->flattenToShortString()Ljava/lang/String;

    move-result-object v5

    invoke-virtual {v3, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v5, " in dying proc "

    invoke-virtual {v3, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 20371
    if-eqz p1, :cond_3

    iget-object v5, p1, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;

    goto :goto_2

    :cond_3
    const-string v5, "??"

    :goto_2
    invoke-virtual {v3, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v5, " (adj "

    invoke-virtual {v3, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 20372
    if-eqz p1, :cond_4

    iget v5, p1, Lcom/android/server/am/ProcessRecord;->setAdj:I

    invoke-static {v5}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v5

    goto :goto_3

    :cond_4
    const-string v5, "??"

    :goto_3
    invoke-virtual {v3, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    const-string v5, ")"

    invoke-virtual {v3, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v3

    .line 20369
    invoke-virtual {v4, v3, v2}, Lcom/android/server/am/ProcessRecord;->kill(Ljava/lang/String;Z)V

    goto :goto_5

    .line 20374
    :cond_5
    iget-object v5, v4, Lcom/android/server/am/ProcessRecord;->thread:Landroid/app/IApplicationThread;

    if-eqz v5, :cond_6

    iget-object v5, v3, Lcom/android/server/am/ContentProviderConnection;->provider:Lcom/android/server/am/ContentProviderRecord;

    iget-object v5, v5, Lcom/android/server/am/ContentProviderRecord;->provider:Landroid/content/IContentProvider;

    if-eqz v5, :cond_6

    .line 20376
    :try_start_1
    iget-object v5, v4, Lcom/android/server/am/ProcessRecord;->thread:Landroid/app/IApplicationThread;

    iget-object v6, v3, Lcom/android/server/am/ContentProviderConnection;->provider:Lcom/android/server/am/ContentProviderRecord;

    iget-object v6, v6, Lcom/android/server/am/ContentProviderRecord;->provider:Landroid/content/IContentProvider;

    invoke-interface {v6}, Landroid/content/IContentProvider;->asBinder()Landroid/os/IBinder;

    move-result-object v6

    invoke-interface {v5, v6}, Landroid/app/IApplicationThread;->unstableProviderDied(Landroid/os/IBinder;)V
    :try_end_1
    .catch Landroid/os/RemoteException; {:try_start_1 .. :try_end_1} :catch_0

    .line 20378
    goto :goto_4

    .line 20377
    :catch_0
    move-exception v5

    .line 20381
    :goto_4
    iget-object v5, p2, Lcom/android/server/am/ContentProviderRecord;->connections:Ljava/util/ArrayList;

    invoke-virtual {v5, v1}, Ljava/util/ArrayList;->remove(I)Ljava/lang/Object;

    .line 20382
    iget-object v5, v3, Lcom/android/server/am/ContentProviderConnection;->client:Lcom/android/server/am/ProcessRecord;

    iget-object v5, v5, Lcom/android/server/am/ProcessRecord;->conProviders:Ljava/util/ArrayList;

    invoke-virtual {v5, v3}, Ljava/util/ArrayList;->remove(Ljava/lang/Object;)Z

    move-result v3

    if-eqz v3, :cond_6

    .line 20383
    iget v3, v4, Lcom/android/server/am/ProcessRecord;->uid:I

    iget-object v4, v4, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;

    iget v5, p2, Lcom/android/server/am/ContentProviderRecord;->uid:I

    iget-object v6, p2, Lcom/android/server/am/ContentProviderRecord;->name:Landroid/content/ComponentName;

    invoke-virtual {p0, v3, v4, v5, v6}, Lcom/android/server/am/ActivityManagerService;->stopAssociationLocked(ILjava/lang/String;ILandroid/content/ComponentName;)V

    .line 20353
    :cond_6
    :goto_5
    add-int/lit8 v1, v1, -0x1

    goto/16 :goto_1

    .line 20388
    :cond_7
    if-eqz v0, :cond_8

    if-eqz p3, :cond_8

    .line 20389
    iget-object p1, p0, Lcom/android/server/am/ActivityManagerService;->mLaunchingProviders:Ljava/util/ArrayList;

    invoke-virtual {p1, p2}, Ljava/util/ArrayList;->remove(Ljava/lang/Object;)Z

    .line 20391
    :cond_8
    return v0

    .line 20345
    :catchall_0
    move-exception p1

    :try_start_2
    monitor-exit p2
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    throw p1
.end method

.method private final removeProcessNameLocked(Ljava/lang/String;I)Lcom/android/server/am/ProcessRecord;
    .locals 1

    .line 7584
    const/4 v0, 0x0

    invoke-direct {p0, p1, p2, v0}, Lcom/android/server/am/ActivityManagerService;->removeProcessNameLocked(Ljava/lang/String;ILcom/android/server/am/ProcessRecord;)Lcom/android/server/am/ProcessRecord;

    move-result-object p1

    return-object p1
.end method

.method private final removeProcessNameLocked(Ljava/lang/String;ILcom/android/server/am/ProcessRecord;)Lcom/android/server/am/ProcessRecord;
    .locals 2

    .line 7589
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mProcessNames:Lcom/android/internal/app/ProcessMap;

    invoke-virtual {v0, p1, p2}, Lcom/android/internal/app/ProcessMap;->get(Ljava/lang/String;I)Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Lcom/android/server/am/ProcessRecord;

    .line 7593
    if-eqz p3, :cond_0

    if-ne v0, p3, :cond_1

    .line 7594
    :cond_0
    iget-object p3, p0, Lcom/android/server/am/ActivityManagerService;->mProcessNames:Lcom/android/internal/app/ProcessMap;

    invoke-virtual {p3, p1, p2}, Lcom/android/internal/app/ProcessMap;->remove(Ljava/lang/String;I)Ljava/lang/Object;

    .line 7596
    :cond_1
    if-eqz v0, :cond_3

    iget-object p1, v0, Lcom/android/server/am/ProcessRecord;->uidRecord:Lcom/android/server/am/UidRecord;

    if-eqz p1, :cond_3

    .line 7597
    iget-object p1, v0, Lcom/android/server/am/ProcessRecord;->uidRecord:Lcom/android/server/am/UidRecord;

    iget p3, p1, Lcom/android/server/am/UidRecord;->numProcs:I

    const/4 v1, 0x1

    sub-int/2addr p3, v1

    iput p3, p1, Lcom/android/server/am/UidRecord;->numProcs:I

    .line 7598
    iget-object p1, v0, Lcom/android/server/am/ProcessRecord;->uidRecord:Lcom/android/server/am/UidRecord;

    iget p1, p1, Lcom/android/server/am/UidRecord;->numProcs:I

    if-nez p1, :cond_2

    .line 7602
    iget-object p1, v0, Lcom/android/server/am/ProcessRecord;->uidRecord:Lcom/android/server/am/UidRecord;

    const/4 p3, -0x1

    invoke-virtual {p0, p1, p3, v1}, Lcom/android/server/am/ActivityManagerService;->enqueueUidChangeLocked(Lcom/android/server/am/UidRecord;II)V

    .line 7603
    invoke-static {p2}, Lcom/android/server/am/EventLogTags;->writeAmUidStopped(I)V

    .line 7604
    iget-object p1, p0, Lcom/android/server/am/ActivityManagerService;->mActiveUids:Landroid/util/SparseArray;

    invoke-virtual {p1, p2}, Landroid/util/SparseArray;->remove(I)V

    .line 7605
    const/16 p1, 0x13

    invoke-direct {p0, p2, p1}, Lcom/android/server/am/ActivityManagerService;->noteUidProcessState(II)V

    .line 7607
    :cond_2
    const/4 p1, 0x0

    iput-object p1, v0, Lcom/android/server/am/ProcessRecord;->uidRecord:Lcom/android/server/am/UidRecord;

    .line 7609
    :cond_3
    iget-object p1, p0, Lcom/android/server/am/ActivityManagerService;->mIsolatedProcesses:Landroid/util/SparseArray;

    invoke-virtual {p1, p2}, Landroid/util/SparseArray;->remove(I)V

    .line 7610
    return-object v0
.end method

.method private removeUriPermissionsForPackageLocked(Ljava/lang/String;IZZ)V
    .locals 11
    .annotation build Lcom/android/internal/annotations/GuardedBy;
        value = "this"
    .end annotation

    .line 10362
    const/4 v0, -0x1

    if-ne p2, v0, :cond_1

    if-eqz p1, :cond_0

    goto :goto_0

    .line 10363
    :cond_0
    new-instance p1, Ljava/lang/IllegalArgumentException;

    const-string p2, "Must narrow by either package or user"

    invoke-direct {p1, p2}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw p1

    .line 10366
    :cond_1
    :goto_0
    nop

    .line 10368
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mGrantedUriPermissions:Landroid/util/SparseArray;

    invoke-virtual {v1}, Landroid/util/SparseArray;->size()I

    move-result v1

    .line 10369
    const/4 v2, 0x0

    move v3, v2

    :goto_1
    if-ge v2, v1, :cond_a

    .line 10370
    iget-object v4, p0, Lcom/android/server/am/ActivityManagerService;->mGrantedUriPermissions:Landroid/util/SparseArray;

    invoke-virtual {v4, v2}, Landroid/util/SparseArray;->keyAt(I)I

    move-result v4

    .line 10371
    iget-object v5, p0, Lcom/android/server/am/ActivityManagerService;->mGrantedUriPermissions:Landroid/util/SparseArray;

    invoke-virtual {v5, v2}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;

    move-result-object v5

    check-cast v5, Landroid/util/ArrayMap;

    .line 10374
    const/4 v6, 0x1

    if-eq p2, v0, :cond_2

    .line 10375
    invoke-static {v4}, Landroid/os/UserHandle;->getUserId(I)I

    move-result v7

    if-ne p2, v7, :cond_9

    .line 10376
    :cond_2
    invoke-virtual {v5}, Landroid/util/ArrayMap;->values()Ljava/util/Collection;

    move-result-object v7

    invoke-interface {v7}, Ljava/util/Collection;->iterator()Ljava/util/Iterator;

    move-result-object v7

    :goto_2
    invoke-interface {v7}, Ljava/util/Iterator;->hasNext()Z

    move-result v8

    if-eqz v8, :cond_8

    .line 10377
    invoke-interface {v7}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v8

    check-cast v8, Lcom/android/server/am/UriPermission;

    .line 10380
    if-eqz p1, :cond_4

    if-nez p4, :cond_3

    iget-object v9, v8, Lcom/android/server/am/UriPermission;->sourcePkg:Ljava/lang/String;

    invoke-virtual {v9, p1}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v9

    if-nez v9, :cond_4

    :cond_3
    iget-object v9, v8, Lcom/android/server/am/UriPermission;->targetPkg:Ljava/lang/String;

    .line 10381
    invoke-virtual {v9, p1}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v9

    if-eqz v9, :cond_7

    .line 10385
    :cond_4
    const-string v9, "downloads"

    iget-object v10, v8, Lcom/android/server/am/UriPermission;->uri:Lcom/android/server/am/ActivityManagerService$GrantUri;

    iget-object v10, v10, Lcom/android/server/am/ActivityManagerService$GrantUri;->uri:Landroid/net/Uri;

    invoke-virtual {v10}, Landroid/net/Uri;->getAuthority()Ljava/lang/String;

    move-result-object v10

    invoke-virtual {v9, v10}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v9

    if-eqz v9, :cond_5

    if-nez p3, :cond_5

    .line 10386
    goto :goto_2

    .line 10388
    :cond_5
    if-eqz p3, :cond_6

    .line 10389
    move v9, v0

    goto :goto_3

    :cond_6
    const/16 v9, -0x41

    .line 10388
    :goto_3
    invoke-virtual {v8, v9, v6}, Lcom/android/server/am/UriPermission;->revokeModes(IZ)Z

    move-result v9

    or-int/2addr v3, v9

    .line 10393
    iget v8, v8, Lcom/android/server/am/UriPermission;->modeFlags:I

    if-nez v8, :cond_7

    .line 10394
    invoke-interface {v7}, Ljava/util/Iterator;->remove()V

    .line 10397
    :cond_7
    goto :goto_2

    .line 10399
    :cond_8
    invoke-virtual {v5}, Landroid/util/ArrayMap;->isEmpty()Z

    move-result v5

    if-eqz v5, :cond_9

    .line 10400
    iget-object v5, p0, Lcom/android/server/am/ActivityManagerService;->mGrantedUriPermissions:Landroid/util/SparseArray;

    invoke-virtual {v5, v4}, Landroid/util/SparseArray;->remove(I)V

    .line 10401
    add-int/lit8 v1, v1, -0x1

    .line 10402
    add-int/lit8 v2, v2, -0x1

    .line 10369
    :cond_9
    add-int/2addr v2, v6

    goto :goto_1

    .line 10407
    :cond_a
    if-eqz v3, :cond_b

    .line 10408
    invoke-direct {p0}, Lcom/android/server/am/ActivityManagerService;->schedulePersistUriGrants()V

    .line 10410
    :cond_b
    return-void
.end method

.method private reportStartInstrumentationFailureLocked(Landroid/app/IInstrumentationWatcher;Landroid/content/ComponentName;Ljava/lang/String;)V
    .locals 3

    .line 22485
    const-string v0, "ActivityManager"

    invoke-static {v0, p3}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 22486
    if-eqz p1, :cond_0

    .line 22487
    new-instance v0, Landroid/os/Bundle;

    invoke-direct {v0}, Landroid/os/Bundle;-><init>()V

    .line 22488
    const-string v1, "id"

    const-string v2, "ActivityManagerService"

    invoke-virtual {v0, v1, v2}, Landroid/os/Bundle;->putString(Ljava/lang/String;Ljava/lang/String;)V

    .line 22489
    const-string v1, "Error"

    invoke-virtual {v0, v1, p3}, Landroid/os/Bundle;->putString(Ljava/lang/String;Ljava/lang/String;)V

    .line 22490
    iget-object p3, p0, Lcom/android/server/am/ActivityManagerService;->mInstrumentationReporter:Lcom/android/server/am/InstrumentationReporter;

    const/4 v1, -0x1

    invoke-virtual {p3, p1, p2, v1, v0}, Lcom/android/server/am/InstrumentationReporter;->reportStatus(Landroid/app/IInstrumentationWatcher;Landroid/content/ComponentName;ILandroid/os/Bundle;)V

    .line 22492
    :cond_0
    return-void
.end method

.method private requestBugReportWithDescription(Ljava/lang/String;Ljava/lang/String;I)V
    .locals 3
    .annotation runtime Ljava/lang/Deprecated;
    .end annotation

    .line 14090
    invoke-static {p1}, Landroid/text/TextUtils;->isEmpty(Ljava/lang/CharSequence;)Z

    move-result v0

    if-nez v0, :cond_3

    .line 14091
    invoke-virtual {p1}, Ljava/lang/String;->length()I

    move-result v0

    const/16 v1, 0x32

    if-gt v0, v1, :cond_2

    .line 14096
    invoke-static {p2}, Landroid/text/TextUtils;->isEmpty(Ljava/lang/CharSequence;)Z

    move-result v0

    if-nez v0, :cond_1

    .line 14099
    :try_start_0
    const-string v0, "UTF-8"

    invoke-virtual {p2, v0}, Ljava/lang/String;->getBytes(Ljava/lang/String;)[B

    move-result-object v0

    array-length v0, v0
    :try_end_0
    .catch Ljava/io/UnsupportedEncodingException; {:try_start_0 .. :try_end_0} :catch_0

    .line 14103
    nop

    .line 14104
    const/16 v1, 0x5b

    if-gt v0, v1, :cond_0

    .line 14109
    const-string v0, "dumpstate.options.description"

    invoke-static {v0, p2}, Landroid/os/SystemProperties;->set(Ljava/lang/String;Ljava/lang/String;)V

    goto :goto_0

    .line 14105
    :cond_0
    nop

    .line 14107
    new-instance p1, Ljava/lang/IllegalArgumentException;

    const-string/jumbo p2, "shareTitle should be less than 91 bytes"

    invoke-direct {p1, p2}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw p1

    .line 14100
    :catch_0
    move-exception p1

    .line 14101
    nop

    .line 14102
    new-instance p1, Ljava/lang/IllegalArgumentException;

    const-string/jumbo p2, "shareDescription: UnsupportedEncodingException"

    invoke-direct {p1, p2}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw p1

    .line 14112
    :cond_1
    :goto_0
    const-string v0, "dumpstate.options.title"

    invoke-static {v0, p1}, Landroid/os/SystemProperties;->set(Ljava/lang/String;Ljava/lang/String;)V

    goto :goto_1

    .line 14092
    :cond_2
    nop

    .line 14094
    new-instance p1, Ljava/lang/IllegalArgumentException;

    const-string/jumbo p2, "shareTitle should be less than 50 characters"

    invoke-direct {p1, p2}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw p1

    .line 14116
    :cond_3
    :goto_1
    const-string v0, "ActivityManager"

    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string v2, "Bugreport notification title "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v1, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string p1, " description "

    invoke-virtual {v1, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v1, p2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object p1

    invoke-static {v0, p1}, Landroid/util/Slog;->d(Ljava/lang/String;Ljava/lang/String;)I

    .line 14118
    invoke-virtual {p0, p3}, Lcom/android/server/am/ActivityManagerService;->requestBugReport(I)V

    .line 14119
    return-void
.end method

.method private requestTargetProviderPermissionsReviewIfNeededLocked(Landroid/content/pm/ProviderInfo;Lcom/android/server/am/ProcessRecord;I)Z
    .locals 3

    .line 12780
    invoke-virtual {p0}, Lcom/android/server/am/ActivityManagerService;->getPackageManagerInternalLocked()Landroid/content/pm/PackageManagerInternal;

    move-result-object v0

    iget-object v1, p1, Landroid/content/pm/ProviderInfo;->packageName:Ljava/lang/String;

    invoke-virtual {v0, v1, p3}, Landroid/content/pm/PackageManagerInternal;->isPermissionsReviewRequired(Ljava/lang/String;I)Z

    move-result v0

    const/4 v1, 0x1

    if-eqz v0, :cond_3

    .line 12783
    const/4 v0, 0x0

    if-eqz p2, :cond_1

    iget p2, p2, Lcom/android/server/am/ProcessRecord;->setSchedGroup:I

    if-eqz p2, :cond_0

    goto :goto_0

    .line 12787
    :cond_0
    move v1, v0

    goto :goto_1

    .line 12783
    :cond_1
    :goto_0
    nop

    .line 12787
    :goto_1
    if-nez v1, :cond_2

    .line 12788
    const-string p2, "ActivityManager"

    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v2, "u"

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v1, p3}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string p3, " Instantiating a provider in package"

    invoke-virtual {v1, p3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget-object p1, p1, Landroid/content/pm/ProviderInfo;->packageName:Ljava/lang/String;

    invoke-virtual {v1, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string p1, " requires a permissions review"

    invoke-virtual {v1, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object p1

    invoke-static {p2, p1}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 12790
    return v0

    .line 12793
    :cond_2
    new-instance p2, Landroid/content/Intent;

    const-string v1, "android.intent.action.REVIEW_PERMISSIONS"

    invoke-direct {p2, v1}, Landroid/content/Intent;-><init>(Ljava/lang/String;)V

    .line 12794
    const/high16 v1, 0x10800000

    invoke-virtual {p2, v1}, Landroid/content/Intent;->addFlags(I)Landroid/content/Intent;

    .line 12796
    const-string v1, "android.intent.extra.PACKAGE_NAME"

    iget-object p1, p1, Landroid/content/pm/ProviderInfo;->packageName:Ljava/lang/String;

    invoke-virtual {p2, v1, p1}, Landroid/content/Intent;->putExtra(Ljava/lang/String;Ljava/lang/String;)Landroid/content/Intent;

    .line 12803
    new-instance p1, Landroid/os/UserHandle;

    invoke-direct {p1, p3}, Landroid/os/UserHandle;-><init>(I)V

    .line 12804
    iget-object p3, p0, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    new-instance v1, Lcom/android/server/am/ActivityManagerService$14;

    invoke-direct {v1, p0, p2, p1}, Lcom/android/server/am/ActivityManagerService$14;-><init>(Lcom/android/server/am/ActivityManagerService;Landroid/content/Intent;Landroid/os/UserHandle;)V

    invoke-virtual {p3, v1}, Lcom/android/server/am/ActivityManagerService$MainHandler;->post(Ljava/lang/Runnable;)Z

    .line 12811
    return v0

    .line 12814
    :cond_3
    return v1
.end method

.method static resetPriorityAfterLockedSection()V
    .locals 1

    .line 865
    sget-object v0, Lcom/android/server/am/ActivityManagerService;->sThreadPriorityBooster:Lcom/android/server/ThreadPriorityBooster;

    invoke-virtual {v0}, Lcom/android/server/ThreadPriorityBooster;->reset()V

    .line 866
    return-void
.end method

.method private resizeStackWithBoundsFromWindowManager(IZ)V
    .locals 10

    .line 23131
    new-instance v0, Landroid/graphics/Rect;

    invoke-direct {v0}, Landroid/graphics/Rect;-><init>()V

    .line 23132
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mStackSupervisor:Lcom/android/server/am/ActivityStackSupervisor;

    invoke-virtual {v1, p1}, Lcom/android/server/am/ActivityStackSupervisor;->getStack(I)Lcom/android/server/am/ActivityStack;

    move-result-object v3

    .line 23135
    if-nez v3, :cond_0

    .line 23136
    new-instance v1, Ljava/io/StringWriter;

    invoke-direct {v1}, Ljava/io/StringWriter;-><init>()V

    .line 23137
    new-instance v2, Ljava/io/PrintWriter;

    invoke-direct {v2, v1}, Ljava/io/PrintWriter;-><init>(Ljava/io/Writer;)V

    .line 23138
    iget-object v4, p0, Lcom/android/server/am/ActivityManagerService;->mStackSupervisor:Lcom/android/server/am/ActivityStackSupervisor;

    invoke-virtual {v4, v2}, Lcom/android/server/am/ActivityStackSupervisor;->dumpDisplays(Ljava/io/PrintWriter;)V

    .line 23139
    invoke-virtual {v2}, Ljava/io/PrintWriter;->flush()V

    .line 23141
    const-string v2, "ActivityManager"

    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v5, "stack not found:"

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v4, p1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string p1, " displays:"

    invoke-virtual {v4, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v4, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object p1

    invoke-static {v2, p1}, Landroid/util/Log;->wtf(Ljava/lang/String;Ljava/lang/String;)I

    .line 23144
    :cond_0
    invoke-virtual {v3, v0}, Lcom/android/server/am/ActivityStack;->getBoundsForNewConfiguration(Landroid/graphics/Rect;)V

    .line 23145
    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mStackSupervisor:Lcom/android/server/am/ActivityStackSupervisor;

    .line 23146
    invoke-virtual {v0}, Landroid/graphics/Rect;->isEmpty()Z

    move-result p1

    if-nez p1, :cond_1

    :goto_0
    move-object v4, v0

    goto :goto_1

    :cond_1
    const/4 v0, 0x0

    goto :goto_0

    :goto_1
    const/4 v5, 0x0

    const/4 v6, 0x0

    const/4 v7, 0x0

    const/4 v8, 0x0

    .line 23145
    move v9, p2

    invoke-virtual/range {v2 .. v9}, Lcom/android/server/am/ActivityStackSupervisor;->resizeStackLocked(Lcom/android/server/am/ActivityStack;Landroid/graphics/Rect;Landroid/graphics/Rect;Landroid/graphics/Rect;ZZZ)V

    .line 23149
    return-void
.end method

.method private resolveActivityInfo(Landroid/content/Intent;II)Landroid/content/pm/ActivityInfo;
    .locals 3

    .line 4833
    nop

    .line 4834
    invoke-virtual {p1}, Landroid/content/Intent;->getComponent()Landroid/content/ComponentName;

    move-result-object v0

    .line 4836
    const/4 v1, 0x0

    if-eqz v0, :cond_0

    .line 4838
    :try_start_0
    invoke-static {}, Landroid/app/AppGlobals;->getPackageManager()Landroid/content/pm/IPackageManager;

    move-result-object p1

    invoke-interface {p1, v0, p2, p3}, Landroid/content/pm/IPackageManager;->getActivityInfo(Landroid/content/ComponentName;II)Landroid/content/pm/ActivityInfo;

    move-result-object p1

    .line 4851
    :goto_0
    move-object v1, p1

    goto :goto_1

    .line 4849
    :catch_0
    move-exception p1

    goto :goto_2

    .line 4840
    :cond_0
    invoke-static {}, Landroid/app/AppGlobals;->getPackageManager()Landroid/content/pm/IPackageManager;

    move-result-object v0

    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mContext:Landroid/content/Context;

    .line 4842
    invoke-virtual {v2}, Landroid/content/Context;->getContentResolver()Landroid/content/ContentResolver;

    move-result-object v2

    invoke-virtual {p1, v2}, Landroid/content/Intent;->resolveTypeIfNeeded(Landroid/content/ContentResolver;)Ljava/lang/String;

    move-result-object v2

    .line 4840
    invoke-interface {v0, p1, v2, p2, p3}, Landroid/content/pm/IPackageManager;->resolveIntent(Landroid/content/Intent;Ljava/lang/String;II)Landroid/content/pm/ResolveInfo;

    move-result-object p1

    .line 4845
    if-eqz p1, :cond_1

    .line 4846
    iget-object p1, p1, Landroid/content/pm/ResolveInfo;->activityInfo:Landroid/content/pm/ActivityInfo;
    :try_end_0
    .catch Landroid/os/RemoteException; {:try_start_0 .. :try_end_0} :catch_0

    goto :goto_0

    .line 4851
    :cond_1
    :goto_1
    goto :goto_3

    .line 4849
    :goto_2
    nop

    .line 4853
    :goto_3
    return-object v1
.end method

.method private final resumedAppLocked()Lcom/android/server/am/ActivityRecord;
    .locals 7

    .line 25225
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mStackSupervisor:Lcom/android/server/am/ActivityStackSupervisor;

    invoke-virtual {v0}, Lcom/android/server/am/ActivityStackSupervisor;->getResumedActivityLocked()Lcom/android/server/am/ActivityRecord;

    move-result-object v0

    .line 25228
    if-eqz v0, :cond_0

    .line 25229
    iget-object v1, v0, Lcom/android/server/am/ActivityRecord;->packageName:Ljava/lang/String;

    .line 25230
    iget-object v2, v0, Lcom/android/server/am/ActivityRecord;->info:Landroid/content/pm/ActivityInfo;

    iget-object v2, v2, Landroid/content/pm/ActivityInfo;->applicationInfo:Landroid/content/pm/ApplicationInfo;

    iget v2, v2, Landroid/content/pm/ApplicationInfo;->uid:I

    goto :goto_0

    .line 25232
    :cond_0
    const/4 v1, 0x0

    .line 25233
    const/4 v2, -0x1

    .line 25236
    :goto_0
    iget v3, p0, Lcom/android/server/am/ActivityManagerService;->mCurResumedUid:I

    if-ne v2, v3, :cond_1

    iget-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mCurResumedPackage:Ljava/lang/String;

    if-eq v1, v3, :cond_5

    if-eqz v1, :cond_1

    iget-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mCurResumedPackage:Ljava/lang/String;

    .line 25237
    invoke-virtual {v1, v3}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v3

    if-nez v3, :cond_5

    .line 25238
    :cond_1
    iget-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mCurResumedPackage:Ljava/lang/String;

    if-eqz v3, :cond_2

    .line 25239
    iget-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mBatteryStatsService:Lcom/android/server/am/BatteryStatsService;

    const/16 v4, 0x4003

    iget-object v5, p0, Lcom/android/server/am/ActivityManagerService;->mCurResumedPackage:Ljava/lang/String;

    iget v6, p0, Lcom/android/server/am/ActivityManagerService;->mCurResumedUid:I

    invoke-virtual {v3, v4, v5, v6}, Lcom/android/server/am/BatteryStatsService;->noteEvent(ILjava/lang/String;I)V

    .line 25242
    :cond_2
    iput-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mCurResumedPackage:Ljava/lang/String;

    .line 25243
    iput v2, p0, Lcom/android/server/am/ActivityManagerService;->mCurResumedUid:I

    .line 25244
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mCurResumedPackage:Ljava/lang/String;

    if-eqz v1, :cond_3

    .line 25245
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mBatteryStatsService:Lcom/android/server/am/BatteryStatsService;

    const v2, 0x8003

    iget-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mCurResumedPackage:Ljava/lang/String;

    iget v4, p0, Lcom/android/server/am/ActivityManagerService;->mCurResumedUid:I

    invoke-virtual {v1, v2, v3, v4}, Lcom/android/server/am/BatteryStatsService;->noteEvent(ILjava/lang/String;I)V

    .line 25249
    :cond_3
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mCurResumedPackage:Ljava/lang/String;

    if-eqz v1, :cond_5

    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mGamingModeController:Lcom/android/internal/util/aospextended/GamingModeController;

    if-eqz v1, :cond_5

    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mGamingModeController:Lcom/android/internal/util/aospextended/GamingModeController;

    invoke-virtual {v1}, Lcom/android/internal/util/aospextended/GamingModeController;->isGamingModeEnabled()Z

    move-result v1

    if-eqz v1, :cond_5

    .line 25250
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mGamingModeController:Lcom/android/internal/util/aospextended/GamingModeController;

    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mCurResumedPackage:Ljava/lang/String;

    invoke-virtual {v1, v2}, Lcom/android/internal/util/aospextended/GamingModeController;->topAppChanged(Ljava/lang/String;)Z

    move-result v1

    if-eqz v1, :cond_4

    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mGamingModeController:Lcom/android/internal/util/aospextended/GamingModeController;

    invoke-virtual {v1}, Lcom/android/internal/util/aospextended/GamingModeController;->isGamingModeActivated()Z

    move-result v1

    if-nez v1, :cond_4

    .line 25251
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mContext:Landroid/content/Context;

    invoke-virtual {v1}, Landroid/content/Context;->getContentResolver()Landroid/content/ContentResolver;

    move-result-object v1

    const-string v2, "gaming_mode_active"

    const/4 v3, 0x1

    invoke-static {v1, v2, v3}, Landroid/provider/Settings$System;->putInt(Landroid/content/ContentResolver;Ljava/lang/String;I)Z

    goto :goto_1

    .line 25253
    :cond_4
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mGamingModeController:Lcom/android/internal/util/aospextended/GamingModeController;

    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mCurResumedPackage:Ljava/lang/String;

    invoke-virtual {v1, v2}, Lcom/android/internal/util/aospextended/GamingModeController;->topAppChanged(Ljava/lang/String;)Z

    move-result v1

    if-nez v1, :cond_5

    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mGamingModeController:Lcom/android/internal/util/aospextended/GamingModeController;

    .line 25254
    invoke-virtual {v1}, Lcom/android/internal/util/aospextended/GamingModeController;->isGamingModeActivated()Z

    move-result v1

    if-eqz v1, :cond_5

    .line 25255
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mContext:Landroid/content/Context;

    invoke-virtual {v1}, Landroid/content/Context;->getContentResolver()Landroid/content/ContentResolver;

    move-result-object v1

    const-string v2, "gaming_mode_active"

    const/4 v3, 0x0

    invoke-static {v1, v2, v3}, Landroid/provider/Settings$System;->putInt(Landroid/content/ContentResolver;Ljava/lang/String;I)Z

    .line 25260
    :cond_5
    :goto_1
    return-object v0
.end method

.method private retrieveSettings()V
    .locals 19

    .line 15339
    move-object/from16 v1, p0

    iget-object v0, v1, Lcom/android/server/am/ActivityManagerService;->mContext:Landroid/content/Context;

    invoke-virtual {v0}, Landroid/content/Context;->getContentResolver()Landroid/content/ContentResolver;

    move-result-object v0

    .line 15340
    iget-object v2, v1, Lcom/android/server/am/ActivityManagerService;->mContext:Landroid/content/Context;

    .line 15341
    invoke-virtual {v2}, Landroid/content/Context;->getPackageManager()Landroid/content/pm/PackageManager;

    move-result-object v2

    const-string v3, "android.software.freeform_window_management"

    invoke-virtual {v2, v3}, Landroid/content/pm/PackageManager;->hasSystemFeature(Ljava/lang/String;)Z

    move-result v2

    const/4 v4, 0x0

    if-nez v2, :cond_1

    const-string v2, "enable_freeform_support"

    .line 15342
    invoke-static {v0, v2, v4}, Landroid/provider/Settings$Global;->getInt(Landroid/content/ContentResolver;Ljava/lang/String;I)I

    move-result v2

    if-eqz v2, :cond_0

    goto :goto_0

    .line 15345
    :cond_0
    move v2, v4

    goto :goto_1

    .line 15342
    :cond_1
    :goto_0
    nop

    .line 15345
    const/4 v2, 0x1

    :goto_1
    iget-object v5, v1, Lcom/android/server/am/ActivityManagerService;->mContext:Landroid/content/Context;

    invoke-static {v5}, Landroid/app/ActivityManager;->supportsMultiWindow(Landroid/content/Context;)Z

    move-result v5

    .line 15346
    if-eqz v5, :cond_2

    iget-object v6, v1, Lcom/android/server/am/ActivityManagerService;->mContext:Landroid/content/Context;

    .line 15347
    invoke-virtual {v6}, Landroid/content/Context;->getPackageManager()Landroid/content/pm/PackageManager;

    move-result-object v6

    const-string v7, "android.software.picture_in_picture"

    invoke-virtual {v6, v7}, Landroid/content/pm/PackageManager;->hasSystemFeature(Ljava/lang/String;)Z

    move-result v6

    if-eqz v6, :cond_2

    .line 15348
    const/4 v6, 0x1

    goto :goto_2

    .line 15347
    :cond_2
    nop

    .line 15348
    move v6, v4

    :goto_2
    iget-object v7, v1, Lcom/android/server/am/ActivityManagerService;->mContext:Landroid/content/Context;

    .line 15349
    invoke-static {v7}, Landroid/app/ActivityManager;->supportsSplitScreenMultiWindow(Landroid/content/Context;)Z

    move-result v7

    .line 15350
    iget-object v8, v1, Lcom/android/server/am/ActivityManagerService;->mContext:Landroid/content/Context;

    invoke-virtual {v8}, Landroid/content/Context;->getPackageManager()Landroid/content/pm/PackageManager;

    move-result-object v8

    const-string v9, "android.software.activities_on_secondary_displays"

    .line 15351
    invoke-virtual {v8, v9}, Landroid/content/pm/PackageManager;->hasSystemFeature(Ljava/lang/String;)Z

    move-result v8

    .line 15352
    const-string v9, "debug_app"

    invoke-static {v0, v9}, Landroid/provider/Settings$Global;->getString(Landroid/content/ContentResolver;Ljava/lang/String;)Ljava/lang/String;

    move-result-object v9

    .line 15353
    const-string/jumbo v10, "wait_for_debugger"

    invoke-static {v0, v10, v4}, Landroid/provider/Settings$Global;->getInt(Landroid/content/ContentResolver;Ljava/lang/String;I)I

    move-result v10

    if-eqz v10, :cond_3

    .line 15354
    const/4 v10, 0x1

    goto :goto_3

    .line 15353
    :cond_3
    nop

    .line 15354
    move v10, v4

    :goto_3
    const-string v11, "always_finish_activities"

    .line 15355
    invoke-static {v0, v11, v4}, Landroid/provider/Settings$Global;->getInt(Landroid/content/ContentResolver;Ljava/lang/String;I)I

    move-result v11

    if-eqz v11, :cond_4

    .line 15356
    const/4 v11, 0x1

    goto :goto_4

    .line 15355
    :cond_4
    nop

    .line 15356
    move v11, v4

    :goto_4
    const-string v12, "debug.force_rtl"

    invoke-static {v0, v12, v4}, Landroid/provider/Settings$Global;->getInt(Landroid/content/ContentResolver;Ljava/lang/String;I)I

    move-result v12

    if-eqz v12, :cond_5

    .line 15357
    const/4 v12, 0x1

    goto :goto_5

    .line 15356
    :cond_5
    nop

    .line 15357
    move v12, v4

    :goto_5
    const-string v13, "force_resizable_activities"

    invoke-static {v0, v13, v4}, Landroid/provider/Settings$Global;->getInt(Landroid/content/ContentResolver;Ljava/lang/String;I)I

    move-result v13

    if-eqz v13, :cond_6

    .line 15359
    const/4 v13, 0x1

    goto :goto_6

    .line 15357
    :cond_6
    nop

    .line 15359
    move v13, v4

    :goto_6
    const-string v14, "network_access_timeout_ms"

    const-wide/16 v3, 0xc8

    invoke-static {v0, v14, v3, v4}, Landroid/provider/Settings$Global;->getLong(Landroid/content/ContentResolver;Ljava/lang/String;J)J

    move-result-wide v3

    .line 15361
    iget-object v14, v1, Lcom/android/server/am/ActivityManagerService;->mContext:Landroid/content/Context;

    .line 15362
    invoke-virtual {v14}, Landroid/content/Context;->getPackageManager()Landroid/content/pm/PackageManager;

    move-result-object v14

    const-string v15, "android.software.leanback_only"

    invoke-virtual {v14, v15}, Landroid/content/pm/PackageManager;->hasSystemFeature(Ljava/lang/String;)Z

    move-result v14

    .line 15363
    iget-object v15, v1, Lcom/android/server/am/ActivityManagerService;->mHiddenApiBlacklist:Lcom/android/server/am/ActivityManagerService$HiddenApiSettings;

    invoke-virtual {v15}, Lcom/android/server/am/ActivityManagerService$HiddenApiSettings;->registerObserver()V

    .line 15366
    const-string v15, "debug.force_rtl"

    if-eqz v12, :cond_7

    const-string v16, "1"

    :goto_7
    move-wide/from16 v17, v3

    move-object/from16 v3, v16

    goto :goto_8

    :cond_7
    const-string v16, "0"

    goto :goto_7

    :goto_8
    invoke-static {v15, v3}, Landroid/os/SystemProperties;->set(Ljava/lang/String;Ljava/lang/String;)V

    .line 15368
    new-instance v3, Landroid/content/res/Configuration;

    invoke-direct {v3}, Landroid/content/res/Configuration;-><init>()V

    .line 15369
    invoke-static {v0, v3}, Landroid/provider/Settings$System;->getConfiguration(Landroid/content/ContentResolver;Landroid/content/res/Configuration;)V

    .line 15370
    if-eqz v12, :cond_8

    .line 15372
    iget-object v0, v3, Landroid/content/res/Configuration;->locale:Ljava/util/Locale;

    invoke-virtual {v3, v0}, Landroid/content/res/Configuration;->setLayoutDirection(Ljava/util/Locale;)V

    .line 15375
    :cond_8
    monitor-enter p0

    :try_start_0
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    .line 15376
    iput-object v9, v1, Lcom/android/server/am/ActivityManagerService;->mOrigDebugApp:Ljava/lang/String;

    iput-object v9, v1, Lcom/android/server/am/ActivityManagerService;->mDebugApp:Ljava/lang/String;

    .line 15377
    iput-boolean v10, v1, Lcom/android/server/am/ActivityManagerService;->mOrigWaitForDebugger:Z

    iput-boolean v10, v1, Lcom/android/server/am/ActivityManagerService;->mWaitForDebugger:Z

    .line 15378
    iput-boolean v11, v1, Lcom/android/server/am/ActivityManagerService;->mAlwaysFinishActivities:Z

    .line 15379
    iput-boolean v14, v1, Lcom/android/server/am/ActivityManagerService;->mSupportsLeanbackOnly:Z

    .line 15380
    iput-boolean v13, v1, Lcom/android/server/am/ActivityManagerService;->mForceResizableActivities:Z

    .line 15381
    if-nez v2, :cond_a

    if-nez v7, :cond_a

    if-nez v6, :cond_a

    if-eqz v8, :cond_9

    goto :goto_9

    .line 15385
    :cond_9
    const/4 v0, 0x0

    goto :goto_a

    .line 15381
    :cond_a
    :goto_9
    nop

    .line 15385
    const/4 v0, 0x1

    :goto_a
    if-nez v5, :cond_b

    if-eqz v13, :cond_c

    :cond_b
    if-eqz v0, :cond_c

    .line 15386
    const/4 v0, 0x1

    iput-boolean v0, v1, Lcom/android/server/am/ActivityManagerService;->mSupportsMultiWindow:Z

    .line 15387
    iput-boolean v2, v1, Lcom/android/server/am/ActivityManagerService;->mSupportsFreeformWindowManagement:Z

    .line 15388
    iput-boolean v7, v1, Lcom/android/server/am/ActivityManagerService;->mSupportsSplitScreenMultiWindow:Z

    .line 15389
    iput-boolean v6, v1, Lcom/android/server/am/ActivityManagerService;->mSupportsPictureInPicture:Z

    .line 15390
    iput-boolean v8, v1, Lcom/android/server/am/ActivityManagerService;->mSupportsMultiDisplay:Z

    goto :goto_b

    .line 15392
    :cond_c
    const/4 v0, 0x0

    iput-boolean v0, v1, Lcom/android/server/am/ActivityManagerService;->mSupportsMultiWindow:Z

    .line 15393
    iput-boolean v0, v1, Lcom/android/server/am/ActivityManagerService;->mSupportsFreeformWindowManagement:Z

    .line 15394
    iput-boolean v0, v1, Lcom/android/server/am/ActivityManagerService;->mSupportsSplitScreenMultiWindow:Z

    .line 15395
    iput-boolean v0, v1, Lcom/android/server/am/ActivityManagerService;->mSupportsPictureInPicture:Z

    .line 15396
    iput-boolean v0, v1, Lcom/android/server/am/ActivityManagerService;->mSupportsMultiDisplay:Z

    .line 15398
    :goto_b
    iget-object v0, v1, Lcom/android/server/am/ActivityManagerService;->mWindowManager:Lcom/android/server/wm/WindowManagerService;

    iget-boolean v2, v1, Lcom/android/server/am/ActivityManagerService;->mForceResizableActivities:Z

    invoke-virtual {v0, v2}, Lcom/android/server/wm/WindowManagerService;->setForceResizableTasks(Z)V

    .line 15399
    iget-object v0, v1, Lcom/android/server/am/ActivityManagerService;->mWindowManager:Lcom/android/server/wm/WindowManagerService;

    iget-boolean v2, v1, Lcom/android/server/am/ActivityManagerService;->mSupportsPictureInPicture:Z

    invoke-virtual {v0, v2}, Lcom/android/server/wm/WindowManagerService;->setSupportsPictureInPicture(Z)V

    .line 15402
    const/4 v0, 0x0

    const/4 v2, 0x1

    invoke-virtual {v1, v3, v0, v2}, Lcom/android/server/am/ActivityManagerService;->updateConfigurationLocked(Landroid/content/res/Configuration;Lcom/android/server/am/ActivityRecord;Z)Z

    .line 15403
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/am/ActivityManagerService;->getGlobalConfiguration()Landroid/content/res/Configuration;

    move-result-object v0

    .line 15407
    iget-object v2, v1, Lcom/android/server/am/ActivityManagerService;->mContext:Landroid/content/Context;

    invoke-virtual {v2}, Landroid/content/Context;->getResources()Landroid/content/res/Resources;

    move-result-object v2

    .line 15408
    const v3, 0x1050002

    invoke-virtual {v2, v3}, Landroid/content/res/Resources;->getDimensionPixelSize(I)I

    move-result v3

    iput v3, v1, Lcom/android/server/am/ActivityManagerService;->mThumbnailWidth:I

    .line 15410
    const v3, 0x1050001

    invoke-virtual {v2, v3}, Landroid/content/res/Resources;->getDimensionPixelSize(I)I

    move-result v3

    iput v3, v1, Lcom/android/server/am/ActivityManagerService;->mThumbnailHeight:I

    .line 15412
    iget-object v3, v1, Lcom/android/server/am/ActivityManagerService;->mAppErrors:Lcom/android/server/am/AppErrors;

    const v4, 0x1040179

    invoke-virtual {v2, v4}, Landroid/content/res/Resources;->getString(I)Ljava/lang/String;

    move-result-object v4

    invoke-virtual {v3, v4}, Lcom/android/server/am/AppErrors;->loadAppsNotReportingCrashesFromConfigLocked(Ljava/lang/String;)V

    .line 15414
    iget-object v3, v1, Lcom/android/server/am/ActivityManagerService;->mUserController:Lcom/android/server/am/UserController;

    const v4, 0x112003e

    invoke-virtual {v2, v4}, Landroid/content/res/Resources;->getBoolean(I)Z

    move-result v4

    const/4 v5, 0x1

    xor-int/2addr v4, v5

    iput-boolean v4, v3, Lcom/android/server/am/UserController;->mUserSwitchUiEnabled:Z

    .line 15416
    iget-object v3, v1, Lcom/android/server/am/ActivityManagerService;->mUserController:Lcom/android/server/am/UserController;

    const v4, 0x10e006a

    invoke-virtual {v2, v4}, Landroid/content/res/Resources;->getInteger(I)I

    move-result v4

    iput v4, v3, Lcom/android/server/am/UserController;->mMaxRunningUsers:I

    .line 15419
    iget v3, v0, Landroid/content/res/Configuration;->uiMode:I

    const/4 v4, 0x4

    and-int/2addr v3, v4

    if-ne v3, v4, :cond_d

    .line 15420
    const v3, 0x10e0109

    .line 15421
    invoke-virtual {v2, v3}, Landroid/content/res/Resources;->getInteger(I)I

    move-result v2

    int-to-float v2, v2

    iget v0, v0, Landroid/content/res/Configuration;->screenWidthDp:I

    int-to-float v0, v0

    div-float/2addr v2, v0

    iput v2, v1, Lcom/android/server/am/ActivityManagerService;->mFullscreenThumbnailScale:F

    goto :goto_c

    .line 15424
    :cond_d
    const v0, 0x113000b

    const/4 v3, 0x1

    invoke-virtual {v2, v0, v3, v3}, Landroid/content/res/Resources;->getFraction(III)F

    move-result v0

    iput v0, v1, Lcom/android/server/am/ActivityManagerService;->mFullscreenThumbnailScale:F

    .line 15427
    :goto_c
    move-wide/from16 v2, v17

    iput-wide v2, v1, Lcom/android/server/am/ActivityManagerService;->mWaitForNetworkTimeoutMs:J

    .line 15428
    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    .line 15429
    iget-object v0, v1, Lcom/android/server/am/ActivityManagerService;->mSwipeToScreenshotObserver:Lcom/android/server/am/ActivityManagerService$SwipeToScreenshotObserver;

    invoke-virtual {v0}, Lcom/android/server/am/ActivityManagerService$SwipeToScreenshotObserver;->registerObserver()V

    .line 15430
    return-void

    .line 15428
    :catchall_0
    move-exception v0

    :try_start_1
    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw v0
.end method

.method private revokeUriPermissionLocked(Ljava/lang/String;ILcom/android/server/am/ActivityManagerService$GrantUri;I)V
    .locals 8
    .annotation build Lcom/android/internal/annotations/GuardedBy;
        value = "this"
    .end annotation

    .line 10230
    invoke-static {}, Landroid/app/AppGlobals;->getPackageManager()Landroid/content/pm/IPackageManager;

    move-result-object v1

    .line 10231
    iget-object v0, p3, Lcom/android/server/am/ActivityManagerService$GrantUri;->uri:Landroid/net/Uri;

    invoke-virtual {v0}, Landroid/net/Uri;->getAuthority()Ljava/lang/String;

    move-result-object v0

    .line 10232
    iget v2, p3, Lcom/android/server/am/ActivityManagerService$GrantUri;->sourceUserId:I

    const/high16 v3, 0xc0000

    invoke-direct {p0, v0, v2, v3}, Lcom/android/server/am/ActivityManagerService;->getProviderInfoLocked(Ljava/lang/String;II)Landroid/content/pm/ProviderInfo;

    move-result-object v2

    .line 10234
    if-nez v2, :cond_0

    .line 10235
    const-string p1, "ActivityManager"

    new-instance p2, Ljava/lang/StringBuilder;

    invoke-direct {p2}, Ljava/lang/StringBuilder;-><init>()V

    const-string p4, "No content provider found for permission revoke: "

    invoke-virtual {p2, p4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 10236
    invoke-virtual {p3}, Lcom/android/server/am/ActivityManagerService$GrantUri;->toSafeString()Ljava/lang/String;

    move-result-object p3

    invoke-virtual {p2, p3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {p2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object p2

    .line 10235
    invoke-static {p1, p2}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 10237
    return-void

    .line 10241
    :cond_0
    move-object v0, p0

    move-object v3, p3

    move v4, p2

    move v5, p4

    invoke-direct/range {v0 .. v5}, Lcom/android/server/am/ActivityManagerService;->checkHoldingPermissionsLocked(Landroid/content/pm/IPackageManager;Landroid/content/pm/ProviderInfo;Lcom/android/server/am/ActivityManagerService$GrantUri;II)Z

    move-result v0

    const/4 v1, 0x1

    const/4 v2, 0x0

    if-nez v0, :cond_6

    .line 10244
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mGrantedUriPermissions:Landroid/util/SparseArray;

    invoke-virtual {v0, p2}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Landroid/util/ArrayMap;

    .line 10245
    if-eqz v0, :cond_5

    .line 10246
    nop

    .line 10247
    invoke-virtual {v0}, Landroid/util/ArrayMap;->size()I

    move-result v3

    sub-int/2addr v3, v1

    move v1, v2

    :goto_0
    if-ltz v3, :cond_3

    .line 10248
    invoke-virtual {v0, v3}, Landroid/util/ArrayMap;->valueAt(I)Ljava/lang/Object;

    move-result-object v4

    check-cast v4, Lcom/android/server/am/UriPermission;

    .line 10249
    if-eqz p1, :cond_1

    iget-object v5, v4, Lcom/android/server/am/UriPermission;->targetPkg:Ljava/lang/String;

    invoke-virtual {p1, v5}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v5

    if-nez v5, :cond_1

    .line 10250
    goto :goto_1

    .line 10252
    :cond_1
    iget-object v5, v4, Lcom/android/server/am/UriPermission;->uri:Lcom/android/server/am/ActivityManagerService$GrantUri;

    iget v5, v5, Lcom/android/server/am/ActivityManagerService$GrantUri;->sourceUserId:I

    iget v6, p3, Lcom/android/server/am/ActivityManagerService$GrantUri;->sourceUserId:I

    if-ne v5, v6, :cond_2

    iget-object v5, v4, Lcom/android/server/am/UriPermission;->uri:Lcom/android/server/am/ActivityManagerService$GrantUri;

    iget-object v5, v5, Lcom/android/server/am/ActivityManagerService$GrantUri;->uri:Landroid/net/Uri;

    iget-object v6, p3, Lcom/android/server/am/ActivityManagerService$GrantUri;->uri:Landroid/net/Uri;

    .line 10253
    invoke-virtual {v5, v6}, Landroid/net/Uri;->isPathPrefixMatch(Landroid/net/Uri;)Z

    move-result v5

    if-eqz v5, :cond_2

    .line 10257
    or-int/lit8 v5, p4, 0x40

    invoke-virtual {v4, v5, v2}, Lcom/android/server/am/UriPermission;->revokeModes(IZ)Z

    move-result v5

    or-int/2addr v1, v5

    .line 10259
    iget v4, v4, Lcom/android/server/am/UriPermission;->modeFlags:I

    if-nez v4, :cond_2

    .line 10260
    invoke-virtual {v0, v3}, Landroid/util/ArrayMap;->removeAt(I)Ljava/lang/Object;

    .line 10247
    :cond_2
    :goto_1
    add-int/lit8 v3, v3, -0x1

    goto :goto_0

    .line 10264
    :cond_3
    invoke-virtual {v0}, Landroid/util/ArrayMap;->isEmpty()Z

    move-result p1

    if-eqz p1, :cond_4

    .line 10265
    iget-object p1, p0, Lcom/android/server/am/ActivityManagerService;->mGrantedUriPermissions:Landroid/util/SparseArray;

    invoke-virtual {p1, p2}, Landroid/util/SparseArray;->remove(I)V

    .line 10267
    :cond_4
    if-eqz v1, :cond_5

    .line 10268
    invoke-direct {p0}, Lcom/android/server/am/ActivityManagerService;->schedulePersistUriGrants()V

    .line 10271
    :cond_5
    return-void

    .line 10274
    :cond_6
    nop

    .line 10277
    iget-object p2, p0, Lcom/android/server/am/ActivityManagerService;->mGrantedUriPermissions:Landroid/util/SparseArray;

    invoke-virtual {p2}, Landroid/util/SparseArray;->size()I

    move-result p2

    sub-int/2addr p2, v1

    move v0, v2

    :goto_2
    if-ltz p2, :cond_c

    .line 10278
    iget-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mGrantedUriPermissions:Landroid/util/SparseArray;

    invoke-virtual {v3, p2}, Landroid/util/SparseArray;->keyAt(I)I

    .line 10279
    iget-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mGrantedUriPermissions:Landroid/util/SparseArray;

    invoke-virtual {v3, p2}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;

    move-result-object v3

    check-cast v3, Landroid/util/ArrayMap;

    .line 10281
    invoke-virtual {v3}, Landroid/util/ArrayMap;->size()I

    move-result v4

    sub-int/2addr v4, v1

    :goto_3
    if-ltz v4, :cond_a

    .line 10282
    invoke-virtual {v3, v4}, Landroid/util/ArrayMap;->valueAt(I)Ljava/lang/Object;

    move-result-object v5

    check-cast v5, Lcom/android/server/am/UriPermission;

    .line 10283
    if-eqz p1, :cond_7

    iget-object v6, v5, Lcom/android/server/am/UriPermission;->targetPkg:Ljava/lang/String;

    invoke-virtual {p1, v6}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v6

    if-nez v6, :cond_7

    .line 10284
    goto :goto_5

    .line 10286
    :cond_7
    iget-object v6, v5, Lcom/android/server/am/UriPermission;->uri:Lcom/android/server/am/ActivityManagerService$GrantUri;

    iget v6, v6, Lcom/android/server/am/ActivityManagerService$GrantUri;->sourceUserId:I

    iget v7, p3, Lcom/android/server/am/ActivityManagerService$GrantUri;->sourceUserId:I

    if-ne v6, v7, :cond_9

    iget-object v6, v5, Lcom/android/server/am/UriPermission;->uri:Lcom/android/server/am/ActivityManagerService$GrantUri;

    iget-object v6, v6, Lcom/android/server/am/ActivityManagerService$GrantUri;->uri:Landroid/net/Uri;

    iget-object v7, p3, Lcom/android/server/am/ActivityManagerService$GrantUri;->uri:Landroid/net/Uri;

    .line 10287
    invoke-virtual {v6, v7}, Landroid/net/Uri;->isPathPrefixMatch(Landroid/net/Uri;)Z

    move-result v6

    if-eqz v6, :cond_9

    .line 10290
    or-int/lit8 v6, p4, 0x40

    if-nez p1, :cond_8

    move v7, v1

    goto :goto_4

    :cond_8
    move v7, v2

    :goto_4
    invoke-virtual {v5, v6, v7}, Lcom/android/server/am/UriPermission;->revokeModes(IZ)Z

    move-result v6

    or-int/2addr v0, v6

    .line 10293
    iget v5, v5, Lcom/android/server/am/UriPermission;->modeFlags:I

    if-nez v5, :cond_9

    .line 10294
    invoke-virtual {v3, v4}, Landroid/util/ArrayMap;->removeAt(I)Ljava/lang/Object;

    .line 10281
    :cond_9
    :goto_5
    add-int/lit8 v4, v4, -0x1

    goto :goto_3

    .line 10299
    :cond_a
    invoke-virtual {v3}, Landroid/util/ArrayMap;->isEmpty()Z

    move-result v3

    if-eqz v3, :cond_b

    .line 10300
    iget-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mGrantedUriPermissions:Landroid/util/SparseArray;

    invoke-virtual {v3, p2}, Landroid/util/SparseArray;->removeAt(I)V

    .line 10277
    :cond_b
    add-int/lit8 p2, p2, -0x1

    goto :goto_2

    .line 10304
    :cond_c
    if-eqz v0, :cond_d

    .line 10305
    invoke-direct {p0}, Lcom/android/server/am/ActivityManagerService;->schedulePersistUriGrants()V

    .line 10307
    :cond_d
    return-void
.end method

.method private static scanArgs([Ljava/lang/String;Ljava/lang/String;)Z
    .locals 4

    .line 20327
    const/4 v0, 0x0

    if-eqz p0, :cond_1

    .line 20328
    array-length v1, p0

    move v2, v0

    :goto_0
    if-ge v2, v1, :cond_1

    aget-object v3, p0, v2

    .line 20329
    invoke-virtual {p1, v3}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v3

    if-eqz v3, :cond_0

    .line 20330
    const/4 p0, 0x1

    return p0

    .line 20328
    :cond_0
    add-int/lit8 v2, v2, 0x1

    goto :goto_0

    .line 20334
    :cond_1
    return v0
.end method

.method static scheduleAsFifoPriority(IZ)Z
    .locals 2

    .line 14710
    const v0, 0x40000001    # 2.0000002f

    const/4 v1, 0x1

    :try_start_0
    invoke-static {p0, v0, v1}, Landroid/os/Process;->setThreadScheduler(III)V
    :try_end_0
    .catch Ljava/lang/IllegalArgumentException; {:try_start_0 .. :try_end_0} :catch_1
    .catch Ljava/lang/SecurityException; {:try_start_0 .. :try_end_0} :catch_0

    .line 14711
    return v1

    .line 14716
    :catch_0
    move-exception p0

    .line 14717
    if-nez p1, :cond_1

    .line 14718
    const-string p1, "ActivityManager"

    new-instance v0, Ljava/lang/StringBuilder;

    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V

    const-string v1, "Failed to set scheduling policy, not allowed:\n"

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0, p0}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object p0

    invoke-static {p1, p0}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    goto :goto_0

    .line 14712
    :catch_1
    move-exception p0

    .line 14713
    if-nez p1, :cond_0

    .line 14714
    const-string p1, "ActivityManager"

    new-instance v0, Ljava/lang/StringBuilder;

    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V

    const-string v1, "Failed to set scheduling policy, thread does not exist:\n"

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0, p0}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object p0

    invoke-static {p1, p0}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 14720
    :cond_0
    nop

    .line 14721
    :cond_1
    :goto_0
    const/4 p0, 0x0

    return p0
.end method

.method static scheduleAsRegularPriority(IZ)Z
    .locals 3

    .line 14686
    const/4 v0, 0x0

    :try_start_0
    invoke-static {p0, v0, v0}, Landroid/os/Process;->setThreadScheduler(III)V
    :try_end_0
    .catch Ljava/lang/IllegalArgumentException; {:try_start_0 .. :try_end_0} :catch_1
    .catch Ljava/lang/SecurityException; {:try_start_0 .. :try_end_0} :catch_0

    .line 14687
    const/4 p0, 0x1

    return p0

    .line 14692
    :catch_0
    move-exception p0

    .line 14693
    if-nez p1, :cond_1

    .line 14694
    const-string p1, "ActivityManager"

    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string v2, "Failed to set scheduling policy, not allowed:\n"

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v1, p0}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object p0

    invoke-static {p1, p0}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    goto :goto_0

    .line 14688
    :catch_1
    move-exception p0

    .line 14689
    if-nez p1, :cond_0

    .line 14690
    const-string p1, "ActivityManager"

    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string v2, "Failed to set scheduling policy, thread does not exist:\n"

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v1, p0}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object p0

    invoke-static {p1, p0}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 14696
    :cond_0
    nop

    .line 14697
    :cond_1
    :goto_0
    return v0
.end method

.method private schedulePersistUriGrants()V
    .locals 4

    .line 10490
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    const/16 v1, 0x26

    invoke-virtual {v0, v1}, Lcom/android/server/am/ActivityManagerService$MainHandler;->hasMessages(I)Z

    move-result v0

    if-nez v0, :cond_0

    .line 10491
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    invoke-virtual {v2, v1}, Lcom/android/server/am/ActivityManagerService$MainHandler;->obtainMessage(I)Landroid/os/Message;

    move-result-object v1

    const-wide/16 v2, 0x2710

    invoke-virtual {v0, v1, v2, v3}, Lcom/android/server/am/ActivityManagerService$MainHandler;->sendMessageDelayed(Landroid/os/Message;J)Z

    .line 10494
    :cond_0
    return-void
.end method

.method private final sendPackageBroadcastLocked(I[Ljava/lang/String;I)V
    .locals 3

    .line 21337
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mLruProcesses:Ljava/util/ArrayList;

    invoke-virtual {v0}, Ljava/util/ArrayList;->size()I

    move-result v0

    add-int/lit8 v0, v0, -0x1

    :goto_0
    if-ltz v0, :cond_2

    .line 21338
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mLruProcesses:Ljava/util/ArrayList;

    invoke-virtual {v1, v0}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v1

    check-cast v1, Lcom/android/server/am/ProcessRecord;

    .line 21339
    iget-object v2, v1, Lcom/android/server/am/ProcessRecord;->thread:Landroid/app/IApplicationThread;

    if-eqz v2, :cond_1

    const/4 v2, -0x1

    if-eq p3, v2, :cond_0

    iget v2, v1, Lcom/android/server/am/ProcessRecord;->userId:I

    if-ne v2, p3, :cond_1

    .line 21341
    :cond_0
    :try_start_0
    iget-object v1, v1, Lcom/android/server/am/ProcessRecord;->thread:Landroid/app/IApplicationThread;

    invoke-interface {v1, p1, p2}, Landroid/app/IApplicationThread;->dispatchPackageBroadcast(I[Ljava/lang/String;)V
    :try_end_0
    .catch Landroid/os/RemoteException; {:try_start_0 .. :try_end_0} :catch_0

    .line 21343
    goto :goto_1

    .line 21342
    :catch_0
    move-exception v1

    .line 21337
    :cond_1
    :goto_1
    add-int/lit8 v0, v0, -0x1

    goto :goto_0

    .line 21346
    :cond_2
    return-void
.end method

.method private final setProcessTrackerStateLocked(Lcom/android/server/am/ProcessRecord;IJ)V
    .locals 7

    .line 25171
    iget-object v0, p1, Lcom/android/server/am/ProcessRecord;->thread:Landroid/app/IApplicationThread;

    if-eqz v0, :cond_0

    .line 25172
    iget-object v0, p1, Lcom/android/server/am/ProcessRecord;->baseProcessTracker:Lcom/android/internal/app/procstats/ProcessState;

    if-eqz v0, :cond_0

    .line 25173
    iget-object v1, p1, Lcom/android/server/am/ProcessRecord;->baseProcessTracker:Lcom/android/internal/app/procstats/ProcessState;

    iget v2, p1, Lcom/android/server/am/ProcessRecord;->repProcState:I

    iget-object v6, p1, Lcom/android/server/am/ProcessRecord;->pkgList:Landroid/util/ArrayMap;

    move v3, p2

    move-wide v4, p3

    invoke-virtual/range {v1 .. v6}, Lcom/android/internal/app/procstats/ProcessState;->setState(IIJLandroid/util/ArrayMap;)V

    .line 25176
    :cond_0
    return-void
.end method

.method private static sortMemItems(Ljava/util/List;)V
    .locals 1
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "(",
            "Ljava/util/List<",
            "Lcom/android/server/am/ActivityManagerService$MemItem;",
            ">;)V"
        }
    .end annotation

    .line 18839
    new-instance v0, Lcom/android/server/am/ActivityManagerService$24;

    invoke-direct {v0}, Lcom/android/server/am/ActivityManagerService$24;-><init>()V

    invoke-static {p0, v0}, Ljava/util/Collections;->sort(Ljava/util/List;Ljava/util/Comparator;)V

    .line 18850
    return-void
.end method

.method private static final sortProcessOomList(Ljava/util/List;Ljava/lang/String;)Ljava/util/ArrayList;
    .locals 5
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "(",
            "Ljava/util/List<",
            "Lcom/android/server/am/ProcessRecord;",
            ">;",
            "Ljava/lang/String;",
            ")",
            "Ljava/util/ArrayList<",
            "Landroid/util/Pair<",
            "Lcom/android/server/am/ProcessRecord;",
            "Ljava/lang/Integer;",
            ">;>;"
        }
    .end annotation

    .line 18449
    new-instance v0, Ljava/util/ArrayList;

    .line 18450
    invoke-interface {p0}, Ljava/util/List;->size()I

    move-result v1

    invoke-direct {v0, v1}, Ljava/util/ArrayList;-><init>(I)V

    .line 18451
    const/4 v1, 0x0

    :goto_0
    invoke-interface {p0}, Ljava/util/List;->size()I

    move-result v2

    if-ge v1, v2, :cond_1

    .line 18452
    invoke-interface {p0, v1}, Ljava/util/List;->get(I)Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Lcom/android/server/am/ProcessRecord;

    .line 18453
    if-eqz p1, :cond_0

    iget-object v2, v2, Lcom/android/server/am/ProcessRecord;->pkgList:Landroid/util/ArrayMap;

    invoke-virtual {v2, p1}, Landroid/util/ArrayMap;->containsKey(Ljava/lang/Object;)Z

    move-result v2

    if-nez v2, :cond_0

    .line 18454
    goto :goto_1

    .line 18456
    :cond_0
    new-instance v2, Landroid/util/Pair;

    invoke-interface {p0, v1}, Ljava/util/List;->get(I)Ljava/lang/Object;

    move-result-object v3

    check-cast v3, Lcom/android/server/am/ProcessRecord;

    invoke-static {v1}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v4

    invoke-direct {v2, v3, v4}, Landroid/util/Pair;-><init>(Ljava/lang/Object;Ljava/lang/Object;)V

    invoke-virtual {v0, v2}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    .line 18451
    :goto_1
    add-int/lit8 v1, v1, 0x1

    goto :goto_0

    .line 18459
    :cond_1
    new-instance p0, Lcom/android/server/am/ActivityManagerService$23;

    invoke-direct {p0}, Lcom/android/server/am/ActivityManagerService$23;-><init>()V

    .line 18477
    invoke-static {v0, p0}, Ljava/util/Collections;->sort(Ljava/util/List;Ljava/util/Comparator;)V

    .line 18478
    return-object v0
.end method

.method private start()V
    .locals 3

    .line 3333
    invoke-static {}, Landroid/os/Process;->removeAllProcessGroups()V

    .line 3334
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mProcessCpuThread:Ljava/lang/Thread;

    invoke-virtual {v0}, Ljava/lang/Thread;->start()V

    .line 3336
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mBatteryStatsService:Lcom/android/server/am/BatteryStatsService;

    invoke-virtual {v0}, Lcom/android/server/am/BatteryStatsService;->publish()V

    .line 3337
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mAppOpsService:Lcom/android/server/AppOpsService;

    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mContext:Landroid/content/Context;

    invoke-virtual {v0, v1}, Lcom/android/server/AppOpsService;->publish(Landroid/content/Context;)V

    .line 3338
    const-string v0, "AppOps"

    const-string v1, "AppOpsService published"

    invoke-static {v0, v1}, Landroid/util/Slog;->d(Ljava/lang/String;Ljava/lang/String;)I

    .line 3339
    const-class v0, Landroid/app/ActivityManagerInternal;

    new-instance v1, Lcom/android/server/am/ActivityManagerService$LocalService;

    invoke-direct {v1, p0}, Lcom/android/server/am/ActivityManagerService$LocalService;-><init>(Lcom/android/server/am/ActivityManagerService;)V

    invoke-static {v0, v1}, Lcom/android/server/LocalServices;->addService(Ljava/lang/Class;Ljava/lang/Object;)V

    .line 3344
    :try_start_0
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mProcessCpuInitLatch:Ljava/util/concurrent/CountDownLatch;

    invoke-virtual {v0}, Ljava/util/concurrent/CountDownLatch;->await()V
    :try_end_0
    .catch Ljava/lang/InterruptedException; {:try_start_0 .. :try_end_0} :catch_0

    .line 3349
    nop

    .line 3350
    return-void

    .line 3345
    :catch_0
    move-exception v0

    .line 3346
    const-string v1, "ActivityManager"

    const-string v2, "Interrupted wait during start"

    invoke-static {v1, v2, v0}, Landroid/util/Slog;->wtf(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I

    .line 3347
    invoke-static {}, Ljava/lang/Thread;->currentThread()Ljava/lang/Thread;

    move-result-object v0

    invoke-virtual {v0}, Ljava/lang/Thread;->interrupt()V

    .line 3348
    new-instance v0, Ljava/lang/IllegalStateException;

    const-string v1, "Interrupted wait during start"

    invoke-direct {v0, v1}, Ljava/lang/IllegalStateException;-><init>(Ljava/lang/String;)V

    throw v0
.end method

.method private startLockTaskModeLocked(Lcom/android/server/am/TaskRecord;Z)V
    .locals 7

    .line 11919
    if-eqz p1, :cond_2

    iget v0, p1, Lcom/android/server/am/TaskRecord;->mLockTaskAuth:I

    if-nez v0, :cond_0

    goto :goto_0

    .line 11923
    :cond_0
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mStackSupervisor:Lcom/android/server/am/ActivityStackSupervisor;

    invoke-virtual {v0}, Lcom/android/server/am/ActivityStackSupervisor;->getFocusedStack()Lcom/android/server/am/ActivityStack;

    move-result-object v0

    .line 11924
    if-eqz v0, :cond_1

    invoke-virtual {v0}, Lcom/android/server/am/ActivityStack;->topTask()Lcom/android/server/am/TaskRecord;

    move-result-object v0

    if-ne p1, v0, :cond_1

    .line 11934
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v0

    .line 11935
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v1

    .line 11938
    :try_start_0
    iget-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mStackSupervisor:Lcom/android/server/am/ActivityStackSupervisor;

    const/4 v4, 0x1

    new-array v4, v4, [I

    const/4 v5, 0x0

    const/4 v6, 0x2

    aput v6, v4, v5

    invoke-virtual {v3, v4}, Lcom/android/server/am/ActivityStackSupervisor;->removeStacksInWindowingModes([I)V

    .line 11940
    iget-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mLockTaskController:Lcom/android/server/am/LockTaskController;

    invoke-virtual {v3, p1, p2, v0}, Lcom/android/server/am/LockTaskController;->startLockTaskMode(Lcom/android/server/am/TaskRecord;ZI)V
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 11942
    invoke-static {v1, v2}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 11943
    nop

    .line 11944
    return-void

    .line 11942
    :catchall_0
    move-exception p1

    invoke-static {v1, v2}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    throw p1

    .line 11925
    :cond_1
    new-instance p1, Ljava/lang/IllegalArgumentException;

    const-string p2, "Invalid task, not in foreground"

    invoke-direct {p1, p2}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw p1

    .line 11920
    :cond_2
    :goto_0
    return-void
.end method

.method private startProcess(Ljava/lang/String;Ljava/lang/String;Lcom/android/server/am/ProcessRecord;I[IIILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;ZJ)Landroid/os/Process$ProcessStartResult;
    .locals 25

    move-object/from16 v0, p0

    move-object/from16 v1, p1

    move-object/from16 v2, p3

    .line 4601
    move-wide/from16 v3, p13

    const-wide/16 v5, 0x40

    :try_start_0
    new-instance v7, Ljava/lang/StringBuilder;

    invoke-direct {v7}, Ljava/lang/StringBuilder;-><init>()V

    const-string v8, "Start proc: "

    invoke-virtual {v7, v8}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget-object v8, v2, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;

    invoke-virtual {v7, v8}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v7}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v7

    invoke-static {v5, v6, v7}, Landroid/os/Trace;->traceBegin(JLjava/lang/String;)V

    .line 4603
    const-string/jumbo v7, "startProcess: asking zygote to start proc"

    invoke-direct {v0, v3, v4, v7}, Lcom/android/server/am/ActivityManagerService;->checkTime(JLjava/lang/String;)V

    .line 4605
    const-string/jumbo v7, "webview_service"

    invoke-virtual {v1, v7}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v7

    const/4 v8, 0x0

    const/4 v9, 0x1

    if-eqz v7, :cond_0

    .line 4606
    iget-object v11, v2, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;

    iget-object v7, v2, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget v7, v7, Landroid/content/pm/ApplicationInfo;->targetSdkVersion:I

    iget-object v10, v2, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget-object v15, v10, Landroid/content/pm/ApplicationInfo;->dataDir:Ljava/lang/String;

    const/16 v22, 0x0

    const/16 v23, 0x1

    new-array v9, v9, [Ljava/lang/String;

    new-instance v10, Ljava/lang/StringBuilder;

    invoke-direct {v10}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v12, "seq="

    invoke-virtual {v10, v12}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget-wide v12, v2, Lcom/android/server/am/ProcessRecord;->startSeq:J

    invoke-virtual {v10, v12, v13}, Ljava/lang/StringBuilder;->append(J)Ljava/lang/StringBuilder;

    invoke-virtual {v10}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v10

    aput-object v10, v9, v8

    move-object/from16 v10, p2

    move/from16 v12, p4

    move/from16 v13, p4

    move-object/from16 v14, p5

    move-object v8, v15

    move/from16 v15, p6

    move/from16 v16, p7

    move/from16 v17, v7

    move-object/from16 v18, p8

    move-object/from16 v19, p9

    move-object/from16 v20, p10

    move-object/from16 v21, v8

    move-object/from16 v24, v9

    invoke-static/range {v10 .. v24}, Landroid/os/Process;->startWebView(Ljava/lang/String;Ljava/lang/String;II[IIIILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Z[Ljava/lang/String;)Landroid/os/Process$ProcessStartResult;

    move-result-object v7

    goto :goto_0

    .line 4613
    :cond_0
    iget-object v7, v2, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;

    iget-object v10, v2, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget v15, v10, Landroid/content/pm/ApplicationInfo;->targetSdkVersion:I

    iget-object v10, v2, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget-object v14, v10, Landroid/content/pm/ApplicationInfo;->dataDir:Ljava/lang/String;

    const/16 v21, 0x1

    new-array v13, v9, [Ljava/lang/String;

    new-instance v9, Ljava/lang/StringBuilder;

    invoke-direct {v9}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v10, "seq="

    invoke-virtual {v9, v10}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget-wide v10, v2, Lcom/android/server/am/ProcessRecord;->startSeq:J

    invoke-virtual {v9, v10, v11}, Ljava/lang/StringBuilder;->append(J)Ljava/lang/StringBuilder;

    invoke-virtual {v9}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v9

    aput-object v9, v13, v8

    move-object/from16 v8, p2

    move-object v9, v7

    move/from16 v10, p4

    move/from16 v11, p4

    move-object/from16 v12, p5

    move-object v7, v13

    move/from16 v13, p6

    move-object/from16 v19, v14

    move/from16 v14, p7

    move-object/from16 v16, p8

    move-object/from16 v17, p9

    move-object/from16 v18, p10

    move-object/from16 v20, p11

    move-object/from16 v22, v7

    invoke-static/range {v8 .. v22}, Landroid/os/Process;->start(Ljava/lang/String;Ljava/lang/String;II[IIIILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Z[Ljava/lang/String;)Landroid/os/Process$ProcessStartResult;

    move-result-object v7

    .line 4620
    :goto_0
    sget-object v8, Lcom/android/server/am/ActivityManagerService;->mPerfServiceStartHint:Landroid/util/BoostFramework;

    if-nez v8, :cond_1

    .line 4621
    new-instance v8, Landroid/util/BoostFramework;

    invoke-direct {v8}, Landroid/util/BoostFramework;-><init>()V

    sput-object v8, Lcom/android/server/am/ActivityManagerService;->mPerfServiceStartHint:Landroid/util/BoostFramework;

    .line 4623
    :cond_1
    sget-object v8, Lcom/android/server/am/ActivityManagerService;->mPerfServiceStartHint:Landroid/util/BoostFramework;

    if-eqz v8, :cond_2

    .line 4624
    const-string v8, "activity"

    invoke-virtual {v1, v8}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v1

    if-eqz v1, :cond_2

    .line 4625
    if-eqz v7, :cond_2

    .line 4626
    sget-object v1, Lcom/android/server/am/ActivityManagerService;->mPerfServiceStartHint:Landroid/util/BoostFramework;

    const/16 v8, 0x1081

    iget-object v2, v2, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;

    iget v9, v7, Landroid/os/Process$ProcessStartResult;->pid:I

    const/16 v10, 0x65

    invoke-virtual {v1, v8, v2, v9, v10}, Landroid/util/BoostFramework;->perfHint(ILjava/lang/String;II)I

    .line 4631
    :cond_2
    const-string/jumbo v1, "startProcess: returned from zygote!"

    invoke-direct {v0, v3, v4, v1}, Lcom/android/server/am/ActivityManagerService;->checkTime(JLjava/lang/String;)V
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 4632
    nop

    .line 4634
    invoke-static {v5, v6}, Landroid/os/Trace;->traceEnd(J)V

    .line 4632
    return-object v7

    .line 4634
    :catchall_0
    move-exception v0

    invoke-static {v5, v6}, Landroid/os/Trace;->traceEnd(J)V

    throw v0
.end method

.method private final startProcessLocked(Lcom/android/server/am/ProcessRecord;Ljava/lang/String;Ljava/lang/String;)V
    .locals 1
    .annotation build Lcom/android/internal/annotations/GuardedBy;
        value = "this"
    .end annotation

    .line 4307
    const/4 v0, 0x0

    invoke-direct {p0, p1, p2, p3, v0}, Lcom/android/server/am/ActivityManagerService;->startProcessLocked(Lcom/android/server/am/ProcessRecord;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Z

    .line 4308
    return-void
.end method

.method private final startProcessLocked(Lcom/android/server/am/ProcessRecord;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Z
    .locals 6
    .annotation build Lcom/android/internal/annotations/GuardedBy;
        value = "this"
    .end annotation

    .line 4313
    const/4 v4, 0x0

    move-object v0, p0

    move-object v1, p1

    move-object v2, p2

    move-object v3, p3

    move-object v5, p4

    invoke-direct/range {v0 .. v5}, Lcom/android/server/am/ActivityManagerService;->startProcessLocked(Lcom/android/server/am/ProcessRecord;Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)Z

    move-result p1

    return p1
.end method

.method private final startProcessLocked(Lcom/android/server/am/ProcessRecord;Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)Z
    .locals 22
    .annotation build Lcom/android/internal/annotations/GuardedBy;
        value = "this"
    .end annotation

    move-object/from16 v15, p0

    move-object/from16 v14, p1

    .line 4323
    iget-boolean v0, v14, Lcom/android/server/am/ProcessRecord;->pendingStart:Z

    const/4 v1, 0x1

    if-eqz v0, :cond_0

    .line 4324
    return v1

    .line 4326
    :cond_0
    invoke-static {}, Landroid/os/SystemClock;->elapsedRealtime()J

    move-result-wide v12

    .line 4327
    iget v0, v14, Lcom/android/server/am/ProcessRecord;->pid:I

    const/4 v11, 0x0

    if-lez v0, :cond_1

    iget v0, v14, Lcom/android/server/am/ProcessRecord;->pid:I

    sget v2, Lcom/android/server/am/ActivityManagerService;->MY_PID:I

    if-eq v0, v2, :cond_1

    .line 4328
    const-string/jumbo v0, "startProcess: removing from pids map"

    invoke-direct {v15, v12, v13, v0}, Lcom/android/server/am/ActivityManagerService;->checkTime(JLjava/lang/String;)V

    .line 4329
    iget-object v2, v15, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Landroid/util/SparseArray;

    monitor-enter v2

    .line 4330
    :try_start_0
    iget-object v0, v15, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Landroid/util/SparseArray;

    iget v3, v14, Lcom/android/server/am/ProcessRecord;->pid:I

    invoke-virtual {v0, v3}, Landroid/util/SparseArray;->remove(I)V

    .line 4331
    iget-object v0, v15, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    const/16 v3, 0x14

    invoke-virtual {v0, v3, v14}, Lcom/android/server/am/ActivityManagerService$MainHandler;->removeMessages(ILjava/lang/Object;)V

    .line 4332
    monitor-exit v2
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 4333
    const-string/jumbo v0, "startProcess: done removing from pids map"

    invoke-direct {v15, v12, v13, v0}, Lcom/android/server/am/ActivityManagerService;->checkTime(JLjava/lang/String;)V

    .line 4334
    invoke-virtual {v14, v11}, Lcom/android/server/am/ProcessRecord;->setPid(I)V

    .line 4335
    const-wide/16 v2, 0x0

    iput-wide v2, v14, Lcom/android/server/am/ProcessRecord;->startSeq:J

    goto :goto_0

    .line 4332
    :catchall_0
    move-exception v0

    :try_start_1
    monitor-exit v2
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    throw v0

    .line 4340
    :cond_1
    :goto_0
    iget-object v0, v15, Lcom/android/server/am/ActivityManagerService;->mProcessesOnHold:Ljava/util/ArrayList;

    invoke-virtual {v0, v14}, Ljava/util/ArrayList;->remove(Ljava/lang/Object;)Z

    .line 4342
    const-string/jumbo v0, "startProcess: starting to update cpu stats"

    invoke-direct {v15, v12, v13, v0}, Lcom/android/server/am/ActivityManagerService;->checkTime(JLjava/lang/String;)V

    .line 4343
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/am/ActivityManagerService;->updateCpuStats()V

    .line 4344
    const-string/jumbo v0, "startProcess: done updating cpu stats"

    invoke-direct {v15, v12, v13, v0}, Lcom/android/server/am/ActivityManagerService;->checkTime(JLjava/lang/String;)V

    .line 4348
    :try_start_2
    iget v0, v14, Lcom/android/server/am/ProcessRecord;->uid:I

    invoke-static {v0}, Landroid/os/UserHandle;->getUserId(I)I

    move-result v0

    .line 4349
    invoke-static {}, Landroid/app/AppGlobals;->getPackageManager()Landroid/content/pm/IPackageManager;

    move-result-object v2

    iget-object v3, v14, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget-object v3, v3, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;

    invoke-interface {v2, v3, v0}, Landroid/content/pm/IPackageManager;->checkPackageStartable(Ljava/lang/String;I)V
    :try_end_2
    .catch Landroid/os/RemoteException; {:try_start_2 .. :try_end_2} :catch_3
    .catch Ljava/lang/RuntimeException; {:try_start_2 .. :try_end_2} :catch_2

    .line 4352
    nop

    .line 4354
    :try_start_3
    iget v0, v14, Lcom/android/server/am/ProcessRecord;->uid:I

    .line 4355
    nop

    .line 4356
    nop

    .line 4357
    iget-boolean v2, v14, Lcom/android/server/am/ProcessRecord;->isolated:Z
    :try_end_3
    .catch Ljava/lang/RuntimeException; {:try_start_3 .. :try_end_3} :catch_2

    const/4 v3, 0x0

    const/4 v4, 0x2

    if-nez v2, :cond_5

    .line 4358
    nop

    .line 4360
    :try_start_4
    const-string/jumbo v2, "startProcess: getting gids from package manager"

    invoke-direct {v15, v12, v13, v2}, Lcom/android/server/am/ActivityManagerService;->checkTime(JLjava/lang/String;)V

    .line 4361
    invoke-static {}, Landroid/app/AppGlobals;->getPackageManager()Landroid/content/pm/IPackageManager;

    move-result-object v2

    .line 4362
    iget-object v5, v14, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget-object v5, v5, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;

    const/high16 v6, 0x10000000

    iget v7, v14, Lcom/android/server/am/ProcessRecord;->userId:I

    invoke-interface {v2, v5, v6, v7}, Landroid/content/pm/IPackageManager;->getPackageGids(Ljava/lang/String;II)[I

    move-result-object v2

    .line 4364
    const-class v5, Landroid/os/storage/StorageManagerInternal;

    invoke-static {v5}, Lcom/android/server/LocalServices;->getService(Ljava/lang/Class;)Ljava/lang/Object;

    move-result-object v5

    check-cast v5, Landroid/os/storage/StorageManagerInternal;

    .line 4366
    iget-object v6, v14, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget-object v6, v6, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;

    invoke-virtual {v5, v0, v6}, Landroid/os/storage/StorageManagerInternal;->getExternalStorageMountMode(ILjava/lang/String;)I

    move-result v5
    :try_end_4
    .catch Landroid/os/RemoteException; {:try_start_4 .. :try_end_4} :catch_0
    .catch Ljava/lang/RuntimeException; {:try_start_4 .. :try_end_4} :catch_2

    .line 4370
    nop

    .line 4376
    :try_start_5
    invoke-static {v2}, Lcom/android/internal/util/ArrayUtils;->isEmpty([I)Z

    move-result v6

    const/4 v7, 0x3

    if-eqz v6, :cond_2

    .line 4377
    new-array v2, v7, [I

    goto :goto_1

    .line 4379
    :cond_2
    array-length v6, v2

    add-int/2addr v6, v7

    new-array v6, v6, [I

    .line 4380
    array-length v8, v2

    invoke-static {v2, v11, v6, v7, v8}, Ljava/lang/System;->arraycopy(Ljava/lang/Object;ILjava/lang/Object;II)V

    .line 4382
    move-object v2, v6

    :goto_1
    invoke-static {v0}, Landroid/os/UserHandle;->getAppId(I)I

    move-result v6

    invoke-static {v6}, Landroid/os/UserHandle;->getSharedAppGid(I)I

    move-result v6

    aput v6, v2, v11

    .line 4383
    invoke-static {v0}, Landroid/os/UserHandle;->getAppId(I)I

    move-result v6

    invoke-static {v6}, Landroid/os/UserHandle;->getCacheAppGid(I)I

    move-result v6

    aput v6, v2, v1

    .line 4384
    invoke-static {v0}, Landroid/os/UserHandle;->getUserId(I)I

    move-result v6

    invoke-static {v6}, Landroid/os/UserHandle;->getUserGid(I)I

    move-result v6

    aput v6, v2, v4

    .line 4387
    aget v6, v2, v11

    const/4 v7, -0x1

    if-ne v6, v7, :cond_3

    aget v6, v2, v4

    aput v6, v2, v11

    .line 4388
    :cond_3
    aget v6, v2, v1

    if-ne v6, v7, :cond_4

    aget v6, v2, v4

    aput v6, v2, v1

    .line 4390
    :cond_4
    move-object v7, v2

    move v9, v5

    goto :goto_2

    .line 4368
    :catch_0
    move-exception v0

    .line 4369
    invoke-virtual {v0}, Landroid/os/RemoteException;->rethrowAsRuntimeException()Ljava/lang/RuntimeException;

    move-result-object v0

    throw v0

    .line 4390
    :cond_5
    move-object v7, v3

    move v9, v11

    :goto_2
    const-string/jumbo v2, "startProcess: building args"

    invoke-direct {v15, v12, v13, v2}, Lcom/android/server/am/ActivityManagerService;->checkTime(JLjava/lang/String;)V

    .line 4391
    iget v2, v15, Lcom/android/server/am/ActivityManagerService;->mFactoryTest:I

    if-eqz v2, :cond_7

    .line 4392
    iget v2, v15, Lcom/android/server/am/ActivityManagerService;->mFactoryTest:I

    if-ne v2, v1, :cond_6

    iget-object v2, v15, Lcom/android/server/am/ActivityManagerService;->mTopComponent:Landroid/content/ComponentName;

    if-eqz v2, :cond_6

    iget-object v2, v14, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;

    iget-object v5, v15, Lcom/android/server/am/ActivityManagerService;->mTopComponent:Landroid/content/ComponentName;

    .line 4394
    invoke-virtual {v5}, Landroid/content/ComponentName;->getPackageName()Ljava/lang/String;

    move-result-object v5

    invoke-virtual {v2, v5}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v2

    if-eqz v2, :cond_6

    .line 4395
    nop

    .line 4397
    move v0, v11

    :cond_6
    iget v2, v15, Lcom/android/server/am/ActivityManagerService;->mFactoryTest:I

    if-ne v2, v4, :cond_7

    iget-object v2, v14, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget v2, v2, Landroid/content/pm/ApplicationInfo;->flags:I

    and-int/lit8 v2, v2, 0x10

    if-eqz v2, :cond_7

    .line 4399
    nop

    .line 4402
    move v6, v11

    goto :goto_3

    :cond_7
    move v6, v0

    .line 4403
    :goto_3
    iget-object v0, v14, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget v0, v0, Landroid/content/pm/ApplicationInfo;->flags:I

    and-int/2addr v0, v4

    if-eqz v0, :cond_8

    .line 4404
    nop

    .line 4405
    nop

    .line 4408
    const/16 v0, 0x103

    goto :goto_4

    .line 4412
    :cond_8
    move v0, v11

    :goto_4
    iget-object v2, v14, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget v2, v2, Landroid/content/pm/ApplicationInfo;->flags:I

    and-int/lit16 v2, v2, 0x4000

    if-nez v2, :cond_9

    iget-boolean v2, v15, Lcom/android/server/am/ActivityManagerService;->mSafeMode:Z

    if-ne v2, v1, :cond_a

    .line 4414
    :cond_9
    or-int/lit8 v0, v0, 0x8

    .line 4416
    :cond_a
    const-string v2, "1"

    const-string v5, "debug.checkjni"

    invoke-static {v5}, Landroid/os/SystemProperties;->get(Ljava/lang/String;)Ljava/lang/String;

    move-result-object v5

    invoke-virtual {v2, v5}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v2

    if-eqz v2, :cond_b

    .line 4417
    or-int/lit8 v0, v0, 0x2

    .line 4419
    :cond_b
    const-string v2, "debug.generate-debug-info"

    invoke-static {v2}, Landroid/os/SystemProperties;->get(Ljava/lang/String;)Ljava/lang/String;

    move-result-object v2

    .line 4420
    const-string v5, "1"

    invoke-virtual {v5, v2}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v5

    if-nez v5, :cond_c

    const-string/jumbo v5, "true"

    invoke-virtual {v5, v2}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v2

    if-eqz v2, :cond_d

    .line 4421
    :cond_c
    or-int/lit8 v0, v0, 0x20

    .line 4423
    :cond_d
    const-string v2, "dalvik.vm.minidebuginfo"

    invoke-static {v2}, Landroid/os/SystemProperties;->get(Ljava/lang/String;)Ljava/lang/String;

    move-result-object v2

    .line 4424
    const-string v5, "1"

    invoke-virtual {v5, v2}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v5

    if-nez v5, :cond_e

    const-string/jumbo v5, "true"

    invoke-virtual {v5, v2}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v2

    if-eqz v2, :cond_f

    .line 4425
    :cond_e
    or-int/lit16 v0, v0, 0x800

    .line 4427
    :cond_f
    const-string v2, "1"

    const-string v5, "debug.jni.logging"

    invoke-static {v5}, Landroid/os/SystemProperties;->get(Ljava/lang/String;)Ljava/lang/String;

    move-result-object v5

    invoke-virtual {v2, v5}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v2

    if-eqz v2, :cond_10

    .line 4428
    or-int/lit8 v0, v0, 0x10

    .line 4430
    :cond_10
    const-string v2, "1"

    const-string v5, "debug.assert"

    invoke-static {v5}, Landroid/os/SystemProperties;->get(Ljava/lang/String;)Ljava/lang/String;

    move-result-object v5

    invoke-virtual {v2, v5}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v2

    if-eqz v2, :cond_11

    .line 4431
    or-int/lit8 v0, v0, 0x4

    .line 4433
    :cond_11
    iget-object v2, v15, Lcom/android/server/am/ActivityManagerService;->mNativeDebuggingApp:Ljava/lang/String;

    if-eqz v2, :cond_12

    iget-object v2, v15, Lcom/android/server/am/ActivityManagerService;->mNativeDebuggingApp:Ljava/lang/String;

    iget-object v5, v14, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;

    invoke-virtual {v2, v5}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v2

    if-eqz v2, :cond_12

    .line 4435
    or-int/lit8 v0, v0, 0x40

    .line 4436
    or-int/lit8 v0, v0, 0x20

    .line 4437
    or-int/lit16 v0, v0, 0x80

    .line 4438
    iput-object v3, v15, Lcom/android/server/am/ActivityManagerService;->mNativeDebuggingApp:Ljava/lang/String;

    .line 4441
    :cond_12
    iget-object v2, v14, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    invoke-virtual {v2}, Landroid/content/pm/ApplicationInfo;->isPrivilegedApp()Z

    move-result v2

    if-eqz v2, :cond_13

    iget-object v2, v14, Lcom/android/server/am/ProcessRecord;->pkgList:Landroid/util/ArrayMap;

    .line 4442
    invoke-virtual {v2}, Landroid/util/ArrayMap;->keySet()Ljava/util/Set;

    move-result-object v2

    invoke-static {v2}, Lcom/android/server/pm/dex/DexManager;->isPackageSelectedToRunOob(Ljava/util/Collection;)Z

    move-result v2

    if-eqz v2, :cond_13

    .line 4443
    or-int/lit16 v0, v0, 0x400

    .line 4446
    :cond_13
    if-nez p4, :cond_15

    iget-object v2, v15, Lcom/android/server/am/ActivityManagerService;->mHiddenApiBlacklist:Lcom/android/server/am/ActivityManagerService$HiddenApiSettings;

    invoke-virtual {v2}, Lcom/android/server/am/ActivityManagerService$HiddenApiSettings;->isDisabled()Z

    move-result v2

    if-nez v2, :cond_15

    .line 4447
    iget-object v2, v14, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget-object v5, v15, Lcom/android/server/am/ActivityManagerService;->mHiddenApiBlacklist:Lcom/android/server/am/ActivityManagerService$HiddenApiSettings;

    .line 4448
    invoke-virtual {v5}, Lcom/android/server/am/ActivityManagerService$HiddenApiSettings;->getPolicyForPrePApps()I

    move-result v5

    iget-object v8, v15, Lcom/android/server/am/ActivityManagerService;->mHiddenApiBlacklist:Lcom/android/server/am/ActivityManagerService$HiddenApiSettings;

    .line 4449
    invoke-virtual {v8}, Lcom/android/server/am/ActivityManagerService$HiddenApiSettings;->getPolicyForPApps()I

    move-result v8

    .line 4447
    invoke-virtual {v2, v5, v8}, Landroid/content/pm/ApplicationInfo;->maybeUpdateHiddenApiEnforcementPolicy(II)V

    .line 4450
    iget-object v2, v14, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    .line 4451
    invoke-virtual {v2}, Landroid/content/pm/ApplicationInfo;->getHiddenApiEnforcementPolicy()I

    move-result v2

    .line 4452
    sget v5, Lcom/android/internal/os/Zygote;->API_ENFORCEMENT_POLICY_SHIFT:I

    shl-int v5, v2, v5

    .line 4453
    and-int/lit16 v8, v5, 0x3000

    if-ne v8, v5, :cond_14

    .line 4456
    or-int/2addr v0, v5

    goto :goto_5

    .line 4454
    :cond_14
    new-instance v0, Ljava/lang/IllegalStateException;

    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string v3, "Invalid API policy: "

    invoke-virtual {v1, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-direct {v0, v1}, Ljava/lang/IllegalStateException;-><init>(Ljava/lang/String;)V

    throw v0

    .line 4460
    :cond_15
    :goto_5
    move v8, v0

    .line 4461
    const-string/jumbo v0, "sys.refresh_theme"

    invoke-static {v0, v11}, Landroid/os/SystemProperties;->getBoolean(Ljava/lang/String;Z)Z

    move-result v0

    if-eqz v0, :cond_16

    .line 4462
    const-string/jumbo v0, "sys.refresh_theme"

    const-string v2, "false"

    invoke-static {v0, v2}, Landroid/os/SystemProperties;->set(Ljava/lang/String;Ljava/lang/String;)V

    .line 4463
    nop

    .line 4466
    move v0, v1

    goto :goto_6

    :cond_16
    move v0, v11

    .line 4467
    :goto_6
    iget-object v1, v14, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget v1, v1, Landroid/content/pm/ApplicationInfo;->flags:I

    and-int/2addr v1, v4

    if-eqz v1, :cond_18

    .line 4469
    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    iget-object v2, v14, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget-object v2, v2, Landroid/content/pm/ApplicationInfo;->nativeLibraryDir:Ljava/lang/String;

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v2, "/wrap.sh"

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    .line 4470
    invoke-static {}, Landroid/os/StrictMode;->allowThreadDiskReads()Landroid/os/StrictMode$ThreadPolicy;

    move-result-object v2
    :try_end_5
    .catch Ljava/lang/RuntimeException; {:try_start_5 .. :try_end_5} :catch_2

    .line 4472
    :try_start_6
    new-instance v4, Ljava/io/File;

    invoke-direct {v4, v1}, Ljava/io/File;-><init>(Ljava/lang/String;)V

    invoke-virtual {v4}, Ljava/io/File;->exists()Z

    move-result v4

    if-eqz v4, :cond_17

    .line 4473
    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    const-string v5, "/system/bin/logwrapper "

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v4, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1
    :try_end_6
    .catchall {:try_start_6 .. :try_end_6} :catchall_1

    goto :goto_7

    .line 4476
    :cond_17
    move-object v1, v3

    :goto_7
    :try_start_7
    invoke-static {v2}, Landroid/os/StrictMode;->setThreadPolicy(Landroid/os/StrictMode$ThreadPolicy;)V

    .line 4477
    nop

    .line 4480
    move-object/from16 v16, v1

    goto :goto_8

    .line 4476
    :catchall_1
    move-exception v0

    invoke-static {v2}, Landroid/os/StrictMode;->setThreadPolicy(Landroid/os/StrictMode$ThreadPolicy;)V

    throw v0

    .line 4480
    :cond_18
    move-object/from16 v16, v3

    :goto_8
    if-eqz p5, :cond_19

    .line 4481
    move-object/from16 v1, p5

    goto :goto_9

    .line 4480
    :cond_19
    iget-object v1, v14, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget-object v1, v1, Landroid/content/pm/ApplicationInfo;->primaryCpuAbi:Ljava/lang/String;

    .line 4481
    :goto_9
    if-nez v1, :cond_1a

    .line 4482
    sget-object v1, Landroid/os/Build;->SUPPORTED_ABIS:[Ljava/lang/String;

    aget-object v1, v1, v11

    .line 4485
    :cond_1a
    move-object v10, v1

    .line 4486
    iget-object v1, v14, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget-object v1, v1, Landroid/content/pm/ApplicationInfo;->primaryCpuAbi:Ljava/lang/String;

    if-eqz v1, :cond_1b

    .line 4487
    iget-object v1, v14, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget-object v1, v1, Landroid/content/pm/ApplicationInfo;->primaryCpuAbi:Ljava/lang/String;

    invoke-static {v1}, Ldalvik/system/VMRuntime;->getInstructionSet(Ljava/lang/String;)Ljava/lang/String;

    move-result-object v1

    .line 4490
    move-object v5, v1

    goto :goto_a

    :cond_1b
    move-object v5, v3

    :goto_a
    iput-object v7, v14, Lcom/android/server/am/ProcessRecord;->gids:[I

    .line 4491
    iput-object v10, v14, Lcom/android/server/am/ProcessRecord;->requiredAbi:Ljava/lang/String;

    .line 4492
    iput-object v5, v14, Lcom/android/server/am/ProcessRecord;->instructionSet:Ljava/lang/String;

    .line 4495
    iget-object v1, v14, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget-object v1, v1, Landroid/content/pm/ApplicationInfo;->seInfoUser:Ljava/lang/String;

    invoke-static {v1}, Landroid/text/TextUtils;->isEmpty(Ljava/lang/CharSequence;)Z

    move-result v1

    if-eqz v1, :cond_1c

    .line 4496
    const-string v1, "ActivityManager"

    const-string v2, "SELinux tag not defined"

    new-instance v3, Ljava/lang/IllegalStateException;

    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V
    :try_end_7
    .catch Ljava/lang/RuntimeException; {:try_start_7 .. :try_end_7} :catch_2

    :try_start_8
    const-string v11, "SELinux tag not defined for "

    invoke-virtual {v4, v11}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget-object v11, v14, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget-object v11, v11, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;

    invoke-virtual {v4, v11}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v11, " (uid "

    invoke-virtual {v4, v11}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget v11, v14, Lcom/android/server/am/ProcessRecord;->uid:I

    invoke-virtual {v4, v11}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v11, ")"

    invoke-virtual {v4, v11}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v4

    invoke-direct {v3, v4}, Ljava/lang/IllegalStateException;-><init>(Ljava/lang/String;)V

    invoke-static {v1, v2, v3}, Landroid/util/Slog;->wtf(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I

    .line 4500
    :cond_1c
    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    iget-object v2, v14, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget-object v2, v2, Landroid/content/pm/ApplicationInfo;->seInfo:Ljava/lang/String;

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 4501
    iget-object v2, v14, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget-object v2, v2, Landroid/content/pm/ApplicationInfo;->seInfoUser:Ljava/lang/String;

    invoke-static {v2}, Landroid/text/TextUtils;->isEmpty(Ljava/lang/CharSequence;)Z

    move-result v2

    if-eqz v2, :cond_1d

    const-string v2, ""

    goto :goto_b

    :cond_1d
    iget-object v2, v14, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget-object v2, v2, Landroid/content/pm/ApplicationInfo;->seInfoUser:Ljava/lang/String;

    :goto_b
    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v11

    .line 4506
    const-string v4, "android.app.ActivityThread"
    :try_end_8
    .catch Ljava/lang/RuntimeException; {:try_start_8 .. :try_end_8} :catch_1

    move-object v1, v15

    move-object/from16 v2, p2

    move-object/from16 v3, p3

    move-object/from16 v18, v5

    move-object v5, v14

    move-object/from16 v19, v10

    move-object v10, v11

    const/16 v17, 0x0

    move-object/from16 v11, v19

    move-wide/from16 v19, v12

    move-object/from16 v12, v18

    move-object/from16 v13, v16

    move v14, v0

    move-wide/from16 v15, v19

    :try_start_9
    invoke-direct/range {v1 .. v16}, Lcom/android/server/am/ActivityManagerService;->startProcessLocked(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lcom/android/server/am/ProcessRecord;I[IIILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;ZJ)Z

    move-result v0

    return v0

    .line 4509
    :catch_1
    move-exception v0

    const/16 v17, 0x0

    goto :goto_c

    :catch_2
    move-exception v0

    move/from16 v17, v11

    goto :goto_c

    .line 4350
    :catch_3
    move-exception v0

    move/from16 v17, v11

    .line 4351
    invoke-virtual {v0}, Landroid/os/RemoteException;->rethrowAsRuntimeException()Ljava/lang/RuntimeException;

    move-result-object v0

    throw v0
    :try_end_9
    .catch Ljava/lang/RuntimeException; {:try_start_9 .. :try_end_9} :catch_4

    .line 4509
    :catch_4
    move-exception v0

    .line 4510
    :goto_c
    const-string v1, "ActivityManager"

    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    const-string v3, "Failure starting process "

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-object/from16 v3, p1

    iget-object v4, v3, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;

    invoke-virtual {v2, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v2

    invoke-static {v1, v2, v0}, Landroid/util/Slog;->e(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I

    .line 4518
    iget-object v0, v3, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget-object v2, v0, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;

    iget v0, v3, Lcom/android/server/am/ProcessRecord;->uid:I

    invoke-static {v0}, Landroid/os/UserHandle;->getAppId(I)I

    move-result v0

    const/4 v4, 0x0

    const/4 v5, 0x0

    const/4 v6, 0x1

    const/4 v7, 0x0

    const/4 v8, 0x0

    iget v1, v3, Lcom/android/server/am/ProcessRecord;->userId:I

    .line 4519
    invoke-static {v1}, Landroid/os/UserHandle;->getUserId(I)I

    move-result v9

    const-string/jumbo v10, "start failure"

    .line 4518
    move-object/from16 v1, p0

    move v3, v0

    invoke-virtual/range {v1 .. v10}, Lcom/android/server/am/ActivityManagerService;->forceStopPackageLocked(Ljava/lang/String;IZZZZZILjava/lang/String;)Z

    .line 4520
    return v17
.end method

.method private startProcessLocked(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lcom/android/server/am/ProcessRecord;I[IIILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;ZJ)Z
    .locals 20
    .annotation build Lcom/android/internal/annotations/GuardedBy;
        value = "this"
    .end annotation

    move-object/from16 v14, p0

    move-object/from16 v15, p4

    .line 4529
    const/4 v13, 0x1

    iput-boolean v13, v15, Lcom/android/server/am/ProcessRecord;->pendingStart:Z

    .line 4530
    const/4 v12, 0x0

    iput-boolean v12, v15, Lcom/android/server/am/ProcessRecord;->killedByAm:Z

    .line 4531
    iput-boolean v12, v15, Lcom/android/server/am/ProcessRecord;->removed:Z

    .line 4532
    iput-boolean v12, v15, Lcom/android/server/am/ProcessRecord;->killed:Z

    .line 4533
    iget-wide v0, v15, Lcom/android/server/am/ProcessRecord;->startSeq:J

    const-wide/16 v2, 0x0

    cmp-long v0, v0, v2

    if-eqz v0, :cond_0

    .line 4534
    const-string v0, "ActivityManager"

    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v2, "startProcessLocked processName:"

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget-object v2, v15, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v2, " with non-zero startSeq:"

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget-wide v2, v15, Lcom/android/server/am/ProcessRecord;->startSeq:J

    invoke-virtual {v1, v2, v3}, Ljava/lang/StringBuilder;->append(J)Ljava/lang/StringBuilder;

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-static {v0, v1}, Landroid/util/Slog;->wtf(Ljava/lang/String;Ljava/lang/String;)I

    .line 4537
    :cond_0
    iget v0, v15, Lcom/android/server/am/ProcessRecord;->pid:I

    if-eqz v0, :cond_1

    .line 4538
    const-string v0, "ActivityManager"

    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v2, "startProcessLocked processName:"

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget-object v2, v15, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v2, " with non-zero pid:"

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget v2, v15, Lcom/android/server/am/ProcessRecord;->pid:I

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-static {v0, v1}, Landroid/util/Slog;->wtf(Ljava/lang/String;Ljava/lang/String;)I

    .line 4541
    :cond_1
    iget-wide v0, v14, Lcom/android/server/am/ActivityManagerService;->mProcStartSeqCounter:J

    const-wide/16 v2, 0x1

    add-long v10, v0, v2

    iput-wide v10, v14, Lcom/android/server/am/ActivityManagerService;->mProcStartSeqCounter:J

    iput-wide v10, v15, Lcom/android/server/am/ProcessRecord;->startSeq:J

    .line 4542
    move-object v1, v15

    move/from16 v2, p5

    move-object/from16 v3, p1

    move-object/from16 v4, p2

    move-object/from16 v5, p9

    move-wide/from16 v6, p14

    invoke-virtual/range {v1 .. v7}, Lcom/android/server/am/ProcessRecord;->setStartParams(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;J)V

    .line 4543
    iget-object v0, v14, Lcom/android/server/am/ActivityManagerService;->mConstants:Lcom/android/server/am/ActivityManagerConstants;

    iget-boolean v0, v0, Lcom/android/server/am/ActivityManagerConstants;->FLAG_PROCESS_START_ASYNC:Z

    if-eqz v0, :cond_2

    .line 4546
    iget-object v0, v14, Lcom/android/server/am/ActivityManagerService;->mProcStartHandler:Landroid/os/Handler;

    new-instance v12, Lcom/android/server/am/-$$Lambda$ActivityManagerService$uodjuV4f3XaNu1YXizamnvwz1bw;

    move-object v1, v12

    move-object v2, v14

    move-object v3, v15

    move-wide v4, v10

    move-object/from16 v6, p12

    move-object/from16 v7, p3

    move-object/from16 v8, p6

    move/from16 v9, p7

    move/from16 v10, p8

    move-object/from16 v11, p10

    move-object v14, v12

    move-object/from16 v12, p11

    move/from16 v16, v13

    move/from16 v13, p13

    invoke-direct/range {v1 .. v13}, Lcom/android/server/am/-$$Lambda$ActivityManagerService$uodjuV4f3XaNu1YXizamnvwz1bw;-><init>(Lcom/android/server/am/ActivityManagerService;Lcom/android/server/am/ProcessRecord;JLjava/lang/String;Ljava/lang/String;[IIILjava/lang/String;Ljava/lang/String;Z)V

    invoke-virtual {v0, v14}, Landroid/os/Handler;->post(Ljava/lang/Runnable;)Z

    .line 4577
    return v16

    .line 4580
    :cond_2
    move/from16 v16, v13

    move-object v1, v14

    move-object/from16 v2, p1

    move-object/from16 v3, p3

    move-object v4, v15

    move/from16 v5, p5

    move-object/from16 v6, p6

    move/from16 v7, p7

    move/from16 v8, p8

    move-object/from16 v9, p9

    move-wide/from16 v17, v10

    move-object/from16 v10, p10

    move-object/from16 v11, p11

    move v13, v12

    move-object/from16 v12, p12

    move/from16 v13, p13

    move-wide/from16 v14, p14

    :try_start_0
    invoke-direct/range {v1 .. v15}, Lcom/android/server/am/ActivityManagerService;->startProcess(Ljava/lang/String;Ljava/lang/String;Lcom/android/server/am/ProcessRecord;I[IIILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;ZJ)Landroid/os/Process$ProcessStartResult;

    move-result-object v0

    .line 4583
    iget v3, v0, Landroid/os/Process$ProcessStartResult;->pid:I

    iget-boolean v4, v0, Landroid/os/Process$ProcessStartResult;->usingWrapper:Z

    const/4 v7, 0x0

    move-object/from16 v1, p0

    move-object/from16 v2, p4

    move-wide/from16 v5, v17

    invoke-direct/range {v1 .. v7}, Lcom/android/server/am/ActivityManagerService;->handleProcessStartedLocked(Lcom/android/server/am/ProcessRecord;IZJZ)Z
    :try_end_0
    .catch Ljava/lang/RuntimeException; {:try_start_0 .. :try_end_0} :catch_0

    .line 4591
    nop

    .line 4592
    move-object/from16 v11, p4

    const/4 v12, 0x0

    goto :goto_0

    .line 4585
    :catch_0
    move-exception v0

    .line 4586
    const-string v1, "ActivityManager"

    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    const-string v3, "Failure starting process "

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-object/from16 v11, p4

    iget-object v3, v11, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v2

    invoke-static {v1, v2, v0}, Landroid/util/Slog;->e(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I

    .line 4587
    const/4 v12, 0x0

    iput-boolean v12, v11, Lcom/android/server/am/ProcessRecord;->pendingStart:Z

    .line 4588
    iget-object v0, v11, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget-object v2, v0, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;

    iget v0, v11, Lcom/android/server/am/ProcessRecord;->uid:I

    invoke-static {v0}, Landroid/os/UserHandle;->getAppId(I)I

    move-result v3

    const/4 v4, 0x0

    const/4 v5, 0x0

    const/4 v6, 0x1

    const/4 v7, 0x0

    const/4 v8, 0x0

    iget v0, v11, Lcom/android/server/am/ProcessRecord;->userId:I

    .line 4590
    invoke-static {v0}, Landroid/os/UserHandle;->getUserId(I)I

    move-result v9

    const-string/jumbo v10, "start failure"

    .line 4588
    move-object/from16 v1, p0

    invoke-virtual/range {v1 .. v10}, Lcom/android/server/am/ActivityManagerService;->forceStopPackageLocked(Ljava/lang/String;IZZZZZILjava/lang/String;)Z

    .line 4592
    :goto_0
    iget v0, v11, Lcom/android/server/am/ProcessRecord;->pid:I

    if-lez v0, :cond_3

    goto :goto_1

    :cond_3
    move/from16 v16, v12

    :goto_1
    return v16
.end method

.method private stopLockTaskModeInternal(Lcom/android/server/am/TaskRecord;Z)V
    .locals 4

    .line 11997
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v0

    .line 11998
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v1

    .line 12000
    :try_start_0
    monitor-enter p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_1

    :try_start_1
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    .line 12001
    iget-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mLockTaskController:Lcom/android/server/am/LockTaskController;

    invoke-virtual {v3, p1, p2, v0}, Lcom/android/server/am/LockTaskController;->stopLockTaskMode(Lcom/android/server/am/TaskRecord;ZI)V

    .line 12002
    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    :try_start_2
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    .line 12005
    iget-object p1, p0, Lcom/android/server/am/ActivityManagerService;->mContext:Landroid/content/Context;

    const-string/jumbo p2, "telecom"

    invoke-virtual {p1, p2}, Landroid/content/Context;->getSystemService(Ljava/lang/String;)Ljava/lang/Object;

    move-result-object p1

    check-cast p1, Landroid/telecom/TelecomManager;

    .line 12006
    if-eqz p1, :cond_0

    .line 12007
    const/4 p2, 0x0

    invoke-virtual {p1, p2}, Landroid/telecom/TelecomManager;->showInCallScreen(Z)V
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_1

    .line 12010
    :cond_0
    invoke-static {v1, v2}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 12011
    nop

    .line 12012
    return-void

    .line 12002
    :catchall_0
    move-exception p1

    :try_start_3
    monitor-exit p0
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_0

    :try_start_4
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw p1
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_1

    .line 12010
    :catchall_1
    move-exception p1

    invoke-static {v1, v2}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    throw p1
.end method

.method private stopProfilerLocked(Lcom/android/server/am/ProcessRecord;I)V
    .locals 2

    .line 26263
    if-eqz p1, :cond_0

    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mProfileProc:Lcom/android/server/am/ProcessRecord;

    if-ne p1, v0, :cond_1

    .line 26264
    :cond_0
    iget-object p1, p0, Lcom/android/server/am/ActivityManagerService;->mProfileProc:Lcom/android/server/am/ProcessRecord;

    .line 26265
    iget p2, p0, Lcom/android/server/am/ActivityManagerService;->mProfileType:I

    .line 26266
    invoke-direct {p0}, Lcom/android/server/am/ActivityManagerService;->clearProfilerLocked()V

    .line 26268
    :cond_1
    if-nez p1, :cond_2

    .line 26269
    return-void

    .line 26272
    :cond_2
    :try_start_0
    iget-object p1, p1, Lcom/android/server/am/ProcessRecord;->thread:Landroid/app/IApplicationThread;

    const/4 v0, 0x0

    const/4 v1, 0x0

    invoke-interface {p1, v0, v1, p2}, Landroid/app/IApplicationThread;->profilerControl(ZLandroid/app/ProfilerInfo;I)V
    :try_end_0
    .catch Landroid/os/RemoteException; {:try_start_0 .. :try_end_0} :catch_0

    .line 26275
    nop

    .line 26276
    return-void

    .line 26273
    :catch_0
    move-exception p1

    .line 26274
    new-instance p1, Ljava/lang/IllegalStateException;

    const-string p2, "Process disappeared"

    invoke-direct {p1, p2}, Ljava/lang/IllegalStateException;-><init>(Ljava/lang/String;)V

    throw p1
.end method

.method private static stringifyKBSize(J)Ljava/lang/String;
    .locals 2

    .line 19024
    const-wide/16 v0, 0x400

    mul-long/2addr p0, v0

    const/16 v0, 0x400

    invoke-static {p0, p1, v0}, Lcom/android/server/am/ActivityManagerService;->stringifySize(JI)Ljava/lang/String;

    move-result-object p0

    return-object p0
.end method

.method private static stringifySize(JI)Ljava/lang/String;
    .locals 6

    .line 19008
    sget-object v0, Ljava/util/Locale;->US:Ljava/util/Locale;

    .line 19009
    const/4 v1, 0x0

    const/4 v2, 0x1

    if-eq p2, v2, :cond_3

    const/16 v3, 0x400

    const-wide/16 v4, 0x400

    if-eq p2, v3, :cond_2

    const/high16 v3, 0x100000

    if-eq p2, v3, :cond_1

    const/high16 v3, 0x40000000    # 2.0f

    if-ne p2, v3, :cond_0

    .line 19017
    const-string p2, "%,1dG"

    new-array v2, v2, [Ljava/lang/Object;

    div-long/2addr p0, v4

    div-long/2addr p0, v4

    div-long/2addr p0, v4

    invoke-static {p0, p1}, Ljava/lang/Long;->valueOf(J)Ljava/lang/Long;

    move-result-object p0

    aput-object p0, v2, v1

    invoke-static {v0, p2, v2}, Ljava/lang/String;->format(Ljava/util/Locale;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;

    move-result-object p0

    return-object p0

    .line 19019
    :cond_0
    new-instance p0, Ljava/lang/IllegalArgumentException;

    const-string p1, "Invalid size order"

    invoke-direct {p0, p1}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw p0

    .line 19015
    :cond_1
    const-string p2, "%,5dM"

    new-array v2, v2, [Ljava/lang/Object;

    div-long/2addr p0, v4

    div-long/2addr p0, v4

    invoke-static {p0, p1}, Ljava/lang/Long;->valueOf(J)Ljava/lang/Long;

    move-result-object p0

    aput-object p0, v2, v1

    invoke-static {v0, p2, v2}, Ljava/lang/String;->format(Ljava/util/Locale;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;

    move-result-object p0

    return-object p0

    .line 19013
    :cond_2
    const-string p2, "%,9dK"

    new-array v2, v2, [Ljava/lang/Object;

    div-long/2addr p0, v4

    invoke-static {p0, p1}, Ljava/lang/Long;->valueOf(J)Ljava/lang/Long;

    move-result-object p0

    aput-object p0, v2, v1

    invoke-static {v0, p2, v2}, Ljava/lang/String;->format(Ljava/util/Locale;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;

    move-result-object p0

    return-object p0

    .line 19011
    :cond_3
    const-string p2, "%,13d"

    new-array v2, v2, [Ljava/lang/Object;

    invoke-static {p0, p1}, Ljava/lang/Long;->valueOf(J)Ljava/lang/Long;

    move-result-object p0

    aput-object p0, v2, v1

    invoke-static {v0, p2, v2}, Ljava/lang/String;->format(Ljava/util/Locale;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;

    move-result-object p0

    return-object p0
.end method

.method private uidOnBackgroundWhitelist(I)Z
    .locals 5

    .line 13374
    invoke-static {p1}, Landroid/os/UserHandle;->getAppId(I)I

    move-result p1

    .line 13375
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mBackgroundAppIdWhitelist:[I

    .line 13376
    array-length v1, v0

    .line 13377
    const/4 v2, 0x0

    move v3, v2

    :goto_0
    if-ge v3, v1, :cond_1

    .line 13378
    aget v4, v0, v3

    if-ne p1, v4, :cond_0

    .line 13379
    const/4 p1, 0x1

    return p1

    .line 13377
    :cond_0
    add-int/lit8 v3, v3, 0x1

    goto :goto_0

    .line 13382
    :cond_1
    return v2
.end method

.method private updateConfigurationLocked(Landroid/content/res/Configuration;Lcom/android/server/am/ActivityRecord;ZZIZ)Z
    .locals 8

    .line 22788
    const/4 v7, 0x0

    move-object v0, p0

    move-object v1, p1

    move-object v2, p2

    move v3, p3

    move v4, p4

    move v5, p5

    move v6, p6

    invoke-direct/range {v0 .. v7}, Lcom/android/server/am/ActivityManagerService;->updateConfigurationLocked(Landroid/content/res/Configuration;Lcom/android/server/am/ActivityRecord;ZZIZLcom/android/server/am/ActivityManagerService$UpdateConfigurationResult;)Z

    move-result p1

    return p1
.end method

.method private updateConfigurationLocked(Landroid/content/res/Configuration;Lcom/android/server/am/ActivityRecord;ZZIZLcom/android/server/am/ActivityManagerService$UpdateConfigurationResult;)Z
    .locals 6

    .line 22805
    nop

    .line 22806
    nop

    .line 22808
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mWindowManager:Lcom/android/server/wm/WindowManagerService;

    if-eqz v0, :cond_0

    .line 22809
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mWindowManager:Lcom/android/server/wm/WindowManagerService;

    invoke-virtual {v0}, Lcom/android/server/wm/WindowManagerService;->deferSurfaceLayout()V

    .line 22812
    :cond_0
    if-eqz p1, :cond_1

    .line 22813
    move-object v0, p0

    move-object v1, p1

    move v2, p3

    move v3, p4

    move v4, p5

    move v5, p6

    :try_start_0
    invoke-direct/range {v0 .. v5}, Lcom/android/server/am/ActivityManagerService;->updateGlobalConfigurationLocked(Landroid/content/res/Configuration;ZZIZ)I

    move-result p1

    goto :goto_0

    .line 22819
    :catchall_0
    move-exception p1

    goto :goto_1

    .line 22817
    :cond_1
    const/4 p1, 0x0

    :goto_0
    invoke-direct {p0, p2, p1}, Lcom/android/server/am/ActivityManagerService;->ensureConfigAndVisibilityAfterUpdate(Lcom/android/server/am/ActivityRecord;I)Z

    move-result p2
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 22819
    iget-object p3, p0, Lcom/android/server/am/ActivityManagerService;->mWindowManager:Lcom/android/server/wm/WindowManagerService;

    if-eqz p3, :cond_2

    .line 22820
    iget-object p3, p0, Lcom/android/server/am/ActivityManagerService;->mWindowManager:Lcom/android/server/wm/WindowManagerService;

    invoke-virtual {p3}, Lcom/android/server/wm/WindowManagerService;->continueSurfaceLayout()V

    .line 22824
    :cond_2
    if-eqz p7, :cond_3

    .line 22825
    iput p1, p7, Lcom/android/server/am/ActivityManagerService$UpdateConfigurationResult;->changes:I

    .line 22826
    xor-int/lit8 p1, p2, 0x1

    iput-boolean p1, p7, Lcom/android/server/am/ActivityManagerService$UpdateConfigurationResult;->activityRelaunched:Z

    .line 22828
    :cond_3
    return p2

    .line 22819
    :goto_1
    iget-object p2, p0, Lcom/android/server/am/ActivityManagerService;->mWindowManager:Lcom/android/server/wm/WindowManagerService;

    if-eqz p2, :cond_4

    .line 22820
    iget-object p2, p0, Lcom/android/server/am/ActivityManagerService;->mWindowManager:Lcom/android/server/wm/WindowManagerService;

    invoke-virtual {p2}, Lcom/android/server/wm/WindowManagerService;->continueSurfaceLayout()V

    :cond_4
    throw p1
.end method

.method private updateDisplayOverrideConfigurationLocked(Landroid/content/res/Configuration;Lcom/android/server/am/ActivityRecord;ZILcom/android/server/am/ActivityManagerService$UpdateConfigurationResult;)Z
    .locals 7

    .line 23035
    nop

    .line 23036
    nop

    .line 23038
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mWindowManager:Lcom/android/server/wm/WindowManagerService;

    if-eqz v0, :cond_0

    .line 23039
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mWindowManager:Lcom/android/server/wm/WindowManagerService;

    invoke-virtual {v0}, Lcom/android/server/wm/WindowManagerService;->deferSurfaceLayout()V

    .line 23042
    :cond_0
    if-eqz p1, :cond_2

    .line 23043
    if-nez p4, :cond_1

    .line 23047
    const/4 v3, 0x0

    const/4 v4, 0x0

    const/16 v5, -0x2710

    move-object v1, p0

    move-object v2, p1

    move v6, p3

    :try_start_0
    invoke-direct/range {v1 .. v6}, Lcom/android/server/am/ActivityManagerService;->updateGlobalConfigurationLocked(Landroid/content/res/Configuration;ZZIZ)I

    move-result p1

    goto :goto_0

    .line 23050
    :cond_1
    invoke-direct {p0, p1, p3, p4}, Lcom/android/server/am/ActivityManagerService;->performDisplayOverrideConfigUpdate(Landroid/content/res/Configuration;ZI)I

    move-result p1

    goto :goto_0

    .line 23054
    :cond_2
    const/4 p1, 0x0

    :goto_0
    invoke-direct {p0, p2, p1}, Lcom/android/server/am/ActivityManagerService;->ensureConfigAndVisibilityAfterUpdate(Lcom/android/server/am/ActivityRecord;I)Z

    move-result p2
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 23056
    iget-object p3, p0, Lcom/android/server/am/ActivityManagerService;->mWindowManager:Lcom/android/server/wm/WindowManagerService;

    if-eqz p3, :cond_3

    .line 23057
    iget-object p3, p0, Lcom/android/server/am/ActivityManagerService;->mWindowManager:Lcom/android/server/wm/WindowManagerService;

    invoke-virtual {p3}, Lcom/android/server/wm/WindowManagerService;->continueSurfaceLayout()V

    .line 23061
    :cond_3
    if-eqz p5, :cond_4

    .line 23062
    iput p1, p5, Lcom/android/server/am/ActivityManagerService$UpdateConfigurationResult;->changes:I

    .line 23063
    xor-int/lit8 p1, p2, 0x1

    iput-boolean p1, p5, Lcom/android/server/am/ActivityManagerService$UpdateConfigurationResult;->activityRelaunched:Z

    .line 23065
    :cond_4
    return p2

    .line 23056
    :catchall_0
    move-exception p1

    iget-object p2, p0, Lcom/android/server/am/ActivityManagerService;->mWindowManager:Lcom/android/server/wm/WindowManagerService;

    if-eqz p2, :cond_5

    .line 23057
    iget-object p2, p0, Lcom/android/server/am/ActivityManagerService;->mWindowManager:Lcom/android/server/wm/WindowManagerService;

    invoke-virtual {p2}, Lcom/android/server/wm/WindowManagerService;->continueSurfaceLayout()V

    :cond_5
    throw p1
.end method

.method private updateEventDispatchingLocked()V
    .locals 2

    .line 13707
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mWindowManager:Lcom/android/server/wm/WindowManagerService;

    iget-boolean v1, p0, Lcom/android/server/am/ActivityManagerService;->mBooted:Z

    if-eqz v1, :cond_0

    iget-boolean v1, p0, Lcom/android/server/am/ActivityManagerService;->mShuttingDown:Z

    if-nez v1, :cond_0

    const/4 v1, 0x1

    goto :goto_0

    :cond_0
    const/4 v1, 0x0

    :goto_0
    invoke-virtual {v0, v1}, Lcom/android/server/wm/WindowManagerService;->setEventDispatching(Z)V

    .line 13708
    return-void
.end method

.method private updateFontScaleIfNeeded(I)V
    .locals 3

    .line 22698
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mContext:Landroid/content/Context;

    invoke-virtual {v0}, Landroid/content/Context;->getContentResolver()Landroid/content/ContentResolver;

    move-result-object v0

    const-string v1, "font_scale"

    const/high16 v2, 0x3f800000    # 1.0f

    invoke-static {v0, v1, v2, p1}, Landroid/provider/Settings$System;->getFloatForUser(Landroid/content/ContentResolver;Ljava/lang/String;FI)F

    move-result v0

    .line 22701
    monitor-enter p0

    :try_start_0
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    .line 22702
    invoke-virtual {p0}, Lcom/android/server/am/ActivityManagerService;->getGlobalConfiguration()Landroid/content/res/Configuration;

    move-result-object v1

    iget v1, v1, Landroid/content/res/Configuration;->fontScale:F

    cmpl-float v1, v1, v0

    if-nez v1, :cond_0

    .line 22703
    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    return-void

    .line 22706
    :cond_0
    :try_start_1
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mWindowManager:Lcom/android/server/wm/WindowManagerService;

    const/4 v2, 0x0

    .line 22707
    invoke-virtual {v1, v2}, Lcom/android/server/wm/WindowManagerService;->computeNewConfiguration(I)Landroid/content/res/Configuration;

    move-result-object v1

    .line 22708
    iput v0, v1, Landroid/content/res/Configuration;->fontScale:F

    .line 22709
    invoke-direct {p0, v1, p1}, Lcom/android/server/am/ActivityManagerService;->updatePersistentConfigurationLocked(Landroid/content/res/Configuration;I)V

    .line 22710
    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    .line 22711
    return-void

    .line 22710
    :catchall_0
    move-exception p1

    :try_start_2
    monitor-exit p0
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw p1
.end method

.method private updateForceBackgroundCheck(Z)V
    .locals 1

    .line 15647
    monitor-enter p0

    :try_start_0
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    .line 15648
    iget-boolean v0, p0, Lcom/android/server/am/ActivityManagerService;->mForceBackgroundCheck:Z

    if-eq v0, p1, :cond_0

    .line 15649
    iput-boolean p1, p0, Lcom/android/server/am/ActivityManagerService;->mForceBackgroundCheck:Z

    .line 15655
    iget-boolean p1, p0, Lcom/android/server/am/ActivityManagerService;->mForceBackgroundCheck:Z

    if-eqz p1, :cond_0

    .line 15657
    invoke-virtual {p0}, Lcom/android/server/am/ActivityManagerService;->doStopUidForIdleUidsLocked()V

    .line 15660
    :cond_0
    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    .line 15661
    return-void

    .line 15660
    :catchall_0
    move-exception p1

    :try_start_1
    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw p1
.end method

.method private updateGlobalConfigurationLocked(Landroid/content/res/Configuration;ZZIZ)I
    .locals 42

    move-object/from16 v15, p0

    move-object/from16 v0, p1

    .line 22842
    move/from16 v14, p5

    iget-object v1, v15, Lcom/android/server/am/ActivityManagerService;->mTempConfig:Landroid/content/res/Configuration;

    invoke-virtual/range {p0 .. p0}, Lcom/android/server/am/ActivityManagerService;->getGlobalConfiguration()Landroid/content/res/Configuration;

    move-result-object v2

    invoke-virtual {v1, v2}, Landroid/content/res/Configuration;->setTo(Landroid/content/res/Configuration;)V

    .line 22843
    iget-object v1, v15, Lcom/android/server/am/ActivityManagerService;->mTempConfig:Landroid/content/res/Configuration;

    invoke-virtual {v1, v0}, Landroid/content/res/Configuration;->updateFrom(Landroid/content/res/Configuration;)I

    move-result v13

    .line 22844
    const/4 v12, 0x0

    if-nez v13, :cond_0

    .line 22849
    invoke-direct {v15, v0, v14, v12}, Lcom/android/server/am/ActivityManagerService;->performDisplayOverrideConfigUpdate(Landroid/content/res/Configuration;ZI)I

    .line 22850
    return v12

    .line 22856
    :cond_0
    const/16 v1, 0xa9f

    invoke-static {v1, v13}, Landroid/util/EventLog;->writeEvent(II)I

    .line 22857
    const/16 v19, 0x42

    iget v1, v0, Landroid/content/res/Configuration;->colorMode:I

    iget v2, v0, Landroid/content/res/Configuration;->densityDpi:I

    iget v3, v0, Landroid/content/res/Configuration;->fontScale:F

    iget v4, v0, Landroid/content/res/Configuration;->hardKeyboardHidden:I

    iget v5, v0, Landroid/content/res/Configuration;->keyboard:I

    iget v6, v0, Landroid/content/res/Configuration;->keyboardHidden:I

    iget v7, v0, Landroid/content/res/Configuration;->mcc:I

    iget v8, v0, Landroid/content/res/Configuration;->mnc:I

    iget v9, v0, Landroid/content/res/Configuration;->navigation:I

    iget v10, v0, Landroid/content/res/Configuration;->navigationHidden:I

    iget v11, v0, Landroid/content/res/Configuration;->orientation:I

    iget v12, v0, Landroid/content/res/Configuration;->screenHeightDp:I

    iget v14, v0, Landroid/content/res/Configuration;->screenLayout:I

    move/from16 v37, v13

    iget v13, v0, Landroid/content/res/Configuration;->screenWidthDp:I

    iget v15, v0, Landroid/content/res/Configuration;->smallestScreenWidthDp:I

    move/from16 v38, v15

    iget v15, v0, Landroid/content/res/Configuration;->touchscreen:I

    move/from16 v39, v15

    iget v15, v0, Landroid/content/res/Configuration;->uiMode:I

    move/from16 v20, v1

    move/from16 v21, v2

    move/from16 v22, v3

    move/from16 v23, v4

    move/from16 v24, v5

    move/from16 v25, v6

    move/from16 v26, v7

    move/from16 v27, v8

    move/from16 v28, v9

    move/from16 v29, v10

    move/from16 v30, v11

    move/from16 v31, v12

    move/from16 v32, v14

    move/from16 v33, v13

    move/from16 v34, v38

    move/from16 v35, v39

    move/from16 v36, v15

    invoke-static/range {v19 .. v36}, Landroid/util/StatsLog;->write(IIIFIIIIIIIIIIIIII)I

    .line 22877
    const/4 v1, 0x1

    if-nez p2, :cond_3

    invoke-virtual/range {p1 .. p1}, Landroid/content/res/Configuration;->getLocales()Landroid/os/LocaleList;

    move-result-object v2

    invoke-virtual {v2}, Landroid/os/LocaleList;->isEmpty()Z

    move-result v2

    if-nez v2, :cond_3

    iget-boolean v2, v0, Landroid/content/res/Configuration;->userSetLocale:Z

    if-eqz v2, :cond_3

    .line 22878
    invoke-virtual/range {p1 .. p1}, Landroid/content/res/Configuration;->getLocales()Landroid/os/LocaleList;

    move-result-object v0

    .line 22879
    nop

    .line 22880
    invoke-virtual {v0}, Landroid/os/LocaleList;->size()I

    move-result v2

    if-le v2, v1, :cond_2

    .line 22881
    move-object/from16 v15, p0

    iget-object v2, v15, Lcom/android/server/am/ActivityManagerService;->mSupportedSystemLocales:[Ljava/lang/String;

    if-nez v2, :cond_1

    .line 22882
    invoke-static {}, Landroid/content/res/Resources;->getSystem()Landroid/content/res/Resources;

    move-result-object v2

    invoke-virtual {v2}, Landroid/content/res/Resources;->getAssets()Landroid/content/res/AssetManager;

    move-result-object v2

    invoke-virtual {v2}, Landroid/content/res/AssetManager;->getLocales()[Ljava/lang/String;

    move-result-object v2

    iput-object v2, v15, Lcom/android/server/am/ActivityManagerService;->mSupportedSystemLocales:[Ljava/lang/String;

    .line 22884
    :cond_1
    iget-object v2, v15, Lcom/android/server/am/ActivityManagerService;->mSupportedSystemLocales:[Ljava/lang/String;

    invoke-virtual {v0, v2}, Landroid/os/LocaleList;->getFirstMatchIndex([Ljava/lang/String;)I

    move-result v2

    const/4 v12, 0x0

    invoke-static {v12, v2}, Ljava/lang/Math;->max(II)I

    move-result v2

    goto :goto_0

    .line 22886
    :cond_2
    const/4 v12, 0x0

    move-object/from16 v15, p0

    move v2, v12

    :goto_0
    const-string/jumbo v3, "persist.sys.locale"

    .line 22887
    invoke-virtual {v0, v2}, Landroid/os/LocaleList;->get(I)Ljava/util/Locale;

    move-result-object v4

    invoke-virtual {v4}, Ljava/util/Locale;->toLanguageTag()Ljava/lang/String;

    move-result-object v4

    .line 22886
    invoke-static {v3, v4}, Landroid/os/SystemProperties;->set(Ljava/lang/String;Ljava/lang/String;)V

    .line 22888
    invoke-static {v0, v2}, Landroid/os/LocaleList;->setDefault(Landroid/os/LocaleList;I)V

    .line 22889
    iget-object v3, v15, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    iget-object v4, v15, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    const/16 v5, 0x2f

    .line 22890
    invoke-virtual {v0, v2}, Landroid/os/LocaleList;->get(I)Ljava/util/Locale;

    move-result-object v0

    .line 22889
    invoke-virtual {v4, v5, v0}, Lcom/android/server/am/ActivityManagerService$MainHandler;->obtainMessage(ILjava/lang/Object;)Landroid/os/Message;

    move-result-object v0

    invoke-virtual {v3, v0}, Lcom/android/server/am/ActivityManagerService$MainHandler;->sendMessage(Landroid/os/Message;)Z

    goto :goto_1

    .line 22893
    :cond_3
    const/4 v12, 0x0

    move-object/from16 v15, p0

    :goto_1
    iget v0, v15, Lcom/android/server/am/ActivityManagerService;->mConfigurationSeq:I

    add-int/2addr v0, v1

    iput v0, v15, Lcom/android/server/am/ActivityManagerService;->mConfigurationSeq:I

    invoke-static {v0, v1}, Ljava/lang/Math;->max(II)I

    move-result v0

    iput v0, v15, Lcom/android/server/am/ActivityManagerService;->mConfigurationSeq:I

    .line 22894
    iget-object v0, v15, Lcom/android/server/am/ActivityManagerService;->mTempConfig:Landroid/content/res/Configuration;

    iget v2, v15, Lcom/android/server/am/ActivityManagerService;->mConfigurationSeq:I

    iput v2, v0, Landroid/content/res/Configuration;->seq:I

    .line 22897
    iget-object v0, v15, Lcom/android/server/am/ActivityManagerService;->mStackSupervisor:Lcom/android/server/am/ActivityStackSupervisor;

    iget-object v2, v15, Lcom/android/server/am/ActivityManagerService;->mTempConfig:Landroid/content/res/Configuration;

    invoke-virtual {v0, v2}, Lcom/android/server/am/ActivityStackSupervisor;->onConfigurationChanged(Landroid/content/res/Configuration;)V

    .line 22899
    const-string v0, "ActivityManager"

    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    const-string v3, "Config changes="

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move/from16 v13, v37

    invoke-static {v13}, Ljava/lang/Integer;->toHexString(I)Ljava/lang/String;

    move-result-object v3

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v3, " "

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget-object v3, v15, Lcom/android/server/am/ActivityManagerService;->mTempConfig:Landroid/content/res/Configuration;

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v2

    invoke-static {v0, v2}, Landroid/util/Slog;->i(Ljava/lang/String;Ljava/lang/String;)I

    .line 22901
    iget-object v0, v15, Lcom/android/server/am/ActivityManagerService;->mUsageStatsService:Landroid/app/usage/UsageStatsManagerInternal;

    iget-object v2, v15, Lcom/android/server/am/ActivityManagerService;->mTempConfig:Landroid/content/res/Configuration;

    iget-object v3, v15, Lcom/android/server/am/ActivityManagerService;->mUserController:Lcom/android/server/am/UserController;

    .line 22902
    invoke-virtual {v3}, Lcom/android/server/am/UserController;->getCurrentUserId()I

    move-result v3

    .line 22901
    invoke-virtual {v0, v2, v3}, Landroid/app/usage/UsageStatsManagerInternal;->reportConfigurationChange(Landroid/content/res/Configuration;I)V

    .line 22905
    iget-object v0, v15, Lcom/android/server/am/ActivityManagerService;->mTempConfig:Landroid/content/res/Configuration;

    invoke-direct {v15, v0}, Lcom/android/server/am/ActivityManagerService;->updateShouldShowDialogsLocked(Landroid/content/res/Configuration;)V

    .line 22907
    invoke-static {}, Lcom/android/server/AttributeCache;->instance()Lcom/android/server/AttributeCache;

    move-result-object v0

    .line 22908
    if-eqz v0, :cond_4

    .line 22909
    iget-object v2, v15, Lcom/android/server/am/ActivityManagerService;->mTempConfig:Landroid/content/res/Configuration;

    invoke-virtual {v0, v2}, Lcom/android/server/AttributeCache;->updateConfiguration(Landroid/content/res/Configuration;)V

    .line 22916
    :cond_4
    iget-object v0, v15, Lcom/android/server/am/ActivityManagerService;->mSystemThread:Landroid/app/ActivityThread;

    iget-object v2, v15, Lcom/android/server/am/ActivityManagerService;->mTempConfig:Landroid/content/res/Configuration;

    invoke-virtual {v0, v2}, Landroid/app/ActivityThread;->applyConfigurationToResources(Landroid/content/res/Configuration;)V

    .line 22920
    new-instance v2, Landroid/content/res/Configuration;

    iget-object v0, v15, Lcom/android/server/am/ActivityManagerService;->mTempConfig:Landroid/content/res/Configuration;

    invoke-direct {v2, v0}, Landroid/content/res/Configuration;-><init>(Landroid/content/res/Configuration;)V

    .line 22921
    if-eqz p3, :cond_5

    invoke-static {v13}, Landroid/provider/Settings$System;->hasInterestingConfigurationChanges(I)Z

    move-result v0

    if-eqz v0, :cond_5

    .line 22922
    iget-object v0, v15, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    const/4 v3, 0x4

    invoke-virtual {v0, v3}, Lcom/android/server/am/ActivityManagerService$MainHandler;->obtainMessage(I)Landroid/os/Message;

    move-result-object v0

    .line 22923
    iput-object v2, v0, Landroid/os/Message;->obj:Ljava/lang/Object;

    .line 22924
    move/from16 v3, p4

    iput v3, v0, Landroid/os/Message;->arg1:I

    .line 22925
    iget-object v3, v15, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    invoke-virtual {v3, v0}, Lcom/android/server/am/ActivityManagerService$MainHandler;->sendMessage(Landroid/os/Message;)Z

    .line 22928
    :cond_5
    iget-object v0, v15, Lcom/android/server/am/ActivityManagerService;->mLruProcesses:Ljava/util/ArrayList;

    invoke-virtual {v0}, Ljava/util/ArrayList;->size()I

    move-result v0

    sub-int/2addr v0, v1

    move v1, v0

    :goto_2
    if-ltz v1, :cond_7

    .line 22929
    iget-object v0, v15, Lcom/android/server/am/ActivityManagerService;->mLruProcesses:Ljava/util/ArrayList;

    invoke-virtual {v0, v1}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Lcom/android/server/am/ProcessRecord;

    .line 22931
    :try_start_0
    iget-object v3, v0, Lcom/android/server/am/ProcessRecord;->thread:Landroid/app/IApplicationThread;

    if-eqz v3, :cond_6

    .line 22934
    iget-object v3, v15, Lcom/android/server/am/ActivityManagerService;->mLifecycleManager:Lcom/android/server/am/ClientLifecycleManager;

    iget-object v0, v0, Lcom/android/server/am/ProcessRecord;->thread:Landroid/app/IApplicationThread;

    .line 22935
    invoke-static {v2}, Landroid/app/servertransaction/ConfigurationChangeItem;->obtain(Landroid/content/res/Configuration;)Landroid/app/servertransaction/ConfigurationChangeItem;

    move-result-object v4

    .line 22934
    invoke-virtual {v3, v0, v4}, Lcom/android/server/am/ClientLifecycleManager;->scheduleTransaction(Landroid/app/IApplicationThread;Landroid/app/servertransaction/ClientTransactionItem;)V
    :try_end_0
    .catch Ljava/lang/Exception; {:try_start_0 .. :try_end_0} :catch_0

    .line 22939
    :cond_6
    goto :goto_3

    .line 22937
    :catch_0
    move-exception v0

    .line 22938
    const-string v3, "ActivityManager"

    const-string v4, "Failed to schedule configuration change"

    invoke-static {v3, v4, v0}, Landroid/util/Slog;->e(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I

    .line 22928
    :goto_3
    add-int/lit8 v1, v1, -0x1

    goto :goto_2

    .line 22942
    :cond_7
    new-instance v4, Landroid/content/Intent;

    const-string v0, "android.intent.action.CONFIGURATION_CHANGED"

    invoke-direct {v4, v0}, Landroid/content/Intent;-><init>(Ljava/lang/String;)V

    .line 22943
    const/high16 v0, 0x70200000

    invoke-virtual {v4, v0}, Landroid/content/Intent;->addFlags(I)Landroid/content/Intent;

    .line 22946
    const/4 v2, 0x0

    const/4 v3, 0x0

    const/4 v5, 0x0

    const/4 v6, 0x0

    const/4 v7, 0x0

    const/4 v8, 0x0

    const/4 v9, 0x0

    const/4 v10, 0x0

    const/4 v11, -0x1

    const/4 v0, 0x0

    const/4 v14, 0x0

    const/16 v16, 0x0

    sget v17, Lcom/android/server/am/ActivityManagerService;->MY_PID:I

    const/16 v19, 0x3e8

    const/16 v20, -0x1

    move-object v1, v15

    move-object v12, v0

    move/from16 v40, v13

    move v13, v14

    move/from16 v14, v16

    move/from16 v15, v17

    move/from16 v16, v19

    move/from16 v17, v20

    invoke-virtual/range {v1 .. v17}, Lcom/android/server/am/ActivityManagerService;->broadcastIntentLocked(Lcom/android/server/am/ProcessRecord;Ljava/lang/String;Landroid/content/Intent;Ljava/lang/String;Landroid/content/IIntentReceiver;ILjava/lang/String;Landroid/os/Bundle;[Ljava/lang/String;ILandroid/os/Bundle;ZZIII)I

    .line 22949
    move/from16 v15, v40

    and-int/lit8 v0, v15, 0x4

    if-eqz v0, :cond_a

    .line 22950
    new-instance v4, Landroid/content/Intent;

    const-string v0, "android.intent.action.LOCALE_CHANGED"

    invoke-direct {v4, v0}, Landroid/content/Intent;-><init>(Ljava/lang/String;)V

    .line 22951
    const/high16 v0, 0x11200000

    invoke-virtual {v4, v0}, Landroid/content/Intent;->addFlags(I)Landroid/content/Intent;

    .line 22954
    if-nez p2, :cond_8

    move-object/from16 v14, p0

    iget-boolean v0, v14, Lcom/android/server/am/ActivityManagerService;->mProcessesReady:Z

    if-nez v0, :cond_9

    goto :goto_4

    .line 22955
    :cond_8
    move-object/from16 v14, p0

    :goto_4
    const/high16 v0, 0x40000000    # 2.0f

    invoke-virtual {v4, v0}, Landroid/content/Intent;->addFlags(I)Landroid/content/Intent;

    .line 22957
    :cond_9
    const/4 v2, 0x0

    const/4 v3, 0x0

    const/4 v5, 0x0

    const/4 v6, 0x0

    const/4 v7, 0x0

    const/4 v8, 0x0

    const/4 v9, 0x0

    const/4 v10, 0x0

    const/4 v11, -0x1

    const/4 v12, 0x0

    const/4 v13, 0x0

    const/4 v0, 0x0

    sget v16, Lcom/android/server/am/ActivityManagerService;->MY_PID:I

    const/16 v17, 0x3e8

    const/16 v19, -0x1

    move-object v1, v14

    move v14, v0

    move/from16 v41, v15

    move/from16 v15, v16

    move/from16 v16, v17

    move/from16 v17, v19

    invoke-virtual/range {v1 .. v17}, Lcom/android/server/am/ActivityManagerService;->broadcastIntentLocked(Lcom/android/server/am/ProcessRecord;Ljava/lang/String;Landroid/content/Intent;Ljava/lang/String;Landroid/content/IIntentReceiver;ILjava/lang/String;Landroid/os/Bundle;[Ljava/lang/String;ILandroid/os/Bundle;ZZIII)I

    goto :goto_5

    .line 22964
    :cond_a
    move/from16 v41, v15

    :goto_5
    if-nez p2, :cond_c

    move/from16 v15, v41

    invoke-static {v15}, Lcom/android/server/am/ActivityManagerService;->isSplitConfigurationChange(I)Z

    move-result v0

    if-eqz v0, :cond_b

    .line 22965
    new-instance v4, Landroid/content/Intent;

    const-string v0, "android.intent.action.SPLIT_CONFIGURATION_CHANGED"

    invoke-direct {v4, v0}, Landroid/content/Intent;-><init>(Ljava/lang/String;)V

    .line 22966
    const/high16 v0, 0x21000000

    invoke-virtual {v4, v0}, Landroid/content/Intent;->addFlags(I)Landroid/content/Intent;

    .line 22970
    const-string v0, "android.permission.INSTALL_PACKAGES"

    filled-new-array {v0}, [Ljava/lang/String;

    move-result-object v10

    .line 22971
    const/4 v2, 0x0

    const/4 v3, 0x0

    const/4 v5, 0x0

    const/4 v6, 0x0

    const/4 v7, 0x0

    const/4 v8, 0x0

    const/4 v9, 0x0

    const/4 v11, -0x1

    const/4 v12, 0x0

    const/4 v13, 0x0

    const/4 v14, 0x0

    sget v0, Lcom/android/server/am/ActivityManagerService;->MY_PID:I

    const/16 v16, 0x3e8

    const/16 v17, -0x1

    move-object/from16 v1, p0

    move/from16 v18, v15

    move v15, v0

    invoke-virtual/range {v1 .. v17}, Lcom/android/server/am/ActivityManagerService;->broadcastIntentLocked(Lcom/android/server/am/ProcessRecord;Ljava/lang/String;Landroid/content/Intent;Ljava/lang/String;Landroid/content/IIntentReceiver;ILjava/lang/String;Landroid/os/Bundle;[Ljava/lang/String;ILandroid/os/Bundle;ZZIII)I

    goto :goto_6

    .line 22977
    :cond_b
    move/from16 v18, v15

    goto :goto_6

    :cond_c
    move/from16 v18, v41

    :goto_6
    move-object/from16 v1, p0

    iget-object v0, v1, Lcom/android/server/am/ActivityManagerService;->mStackSupervisor:Lcom/android/server/am/ActivityStackSupervisor;

    invoke-virtual {v0}, Lcom/android/server/am/ActivityStackSupervisor;->getConfiguration()Landroid/content/res/Configuration;

    move-result-object v0

    move/from16 v2, p5

    const/4 v3, 0x0

    invoke-direct {v1, v0, v2, v3}, Lcom/android/server/am/ActivityManagerService;->performDisplayOverrideConfigUpdate(Landroid/content/res/Configuration;ZI)I

    .line 22980
    return v18
.end method

.method private updateLruProcessInternalLocked(Lcom/android/server/am/ProcessRecord;JILjava/lang/String;Ljava/lang/Object;Lcom/android/server/am/ProcessRecord;)I
    .locals 1

    .line 3829
    iput-wide p2, p1, Lcom/android/server/am/ProcessRecord;->lastActivityTime:J

    .line 3831
    iget-object p2, p1, Lcom/android/server/am/ProcessRecord;->activities:Ljava/util/ArrayList;

    invoke-virtual {p2}, Ljava/util/ArrayList;->size()I

    move-result p2

    if-gtz p2, :cond_5

    iget-object p2, p1, Lcom/android/server/am/ProcessRecord;->recentTasks:Ljava/util/ArrayList;

    invoke-virtual {p2}, Ljava/util/ArrayList;->size()I

    move-result p2

    if-lez p2, :cond_0

    goto :goto_0

    .line 3836
    :cond_0
    iget-object p2, p0, Lcom/android/server/am/ActivityManagerService;->mLruProcesses:Ljava/util/ArrayList;

    invoke-virtual {p2, p1}, Ljava/util/ArrayList;->lastIndexOf(Ljava/lang/Object;)I

    move-result p2

    .line 3837
    if-gez p2, :cond_1

    .line 3838
    const-string p2, "ActivityManager"

    new-instance p3, Ljava/lang/StringBuilder;

    invoke-direct {p3}, Ljava/lang/StringBuilder;-><init>()V

    const-string v0, "Adding dependent process "

    invoke-virtual {p3, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {p3, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    const-string p1, " not on LRU list: "

    invoke-virtual {p3, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {p3, p5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string p1, " "

    invoke-virtual {p3, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {p3, p6}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    const-string p1, " from "

    invoke-virtual {p3, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {p3, p7}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    invoke-virtual {p3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object p1

    invoke-static {p2, p1}, Landroid/util/Slog;->wtf(Ljava/lang/String;Ljava/lang/String;)I

    .line 3840
    return p4

    .line 3843
    :cond_1
    if-lt p2, p4, :cond_2

    .line 3846
    return p4

    .line 3849
    :cond_2
    iget p3, p0, Lcom/android/server/am/ActivityManagerService;->mLruProcessActivityStart:I

    if-lt p2, p3, :cond_3

    .line 3851
    return p4

    .line 3854
    :cond_3
    iget-object p3, p0, Lcom/android/server/am/ActivityManagerService;->mLruProcesses:Ljava/util/ArrayList;

    invoke-virtual {p3, p2}, Ljava/util/ArrayList;->remove(I)Ljava/lang/Object;

    .line 3855
    if-lez p4, :cond_4

    .line 3856
    add-int/lit8 p4, p4, -0x1

    .line 3860
    :cond_4
    iget-object p2, p0, Lcom/android/server/am/ActivityManagerService;->mLruProcesses:Ljava/util/ArrayList;

    invoke-virtual {p2, p4, p1}, Ljava/util/ArrayList;->add(ILjava/lang/Object;)V

    .line 3861
    return p4

    .line 3833
    :cond_5
    :goto_0
    return p4
.end method

.method private final updateOomAdjLocked(Lcom/android/server/am/ProcessRecord;ILcom/android/server/am/ProcessRecord;ZJ)Z
    .locals 7

    .line 25180
    iget-object v0, p1, Lcom/android/server/am/ProcessRecord;->thread:Landroid/app/IApplicationThread;

    if-nez v0, :cond_0

    .line 25181
    const/4 p1, 0x0

    return p1

    .line 25184
    :cond_0
    invoke-direct/range {p0 .. p6}, Lcom/android/server/am/ActivityManagerService;->computeOomAdjLocked(Lcom/android/server/am/ProcessRecord;ILcom/android/server/am/ProcessRecord;ZJ)Z

    .line 25186
    invoke-static {}, Landroid/os/SystemClock;->elapsedRealtime()J

    move-result-wide v5

    move-object v0, p0

    move-object v1, p1

    move v2, p4

    move-wide v3, p5

    invoke-direct/range {v0 .. v6}, Lcom/android/server/am/ActivityManagerService;->applyOomAdjLocked(Lcom/android/server/am/ProcessRecord;ZJJ)Z

    move-result p1

    return p1
.end method

.method private updatePersistentConfigurationLocked(Landroid/content/res/Configuration;I)V
    .locals 9

    .line 22689
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v0

    .line 22691
    const/4 v4, 0x0

    const/4 v5, 0x0

    const/4 v6, 0x1

    const/4 v8, 0x0

    move-object v2, p0

    move-object v3, p1

    move v7, p2

    :try_start_0
    invoke-direct/range {v2 .. v8}, Lcom/android/server/am/ActivityManagerService;->updateConfigurationLocked(Landroid/content/res/Configuration;Lcom/android/server/am/ActivityRecord;ZZIZ)Z
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 22693
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 22694
    nop

    .line 22695
    return-void

    .line 22693
    :catchall_0
    move-exception p1

    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    throw p1
.end method

.method private updateResumedAppTrace(Lcom/android/server/am/ActivityRecord;)V
    .locals 4

    .line 3689
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mTracedResumedActivity:Lcom/android/server/am/ActivityRecord;

    const/4 v1, 0x0

    const-wide/16 v2, 0x40

    if-eqz v0, :cond_0

    .line 3690
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mTracedResumedActivity:Lcom/android/server/am/ActivityRecord;

    iget-object v0, v0, Lcom/android/server/am/ActivityRecord;->packageName:Ljava/lang/String;

    .line 3691
    invoke-direct {p0, v0}, Lcom/android/server/am/ActivityManagerService;->constructResumedTraceName(Ljava/lang/String;)Ljava/lang/String;

    move-result-object v0

    .line 3690
    invoke-static {v2, v3, v0, v1}, Landroid/os/Trace;->asyncTraceEnd(JLjava/lang/String;I)V

    .line 3693
    :cond_0
    if-eqz p1, :cond_1

    .line 3694
    iget-object v0, p1, Lcom/android/server/am/ActivityRecord;->packageName:Ljava/lang/String;

    .line 3695
    invoke-direct {p0, v0}, Lcom/android/server/am/ActivityManagerService;->constructResumedTraceName(Ljava/lang/String;)Ljava/lang/String;

    move-result-object v0

    .line 3694
    invoke-static {v2, v3, v0, v1}, Landroid/os/Trace;->asyncTraceBegin(JLjava/lang/String;I)V

    .line 3697
    :cond_1
    iput-object p1, p0, Lcom/android/server/am/ActivityManagerService;->mTracedResumedActivity:Lcom/android/server/am/ActivityRecord;

    .line 3698
    return-void
.end method

.method private updateShouldShowDialogsLocked(Landroid/content/res/Configuration;)V
    .locals 5

    .line 23161
    iget v0, p1, Landroid/content/res/Configuration;->keyboard:I

    const/4 v1, 0x0

    const/4 v2, 0x1

    if-ne v0, v2, :cond_1

    iget v0, p1, Landroid/content/res/Configuration;->touchscreen:I

    if-ne v0, v2, :cond_1

    iget v0, p1, Landroid/content/res/Configuration;->navigation:I

    if-eq v0, v2, :cond_0

    goto :goto_0

    .line 23164
    :cond_0
    move v0, v1

    goto :goto_1

    .line 23161
    :cond_1
    :goto_0
    nop

    .line 23164
    move v0, v2

    :goto_1
    iget p1, p1, Landroid/content/res/Configuration;->uiMode:I

    and-int/lit8 p1, p1, 0xf

    .line 23165
    const/4 v3, 0x3

    if-eq p1, v3, :cond_3

    const/4 v3, 0x6

    if-ne p1, v3, :cond_2

    sget-boolean v3, Landroid/os/Build;->IS_USER:Z

    if-nez v3, :cond_3

    :cond_2
    const/4 v3, 0x4

    if-eq p1, v3, :cond_3

    const/4 v3, 0x7

    if-eq p1, v3, :cond_3

    .line 23169
    move p1, v2

    goto :goto_2

    .line 23165
    :cond_3
    nop

    .line 23169
    move p1, v1

    :goto_2
    iget-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mContext:Landroid/content/Context;

    invoke-virtual {v3}, Landroid/content/Context;->getContentResolver()Landroid/content/ContentResolver;

    move-result-object v3

    const-string v4, "hide_error_dialogs"

    invoke-static {v3, v4, v1}, Landroid/provider/Settings$Global;->getInt(Landroid/content/ContentResolver;Ljava/lang/String;I)I

    move-result v3

    if-eqz v3, :cond_4

    .line 23171
    move v3, v2

    goto :goto_3

    .line 23169
    :cond_4
    nop

    .line 23171
    move v3, v1

    :goto_3
    if-eqz v0, :cond_5

    if-eqz p1, :cond_5

    if-nez v3, :cond_5

    move v1, v2

    nop

    :cond_5
    iput-boolean v1, p0, Lcom/android/server/am/ActivityManagerService;->mShowDialogs:Z

    .line 23172
    return-void
.end method

.method private writeActivitiesToProtoLocked(Landroid/util/proto/ProtoOutputStream;)V
    .locals 3

    .line 16804
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mStackSupervisor:Lcom/android/server/am/ActivityStackSupervisor;

    const-wide v1, 0x10b00000001L

    invoke-virtual {v0, p1, v1, v2}, Lcom/android/server/am/ActivityStackSupervisor;->writeToProto(Landroid/util/proto/ProtoOutputStream;J)V

    .line 16805
    return-void
.end method

.method private writeGrantedUriPermissions()V
    .locals 8

    .line 10499
    invoke-static {}, Landroid/os/SystemClock;->uptimeMillis()J

    move-result-wide v0

    .line 10502
    invoke-static {}, Lcom/google/android/collect/Lists;->newArrayList()Ljava/util/ArrayList;

    move-result-object v2

    .line 10503
    monitor-enter p0

    :try_start_0
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    .line 10504
    iget-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mGrantedUriPermissions:Landroid/util/SparseArray;

    invoke-virtual {v3}, Landroid/util/SparseArray;->size()I

    move-result v3

    .line 10505
    const/4 v4, 0x0

    :goto_0
    if-ge v4, v3, :cond_2

    .line 10506
    iget-object v5, p0, Lcom/android/server/am/ActivityManagerService;->mGrantedUriPermissions:Landroid/util/SparseArray;

    invoke-virtual {v5, v4}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;

    move-result-object v5

    check-cast v5, Landroid/util/ArrayMap;

    .line 10507
    invoke-virtual {v5}, Landroid/util/ArrayMap;->values()Ljava/util/Collection;

    move-result-object v5

    invoke-interface {v5}, Ljava/util/Collection;->iterator()Ljava/util/Iterator;

    move-result-object v5

    :goto_1
    invoke-interface {v5}, Ljava/util/Iterator;->hasNext()Z

    move-result v6

    if-eqz v6, :cond_1

    invoke-interface {v5}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v6

    check-cast v6, Lcom/android/server/am/UriPermission;

    .line 10508
    iget v7, v6, Lcom/android/server/am/UriPermission;->persistedModeFlags:I

    if-eqz v7, :cond_0

    .line 10509
    invoke-virtual {v6}, Lcom/android/server/am/UriPermission;->snapshot()Lcom/android/server/am/UriPermission$Snapshot;

    move-result-object v6

    invoke-virtual {v2, v6}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    .line 10511
    :cond_0
    goto :goto_1

    .line 10505
    :cond_1
    add-int/lit8 v4, v4, 0x1

    goto :goto_0

    .line 10513
    :cond_2
    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    .line 10515
    nop

    .line 10517
    const/4 v3, 0x0

    :try_start_1
    iget-object v4, p0, Lcom/android/server/am/ActivityManagerService;->mGrantFile:Landroid/util/AtomicFile;

    invoke-virtual {v4, v0, v1}, Landroid/util/AtomicFile;->startWrite(J)Ljava/io/FileOutputStream;

    move-result-object v0
    :try_end_1
    .catch Ljava/io/IOException; {:try_start_1 .. :try_end_1} :catch_1

    .line 10519
    :try_start_2
    new-instance v1, Lcom/android/internal/util/FastXmlSerializer;

    invoke-direct {v1}, Lcom/android/internal/util/FastXmlSerializer;-><init>()V

    .line 10520
    sget-object v4, Ljava/nio/charset/StandardCharsets;->UTF_8:Ljava/nio/charset/Charset;

    invoke-virtual {v4}, Ljava/nio/charset/Charset;->name()Ljava/lang/String;

    move-result-object v4

    invoke-interface {v1, v0, v4}, Lorg/xmlpull/v1/XmlSerializer;->setOutput(Ljava/io/OutputStream;Ljava/lang/String;)V

    .line 10521
    const/4 v4, 0x1

    invoke-static {v4}, Ljava/lang/Boolean;->valueOf(Z)Ljava/lang/Boolean;

    move-result-object v4

    invoke-interface {v1, v3, v4}, Lorg/xmlpull/v1/XmlSerializer;->startDocument(Ljava/lang/String;Ljava/lang/Boolean;)V

    .line 10522
    const-string/jumbo v4, "uri-grants"

    invoke-interface {v1, v3, v4}, Lorg/xmlpull/v1/XmlSerializer;->startTag(Ljava/lang/String;Ljava/lang/String;)Lorg/xmlpull/v1/XmlSerializer;

    .line 10523
    invoke-virtual {v2}, Ljava/util/ArrayList;->iterator()Ljava/util/Iterator;

    move-result-object v2

    :goto_2
    invoke-interface {v2}, Ljava/util/Iterator;->hasNext()Z

    move-result v4

    if-eqz v4, :cond_3

    invoke-interface {v2}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v4

    check-cast v4, Lcom/android/server/am/UriPermission$Snapshot;

    .line 10524
    const-string/jumbo v5, "uri-grant"

    invoke-interface {v1, v3, v5}, Lorg/xmlpull/v1/XmlSerializer;->startTag(Ljava/lang/String;Ljava/lang/String;)Lorg/xmlpull/v1/XmlSerializer;

    .line 10525
    const-string/jumbo v5, "sourceUserId"

    iget-object v6, v4, Lcom/android/server/am/UriPermission$Snapshot;->uri:Lcom/android/server/am/ActivityManagerService$GrantUri;

    iget v6, v6, Lcom/android/server/am/ActivityManagerService$GrantUri;->sourceUserId:I

    invoke-static {v1, v5, v6}, Lcom/android/internal/util/XmlUtils;->writeIntAttribute(Lorg/xmlpull/v1/XmlSerializer;Ljava/lang/String;I)V

    .line 10526
    const-string/jumbo v5, "targetUserId"

    iget v6, v4, Lcom/android/server/am/UriPermission$Snapshot;->targetUserId:I

    invoke-static {v1, v5, v6}, Lcom/android/internal/util/XmlUtils;->writeIntAttribute(Lorg/xmlpull/v1/XmlSerializer;Ljava/lang/String;I)V

    .line 10527
    const-string/jumbo v5, "sourcePkg"

    iget-object v6, v4, Lcom/android/server/am/UriPermission$Snapshot;->sourcePkg:Ljava/lang/String;

    invoke-interface {v1, v3, v5, v6}, Lorg/xmlpull/v1/XmlSerializer;->attribute(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/xmlpull/v1/XmlSerializer;

    .line 10528
    const-string/jumbo v5, "targetPkg"

    iget-object v6, v4, Lcom/android/server/am/UriPermission$Snapshot;->targetPkg:Ljava/lang/String;

    invoke-interface {v1, v3, v5, v6}, Lorg/xmlpull/v1/XmlSerializer;->attribute(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/xmlpull/v1/XmlSerializer;

    .line 10529
    const-string/jumbo v5, "uri"

    iget-object v6, v4, Lcom/android/server/am/UriPermission$Snapshot;->uri:Lcom/android/server/am/ActivityManagerService$GrantUri;

    iget-object v6, v6, Lcom/android/server/am/ActivityManagerService$GrantUri;->uri:Landroid/net/Uri;

    invoke-static {v6}, Ljava/lang/String;->valueOf(Ljava/lang/Object;)Ljava/lang/String;

    move-result-object v6

    invoke-interface {v1, v3, v5, v6}, Lorg/xmlpull/v1/XmlSerializer;->attribute(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/xmlpull/v1/XmlSerializer;

    .line 10530
    const-string/jumbo v5, "prefix"

    iget-object v6, v4, Lcom/android/server/am/UriPermission$Snapshot;->uri:Lcom/android/server/am/ActivityManagerService$GrantUri;

    iget-boolean v6, v6, Lcom/android/server/am/ActivityManagerService$GrantUri;->prefix:Z

    invoke-static {v1, v5, v6}, Lcom/android/internal/util/XmlUtils;->writeBooleanAttribute(Lorg/xmlpull/v1/XmlSerializer;Ljava/lang/String;Z)V

    .line 10531
    const-string v5, "modeFlags"

    iget v6, v4, Lcom/android/server/am/UriPermission$Snapshot;->persistedModeFlags:I

    invoke-static {v1, v5, v6}, Lcom/android/internal/util/XmlUtils;->writeIntAttribute(Lorg/xmlpull/v1/XmlSerializer;Ljava/lang/String;I)V

    .line 10532
    const-string v5, "createdTime"

    iget-wide v6, v4, Lcom/android/server/am/UriPermission$Snapshot;->persistedCreateTime:J

    invoke-static {v1, v5, v6, v7}, Lcom/android/internal/util/XmlUtils;->writeLongAttribute(Lorg/xmlpull/v1/XmlSerializer;Ljava/lang/String;J)V

    .line 10533
    const-string/jumbo v4, "uri-grant"

    invoke-interface {v1, v3, v4}, Lorg/xmlpull/v1/XmlSerializer;->endTag(Ljava/lang/String;Ljava/lang/String;)Lorg/xmlpull/v1/XmlSerializer;

    .line 10534
    goto :goto_2

    .line 10535
    :cond_3
    const-string/jumbo v2, "uri-grants"

    invoke-interface {v1, v3, v2}, Lorg/xmlpull/v1/XmlSerializer;->endTag(Ljava/lang/String;Ljava/lang/String;)Lorg/xmlpull/v1/XmlSerializer;

    .line 10536
    invoke-interface {v1}, Lorg/xmlpull/v1/XmlSerializer;->endDocument()V

    .line 10538
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mGrantFile:Landroid/util/AtomicFile;

    invoke-virtual {v1, v0}, Landroid/util/AtomicFile;->finishWrite(Ljava/io/FileOutputStream;)V
    :try_end_2
    .catch Ljava/io/IOException; {:try_start_2 .. :try_end_2} :catch_0

    .line 10543
    goto :goto_4

    .line 10539
    :catch_0
    move-exception v1

    goto :goto_3

    :catch_1
    move-exception v0

    move-object v0, v3

    .line 10540
    :goto_3
    if-eqz v0, :cond_4

    .line 10541
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mGrantFile:Landroid/util/AtomicFile;

    invoke-virtual {v1, v0}, Landroid/util/AtomicFile;->failWrite(Ljava/io/FileOutputStream;)V

    .line 10544
    :cond_4
    :goto_4
    return-void

    .line 10513
    :catchall_0
    move-exception v0

    :try_start_3
    monitor-exit p0
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw v0
.end method

.method private static final writeProcessOomListToProto(Landroid/util/proto/ProtoOutputStream;JLcom/android/server/am/ActivityManagerService;Ljava/util/List;ZLjava/lang/String;)Z
    .locals 23
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "(",
            "Landroid/util/proto/ProtoOutputStream;",
            "J",
            "Lcom/android/server/am/ActivityManagerService;",
            "Ljava/util/List<",
            "Lcom/android/server/am/ProcessRecord;",
            ">;Z",
            "Ljava/lang/String;",
            ")Z"
        }
    .end annotation

    move-object/from16 v0, p0

    .line 18484
    move-object/from16 v1, p4

    move-object/from16 v2, p6

    invoke-static {v1, v2}, Lcom/android/server/am/ActivityManagerService;->sortProcessOomList(Ljava/util/List;Ljava/lang/String;)Ljava/util/ArrayList;

    move-result-object v2

    .line 18485
    invoke-virtual {v2}, Ljava/util/ArrayList;->isEmpty()Z

    move-result v3

    const/4 v4, 0x0

    if-eqz v3, :cond_0

    return v4

    .line 18487
    :cond_0
    invoke-static {}, Landroid/os/SystemClock;->uptimeMillis()J

    move-result-wide v5

    .line 18489
    invoke-virtual {v2}, Ljava/util/ArrayList;->size()I

    move-result v3

    const/4 v7, 0x1

    sub-int/2addr v3, v7

    :goto_0
    if-ltz v3, :cond_c

    .line 18490
    invoke-virtual {v2, v3}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v8

    check-cast v8, Landroid/util/Pair;

    iget-object v8, v8, Landroid/util/Pair;->first:Ljava/lang/Object;

    check-cast v8, Lcom/android/server/am/ProcessRecord;

    .line 18491
    invoke-virtual/range {p0 .. p2}, Landroid/util/proto/ProtoOutputStream;->start(J)J

    move-result-wide v9

    .line 18492
    iget v11, v8, Lcom/android/server/am/ProcessRecord;->setAdj:I

    invoke-static {v11}, Lcom/android/server/am/ProcessList;->makeOomAdjString(I)Ljava/lang/String;

    move-result-object v11

    .line 18493
    const-wide v12, 0x10800000001L

    iget-boolean v14, v8, Lcom/android/server/am/ProcessRecord;->persistent:Z

    invoke-virtual {v0, v12, v13, v14}, Landroid/util/proto/ProtoOutputStream;->write(JZ)V

    .line 18494
    invoke-interface/range {p4 .. p4}, Ljava/util/List;->size()I

    move-result v12

    sub-int/2addr v12, v7

    invoke-virtual {v2, v3}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v13

    check-cast v13, Landroid/util/Pair;

    iget-object v13, v13, Landroid/util/Pair;->second:Ljava/lang/Object;

    check-cast v13, Ljava/lang/Integer;

    invoke-virtual {v13}, Ljava/lang/Integer;->intValue()I

    move-result v13

    sub-int/2addr v12, v13

    const-wide v13, 0x10500000002L

    invoke-virtual {v0, v13, v14, v12}, Landroid/util/proto/ProtoOutputStream;->write(JI)V

    .line 18495
    move-wide/from16 v16, v5

    const-wide v4, 0x10900000003L

    invoke-virtual {v0, v4, v5, v11}, Landroid/util/proto/ProtoOutputStream;->write(JLjava/lang/String;)V

    .line 18496
    nop

    .line 18497
    iget v4, v8, Lcom/android/server/am/ProcessRecord;->setSchedGroup:I

    const/4 v5, -0x1

    if-eqz v4, :cond_1

    packed-switch v4, :pswitch_data_0

    .line 18511
    move v4, v5

    goto :goto_1

    .line 18508
    :pswitch_0
    const/4 v4, 0x3

    goto :goto_1

    .line 18505
    :pswitch_1
    const/4 v4, 0x2

    .line 18506
    goto :goto_1

    .line 18502
    :pswitch_2
    nop

    .line 18503
    nop

    .line 18511
    move v4, v7

    goto :goto_1

    .line 18499
    :cond_1
    nop

    .line 18500
    nop

    .line 18511
    const/4 v4, 0x0

    :goto_1
    if-eq v4, v5, :cond_2

    .line 18512
    const-wide v5, 0x10e00000004L

    invoke-virtual {v0, v5, v6, v4}, Landroid/util/proto/ProtoOutputStream;->write(JI)V

    .line 18514
    :cond_2
    iget-boolean v4, v8, Lcom/android/server/am/ProcessRecord;->foregroundActivities:Z

    if-eqz v4, :cond_3

    .line 18515
    const-wide v4, 0x10800000005L

    invoke-virtual {v0, v4, v5, v7}, Landroid/util/proto/ProtoOutputStream;->write(JZ)V

    goto :goto_2

    .line 18516
    :cond_3
    iget-boolean v4, v8, Lcom/android/server/am/ProcessRecord;->foregroundServices:Z

    if-eqz v4, :cond_4

    .line 18517
    const-wide v4, 0x10800000006L

    invoke-virtual {v0, v4, v5, v7}, Landroid/util/proto/ProtoOutputStream;->write(JZ)V

    .line 18519
    :cond_4
    :goto_2
    iget v4, v8, Lcom/android/server/am/ProcessRecord;->curProcState:I

    invoke-static {v4}, Lcom/android/server/am/ProcessList;->makeProcStateProtoEnum(I)I

    move-result v4

    const-wide v5, 0x10e00000007L

    invoke-virtual {v0, v5, v6, v4}, Landroid/util/proto/ProtoOutputStream;->write(JI)V

    .line 18520
    const-wide v11, 0x10500000008L

    iget v4, v8, Lcom/android/server/am/ProcessRecord;->trimMemoryLevel:I

    invoke-virtual {v0, v11, v12, v4}, Landroid/util/proto/ProtoOutputStream;->write(JI)V

    .line 18521
    const-wide v11, 0x10b00000009L

    invoke-virtual {v8, v0, v11, v12}, Lcom/android/server/am/ProcessRecord;->writeToProto(Landroid/util/proto/ProtoOutputStream;J)V

    .line 18522
    iget-object v4, v8, Lcom/android/server/am/ProcessRecord;->adjType:Ljava/lang/String;

    const-wide v11, 0x1090000000aL

    invoke-virtual {v0, v11, v12, v4}, Landroid/util/proto/ProtoOutputStream;->write(JLjava/lang/String;)V

    .line 18523
    iget-object v4, v8, Lcom/android/server/am/ProcessRecord;->adjSource:Ljava/lang/Object;

    if-nez v4, :cond_5

    iget-object v4, v8, Lcom/android/server/am/ProcessRecord;->adjTarget:Ljava/lang/Object;

    if-eqz v4, :cond_9

    .line 18524
    :cond_5
    iget-object v4, v8, Lcom/android/server/am/ProcessRecord;->adjTarget:Ljava/lang/Object;

    instance-of v4, v4, Landroid/content/ComponentName;

    if-eqz v4, :cond_6

    .line 18525
    iget-object v4, v8, Lcom/android/server/am/ProcessRecord;->adjTarget:Ljava/lang/Object;

    check-cast v4, Landroid/content/ComponentName;

    .line 18526
    const-wide v11, 0x10b0000000bL

    invoke-virtual {v4, v0, v11, v12}, Landroid/content/ComponentName;->writeToProto(Landroid/util/proto/ProtoOutputStream;J)V

    .line 18527
    goto :goto_3

    :cond_6
    iget-object v4, v8, Lcom/android/server/am/ProcessRecord;->adjTarget:Ljava/lang/Object;

    if-eqz v4, :cond_7

    .line 18528
    const-wide v11, 0x1090000000cL

    iget-object v4, v8, Lcom/android/server/am/ProcessRecord;->adjTarget:Ljava/lang/Object;

    invoke-virtual {v4}, Ljava/lang/Object;->toString()Ljava/lang/String;

    move-result-object v4

    invoke-virtual {v0, v11, v12, v4}, Landroid/util/proto/ProtoOutputStream;->write(JLjava/lang/String;)V

    .line 18530
    :cond_7
    :goto_3
    iget-object v4, v8, Lcom/android/server/am/ProcessRecord;->adjSource:Ljava/lang/Object;

    instance-of v4, v4, Lcom/android/server/am/ProcessRecord;

    if-eqz v4, :cond_8

    .line 18531
    iget-object v4, v8, Lcom/android/server/am/ProcessRecord;->adjSource:Ljava/lang/Object;

    check-cast v4, Lcom/android/server/am/ProcessRecord;

    .line 18532
    const-wide v11, 0x10b0000000dL

    invoke-virtual {v4, v0, v11, v12}, Lcom/android/server/am/ProcessRecord;->writeToProto(Landroid/util/proto/ProtoOutputStream;J)V

    .line 18533
    goto :goto_4

    :cond_8
    iget-object v4, v8, Lcom/android/server/am/ProcessRecord;->adjSource:Ljava/lang/Object;

    if-eqz v4, :cond_9

    .line 18534
    const-wide v11, 0x1090000000eL

    iget-object v4, v8, Lcom/android/server/am/ProcessRecord;->adjSource:Ljava/lang/Object;

    invoke-virtual {v4}, Ljava/lang/Object;->toString()Ljava/lang/String;

    move-result-object v4

    invoke-virtual {v0, v11, v12, v4}, Landroid/util/proto/ProtoOutputStream;->write(JLjava/lang/String;)V

    .line 18537
    :cond_9
    :goto_4
    if-eqz p5, :cond_b

    .line 18538
    const-wide v11, 0x10b0000000fL

    invoke-virtual {v0, v11, v12}, Landroid/util/proto/ProtoOutputStream;->start(J)J

    move-result-wide v5

    .line 18539
    const-wide v11, 0x10500000001L

    iget v15, v8, Lcom/android/server/am/ProcessRecord;->maxAdj:I

    invoke-virtual {v0, v11, v12, v15}, Landroid/util/proto/ProtoOutputStream;->write(JI)V

    .line 18540
    iget v11, v8, Lcom/android/server/am/ProcessRecord;->curRawAdj:I

    invoke-virtual {v0, v13, v14, v11}, Landroid/util/proto/ProtoOutputStream;->write(JI)V

    .line 18541
    const-wide v11, 0x10500000003L

    iget v13, v8, Lcom/android/server/am/ProcessRecord;->setRawAdj:I

    invoke-virtual {v0, v11, v12, v13}, Landroid/util/proto/ProtoOutputStream;->write(JI)V

    .line 18542
    const-wide v11, 0x10500000004L

    iget v13, v8, Lcom/android/server/am/ProcessRecord;->curAdj:I

    invoke-virtual {v0, v11, v12, v13}, Landroid/util/proto/ProtoOutputStream;->write(JI)V

    .line 18543
    const-wide v11, 0x10500000005L

    iget v13, v8, Lcom/android/server/am/ProcessRecord;->setAdj:I

    invoke-virtual {v0, v11, v12, v13}, Landroid/util/proto/ProtoOutputStream;->write(JI)V

    .line 18544
    iget v11, v8, Lcom/android/server/am/ProcessRecord;->curProcState:I

    .line 18545
    invoke-static {v11}, Lcom/android/server/am/ProcessList;->makeProcStateProtoEnum(I)I

    move-result v11

    .line 18544
    const-wide v12, 0x10e00000007L

    invoke-virtual {v0, v12, v13, v11}, Landroid/util/proto/ProtoOutputStream;->write(JI)V

    .line 18546
    const-wide v11, 0x10e00000008L

    iget v13, v8, Lcom/android/server/am/ProcessRecord;->setProcState:I

    .line 18547
    invoke-static {v13}, Lcom/android/server/am/ProcessList;->makeProcStateProtoEnum(I)I

    move-result v13

    .line 18546
    invoke-virtual {v0, v11, v12, v13}, Landroid/util/proto/ProtoOutputStream;->write(JI)V

    .line 18548
    const-wide v11, 0x10900000009L

    iget-wide v13, v8, Lcom/android/server/am/ProcessRecord;->lastPss:J

    const-wide/16 v20, 0x400

    mul-long v13, v13, v20

    new-instance v15, Ljava/lang/StringBuilder;

    invoke-direct {v15}, Ljava/lang/StringBuilder;-><init>()V

    invoke-static {v13, v14, v15}, Landroid/util/DebugUtils;->sizeValueToString(JLjava/lang/StringBuilder;)Ljava/lang/String;

    move-result-object v13

    invoke-virtual {v0, v11, v12, v13}, Landroid/util/proto/ProtoOutputStream;->write(JLjava/lang/String;)V

    .line 18550
    iget-wide v11, v8, Lcom/android/server/am/ProcessRecord;->lastSwapPss:J

    mul-long v11, v11, v20

    new-instance v13, Ljava/lang/StringBuilder;

    invoke-direct {v13}, Ljava/lang/StringBuilder;-><init>()V

    invoke-static {v11, v12, v13}, Landroid/util/DebugUtils;->sizeValueToString(JLjava/lang/StringBuilder;)Ljava/lang/String;

    move-result-object v11

    const-wide v12, 0x1090000000aL

    invoke-virtual {v0, v12, v13, v11}, Landroid/util/proto/ProtoOutputStream;->write(JLjava/lang/String;)V

    .line 18552
    const-wide v11, 0x1090000000bL

    iget-wide v13, v8, Lcom/android/server/am/ProcessRecord;->lastCachedPss:J

    mul-long v13, v13, v20

    new-instance v15, Ljava/lang/StringBuilder;

    invoke-direct {v15}, Ljava/lang/StringBuilder;-><init>()V

    invoke-static {v13, v14, v15}, Landroid/util/DebugUtils;->sizeValueToString(JLjava/lang/StringBuilder;)Ljava/lang/String;

    move-result-object v13

    invoke-virtual {v0, v11, v12, v13}, Landroid/util/proto/ProtoOutputStream;->write(JLjava/lang/String;)V

    .line 18554
    const-wide v11, 0x1080000000cL

    iget-boolean v13, v8, Lcom/android/server/am/ProcessRecord;->cached:Z

    invoke-virtual {v0, v11, v12, v13}, Landroid/util/proto/ProtoOutputStream;->write(JZ)V

    .line 18555
    const-wide v11, 0x1080000000dL

    iget-boolean v13, v8, Lcom/android/server/am/ProcessRecord;->empty:Z

    invoke-virtual {v0, v11, v12, v13}, Landroid/util/proto/ProtoOutputStream;->write(JZ)V

    .line 18556
    const-wide v11, 0x1080000000eL

    iget-boolean v13, v8, Lcom/android/server/am/ProcessRecord;->hasAboveClient:Z

    invoke-virtual {v0, v11, v12, v13}, Landroid/util/proto/ProtoOutputStream;->write(JZ)V

    .line 18558
    iget v11, v8, Lcom/android/server/am/ProcessRecord;->setProcState:I

    const/16 v12, 0x9

    if-lt v11, v12, :cond_a

    .line 18559
    iget-wide v11, v8, Lcom/android/server/am/ProcessRecord;->lastCpuTime:J

    const-wide/16 v13, 0x0

    cmp-long v11, v11, v13

    if-eqz v11, :cond_a

    .line 18560
    move-object/from16 v11, p3

    iget-wide v12, v11, Lcom/android/server/am/ActivityManagerService;->mLastPowerCheckUptime:J

    sub-long v12, v16, v12

    .line 18561
    iget-wide v14, v8, Lcom/android/server/am/ProcessRecord;->curCpuTime:J

    iget-wide v7, v8, Lcom/android/server/am/ProcessRecord;->lastCpuTime:J

    sub-long/2addr v14, v7

    .line 18562
    const-wide v7, 0x10b0000000fL

    invoke-virtual {v0, v7, v8}, Landroid/util/proto/ProtoOutputStream;->start(J)J

    move-result-wide v7

    .line 18563
    move-object/from16 v22, v2

    const-wide v1, 0x10300000001L

    invoke-virtual {v0, v1, v2, v12, v13}, Landroid/util/proto/ProtoOutputStream;->write(JJ)V

    .line 18564
    const-wide v1, 0x10300000002L

    invoke-virtual {v0, v1, v2, v14, v15}, Landroid/util/proto/ProtoOutputStream;->write(JJ)V

    .line 18565
    const-wide v1, 0x10200000003L

    const-wide/high16 v18, 0x4059000000000000L    # 100.0

    long-to-double v14, v14

    mul-double v18, v18, v14

    long-to-double v12, v12

    div-double v12, v18, v12

    invoke-virtual {v0, v1, v2, v12, v13}, Landroid/util/proto/ProtoOutputStream;->write(JD)V

    .line 18567
    invoke-virtual {v0, v7, v8}, Landroid/util/proto/ProtoOutputStream;->end(J)V

    goto :goto_5

    .line 18570
    :cond_a
    move-object/from16 v11, p3

    move-object/from16 v22, v2

    :goto_5
    invoke-virtual {v0, v5, v6}, Landroid/util/proto/ProtoOutputStream;->end(J)V

    goto :goto_6

    .line 18572
    :cond_b
    move-object/from16 v11, p3

    move-object/from16 v22, v2

    :goto_6
    invoke-virtual {v0, v9, v10}, Landroid/util/proto/ProtoOutputStream;->end(J)V

    .line 18489
    add-int/lit8 v3, v3, -0x1

    move-wide/from16 v5, v16

    move-object/from16 v2, v22

    move-object/from16 v1, p4

    const/4 v4, 0x0

    const/4 v7, 0x1

    goto/16 :goto_0

    .line 18575
    :cond_c
    const/4 v0, 0x1

    return v0

    nop

    :pswitch_data_0
    .packed-switch 0x2
        :pswitch_2
        :pswitch_1
        :pswitch_0
    .end packed-switch
.end method


# virtual methods
.method acquireSleepToken(Ljava/lang/String;I)Landroid/app/ActivityManagerInternal$SleepToken;
    .locals 1

    .line 16317
    monitor-enter p0

    :try_start_0
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    .line 16318
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mStackSupervisor:Lcom/android/server/am/ActivityStackSupervisor;

    invoke-virtual {v0, p1, p2}, Lcom/android/server/am/ActivityStackSupervisor;->createSleepTokenLocked(Ljava/lang/String;I)Landroid/app/ActivityManagerInternal$SleepToken;

    move-result-object p1

    .line 16319
    invoke-virtual {p0}, Lcom/android/server/am/ActivityManagerService;->updateSleepIfNeededLocked()V

    .line 16320
    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    return-object p1

    .line 16321
    :catchall_0
    move-exception p1

    :try_start_1
    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw p1
.end method

.method public final activityDestroyed(Landroid/os/IBinder;)V
    .locals 2

    .line 8405
    monitor-enter p0

    :try_start_0
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    .line 8406
    invoke-static {p1}, Lcom/android/server/am/ActivityRecord;->getStackLocked(Landroid/os/IBinder;)Lcom/android/server/am/ActivityStack;

    move-result-object v0

    .line 8407
    if-eqz v0, :cond_0

    .line 8408
    const-string v1, "activityDestroyed"

    invoke-virtual {v0, p1, v1}, Lcom/android/server/am/ActivityStack;->activityDestroyedLocked(Landroid/os/IBinder;Ljava/lang/String;)V

    .line 8410
    :cond_0
    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    .line 8411
    return-void

    .line 8410
    :catchall_0
    move-exception p1

    :try_start_1
    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw p1
.end method

.method public final activityIdle(Landroid/os/IBinder;Landroid/content/res/Configuration;Z)V
    .locals 4

    .line 8158
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v0

    .line 8159
    monitor-enter p0

    :try_start_0
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    .line 8160
    invoke-static {p1}, Lcom/android/server/am/ActivityRecord;->getStackLocked(Landroid/os/IBinder;)Lcom/android/server/am/ActivityStack;

    move-result-object v2

    .line 8161
    if-eqz v2, :cond_0

    .line 8162
    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mStackSupervisor:Lcom/android/server/am/ActivityStackSupervisor;

    .line 8163
    const/4 v3, 0x0

    invoke-virtual {v2, p1, v3, v3, p2}, Lcom/android/server/am/ActivityStackSupervisor;->activityIdleInternalLocked(Landroid/os/IBinder;ZZLandroid/content/res/Configuration;)Lcom/android/server/am/ActivityRecord;

    move-result-object p1

    .line 8165
    if-eqz p3, :cond_0

    .line 8166
    iget-object p2, p0, Lcom/android/server/am/ActivityManagerService;->mProfileProc:Lcom/android/server/am/ProcessRecord;

    iget-object p1, p1, Lcom/android/server/am/ActivityRecord;->app:Lcom/android/server/am/ProcessRecord;

    if-ne p2, p1, :cond_0

    iget-object p1, p0, Lcom/android/server/am/ActivityManagerService;->mProfilerInfo:Landroid/app/ProfilerInfo;

    if-eqz p1, :cond_0

    .line 8167
    invoke-direct {p0}, Lcom/android/server/am/ActivityManagerService;->clearProfilerLocked()V

    .line 8171
    :cond_0
    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    .line 8172
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 8173
    return-void

    .line 8171
    :catchall_0
    move-exception p1

    :try_start_1
    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw p1
.end method

.method public final activityPaused(Landroid/os/IBinder;)V
    .locals 4

    .line 8368
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v0

    .line 8369
    monitor-enter p0

    :try_start_0
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    .line 8370
    invoke-static {p1}, Lcom/android/server/am/ActivityRecord;->getStackLocked(Landroid/os/IBinder;)Lcom/android/server/am/ActivityStack;

    move-result-object v2

    .line 8371
    if-eqz v2, :cond_0

    .line 8372
    const/4 v3, 0x0

    invoke-virtual {v2, p1, v3}, Lcom/android/server/am/ActivityStack;->activityPausedLocked(Landroid/os/IBinder;Z)V

    .line 8374
    :cond_0
    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    .line 8375
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 8376
    return-void

    .line 8374
    :catchall_0
    move-exception p1

    :try_start_1
    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw p1
.end method

.method public final activityRelaunched(Landroid/os/IBinder;)V
    .locals 3

    .line 8415
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v0

    .line 8416
    monitor-enter p0

    :try_start_0
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    .line 8417
    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mStackSupervisor:Lcom/android/server/am/ActivityStackSupervisor;

    invoke-virtual {v2, p1}, Lcom/android/server/am/ActivityStackSupervisor;->activityRelaunchedLocked(Landroid/os/IBinder;)V

    .line 8418
    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    .line 8419
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 8420
    return-void

    .line 8418
    :catchall_0
    move-exception p1

    :try_start_1
    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw p1
.end method

.method public final activityResumed(Landroid/os/IBinder;)V
    .locals 3

    .line 8358
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v0

    .line 8359
    monitor-enter p0

    :try_start_0
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    .line 8360
    invoke-static {p1}, Lcom/android/server/am/ActivityRecord;->activityResumedLocked(Landroid/os/IBinder;)V

    .line 8361
    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mWindowManager:Lcom/android/server/wm/WindowManagerService;

    invoke-virtual {v2, p1}, Lcom/android/server/wm/WindowManagerService;->notifyAppResumedFinished(Landroid/os/IBinder;)V

    .line 8362
    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    .line 8363
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 8364
    return-void

    .line 8362
    :catchall_0
    move-exception p1

    :try_start_1
    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw p1
.end method

.method public final activitySlept(Landroid/os/IBinder;)V
    .locals 3

    .line 13680
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v0

    .line 13682
    monitor-enter p0

    :try_start_0
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    .line 13683
    invoke-static {p1}, Lcom/android/server/am/ActivityRecord;->isInStackLocked(Landroid/os/IBinder;)Lcom/android/server/am/ActivityRecord;

    move-result-object p1

    .line 13684
    if-eqz p1, :cond_0

    .line 13685
    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mStackSupervisor:Lcom/android/server/am/ActivityStackSupervisor;

    invoke-virtual {v2, p1}, Lcom/android/server/am/ActivityStackSupervisor;->activitySleptLocked(Lcom/android/server/am/ActivityRecord;)V

    .line 13687
    :cond_0
    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    .line 13689
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 13690
    return-void

    .line 13687
    :catchall_0
    move-exception p1

    :try_start_1
    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw p1
.end method

.method public final activityStopped(Landroid/os/IBinder;Landroid/os/Bundle;Landroid/os/PersistableBundle;Ljava/lang/CharSequence;)V
    .locals 2

    .line 8384
    if-eqz p2, :cond_1

    invoke-virtual {p2}, Landroid/os/Bundle;->hasFileDescriptors()Z

    move-result v0

    if-nez v0, :cond_0

    goto :goto_0

    .line 8385
    :cond_0
    new-instance p1, Ljava/lang/IllegalArgumentException;

    const-string p2, "File descriptors passed in Bundle"

    invoke-direct {p1, p2}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw p1

    .line 8388
    :cond_1
    :goto_0
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v0

    .line 8390
    monitor-enter p0

    :try_start_0
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    .line 8391
    invoke-static {p1}, Lcom/android/server/am/ActivityRecord;->isInStackLocked(Landroid/os/IBinder;)Lcom/android/server/am/ActivityRecord;

    move-result-object p1

    .line 8392
    if-eqz p1, :cond_2

    .line 8393
    invoke-virtual {p1, p2, p3, p4}, Lcom/android/server/am/ActivityRecord;->activityStoppedLocked(Landroid/os/Bundle;Landroid/os/PersistableBundle;Ljava/lang/CharSequence;)V

    .line 8395
    :cond_2
    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    .line 8397
    invoke-virtual {p0}, Lcom/android/server/am/ActivityManagerService;->trimApplications()V

    .line 8399
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 8400
    return-void

    .line 8395
    :catchall_0
    move-exception p1

    :try_start_1
    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw p1
.end method

.method final addAppLocked(Landroid/content/pm/ApplicationInfo;Ljava/lang/String;ZLjava/lang/String;)Lcom/android/server/am/ProcessRecord;
    .locals 6
    .annotation build Lcom/android/internal/annotations/GuardedBy;
        value = "this"
    .end annotation

    .line 13429
    const/4 v4, 0x0

    move-object v0, p0

    move-object v1, p1

    move-object v2, p2

    move v3, p3

    move-object v5, p4

    invoke-virtual/range {v0 .. v5}, Lcom/android/server/am/ActivityManagerService;->addAppLocked(Landroid/content/pm/ApplicationInfo;Ljava/lang/String;ZZLjava/lang/String;)Lcom/android/server/am/ProcessRecord;

    move-result-object p1

    return-object p1
.end method

.method final addAppLocked(Landroid/content/pm/ApplicationInfo;Ljava/lang/String;ZZLjava/lang/String;)Lcom/android/server/am/ProcessRecord;
    .locals 10

    .line 13436
    const/4 v0, 0x0

    const/4 v1, 0x1

    if-nez p3, :cond_1

    .line 13437
    if-eqz p2, :cond_0

    move-object v2, p2

    goto :goto_0

    :cond_0
    iget-object v2, p1, Landroid/content/pm/ApplicationInfo;->processName:Ljava/lang/String;

    :goto_0
    iget v3, p1, Landroid/content/pm/ApplicationInfo;->uid:I

    invoke-virtual {p0, v2, v3, v1}, Lcom/android/server/am/ActivityManagerService;->getProcessRecordLocked(Ljava/lang/String;IZ)Lcom/android/server/am/ProcessRecord;

    move-result-object v2

    goto :goto_1

    .line 13440
    :cond_1
    nop

    .line 13443
    move-object v2, v0

    :goto_1
    const/4 v3, 0x0

    if-nez v2, :cond_2

    .line 13444
    invoke-virtual {p0, p1, p2, p3, v3}, Lcom/android/server/am/ActivityManagerService;->newProcessRecordLocked(Landroid/content/pm/ApplicationInfo;Ljava/lang/String;ZI)Lcom/android/server/am/ProcessRecord;

    move-result-object v2

    .line 13445
    invoke-virtual {p0, v2, v3, v0}, Lcom/android/server/am/ActivityManagerService;->updateLruProcessLocked(Lcom/android/server/am/ProcessRecord;ZLcom/android/server/am/ProcessRecord;)V

    .line 13446
    invoke-virtual {p0}, Lcom/android/server/am/ActivityManagerService;->updateOomAdjLocked()V

    .line 13451
    :cond_2
    :try_start_0
    invoke-static {}, Landroid/app/AppGlobals;->getPackageManager()Landroid/content/pm/IPackageManager;

    move-result-object p3

    iget-object v0, p1, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;

    iget v4, v2, Lcom/android/server/am/ProcessRecord;->uid:I

    .line 13452
    invoke-static {v4}, Landroid/os/UserHandle;->getUserId(I)I

    move-result v4

    .line 13451
    invoke-interface {p3, v0, v3, v4}, Landroid/content/pm/IPackageManager;->setPackageStoppedState(Ljava/lang/String;ZI)V
    :try_end_0
    .catch Landroid/os/RemoteException; {:try_start_0 .. :try_end_0} :catch_1
    .catch Ljava/lang/IllegalArgumentException; {:try_start_0 .. :try_end_0} :catch_0

    goto :goto_2

    .line 13454
    :catch_0
    move-exception p3

    .line 13455
    const-string v0, "ActivityManager"

    new-instance v3, Ljava/lang/StringBuilder;

    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V

    const-string v4, "Failed trying to unstop package "

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget-object v4, p1, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v4, ": "

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v3, p3}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object p3

    invoke-static {v0, p3}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    goto :goto_3

    .line 13453
    :catch_1
    move-exception p3

    .line 13457
    :goto_2
    nop

    .line 13459
    :goto_3
    iget p1, p1, Landroid/content/pm/ApplicationInfo;->flags:I

    const/16 p3, 0x9

    and-int/2addr p1, p3

    if-ne p1, p3, :cond_3

    .line 13460
    iput-boolean v1, v2, Lcom/android/server/am/ProcessRecord;->persistent:Z

    .line 13461
    const/16 p1, -0x320

    iput p1, v2, Lcom/android/server/am/ProcessRecord;->maxAdj:I

    .line 13463
    :cond_3
    iget-object p1, v2, Lcom/android/server/am/ProcessRecord;->thread:Landroid/app/IApplicationThread;

    if-nez p1, :cond_5

    iget-object p1, p0, Lcom/android/server/am/ActivityManagerService;->mPersistentStartingProcesses:Ljava/util/ArrayList;

    invoke-virtual {p1, v2}, Ljava/util/ArrayList;->indexOf(Ljava/lang/Object;)I

    move-result p1

    if-gez p1, :cond_5

    .line 13464
    iget-object p1, p0, Lcom/android/server/am/ActivityManagerService;->mPersistentStartingProcesses:Ljava/util/ArrayList;

    invoke-virtual {p1, v2}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    .line 13465
    const-string v6, "added application"

    .line 13466
    if-eqz p2, :cond_4

    .line 13465
    :goto_4
    move-object v7, p2

    goto :goto_5

    .line 13466
    :cond_4
    iget-object p2, v2, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;

    goto :goto_4

    .line 13465
    :goto_5
    move-object v4, p0

    move-object v5, v2

    move v8, p4

    move-object v9, p5

    invoke-direct/range {v4 .. v9}, Lcom/android/server/am/ActivityManagerService;->startProcessLocked(Lcom/android/server/am/ProcessRecord;Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)Z

    .line 13470
    :cond_5
    return-object v2
.end method

.method public addAppTask(Landroid/os/IBinder;Landroid/content/Intent;Landroid/app/ActivityManager$TaskDescription;Landroid/graphics/Bitmap;)I
    .locals 12
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Landroid/os/RemoteException;
        }
    .end annotation

    move-object v1, p0

    move-object v0, p2

    .line 10983
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v2

    .line 10984
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v9

    .line 10987
    :try_start_0
    monitor-enter p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_1

    :try_start_1
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    .line 10988
    invoke-static {p1}, Lcom/android/server/am/ActivityRecord;->isInStackLocked(Landroid/os/IBinder;)Lcom/android/server/am/ActivityRecord;

    move-result-object v3

    .line 10989
    if-eqz v3, :cond_7

    .line 10993
    invoke-virtual {v0}, Landroid/content/Intent;->getComponent()Landroid/content/ComponentName;

    move-result-object v4

    .line 10994
    if-eqz v4, :cond_6

    .line 10998
    invoke-virtual/range {p4 .. p4}, Landroid/graphics/Bitmap;->getWidth()I

    move-result v5

    iget v6, v1, Lcom/android/server/am/ActivityManagerService;->mThumbnailWidth:I

    if-ne v5, v6, :cond_5

    .line 10999
    invoke-virtual/range {p4 .. p4}, Landroid/graphics/Bitmap;->getHeight()I

    move-result v5

    iget v6, v1, Lcom/android/server/am/ActivityManagerService;->mThumbnailHeight:I

    if-ne v5, v6, :cond_5

    .line 11004
    invoke-virtual {v0}, Landroid/content/Intent;->getSelector()Landroid/content/Intent;

    move-result-object v5

    const/4 v6, 0x0

    if-eqz v5, :cond_0

    .line 11005
    invoke-virtual {v0, v6}, Landroid/content/Intent;->setSelector(Landroid/content/Intent;)V

    .line 11007
    :cond_0
    invoke-virtual {v0}, Landroid/content/Intent;->getSourceBounds()Landroid/graphics/Rect;

    move-result-object v5

    if-eqz v5, :cond_1

    .line 11008
    invoke-virtual {v0, v6}, Landroid/content/Intent;->setSourceBounds(Landroid/graphics/Rect;)V

    .line 11010
    :cond_1
    invoke-virtual {v0}, Landroid/content/Intent;->getFlags()I

    move-result v5

    const/high16 v6, 0x80000

    and-int/2addr v5, v6

    if-eqz v5, :cond_2

    .line 11011
    invoke-virtual {v0}, Landroid/content/Intent;->getFlags()I

    move-result v5

    const/16 v6, 0x2000

    and-int/2addr v5, v6

    if-nez v5, :cond_2

    .line 11014
    invoke-virtual {v0, v6}, Landroid/content/Intent;->addFlags(I)Landroid/content/Intent;

    .line 11017
    :cond_2
    invoke-static {}, Landroid/app/AppGlobals;->getPackageManager()Landroid/content/pm/IPackageManager;

    move-result-object v5

    const/16 v6, 0x400

    .line 11018
    invoke-static {v2}, Landroid/os/UserHandle;->getUserId(I)I

    move-result v7

    .line 11017
    invoke-interface {v5, v4, v6, v7}, Landroid/content/pm/IPackageManager;->getActivityInfo(Landroid/content/ComponentName;II)Landroid/content/pm/ActivityInfo;

    move-result-object v4

    .line 11019
    iget-object v5, v4, Landroid/content/pm/ActivityInfo;->applicationInfo:Landroid/content/pm/ApplicationInfo;

    iget v5, v5, Landroid/content/pm/ApplicationInfo;->uid:I

    if-ne v5, v2, :cond_4

    .line 11025
    invoke-virtual {v3}, Lcom/android/server/am/ActivityRecord;->getStack()Lcom/android/server/am/ActivityStack;

    move-result-object v11

    .line 11026
    iget-object v2, v1, Lcom/android/server/am/ActivityManagerService;->mStackSupervisor:Lcom/android/server/am/ActivityStackSupervisor;

    iget v3, v3, Lcom/android/server/am/ActivityRecord;->userId:I

    .line 11027
    invoke-virtual {v2, v3}, Lcom/android/server/am/ActivityStackSupervisor;->getNextTaskIdForUserLocked(I)I

    move-result v3

    const/4 v6, 0x0

    const/4 v7, 0x0

    const/4 v8, 0x0

    .line 11026
    move-object v2, v11

    move-object v5, v0

    invoke-virtual/range {v2 .. v8}, Lcom/android/server/am/ActivityStack;->createTaskRecord(ILandroid/content/pm/ActivityInfo;Landroid/content/Intent;Landroid/service/voice/IVoiceInteractionSession;Lcom/android/internal/app/IVoiceInteractor;Z)Lcom/android/server/am/TaskRecord;

    move-result-object v0

    .line 11029
    iget-object v2, v1, Lcom/android/server/am/ActivityManagerService;->mRecentTasks:Lcom/android/server/am/RecentTasks;

    invoke-virtual {v2, v0}, Lcom/android/server/am/RecentTasks;->addToBottom(Lcom/android/server/am/TaskRecord;)Z

    move-result v2

    if-nez v2, :cond_3

    .line 11031
    const-string v2, "addAppTask"

    const/4 v3, 0x0

    invoke-virtual {v11, v0, v2, v3}, Lcom/android/server/am/ActivityStack;->removeTask(Lcom/android/server/am/TaskRecord;Ljava/lang/String;I)V

    .line 11032
    const/4 v0, -0x1

    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 11041
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    invoke-static {v9, v10}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 11032
    return v0

    .line 11034
    :cond_3
    :try_start_2
    iget-object v2, v0, Lcom/android/server/am/TaskRecord;->lastTaskDescription:Landroid/app/ActivityManager$TaskDescription;

    move-object v3, p3

    invoke-virtual {v2, v3}, Landroid/app/ActivityManager$TaskDescription;->copyFrom(Landroid/app/ActivityManager$TaskDescription;)V

    .line 11038
    iget v0, v0, Lcom/android/server/am/TaskRecord;->taskId:I

    monitor-exit p0
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    .line 11041
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    invoke-static {v9, v10}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 11038
    return v0

    .line 11020
    :cond_4
    :try_start_3
    new-instance v0, Ljava/lang/SecurityException;

    new-instance v3, Ljava/lang/StringBuilder;

    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V

    const-string v5, "Can\'t add task for another application: target uid="

    invoke-virtual {v3, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget-object v4, v4, Landroid/content/pm/ActivityInfo;->applicationInfo:Landroid/content/pm/ApplicationInfo;

    iget v4, v4, Landroid/content/pm/ApplicationInfo;->uid:I

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v4, ", calling uid="

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v3, v2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v2

    invoke-direct {v0, v2}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v0

    .line 11000
    :cond_5
    new-instance v0, Ljava/lang/IllegalArgumentException;

    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    const-string v3, "Bad thumbnail size: got "

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 11001
    invoke-virtual/range {p4 .. p4}, Landroid/graphics/Bitmap;->getWidth()I

    move-result v3

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string/jumbo v3, "x"

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual/range {p4 .. p4}, Landroid/graphics/Bitmap;->getHeight()I

    move-result v3

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v3, ", require "

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget v3, v1, Lcom/android/server/am/ActivityManagerService;->mThumbnailWidth:I

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string/jumbo v3, "x"

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget v3, v1, Lcom/android/server/am/ActivityManagerService;->mThumbnailHeight:I

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v2

    invoke-direct {v0, v2}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v0

    .line 10995
    :cond_6
    new-instance v2, Ljava/lang/IllegalArgumentException;

    new-instance v3, Ljava/lang/StringBuilder;

    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V

    const-string v4, "Intent "

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v3, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    const-string v0, " must specify explicit component"

    invoke-virtual {v3, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    invoke-direct {v2, v0}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v2

    .line 10990
    :cond_7
    new-instance v0, Ljava/lang/IllegalArgumentException;

    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    const-string v3, "Activity does not exist; token="

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-object v3, p1

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v2

    invoke-direct {v0, v2}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v0

    .line 11039
    :catchall_0
    move-exception v0

    monitor-exit p0
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_0

    :try_start_4
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw v0
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_1

    .line 11041
    :catchall_1
    move-exception v0

    invoke-static {v9, v10}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    throw v0
.end method

.method final addBackgroundCheckViolationLocked(Ljava/lang/String;Ljava/lang/String;)V
    .locals 1

    .line 22197
    invoke-virtual {p0}, Lcom/android/server/am/ActivityManagerService;->rotateBroadcastStatsIfNeededLocked()V

    .line 22198
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mCurBroadcastStats:Lcom/android/server/am/BroadcastStats;

    invoke-virtual {v0, p1, p2}, Lcom/android/server/am/BroadcastStats;->addBackgroundCheckViolation(Ljava/lang/String;Ljava/lang/String;)V

    .line 22199
    return-void
.end method

.method final addBroadcastStatLocked(Ljava/lang/String;Ljava/lang/String;IIJ)V
    .locals 7

    .line 22192
    invoke-virtual {p0}, Lcom/android/server/am/ActivityManagerService;->rotateBroadcastStatsIfNeededLocked()V

    .line 22193
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mCurBroadcastStats:Lcom/android/server/am/BroadcastStats;

    move-object v1, p1

    move-object v2, p2

    move v3, p3

    move v4, p4

    move-wide v5, p5

    invoke-virtual/range {v0 .. v6}, Lcom/android/server/am/BroadcastStats;->addBroadcast(Ljava/lang/String;Ljava/lang/String;IIJ)V

    .line 22194
    return-void
.end method

.method public addErrorToDropBox(Ljava/lang/String;Lcom/android/server/am/ProcessRecord;Ljava/lang/String;Lcom/android/server/am/ActivityRecord;Lcom/android/server/am/ActivityRecord;Ljava/lang/String;Ljava/lang/String;Ljava/io/File;Landroid/app/ApplicationErrorReport$CrashInfo;)V
    .locals 13

    move-object v0, p0

    move-object v10, p2

    move-object/from16 v1, p4

    move-object/from16 v2, p5

    move-object/from16 v3, p6

    .line 16006
    const-string v4, "dropbox"

    invoke-static {v4}, Landroid/os/ServiceManager;->getService(Ljava/lang/String;)Landroid/os/IBinder;

    move-result-object v4

    if-nez v4, :cond_0

    return-void

    .line 16007
    :cond_0
    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mContext:Landroid/content/Context;

    const-class v5, Landroid/os/DropBoxManager;

    invoke-virtual {v4, v5}, Landroid/content/Context;->getSystemService(Ljava/lang/Class;)Ljava/lang/Object;

    move-result-object v4

    move-object v9, v4

    check-cast v9, Landroid/os/DropBoxManager;

    .line 16010
    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    invoke-static {v10}, Lcom/android/server/am/ActivityManagerService;->processClass(Lcom/android/server/am/ProcessRecord;)Ljava/lang/String;

    move-result-object v5

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v5, "_"

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-object v5, p1

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v6

    .line 16011
    if-eqz v9, :cond_c

    invoke-virtual {v9, v6}, Landroid/os/DropBoxManager;->isTagEnabled(Ljava/lang/String;)Z

    move-result v4

    if-nez v4, :cond_1

    goto/16 :goto_3

    .line 16015
    :cond_1
    invoke-static {}, Landroid/os/SystemClock;->elapsedRealtime()J

    move-result-wide v4

    .line 16016
    iget-wide v7, v0, Lcom/android/server/am/ActivityManagerService;->mWtfClusterStart:J

    sub-long v7, v4, v7

    const-wide/16 v11, 0x2710

    cmp-long v7, v7, v11

    if-lez v7, :cond_2

    .line 16017
    iput-wide v4, v0, Lcom/android/server/am/ActivityManagerService;->mWtfClusterStart:J

    .line 16018
    const/4 v4, 0x1

    iput v4, v0, Lcom/android/server/am/ActivityManagerService;->mWtfClusterCount:I

    goto :goto_0

    .line 16020
    :cond_2
    iget v4, v0, Lcom/android/server/am/ActivityManagerService;->mWtfClusterCount:I

    add-int/lit8 v5, v4, 0x1

    iput v5, v0, Lcom/android/server/am/ActivityManagerService;->mWtfClusterCount:I

    const/4 v5, 0x5

    if-lt v4, v5, :cond_3

    return-void

    .line 16023
    :cond_3
    :goto_0
    new-instance v5, Ljava/lang/StringBuilder;

    const/16 v4, 0x400

    invoke-direct {v5, v4}, Ljava/lang/StringBuilder;-><init>(I)V

    .line 16024
    move-object/from16 v4, p3

    invoke-direct {v0, v10, v4, v5}, Lcom/android/server/am/ActivityManagerService;->appendDropBoxProcessHeaders(Lcom/android/server/am/ProcessRecord;Ljava/lang/String;Ljava/lang/StringBuilder;)V

    .line 16025
    if-eqz v10, :cond_5

    .line 16026
    const-string v4, "Foreground: "

    invoke-virtual {v5, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 16027
    invoke-virtual {v10}, Lcom/android/server/am/ProcessRecord;->isInterestingToUserLocked()Z

    move-result v4

    if-eqz v4, :cond_4

    const-string v4, "Yes"

    goto :goto_1

    :cond_4
    const-string v4, "No"

    :goto_1
    invoke-virtual {v5, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v4, "\n"

    .line 16028
    invoke-virtual {v5, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 16030
    :cond_5
    if-eqz v1, :cond_6

    .line 16031
    const-string v4, "Activity: "

    invoke-virtual {v5, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget-object v4, v1, Lcom/android/server/am/ActivityRecord;->shortComponentName:Ljava/lang/String;

    invoke-virtual {v5, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v4, "\n"

    invoke-virtual {v5, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 16033
    :cond_6
    if-eqz v2, :cond_7

    iget-object v4, v2, Lcom/android/server/am/ActivityRecord;->app:Lcom/android/server/am/ProcessRecord;

    if-eqz v4, :cond_7

    iget-object v4, v2, Lcom/android/server/am/ActivityRecord;->app:Lcom/android/server/am/ProcessRecord;

    iget v4, v4, Lcom/android/server/am/ProcessRecord;->pid:I

    iget v7, v10, Lcom/android/server/am/ProcessRecord;->pid:I

    if-eq v4, v7, :cond_7

    .line 16034
    const-string v4, "Parent-Process: "

    invoke-virtual {v5, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget-object v4, v2, Lcom/android/server/am/ActivityRecord;->app:Lcom/android/server/am/ProcessRecord;

    iget-object v4, v4, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;

    invoke-virtual {v5, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v4, "\n"

    invoke-virtual {v5, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 16036
    :cond_7
    if-eqz v2, :cond_8

    if-eq v2, v1, :cond_8

    .line 16037
    const-string v1, "Parent-Activity: "

    invoke-virtual {v5, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget-object v1, v2, Lcom/android/server/am/ActivityRecord;->shortComponentName:Ljava/lang/String;

    invoke-virtual {v5, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v1, "\n"

    invoke-virtual {v5, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 16039
    :cond_8
    if-eqz v3, :cond_9

    .line 16040
    const-string v1, "Subject: "

    invoke-virtual {v5, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v5, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v1, "\n"

    invoke-virtual {v5, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 16042
    :cond_9
    const-string v1, "Build: "

    invoke-virtual {v5, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    sget-object v1, Landroid/os/Build;->FINGERPRINT:Ljava/lang/String;

    invoke-virtual {v5, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v1, "\n"

    invoke-virtual {v5, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 16043
    invoke-static {}, Landroid/os/Debug;->isDebuggerConnected()Z

    move-result v1

    if-eqz v1, :cond_a

    .line 16044
    const-string v1, "Debugger: Connected\n"

    invoke-virtual {v5, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 16046
    :cond_a
    const-string v1, "\n"

    invoke-virtual {v5, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 16050
    new-instance v11, Lcom/android/server/am/ActivityManagerService$22;

    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string v2, "Error dump: "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v1, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v3

    move-object v1, v11

    move-object v2, v0

    move-object/from16 v4, p7

    move-object/from16 v7, p8

    move-object/from16 v8, p9

    invoke-direct/range {v1 .. v9}, Lcom/android/server/am/ActivityManagerService$22;-><init>(Lcom/android/server/am/ActivityManagerService;Ljava/lang/String;Ljava/lang/String;Ljava/lang/StringBuilder;Ljava/lang/String;Ljava/io/File;Landroid/app/ApplicationErrorReport$CrashInfo;Landroid/os/DropBoxManager;)V

    .line 16104
    if-nez v10, :cond_b

    .line 16107
    invoke-static {}, Landroid/os/StrictMode;->allowThreadDiskWritesMask()I

    move-result v1

    .line 16109
    :try_start_0
    invoke-virtual {v11}, Ljava/lang/Thread;->run()V
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 16111
    invoke-static {v1}, Landroid/os/StrictMode;->setThreadPolicyMask(I)V

    .line 16112
    nop

    .line 16113
    goto :goto_2

    .line 16111
    :catchall_0
    move-exception v0

    invoke-static {v1}, Landroid/os/StrictMode;->setThreadPolicyMask(I)V

    move-object v1, v0

    throw v1

    .line 16114
    :cond_b
    invoke-virtual {v11}, Ljava/lang/Thread;->start()V

    .line 16116
    :goto_2
    return-void

    .line 16011
    :cond_c
    :goto_3
    return-void
.end method

.method public addInstrumentationResults(Landroid/app/IApplicationThread;Landroid/os/Bundle;)V
    .locals 3

    .line 22510
    invoke-static {}, Landroid/os/UserHandle;->getCallingUserId()I

    .line 22512
    if-eqz p2, :cond_1

    invoke-virtual {p2}, Landroid/os/Bundle;->hasFileDescriptors()Z

    move-result v0

    if-nez v0, :cond_0

    goto :goto_0

    .line 22513
    :cond_0
    new-instance p1, Ljava/lang/IllegalArgumentException;

    const-string p2, "File descriptors passed in Intent"

    invoke-direct {p1, p2}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw p1

    .line 22516
    :cond_1
    :goto_0
    monitor-enter p0

    :try_start_0
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    .line 22517
    invoke-virtual {p0, p1}, Lcom/android/server/am/ActivityManagerService;->getRecordForAppLocked(Landroid/app/IApplicationThread;)Lcom/android/server/am/ProcessRecord;

    move-result-object v0

    .line 22518
    if-nez v0, :cond_2

    .line 22519
    const-string p2, "ActivityManager"

    new-instance v0, Ljava/lang/StringBuilder;

    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V

    const-string v1, "addInstrumentationResults: no app for "

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object p1

    invoke-static {p2, p1}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 22520
    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    return-void

    .line 22522
    :cond_2
    :try_start_1
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v1

    .line 22523
    invoke-virtual {p0, v0, p2}, Lcom/android/server/am/ActivityManagerService;->addInstrumentationResultsLocked(Lcom/android/server/am/ProcessRecord;Landroid/os/Bundle;)V

    .line 22524
    invoke-static {v1, v2}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 22525
    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    .line 22526
    return-void

    .line 22525
    :catchall_0
    move-exception p1

    :try_start_2
    monitor-exit p0
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw p1
.end method

.method addInstrumentationResultsLocked(Lcom/android/server/am/ProcessRecord;Landroid/os/Bundle;)V
    .locals 2

    .line 22495
    iget-object v0, p1, Lcom/android/server/am/ProcessRecord;->instr:Lcom/android/server/am/ActiveInstrumentation;

    if-nez v0, :cond_0

    .line 22496
    const-string p2, "ActivityManager"

    new-instance v0, Ljava/lang/StringBuilder;

    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V

    const-string v1, "finishInstrumentation called on non-instrumented: "

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object p1

    invoke-static {p2, p1}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 22497
    return-void

    .line 22500
    :cond_0
    iget-object v0, p1, Lcom/android/server/am/ProcessRecord;->instr:Lcom/android/server/am/ActiveInstrumentation;

    iget-boolean v0, v0, Lcom/android/server/am/ActiveInstrumentation;->mFinished:Z

    if-nez v0, :cond_2

    if-eqz p2, :cond_2

    .line 22501
    iget-object v0, p1, Lcom/android/server/am/ProcessRecord;->instr:Lcom/android/server/am/ActiveInstrumentation;

    iget-object v0, v0, Lcom/android/server/am/ActiveInstrumentation;->mCurResults:Landroid/os/Bundle;

    if-nez v0, :cond_1

    .line 22502
    iget-object p1, p1, Lcom/android/server/am/ProcessRecord;->instr:Lcom/android/server/am/ActiveInstrumentation;

    new-instance v0, Landroid/os/Bundle;

    invoke-direct {v0, p2}, Landroid/os/Bundle;-><init>(Landroid/os/Bundle;)V

    iput-object v0, p1, Lcom/android/server/am/ActiveInstrumentation;->mCurResults:Landroid/os/Bundle;

    goto :goto_0

    .line 22504
    :cond_1
    iget-object p1, p1, Lcom/android/server/am/ProcessRecord;->instr:Lcom/android/server/am/ActiveInstrumentation;

    iget-object p1, p1, Lcom/android/server/am/ActiveInstrumentation;->mCurResults:Landroid/os/Bundle;

    invoke-virtual {p1, p2}, Landroid/os/Bundle;->putAll(Landroid/os/Bundle;)V

    .line 22507
    :cond_2
    :goto_0
    return-void
.end method

.method public addPackageDependency(Ljava/lang/String;)V
    .locals 3

    .line 7053
    monitor-enter p0

    :try_start_0
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    .line 7054
    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result v0

    .line 7055
    invoke-static {}, Landroid/os/Process;->myPid()I

    move-result v1

    if-ne v0, v1, :cond_0

    .line 7057
    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_1

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    return-void

    .line 7060
    :cond_0
    :try_start_1
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Landroid/util/SparseArray;

    monitor-enter v0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_1

    .line 7061
    :try_start_2
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Landroid/util/SparseArray;

    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result v2

    invoke-virtual {v1, v2}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    move-result-object v1

    check-cast v1, Lcom/android/server/am/ProcessRecord;

    .line 7062
    monitor-exit v0
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    .line 7063
    if-eqz v1, :cond_2

    .line 7064
    :try_start_3
    iget-object v0, v1, Lcom/android/server/am/ProcessRecord;->pkgDeps:Landroid/util/ArraySet;

    if-nez v0, :cond_1

    .line 7065
    new-instance v0, Landroid/util/ArraySet;

    const/4 v2, 0x1

    invoke-direct {v0, v2}, Landroid/util/ArraySet;-><init>(I)V

    iput-object v0, v1, Lcom/android/server/am/ProcessRecord;->pkgDeps:Landroid/util/ArraySet;

    .line 7067
    :cond_1
    iget-object v0, v1, Lcom/android/server/am/ProcessRecord;->pkgDeps:Landroid/util/ArraySet;

    invoke-virtual {v0, p1}, Landroid/util/ArraySet;->add(Ljava/lang/Object;)Z

    .line 7069
    :cond_2
    monitor-exit p0
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_1

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    .line 7070
    return-void

    .line 7062
    :catchall_0
    move-exception p1

    :try_start_4
    monitor-exit v0
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_0

    :try_start_5
    throw p1

    .line 7069
    :catchall_1
    move-exception p1

    monitor-exit p0
    :try_end_5
    .catchall {:try_start_5 .. :try_end_5} :catchall_1

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw p1
.end method

.method final addProcessToGcListLocked(Lcom/android/server/am/ProcessRecord;)V
    .locals 7

    .line 24625
    nop

    .line 24626
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mProcessesToGc:Ljava/util/ArrayList;

    invoke-virtual {v0}, Ljava/util/ArrayList;->size()I

    move-result v0

    const/4 v1, 0x1

    sub-int/2addr v0, v1

    :goto_0
    const/4 v2, 0x0

    if-ltz v0, :cond_1

    .line 24627
    iget-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mProcessesToGc:Ljava/util/ArrayList;

    invoke-virtual {v3, v0}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v3

    check-cast v3, Lcom/android/server/am/ProcessRecord;

    iget-wide v3, v3, Lcom/android/server/am/ProcessRecord;->lastRequestedGc:J

    iget-wide v5, p1, Lcom/android/server/am/ProcessRecord;->lastRequestedGc:J

    cmp-long v3, v3, v5

    if-gez v3, :cond_0

    .line 24629
    nop

    .line 24630
    iget-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mProcessesToGc:Ljava/util/ArrayList;

    add-int/2addr v0, v1

    invoke-virtual {v3, v0, p1}, Ljava/util/ArrayList;->add(ILjava/lang/Object;)V

    .line 24631
    goto :goto_1

    .line 24626
    :cond_0
    add-int/lit8 v0, v0, -0x1

    goto :goto_0

    .line 24634
    :cond_1
    move v1, v2

    :goto_1
    if-nez v1, :cond_2

    .line 24635
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mProcessesToGc:Ljava/util/ArrayList;

    invoke-virtual {v0, v2, p1}, Ljava/util/ArrayList;->add(ILjava/lang/Object;)V

    .line 24637
    :cond_2
    return-void
.end method

.method public alwaysShowUnsupportedCompileSdkWarning(Landroid/content/ComponentName;)V
    .locals 3

    .line 27623
    monitor-enter p0

    :try_start_0
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    .line 27624
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_1

    .line 27626
    :try_start_1
    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mAppWarnings:Lcom/android/server/am/AppWarnings;

    invoke-virtual {v2, p1}, Lcom/android/server/am/AppWarnings;->alwaysShowUnsupportedCompileSdkWarning(Landroid/content/ComponentName;)V
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 27628
    :try_start_2
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 27629
    nop

    .line 27630
    monitor-exit p0
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_1

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    .line 27631
    return-void

    .line 27628
    :catchall_0
    move-exception p1

    :try_start_3
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    throw p1

    .line 27630
    :catchall_1
    move-exception p1

    monitor-exit p0
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_1

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw p1
.end method

.method final appDiedLocked(Lcom/android/server/am/ProcessRecord;)V
    .locals 3
    .annotation build Lcom/android/internal/annotations/GuardedBy;
        value = "this"
    .end annotation

    .line 6221
    iget v0, p1, Lcom/android/server/am/ProcessRecord;->pid:I

    iget-object v1, p1, Lcom/android/server/am/ProcessRecord;->thread:Landroid/app/IApplicationThread;

    const/4 v2, 0x0

    invoke-virtual {p0, p1, v0, v1, v2}, Lcom/android/server/am/ActivityManagerService;->appDiedLocked(Lcom/android/server/am/ProcessRecord;ILandroid/app/IApplicationThread;Z)V

    .line 6222
    return-void
.end method

.method final appDiedLocked(Lcom/android/server/am/ProcessRecord;ILandroid/app/IApplicationThread;Z)V
    .locals 9
    .annotation build Lcom/android/internal/annotations/GuardedBy;
        value = "this"
    .end annotation

    .line 6228
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Landroid/util/SparseArray;

    monitor-enter v0

    .line 6229
    :try_start_0
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Landroid/util/SparseArray;

    invoke-virtual {v1, p2}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    move-result-object v1

    check-cast v1, Lcom/android/server/am/ProcessRecord;

    .line 6230
    if-eq v1, p1, :cond_0

    .line 6231
    const-string p3, "ActivityManager"

    new-instance p4, Ljava/lang/StringBuilder;

    invoke-direct {p4}, Ljava/lang/StringBuilder;-><init>()V

    const-string v2, "Spurious death for "

    invoke-virtual {p4, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {p4, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    const-string p1, ", curProc for "

    invoke-virtual {p4, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {p4, p2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string p1, ": "

    invoke-virtual {p4, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {p4, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    invoke-virtual {p4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object p1

    invoke-static {p3, p1}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 6232
    monitor-exit v0

    return-void

    .line 6234
    :cond_0
    monitor-exit v0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_1

    .line 6235
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mBatteryStatsService:Lcom/android/server/am/BatteryStatsService;

    invoke-virtual {v0}, Lcom/android/server/am/BatteryStatsService;->getActiveStatistics()Lcom/android/internal/os/BatteryStatsImpl;

    move-result-object v1

    .line 6236
    monitor-enter v1

    .line 6237
    :try_start_1
    iget-object v0, p1, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget v0, v0, Landroid/content/pm/ApplicationInfo;->uid:I

    invoke-virtual {v1, v0, p2}, Lcom/android/internal/os/BatteryStatsImpl;->noteProcessDiedLocked(II)V

    .line 6238
    monitor-exit v1
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 6240
    iget-boolean v0, p1, Lcom/android/server/am/ProcessRecord;->killed:Z

    const/4 v1, 0x1

    if-nez v0, :cond_2

    .line 6241
    if-nez p4, :cond_1

    .line 6242
    invoke-static {p2}, Landroid/os/Process;->killProcessQuiet(I)V

    .line 6244
    :cond_1
    iget p4, p1, Lcom/android/server/am/ProcessRecord;->uid:I

    invoke-static {p4, p2}, Lcom/android/server/am/ActivityManagerService;->killProcessGroup(II)V

    .line 6245
    iput-boolean v1, p1, Lcom/android/server/am/ProcessRecord;->killed:Z

    .line 6249
    :cond_2
    iget p4, p1, Lcom/android/server/am/ProcessRecord;->pid:I

    const/4 v0, 0x3

    const/4 v2, 0x2

    const/16 v3, 0x753b

    const/4 v4, 0x0

    if-ne p4, p2, :cond_8

    iget-object p4, p1, Lcom/android/server/am/ProcessRecord;->thread:Landroid/app/IApplicationThread;

    if-eqz p4, :cond_8

    iget-object p4, p1, Lcom/android/server/am/ProcessRecord;->thread:Landroid/app/IApplicationThread;

    .line 6250
    invoke-interface {p4}, Landroid/app/IApplicationThread;->asBinder()Landroid/os/IBinder;

    move-result-object p4

    invoke-interface {p3}, Landroid/app/IApplicationThread;->asBinder()Landroid/os/IBinder;

    move-result-object p3

    if-ne p4, p3, :cond_8

    .line 6251
    iget-object p3, p1, Lcom/android/server/am/ProcessRecord;->instr:Lcom/android/server/am/ActiveInstrumentation;

    if-nez p3, :cond_3

    .line 6252
    move p3, v1

    goto :goto_0

    .line 6251
    :cond_3
    nop

    .line 6252
    move p3, v4

    .line 6253
    :goto_0
    iget-boolean p4, p1, Lcom/android/server/am/ProcessRecord;->killedByAm:Z

    if-nez p4, :cond_4

    .line 6254
    const-string p4, "ActivityManager"

    new-instance v5, Ljava/lang/StringBuilder;

    invoke-direct {v5}, Ljava/lang/StringBuilder;-><init>()V

    const-string v6, "Process "

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget-object v6, p1, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v6, " (pid "

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v5, p2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v6, ") has died: "

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget v6, p1, Lcom/android/server/am/ProcessRecord;->setAdj:I

    .line 6256
    invoke-static {v6}, Lcom/android/server/am/ProcessList;->makeOomAdjString(I)Ljava/lang/String;

    move-result-object v6

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget v6, p1, Lcom/android/server/am/ProcessRecord;->setProcState:I

    .line 6257
    invoke-static {v6}, Lcom/android/server/am/ProcessList;->makeProcStateString(I)Ljava/lang/String;

    move-result-object v6

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v5}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v5

    iget-object v6, p1, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget v6, v6, Landroid/content/pm/ApplicationInfo;->uid:I

    .line 6254
    invoke-virtual {p0, p4, v5, v6}, Lcom/android/server/am/ActivityManagerService;->reportUidInfoMessageLocked(Ljava/lang/String;Ljava/lang/String;I)V

    .line 6258
    iput-boolean v1, p0, Lcom/android/server/am/ActivityManagerService;->mAllowLowerMemLevel:Z

    .line 6265
    move p4, p3

    goto :goto_1

    .line 6262
    :cond_4
    iput-boolean v4, p0, Lcom/android/server/am/ActivityManagerService;->mAllowLowerMemLevel:Z

    .line 6263
    nop

    .line 6265
    move p4, v4

    :goto_1
    sget-object v5, Lcom/android/server/am/ActivityManagerService;->mUxPerf:Landroid/util/BoostFramework;

    const/4 v6, 0x4

    if-eqz v5, :cond_5

    .line 6266
    sget-object v5, Lcom/android/server/am/ActivityManagerService;->mUxPerf:Landroid/util/BoostFramework;

    iget-object v7, p1, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;

    invoke-virtual {v5, v6, v4, v7, v4}, Landroid/util/BoostFramework;->perfUXEngine_events(IILjava/lang/String;I)I

    .line 6267
    sget-object v5, Lcom/android/server/am/ActivityManagerService;->mUxPerf:Landroid/util/BoostFramework;

    const/16 v7, 0x1091

    iget-object v8, p1, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;

    invoke-virtual {v5, v7, v8, p2, v4}, Landroid/util/BoostFramework;->perfHint(ILjava/lang/String;II)I

    .line 6269
    :cond_5
    const/4 p2, 0x5

    new-array p2, p2, [Ljava/lang/Object;

    iget v5, p1, Lcom/android/server/am/ProcessRecord;->userId:I

    invoke-static {v5}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v5

    aput-object v5, p2, v4

    iget v5, p1, Lcom/android/server/am/ProcessRecord;->pid:I

    invoke-static {v5}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v5

    aput-object v5, p2, v1

    iget-object v5, p1, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;

    aput-object v5, p2, v2

    iget v2, p1, Lcom/android/server/am/ProcessRecord;->setAdj:I

    .line 6270
    invoke-static {v2}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v2

    aput-object v2, p2, v0

    iget v0, p1, Lcom/android/server/am/ProcessRecord;->setProcState:I

    invoke-static {v0}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v0

    aput-object v0, p2, v6

    .line 6269
    invoke-static {v3, p2}, Landroid/util/EventLog;->writeEvent(I[Ljava/lang/Object;)I

    .line 6273
    invoke-direct {p0, p1, v4, v1}, Lcom/android/server/am/ActivityManagerService;->handleAppDiedLocked(Lcom/android/server/am/ProcessRecord;ZZ)V

    .line 6275
    if-eqz p3, :cond_6

    .line 6276
    invoke-virtual {p0}, Lcom/android/server/am/ActivityManagerService;->updateOomAdjLocked()V

    .line 6278
    :cond_6
    if-eqz p4, :cond_7

    .line 6279
    invoke-virtual {p0, p1}, Lcom/android/server/am/ActivityManagerService;->doLowMemReportIfNeededLocked(Lcom/android/server/am/ProcessRecord;)V

    .line 6281
    :cond_7
    goto :goto_2

    :cond_8
    iget p3, p1, Lcom/android/server/am/ProcessRecord;->pid:I

    if-eq p3, p2, :cond_9

    .line 6283
    const-string p3, "ActivityManager"

    new-instance p4, Ljava/lang/StringBuilder;

    invoke-direct {p4}, Ljava/lang/StringBuilder;-><init>()V

    const-string v5, "Process "

    invoke-virtual {p4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget-object v5, p1, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;

    invoke-virtual {p4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v5, " (pid "

    invoke-virtual {p4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {p4, p2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string p2, ") has died and restarted (pid "

    invoke-virtual {p4, p2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget p2, p1, Lcom/android/server/am/ProcessRecord;->pid:I

    invoke-virtual {p4, p2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string p2, ")."

    invoke-virtual {p4, p2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {p4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object p2

    iget-object p4, p1, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget p4, p4, Landroid/content/pm/ApplicationInfo;->uid:I

    invoke-virtual {p0, p3, p2, p4}, Lcom/android/server/am/ActivityManagerService;->reportUidInfoMessageLocked(Ljava/lang/String;Ljava/lang/String;I)V

    .line 6286
    new-array p2, v0, [Ljava/lang/Object;

    iget p3, p1, Lcom/android/server/am/ProcessRecord;->userId:I

    invoke-static {p3}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object p3

    aput-object p3, p2, v4

    iget p3, p1, Lcom/android/server/am/ProcessRecord;->pid:I

    invoke-static {p3}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object p3

    aput-object p3, p2, v1

    iget-object p1, p1, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;

    aput-object p1, p2, v2

    invoke-static {v3, p2}, Landroid/util/EventLog;->writeEvent(I[Ljava/lang/Object;)I

    .line 6294
    :cond_9
    :goto_2
    invoke-static {}, Lcom/android/server/am/MemoryStatUtil;->hasMemcg()Z

    move-result p1

    if-nez p1, :cond_a

    .line 6295
    const/16 p1, 0x41

    invoke-static {}, Landroid/os/SystemClock;->elapsedRealtime()J

    move-result-wide p2

    invoke-static {p1, p2, p3}, Landroid/util/StatsLog;->write(IJ)I

    .line 6297
    :cond_a
    return-void

    .line 6238
    :catchall_0
    move-exception p1

    :try_start_2
    monitor-exit v1
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    throw p1

    .line 6234
    :catchall_1
    move-exception p1

    :try_start_3
    monitor-exit v0
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_1

    throw p1
.end method

.method public appNotRespondingViaProvider(Landroid/os/IBinder;)V
    .locals 2

    .line 13112
    const-string v0, "android.permission.REMOVE_TASKS"

    const-string v1, "appNotRespondingViaProvider()"

    invoke-virtual {p0, v0, v1}, Lcom/android/server/am/ActivityManagerService;->enforceCallingPermission(Ljava/lang/String;Ljava/lang/String;)V

    .line 13114
    check-cast p1, Lcom/android/server/am/ContentProviderConnection;

    .line 13115
    if-nez p1, :cond_0

    .line 13116
    const-string p1, "ActivityManager"

    const-string v0, "ContentProviderConnection is null"

    invoke-static {p1, v0}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 13117
    return-void

    .line 13120
    :cond_0
    iget-object p1, p1, Lcom/android/server/am/ContentProviderConnection;->provider:Lcom/android/server/am/ContentProviderRecord;

    iget-object p1, p1, Lcom/android/server/am/ContentProviderRecord;->proc:Lcom/android/server/am/ProcessRecord;

    .line 13121
    if-nez p1, :cond_1

    .line 13122
    const-string p1, "ActivityManager"

    const-string v0, "Failed to find hosting ProcessRecord"

    invoke-static {p1, v0}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 13123
    return-void

    .line 13126
    :cond_1
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    new-instance v1, Lcom/android/server/am/ActivityManagerService$15;

    invoke-direct {v1, p0, p1}, Lcom/android/server/am/ActivityManagerService$15;-><init>(Lcom/android/server/am/ActivityManagerService;Lcom/android/server/am/ProcessRecord;)V

    invoke-virtual {v0, v1}, Lcom/android/server/am/ActivityManagerService$MainHandler;->post(Ljava/lang/Runnable;)Z

    .line 13133
    return-void
.end method

.method appRestrictedInBackgroundLocked(ILjava/lang/String;I)I
    .locals 2

    .line 9531
    const/4 v0, 0x2

    const/16 v1, 0x1a

    if-lt p3, v1, :cond_0

    .line 9535
    return v0

    .line 9538
    :cond_0
    iget-object p3, p0, Lcom/android/server/am/ActivityManagerService;->mAppOpsService:Lcom/android/server/AppOpsService;

    const/16 v1, 0x3f

    invoke-virtual {p3, v1, p1, p2}, Lcom/android/server/AppOpsService;->noteOperation(IILjava/lang/String;)I

    move-result p2

    .line 9543
    const/4 p3, 0x1

    packed-switch p2, :pswitch_data_0

    .line 9559
    return v0

    .line 9557
    :pswitch_0
    return p3

    .line 9546
    :pswitch_1
    iget-boolean p2, p0, Lcom/android/server/am/ActivityManagerService;->mForceBackgroundCheck:Z

    if-eqz p2, :cond_1

    .line 9547
    invoke-static {p1}, Landroid/os/UserHandle;->isCore(I)Z

    move-result p2

    if-nez p2, :cond_1

    .line 9548
    invoke-virtual {p0, p1, p3}, Lcom/android/server/am/ActivityManagerService;->isOnDeviceIdleWhitelistLocked(IZ)Z

    move-result p1

    if-nez p1, :cond_1

    .line 9553
    return p3

    .line 9555
    :cond_1
    const/4 p1, 0x0

    return p1

    nop

    :pswitch_data_0
    .packed-switch 0x0
        :pswitch_1
        :pswitch_0
    .end packed-switch
.end method

.method appServicesRestrictedInBackgroundLocked(ILjava/lang/String;I)I
    .locals 2

    .line 9568
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mPackageManagerInt:Landroid/content/pm/PackageManagerInternal;

    invoke-virtual {v0, p2}, Landroid/content/pm/PackageManagerInternal;->isPackagePersistent(Ljava/lang/String;)Z

    move-result v0

    const/4 v1, 0x0

    if-eqz v0, :cond_0

    .line 9573
    return v1

    .line 9577
    :cond_0
    invoke-direct {p0, p1}, Lcom/android/server/am/ActivityManagerService;->uidOnBackgroundWhitelist(I)Z

    move-result v0

    if-eqz v0, :cond_1

    .line 9582
    return v1

    .line 9586
    :cond_1
    invoke-virtual {p0, p1, v1}, Lcom/android/server/am/ActivityManagerService;->isOnDeviceIdleWhitelistLocked(IZ)Z

    move-result v0

    if-eqz v0, :cond_2

    .line 9591
    return v1

    .line 9595
    :cond_2
    invoke-virtual {p0, p1, p2, p3}, Lcom/android/server/am/ActivityManagerService;->appRestrictedInBackgroundLocked(ILjava/lang/String;I)I

    move-result p1

    return p1
.end method

.method final applyUpdateLockStateLocked(Lcom/android/server/am/ActivityRecord;)V
    .locals 5

    .line 3781
    const/4 v0, 0x0

    if-eqz p1, :cond_0

    iget-boolean v1, p1, Lcom/android/server/am/ActivityRecord;->immersive:Z

    if-eqz v1, :cond_0

    const/4 v1, 0x1

    goto :goto_0

    .line 3782
    :cond_0
    move v1, v0

    :goto_0
    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    iget-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    const/16 v4, 0x25

    .line 3783
    invoke-virtual {v3, v4, v1, v0, p1}, Lcom/android/server/am/ActivityManagerService$MainHandler;->obtainMessage(IIILjava/lang/Object;)Landroid/os/Message;

    move-result-object p1

    .line 3782
    invoke-virtual {v2, p1}, Lcom/android/server/am/ActivityManagerService$MainHandler;->sendMessage(Landroid/os/Message;)Z

    .line 3784
    return-void
.end method

.method final applyUpdateVrModeLocked(Lcom/android/server/am/ActivityRecord;)V
    .locals 4

    .line 3794
    iget-object v0, p1, Lcom/android/server/am/ActivityRecord;->requestedVrComponent:Landroid/content/ComponentName;

    if-eqz v0, :cond_0

    invoke-virtual {p1}, Lcom/android/server/am/ActivityRecord;->getDisplayId()I

    move-result v0

    if-eqz v0, :cond_0

    .line 3795
    const-string v0, "ActivityManager"

    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string v2, "Moving "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget-object v2, p1, Lcom/android/server/am/ActivityRecord;->shortComponentName:Ljava/lang/String;

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v2, " from stack "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {p1}, Lcom/android/server/am/ActivityRecord;->getStackId()I

    move-result v2

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v2, " to main stack for VR"

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-static {v0, v1}, Landroid/util/Slog;->i(Ljava/lang/String;Ljava/lang/String;)I

    .line 3797
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mStackSupervisor:Lcom/android/server/am/ActivityStackSupervisor;

    invoke-virtual {v0}, Lcom/android/server/am/ActivityStackSupervisor;->getDefaultDisplay()Lcom/android/server/am/ActivityDisplay;

    move-result-object v0

    .line 3798
    invoke-virtual {p1}, Lcom/android/server/am/ActivityRecord;->getActivityType()I

    move-result v1

    .line 3797
    const/4 v2, 0x1

    invoke-virtual {v0, v2, v1, v2}, Lcom/android/server/am/ActivityDisplay;->getOrCreateStack(IIZ)Lcom/android/server/am/ActivityStack;

    move-result-object v0

    .line 3799
    invoke-virtual {p1}, Lcom/android/server/am/ActivityRecord;->getTask()Lcom/android/server/am/TaskRecord;

    move-result-object v1

    iget v1, v1, Lcom/android/server/am/TaskRecord;->taskId:I

    iget v0, v0, Lcom/android/server/am/ActivityStack;->mStackId:I

    invoke-virtual {p0, v1, v0, v2}, Lcom/android/server/am/ActivityManagerService;->moveTaskToStack(IIZ)V

    .line 3801
    :cond_0
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    const/16 v2, 0x3d

    .line 3802
    const/4 v3, 0x0

    invoke-virtual {v1, v2, v3, v3, p1}, Lcom/android/server/am/ActivityManagerService$MainHandler;->obtainMessage(IIILjava/lang/Object;)Landroid/os/Message;

    move-result-object p1

    .line 3801
    invoke-virtual {v0, p1}, Lcom/android/server/am/ActivityManagerService$MainHandler;->sendMessage(Landroid/os/Message;)Z

    .line 3803
    return-void
.end method

.method public attachAgent(Ljava/lang/String;Ljava/lang/String;)V
    .locals 3

    .line 27498
    :try_start_0
    monitor-enter p0
    :try_end_0
    .catch Landroid/os/RemoteException; {:try_start_0 .. :try_end_0} :catch_0

    :try_start_1
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    .line 27499
    const/4 v0, 0x0

    const-string v1, "attachAgent"

    invoke-direct {p0, p1, v0, v1}, Lcom/android/server/am/ActivityManagerService;->findProcessLocked(Ljava/lang/String;ILjava/lang/String;)Lcom/android/server/am/ProcessRecord;

    move-result-object v0

    .line 27500
    if-eqz v0, :cond_2

    iget-object v1, v0, Lcom/android/server/am/ProcessRecord;->thread:Landroid/app/IApplicationThread;

    if-eqz v1, :cond_2

    .line 27504
    const-string p1, "1"

    const-string/jumbo v1, "ro.debuggable"

    const-string v2, "0"

    invoke-static {v1, v2}, Landroid/os/SystemProperties;->get(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;

    move-result-object v1

    invoke-virtual {p1, v1}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result p1

    .line 27505
    if-nez p1, :cond_1

    .line 27506
    iget-object p1, v0, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget p1, p1, Landroid/content/pm/ApplicationInfo;->flags:I

    and-int/lit8 p1, p1, 0x2

    if-eqz p1, :cond_0

    goto :goto_0

    .line 27507
    :cond_0
    new-instance p1, Ljava/lang/SecurityException;

    new-instance p2, Ljava/lang/StringBuilder;

    invoke-direct {p2}, Ljava/lang/StringBuilder;-><init>()V

    const-string v1, "Process not debuggable: "

    invoke-virtual {p2, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {p2, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    invoke-virtual {p2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object p2

    invoke-direct {p1, p2}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw p1

    .line 27511
    :cond_1
    :goto_0
    iget-object p1, v0, Lcom/android/server/am/ProcessRecord;->thread:Landroid/app/IApplicationThread;

    invoke-interface {p1, p2}, Landroid/app/IApplicationThread;->attachAgent(Ljava/lang/String;)V

    .line 27512
    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    :try_start_2
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V
    :try_end_2
    .catch Landroid/os/RemoteException; {:try_start_2 .. :try_end_2} :catch_0

    .line 27515
    nop

    .line 27516
    return-void

    .line 27501
    :cond_2
    :try_start_3
    new-instance p2, Ljava/lang/IllegalArgumentException;

    new-instance v0, Ljava/lang/StringBuilder;

    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V

    const-string v1, "Unknown process: "

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object p1

    invoke-direct {p2, p1}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw p2

    .line 27512
    :catchall_0
    move-exception p1

    monitor-exit p0
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_0

    :try_start_4
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw p1
    :try_end_4
    .catch Landroid/os/RemoteException; {:try_start_4 .. :try_end_4} :catch_0

    .line 27513
    :catch_0
    move-exception p1

    .line 27514
    new-instance p1, Ljava/lang/IllegalStateException;

    const-string p2, "Process disappeared"

    invoke-direct {p1, p2}, Ljava/lang/IllegalStateException;-><init>(Ljava/lang/String;)V

    throw p1
.end method

.method public final attachApplication(Landroid/app/IApplicationThread;J)V
    .locals 8

    .line 8147
    monitor-enter p0

    :try_start_0
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    .line 8148
    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result v2

    .line 8149
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v3

    .line 8150
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v6

    .line 8151
    move-object v0, p0

    move-object v1, p1

    move-wide v4, p2

    invoke-direct/range {v0 .. v5}, Lcom/android/server/am/ActivityManagerService;->attachApplicationLocked(Landroid/app/IApplicationThread;IIJ)Z

    .line 8152
    invoke-static {v6, v7}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 8153
    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    .line 8154
    return-void

    .line 8153
    :catchall_0
    move-exception p1

    :try_start_1
    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw p1
.end method

.method backgroundServicesFinishedLocked(I)V
    .locals 4

    .line 22329
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mBroadcastQueues:[Lcom/android/server/am/BroadcastQueue;

    array-length v1, v0

    const/4 v2, 0x0

    :goto_0
    if-ge v2, v1, :cond_0

    aget-object v3, v0, v2

    .line 22330
    invoke-virtual {v3, p1}, Lcom/android/server/am/BroadcastQueue;->backgroundServicesFinishedLocked(I)V

    .line 22329
    add-int/lit8 v2, v2, 0x1

    goto :goto_0

    .line 22332
    :cond_0
    return-void
.end method

.method public backgroundWhitelistUid(I)V
    .locals 4

    .line 13410
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v0

    const/16 v1, 0x3e8

    if-ne v0, v1, :cond_0

    .line 13417
    monitor-enter p0

    :try_start_0
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    .line 13418
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mBackgroundAppIdWhitelist:[I

    array-length v0, v0

    .line 13419
    add-int/lit8 v1, v0, 0x1

    new-array v1, v1, [I

    .line 13420
    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mBackgroundAppIdWhitelist:[I

    const/4 v3, 0x0

    invoke-static {v2, v3, v1, v3, v0}, Ljava/lang/System;->arraycopy(Ljava/lang/Object;ILjava/lang/Object;II)V

    .line 13421
    invoke-static {p1}, Landroid/os/UserHandle;->getAppId(I)I

    move-result p1

    aput p1, v1, v0

    .line 13422
    iput-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mBackgroundAppIdWhitelist:[I

    .line 13423
    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    .line 13424
    return-void

    .line 13423
    :catchall_0
    move-exception p1

    :try_start_1
    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw p1

    .line 13411
    :cond_0
    new-instance p1, Ljava/lang/SecurityException;

    const-string v0, "Only the OS may call backgroundWhitelistUid()"

    invoke-direct {p1, v0}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw p1
.end method

.method public backupAgentCreated(Ljava/lang/String;Landroid/os/IBinder;)V
    .locals 3

    .line 20986
    monitor-enter p0

    :try_start_0
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    .line 20987
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mBackupAppName:Ljava/lang/String;

    invoke-virtual {p1, v0}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v0

    if-nez v0, :cond_0

    .line 20988
    const-string p2, "ActivityManager"

    new-instance v0, Ljava/lang/StringBuilder;

    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V

    const-string v1, "Backup agent created for "

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string p1, " but not requested!"

    invoke-virtual {v0, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object p1

    invoke-static {p2, p1}, Landroid/util/Slog;->e(Ljava/lang/String;Ljava/lang/String;)I

    .line 20989
    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_1

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    return-void

    .line 20991
    :cond_0
    :try_start_1
    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_1

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    .line 20993
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v0

    .line 20995
    :try_start_2
    const-string v2, "backup"

    .line 20996
    invoke-static {v2}, Landroid/os/ServiceManager;->getService(Ljava/lang/String;)Landroid/os/IBinder;

    move-result-object v2

    .line 20995
    invoke-static {v2}, Landroid/app/backup/IBackupManager$Stub;->asInterface(Landroid/os/IBinder;)Landroid/app/backup/IBackupManager;

    move-result-object v2

    .line 20997
    invoke-interface {v2, p1, p2}, Landroid/app/backup/IBackupManager;->agentConnected(Ljava/lang/String;Landroid/os/IBinder;)V
    :try_end_2
    .catch Landroid/os/RemoteException; {:try_start_2 .. :try_end_2} :catch_1
    .catch Ljava/lang/Exception; {:try_start_2 .. :try_end_2} :catch_0
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    goto :goto_1

    .line 21004
    :catchall_0
    move-exception p1

    goto :goto_0

    .line 21000
    :catch_0
    move-exception p1

    .line 21001
    :try_start_3
    const-string p2, "ActivityManager"

    const-string v2, "Exception trying to deliver BackupAgent binding: "

    invoke-static {p2, v2}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 21002
    invoke-virtual {p1}, Ljava/lang/Exception;->printStackTrace()V
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_0

    goto :goto_1

    .line 21004
    :goto_0
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    throw p1

    .line 20998
    :catch_1
    move-exception p1

    .line 21004
    :goto_1
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 21005
    nop

    .line 21006
    return-void

    .line 20991
    :catchall_1
    move-exception p1

    :try_start_4
    monitor-exit p0
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_1

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw p1
.end method

.method public batteryNeedsCpuUpdate()V
    .locals 0

    .line 3530
    invoke-virtual {p0}, Lcom/android/server/am/ActivityManagerService;->updateCpuStatsNow()V

    .line 3531
    return-void
.end method

.method public batteryPowerChanged(Z)V
    .locals 1

    .line 3537
    invoke-virtual {p0}, Lcom/android/server/am/ActivityManagerService;->updateCpuStatsNow()V

    .line 3538
    monitor-enter p0

    :try_start_0
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    .line 3539
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Landroid/util/SparseArray;

    monitor-enter v0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_1

    .line 3540
    :try_start_1
    iput-boolean p1, p0, Lcom/android/server/am/ActivityManagerService;->mOnBattery:Z

    .line 3541
    monitor-exit v0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 3542
    :try_start_2
    monitor-exit p0
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_1

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    .line 3543
    return-void

    .line 3541
    :catchall_0
    move-exception p1

    :try_start_3
    monitor-exit v0
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_0

    :try_start_4
    throw p1

    .line 3542
    :catchall_1
    move-exception p1

    monitor-exit p0
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_1

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw p1
.end method

.method public batterySendBroadcast(Landroid/content/Intent;)V
    .locals 19

    .line 3552
    monitor-enter p0

    :try_start_0
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    .line 3553
    const/4 v2, 0x0

    const/4 v3, 0x0

    const/4 v5, 0x0

    const/4 v6, 0x0

    const/4 v7, 0x0

    const/4 v8, 0x0

    const/4 v9, 0x0

    const/4 v10, 0x0

    const/4 v11, -0x1

    const/4 v12, 0x0

    const/4 v13, 0x0

    const/4 v14, 0x0

    const/4 v15, -0x1

    const/16 v16, 0x3e8

    const/16 v17, -0x1

    move-object/from16 v1, p0

    move-object/from16 v4, p1

    invoke-virtual/range {v1 .. v17}, Lcom/android/server/am/ActivityManagerService;->broadcastIntentLocked(Lcom/android/server/am/ProcessRecord;Ljava/lang/String;Landroid/content/Intent;Ljava/lang/String;Landroid/content/IIntentReceiver;ILjava/lang/String;Landroid/os/Bundle;[Ljava/lang/String;ILandroid/os/Bundle;ZZIII)I

    .line 3556
    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    .line 3557
    return-void

    .line 3556
    :catchall_0
    move-exception v0

    :try_start_1
    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw v0
.end method

.method public batteryStatsReset()V
    .locals 0

    .line 3547
    invoke-static {}, Lcom/android/server/BinderCallsStatsService;->reset()V

    .line 3548
    return-void
.end method

.method public bindBackupAgent(Ljava/lang/String;II)Z
    .locals 11

    .line 20872
    const-string v0, "android.permission.CONFIRM_FULL_BACKUP"

    const-string v1, "bindBackupAgent"

    invoke-virtual {p0, v0, v1}, Lcom/android/server/am/ActivityManagerService;->enforceCallingPermission(Ljava/lang/String;Ljava/lang/String;)V

    .line 20874
    invoke-static {}, Landroid/app/AppGlobals;->getPackageManager()Landroid/content/pm/IPackageManager;

    move-result-object v0

    .line 20875
    nop

    .line 20877
    const/16 v1, 0x400

    :try_start_0
    invoke-interface {v0, p1, v1, p3}, Landroid/content/pm/IPackageManager;->getApplicationInfo(Ljava/lang/String;II)Landroid/content/pm/ApplicationInfo;

    move-result-object p3
    :try_end_0
    .catch Landroid/os/RemoteException; {:try_start_0 .. :try_end_0} :catch_0

    .line 20880
    goto :goto_0

    .line 20878
    :catch_0
    move-exception p3

    .line 20881
    const/4 p3, 0x0

    :goto_0
    const/4 v10, 0x0

    if-nez p3, :cond_0

    .line 20882
    const-string p2, "ActivityManager"

    new-instance p3, Ljava/lang/StringBuilder;

    invoke-direct {p3}, Ljava/lang/StringBuilder;-><init>()V

    const-string v0, "Unable to bind backup agent for "

    invoke-virtual {p3, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {p3, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {p3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object p1

    invoke-static {p2, p1}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 20883
    return v10

    .line 20889
    :cond_0
    monitor-enter p0

    :try_start_1
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    .line 20891
    nop

    .line 20892
    iget-object p1, p0, Lcom/android/server/am/ActivityManagerService;->mBatteryStatsService:Lcom/android/server/am/BatteryStatsService;

    invoke-virtual {p1}, Lcom/android/server/am/BatteryStatsService;->getActiveStatistics()Lcom/android/internal/os/BatteryStatsImpl;

    move-result-object p1

    .line 20893
    monitor-enter p1
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_1

    .line 20894
    :try_start_2
    iget v0, p3, Landroid/content/pm/ApplicationInfo;->uid:I

    iget-object v1, p3, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;

    iget-object v2, p3, Landroid/content/pm/ApplicationInfo;->name:Ljava/lang/String;

    invoke-virtual {p1, v0, v1, v2}, Lcom/android/internal/os/BatteryStatsImpl;->getServiceStatsLocked(ILjava/lang/String;Ljava/lang/String;)Lcom/android/internal/os/BatteryStatsImpl$Uid$Pkg$Serv;

    move-result-object v0

    .line 20895
    monitor-exit p1
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    .line 20899
    :try_start_3
    invoke-static {}, Landroid/app/AppGlobals;->getPackageManager()Landroid/content/pm/IPackageManager;

    move-result-object p1

    iget-object v1, p3, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;

    iget v2, p3, Landroid/content/pm/ApplicationInfo;->uid:I

    .line 20900
    invoke-static {v2}, Landroid/os/UserHandle;->getUserId(I)I

    move-result v2

    .line 20899
    invoke-interface {p1, v1, v10, v2}, Landroid/content/pm/IPackageManager;->setPackageStoppedState(Ljava/lang/String;ZI)V
    :try_end_3
    .catch Landroid/os/RemoteException; {:try_start_3 .. :try_end_3} :catch_2
    .catch Ljava/lang/IllegalArgumentException; {:try_start_3 .. :try_end_3} :catch_1
    .catchall {:try_start_3 .. :try_end_3} :catchall_1

    goto :goto_1

    .line 20902
    :catch_1
    move-exception p1

    .line 20903
    :try_start_4
    const-string v1, "ActivityManager"

    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    const-string v3, "Failed trying to unstop package "

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget-object v3, p3, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v3, ": "

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v2, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object p1

    invoke-static {v1, p1}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    goto :goto_2

    .line 20901
    :catch_2
    move-exception p1

    .line 20905
    :goto_1
    nop

    .line 20907
    :goto_2
    new-instance p1, Lcom/android/server/am/BackupRecord;

    invoke-direct {p1, v0, p3, p2}, Lcom/android/server/am/BackupRecord;-><init>(Lcom/android/internal/os/BatteryStatsImpl$Uid$Pkg$Serv;Landroid/content/pm/ApplicationInfo;I)V

    .line 20909
    if-nez p2, :cond_1

    .line 20910
    new-instance v0, Landroid/content/ComponentName;

    iget-object v1, p3, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;

    iget-object v2, p3, Landroid/content/pm/ApplicationInfo;->backupAgentName:Ljava/lang/String;

    invoke-direct {v0, v1, v2}, Landroid/content/ComponentName;-><init>(Ljava/lang/String;Ljava/lang/String;)V

    goto :goto_3

    .line 20911
    :cond_1
    new-instance v0, Landroid/content/ComponentName;

    const-string v1, "android"

    const-string v2, "FullBackupAgent"

    invoke-direct {v0, v1, v2}, Landroid/content/ComponentName;-><init>(Ljava/lang/String;Ljava/lang/String;)V

    .line 20913
    :goto_3
    move-object v6, v0

    iget-object v1, p3, Landroid/content/pm/ApplicationInfo;->processName:Ljava/lang/String;

    const/4 v3, 0x0

    const/4 v4, 0x0

    const-string v5, "backup"

    const/4 v7, 0x0

    const/4 v8, 0x0

    const/4 v9, 0x0

    move-object v0, p0

    move-object v2, p3

    invoke-virtual/range {v0 .. v9}, Lcom/android/server/am/ActivityManagerService;->startProcessLocked(Ljava/lang/String;Landroid/content/pm/ApplicationInfo;ZILjava/lang/String;Landroid/content/ComponentName;ZZZ)Lcom/android/server/am/ProcessRecord;

    move-result-object v0

    .line 20915
    if-nez v0, :cond_2

    .line 20916
    const-string p2, "ActivityManager"

    new-instance p3, Ljava/lang/StringBuilder;

    invoke-direct {p3}, Ljava/lang/StringBuilder;-><init>()V

    const-string v0, "Unable to start backup agent process "

    invoke-virtual {p3, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {p3, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    invoke-virtual {p3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object p1

    invoke-static {p2, p1}, Landroid/util/Slog;->e(Ljava/lang/String;Ljava/lang/String;)I

    .line 20917
    monitor-exit p0
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_1

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    return v10

    .line 20924
    :cond_2
    :try_start_5
    iget v1, p3, Landroid/content/pm/ApplicationInfo;->uid:I

    invoke-static {v1}, Landroid/os/UserHandle;->isApp(I)Z

    move-result v1

    const/4 v2, 0x1

    if-eqz v1, :cond_3

    if-ne p2, v2, :cond_3

    .line 20926
    iput-boolean v2, v0, Lcom/android/server/am/ProcessRecord;->inFullBackup:Z

    .line 20928
    :cond_3
    iput-object v0, p1, Lcom/android/server/am/BackupRecord;->app:Lcom/android/server/am/ProcessRecord;

    .line 20929
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mBackupTarget:Lcom/android/server/am/BackupRecord;

    const/4 v3, -0x1

    if-eqz v1, :cond_4

    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mBackupTarget:Lcom/android/server/am/BackupRecord;

    iget-object v1, v1, Lcom/android/server/am/BackupRecord;->appInfo:Landroid/content/pm/ApplicationInfo;

    iget v1, v1, Landroid/content/pm/ApplicationInfo;->uid:I

    goto :goto_4

    .line 20930
    :cond_4
    move v1, v3

    :goto_4
    iget-boolean v4, v0, Lcom/android/server/am/ProcessRecord;->inFullBackup:Z

    if-eqz v4, :cond_5

    iget-object v4, p1, Lcom/android/server/am/BackupRecord;->appInfo:Landroid/content/pm/ApplicationInfo;

    iget v4, v4, Landroid/content/pm/ApplicationInfo;->uid:I

    goto :goto_5

    .line 20931
    :cond_5
    move v4, v3

    :goto_5
    iput-object p1, p0, Lcom/android/server/am/ActivityManagerService;->mBackupTarget:Lcom/android/server/am/BackupRecord;

    .line 20932
    iget-object p1, p3, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;

    iput-object p1, p0, Lcom/android/server/am/ActivityManagerService;->mBackupAppName:Ljava/lang/String;

    .line 20935
    invoke-virtual {p0, v0, v2}, Lcom/android/server/am/ActivityManagerService;->updateOomAdjLocked(Lcom/android/server/am/ProcessRecord;Z)Z

    .line 20939
    iget-object p1, v0, Lcom/android/server/am/ProcessRecord;->thread:Landroid/app/IApplicationThread;
    :try_end_5
    .catchall {:try_start_5 .. :try_end_5} :catchall_1

    if-eqz p1, :cond_6

    .line 20942
    :try_start_6
    iget-object p1, v0, Lcom/android/server/am/ProcessRecord;->thread:Landroid/app/IApplicationThread;

    .line 20943
    invoke-virtual {p0, p3}, Lcom/android/server/am/ActivityManagerService;->compatibilityInfoForPackageLocked(Landroid/content/pm/ApplicationInfo;)Landroid/content/res/CompatibilityInfo;

    move-result-object v0

    .line 20942
    invoke-interface {p1, p3, v0, p2}, Landroid/app/IApplicationThread;->scheduleCreateBackupAgent(Landroid/content/pm/ApplicationInfo;Landroid/content/res/CompatibilityInfo;I)V
    :try_end_6
    .catch Landroid/os/RemoteException; {:try_start_6 .. :try_end_6} :catch_3
    .catchall {:try_start_6 .. :try_end_6} :catchall_1

    .line 20946
    goto :goto_6

    .line 20944
    :catch_3
    move-exception p1

    .line 20954
    :cond_6
    :goto_6
    :try_start_7
    monitor-exit p0
    :try_end_7
    .catchall {:try_start_7 .. :try_end_7} :catchall_1

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    .line 20956
    const-class p1, Lcom/android/server/job/JobSchedulerInternal;

    invoke-static {p1}, Lcom/android/server/LocalServices;->getService(Ljava/lang/Class;)Ljava/lang/Object;

    move-result-object p1

    check-cast p1, Lcom/android/server/job/JobSchedulerInternal;

    .line 20957
    if-eq v1, v3, :cond_7

    .line 20958
    invoke-interface {p1, v1}, Lcom/android/server/job/JobSchedulerInternal;->removeBackingUpUid(I)V

    .line 20960
    :cond_7
    if-eq v4, v3, :cond_8

    .line 20961
    invoke-interface {p1, v4}, Lcom/android/server/job/JobSchedulerInternal;->addBackingUpUid(I)V

    .line 20964
    :cond_8
    return v2

    .line 20895
    :catchall_0
    move-exception p2

    :try_start_8
    monitor-exit p1
    :try_end_8
    .catchall {:try_start_8 .. :try_end_8} :catchall_0

    :try_start_9
    throw p2

    .line 20954
    :catchall_1
    move-exception p1

    monitor-exit p0
    :try_end_9
    .catchall {:try_start_9 .. :try_end_9} :catchall_1

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw p1
.end method

.method public bindService(Landroid/app/IApplicationThread;Landroid/os/IBinder;Landroid/content/Intent;Ljava/lang/String;Landroid/app/IServiceConnection;ILjava/lang/String;I)I
    .locals 11
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Landroid/os/TransactionTooLargeException;
        }
    .end annotation

    move-object v1, p0

    .line 20805
    const-string v0, "bindService"

    invoke-virtual {v1, v0}, Lcom/android/server/am/ActivityManagerService;->enforceNotIsolatedCaller(Ljava/lang/String;)V

    .line 20808
    if-eqz p3, :cond_1

    invoke-virtual {p3}, Landroid/content/Intent;->hasFileDescriptors()Z

    move-result v2

    const/4 v3, 0x1

    if-eq v2, v3, :cond_0

    goto :goto_0

    .line 20809
    :cond_0
    new-instance v0, Ljava/lang/IllegalArgumentException;

    const-string v1, "File descriptors passed in Intent"

    invoke-direct {v0, v1}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v0

    .line 20812
    :cond_1
    :goto_0
    if-eqz p7, :cond_2

    .line 20816
    monitor-enter p0

    :try_start_0
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    .line 20817
    iget-object v2, v1, Lcom/android/server/am/ActivityManagerService;->mServices:Lcom/android/server/am/ActiveServices;

    move-object v3, p1

    move-object v4, p2

    move-object v5, p3

    move-object v6, p4

    move-object/from16 v7, p5

    move/from16 v8, p6

    move-object/from16 v9, p7

    move/from16 v10, p8

    invoke-virtual/range {v2 .. v10}, Lcom/android/server/am/ActiveServices;->bindServiceLocked(Landroid/app/IApplicationThread;Landroid/os/IBinder;Landroid/content/Intent;Ljava/lang/String;Landroid/app/IServiceConnection;ILjava/lang/String;I)I

    move-result v0

    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    return v0

    .line 20819
    :catchall_0
    move-exception v0

    :try_start_1
    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw v0

    .line 20813
    :cond_2
    new-instance v0, Ljava/lang/IllegalArgumentException;

    const-string v1, "callingPackage cannot be null"

    invoke-direct {v0, v1}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v0
.end method

.method public bootAnimationComplete()V
    .locals 3

    .line 8324
    monitor-enter p0

    :try_start_0
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    .line 8325
    iget-boolean v0, p0, Lcom/android/server/am/ActivityManagerService;->mCallFinishBooting:Z

    .line 8326
    const/4 v1, 0x1

    iput-boolean v1, p0, Lcom/android/server/am/ActivityManagerService;->mBootAnimationComplete:Z

    .line 8327
    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    .line 8328
    if-eqz v0, :cond_0

    .line 8329
    const-string v0, "FinishBooting"

    const-wide/16 v1, 0x40

    invoke-static {v1, v2, v0}, Landroid/os/Trace;->traceBegin(JLjava/lang/String;)V

    .line 8330
    invoke-virtual {p0}, Lcom/android/server/am/ActivityManagerService;->finishBooting()V

    .line 8331
    invoke-static {v1, v2}, Landroid/os/Trace;->traceEnd(J)V

    .line 8333
    :cond_0
    return-void

    .line 8327
    :catchall_0
    move-exception v0

    :try_start_1
    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw v0
.end method

.method public final broadcastIntent(Landroid/app/IApplicationThread;Landroid/content/Intent;Ljava/lang/String;Landroid/content/IIntentReceiver;ILjava/lang/String;Landroid/os/Bundle;[Ljava/lang/String;ILandroid/os/Bundle;ZZI)I
    .locals 21

    move-object/from16 v15, p0

    .line 22247
    const-string v0, "broadcastIntent"

    invoke-virtual {v15, v0}, Lcom/android/server/am/ActivityManagerService;->enforceNotIsolatedCaller(Ljava/lang/String;)V

    .line 22248
    monitor-enter p0

    :try_start_0
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    .line 22249
    move-object/from16 v0, p2

    invoke-virtual {v15, v0}, Lcom/android/server/am/ActivityManagerService;->verifyBroadcastLocked(Landroid/content/Intent;)Landroid/content/Intent;

    move-result-object v4

    .line 22251
    invoke-virtual/range {p0 .. p1}, Lcom/android/server/am/ActivityManagerService;->getRecordForAppLocked(Landroid/app/IApplicationThread;)Lcom/android/server/am/ProcessRecord;

    move-result-object v2

    .line 22252
    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result v0

    .line 22253
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v16

    .line 22254
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v13

    .line 22255
    nop

    .line 22256
    if-eqz v2, :cond_0

    iget-object v1, v2, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget-object v1, v1, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    goto :goto_0

    :cond_0
    const/4 v1, 0x0

    .line 22255
    :goto_0
    move-object v3, v1

    move-object v1, v15

    move-object/from16 v5, p3

    move-object/from16 v6, p4

    move/from16 v7, p5

    move-object/from16 v8, p6

    move-object/from16 v9, p7

    move-object/from16 v10, p8

    move/from16 v11, p9

    move-object/from16 v12, p10

    move-wide/from16 v18, v13

    move/from16 v13, p11

    move/from16 v14, p12

    move-object/from16 v20, v15

    move v15, v0

    move/from16 v17, p13

    :try_start_1
    invoke-virtual/range {v1 .. v17}, Lcom/android/server/am/ActivityManagerService;->broadcastIntentLocked(Lcom/android/server/am/ProcessRecord;Ljava/lang/String;Landroid/content/Intent;Ljava/lang/String;Landroid/content/IIntentReceiver;ILjava/lang/String;Landroid/os/Bundle;[Ljava/lang/String;ILandroid/os/Bundle;ZZIII)I

    move-result v0

    .line 22260
    move-wide/from16 v1, v18

    invoke-static {v1, v2}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 22261
    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_1

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    return v0

    .line 22262
    :catchall_0
    move-exception v0

    move-object/from16 v20, v15

    :goto_1
    :try_start_2
    monitor-exit p0
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_1

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw v0

    :catchall_1
    move-exception v0

    goto :goto_1
.end method

.method broadcastIntentInPackage(Ljava/lang/String;ILandroid/content/Intent;Ljava/lang/String;Landroid/content/IIntentReceiver;ILjava/lang/String;Landroid/os/Bundle;Ljava/lang/String;Landroid/os/Bundle;ZZI)I
    .locals 21

    move-object/from16 v15, p0

    .line 22271
    monitor-enter p0

    :try_start_0
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    .line 22272
    move-object/from16 v1, p3

    invoke-virtual {v15, v1}, Lcom/android/server/am/ActivityManagerService;->verifyBroadcastLocked(Landroid/content/Intent;)Landroid/content/Intent;

    move-result-object v4

    .line 22274
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v13

    .line 22275
    if-nez p9, :cond_0

    const/4 v0, 0x0

    .line 22277
    move-object v10, v0

    goto :goto_0

    .line 22276
    :cond_0
    const/4 v1, 0x1

    new-array v1, v1, [Ljava/lang/String;

    const/4 v2, 0x0

    aput-object p9, v1, v2
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 22277
    move-object v10, v1

    :goto_0
    const/4 v2, 0x0

    const/4 v11, -0x1

    const/4 v0, -0x1

    move-object v1, v15

    move-object/from16 v3, p1

    move-object/from16 v5, p4

    move-object/from16 v6, p5

    move/from16 v7, p6

    move-object/from16 v8, p7

    move-object/from16 v9, p8

    move-object/from16 v12, p10

    move-wide/from16 v18, v13

    move/from16 v13, p11

    move/from16 v14, p12

    move-object/from16 v20, v15

    move v15, v0

    move/from16 v16, p2

    move/from16 v17, p13

    :try_start_1
    invoke-virtual/range {v1 .. v17}, Lcom/android/server/am/ActivityManagerService;->broadcastIntentLocked(Lcom/android/server/am/ProcessRecord;Ljava/lang/String;Landroid/content/Intent;Ljava/lang/String;Landroid/content/IIntentReceiver;ILjava/lang/String;Landroid/os/Bundle;[Ljava/lang/String;ILandroid/os/Bundle;ZZIII)I

    move-result v0

    .line 22281
    move-wide/from16 v1, v18

    invoke-static {v1, v2}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 22282
    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_1

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    return v0

    .line 22283
    :catchall_0
    move-exception v0

    move-object/from16 v20, v15

    :goto_1
    :try_start_2
    monitor-exit p0
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_1

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw v0

    :catchall_1
    move-exception v0

    goto :goto_1
.end method

.method final broadcastIntentLocked(Lcom/android/server/am/ProcessRecord;Ljava/lang/String;Landroid/content/Intent;Ljava/lang/String;Landroid/content/IIntentReceiver;ILjava/lang/String;Landroid/os/Bundle;[Ljava/lang/String;ILandroid/os/Bundle;ZZIII)I
    .locals 46
    .annotation build Lcom/android/internal/annotations/GuardedBy;
        value = "this"
    .end annotation

    move-object/from16 v11, p0

    move-object/from16 v15, p1

    move-object/from16 v14, p2

    move-object/from16 v13, p4

    move-object/from16 v12, p9

    move-object/from16 v0, p11

    move/from16 v10, p14

    move/from16 v9, p15

    .line 21522
    new-instance v8, Landroid/content/Intent;

    move-object/from16 v1, p3

    invoke-direct {v8, v1}, Landroid/content/Intent;-><init>(Landroid/content/Intent;)V

    .line 21524
    invoke-direct {v11, v15, v14, v9}, Lcom/android/server/am/ActivityManagerService;->isInstantApp(Lcom/android/server/am/ProcessRecord;Ljava/lang/String;I)Z

    move-result v33

    .line 21526
    if-eqz v33, :cond_0

    .line 21527
    invoke-virtual {v8}, Landroid/content/Intent;->getFlags()I

    move-result v1

    const v2, -0x200001

    and-int/2addr v1, v2

    invoke-virtual {v8, v1}, Landroid/content/Intent;->setFlags(I)Landroid/content/Intent;

    .line 21531
    :cond_0
    const/16 v7, 0x10

    invoke-virtual {v8, v7}, Landroid/content/Intent;->addFlags(I)Landroid/content/Intent;

    .line 21534
    iget-boolean v1, v11, Lcom/android/server/am/ActivityManagerService;->mProcessesReady:Z

    const/high16 v16, 0x2000000

    const/high16 v6, 0x40000000    # 2.0f

    if-nez v1, :cond_1

    invoke-virtual {v8}, Landroid/content/Intent;->getFlags()I

    move-result v1

    and-int v1, v1, v16

    if-nez v1, :cond_1

    .line 21535
    invoke-virtual {v8, v6}, Landroid/content/Intent;->addFlags(I)Landroid/content/Intent;

    .line 21541
    :cond_1
    if-eqz p5, :cond_2

    if-nez p12, :cond_2

    .line 21542
    const-string v1, "ActivityManager"

    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    const-string v3, "Broadcast "

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v2, v8}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    const-string v3, " not ordered but result callback requested!"

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v2

    invoke-static {v1, v2}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 21545
    :cond_2
    iget-object v1, v11, Lcom/android/server/am/ActivityManagerService;->mUserController:Lcom/android/server/am/UserController;

    const/4 v5, 0x1

    const/16 v17, 0x0

    const-string v18, "broadcast"

    move v2, v10

    move v3, v9

    move/from16 v4, p16

    move/from16 v6, v17

    move/from16 v17, v7

    move-object/from16 v7, v18

    move-object v13, v8

    move-object v8, v14

    invoke-virtual/range {v1 .. v8}, Lcom/android/server/am/UserController;->handleIncomingUser(IIIZILjava/lang/String;Ljava/lang/String;)I

    move-result v8

    .line 21550
    const/4 v7, -0x1

    if-eq v8, v7, :cond_4

    iget-object v1, v11, Lcom/android/server/am/ActivityManagerService;->mUserController:Lcom/android/server/am/UserController;

    invoke-virtual {v1, v8}, Lcom/android/server/am/UserController;->isUserOrItsParentRunning(I)Z

    move-result v1

    if-nez v1, :cond_4

    .line 21551
    const/16 v1, 0x3e8

    if-ne v9, v1, :cond_3

    .line 21552
    invoke-virtual {v13}, Landroid/content/Intent;->getFlags()I

    move-result v1

    and-int v1, v1, v16

    if-nez v1, :cond_4

    :cond_3
    const-string v1, "android.intent.action.ACTION_SHUTDOWN"

    .line 21553
    invoke-virtual {v13}, Landroid/content/Intent;->getAction()Ljava/lang/String;

    move-result-object v2

    invoke-virtual {v1, v2}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v1

    if-nez v1, :cond_4

    .line 21554
    const-string v0, "ActivityManager"

    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string v2, "Skipping broadcast of "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v1, v13}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    const-string v2, ": user "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v1, v8}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v2, " and its parent (if any) are stopped"

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-static {v0, v1}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 21556
    const/4 v0, -0x2

    return v0

    .line 21560
    :cond_4
    invoke-virtual {v13}, Landroid/content/Intent;->getAction()Ljava/lang/String;

    move-result-object v6

    .line 21561
    nop

    .line 21562
    const-wide/16 v18, 0x0

    const/16 v36, 0x0

    if-eqz v0, :cond_8

    .line 21563
    new-instance v5, Landroid/app/BroadcastOptions;

    invoke-direct {v5, v0}, Landroid/app/BroadcastOptions;-><init>(Landroid/os/Bundle;)V

    .line 21564
    invoke-virtual {v5}, Landroid/app/BroadcastOptions;->getTemporaryAppWhitelistDuration()J

    move-result-wide v0

    cmp-long v0, v0, v18

    if-lez v0, :cond_6

    .line 21568
    const-string v2, "android.permission.CHANGE_DEVICE_IDLE_TEMP_WHITELIST"

    .line 21570
    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result v3

    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v4

    const/4 v0, -0x1

    const/16 v16, 0x1

    .line 21568
    move-object v1, v11

    move-object v7, v5

    move v5, v0

    move-object v12, v6

    move/from16 v6, v16

    invoke-virtual/range {v1 .. v6}, Lcom/android/server/am/ActivityManagerService;->checkComponentPermission(Ljava/lang/String;IIIZ)I

    move-result v0

    if-nez v0, :cond_5

    goto :goto_0

    .line 21572
    :cond_5
    new-instance v0, Ljava/lang/StringBuilder;

    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V

    const-string v1, "Permission Denial: "

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v13}, Landroid/content/Intent;->getAction()Ljava/lang/String;

    move-result-object v1

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v1, " broadcast from "

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0, v14}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v1, " (pid="

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0, v10}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v1, ", uid="

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0, v9}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v1, ") requires "

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v1, "android.permission.CHANGE_DEVICE_IDLE_TEMP_WHITELIST"

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    .line 21577
    const-string v1, "ActivityManager"

    invoke-static {v1, v0}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 21578
    new-instance v1, Ljava/lang/SecurityException;

    invoke-direct {v1, v0}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v1

    .line 21581
    :cond_6
    move-object v7, v5

    move-object v12, v6

    :goto_0
    invoke-virtual {v7}, Landroid/app/BroadcastOptions;->isDontSendToRestrictedApps()Z

    move-result v0

    if-eqz v0, :cond_7

    .line 21582
    invoke-virtual {v11, v9}, Lcom/android/server/am/ActivityManagerService;->isUidActiveLocked(I)Z

    move-result v0

    if-nez v0, :cond_7

    .line 21583
    invoke-virtual {v11, v9, v14}, Lcom/android/server/am/ActivityManagerService;->isBackgroundRestrictedNoCheck(ILjava/lang/String;)Z

    move-result v0

    if-eqz v0, :cond_7

    .line 21584
    const-string v0, "ActivityManager"

    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string v2, "Not sending broadcast "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v1, v12}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v2, " - app "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v1, v14}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v2, " has background restrictions"

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-static {v0, v1}, Landroid/util/Slog;->i(Ljava/lang/String;Ljava/lang/String;)I

    .line 21586
    const/16 v0, -0x60

    return v0

    .line 21594
    :cond_7
    move-object/from16 v37, v7

    goto :goto_1

    :cond_8
    move-object v12, v6

    move-object/from16 v37, v36

    :goto_1
    const/4 v7, 0x0

    :try_start_0
    invoke-static {}, Landroid/app/AppGlobals;->getPackageManager()Landroid/content/pm/IPackageManager;

    move-result-object v0

    invoke-interface {v0, v12}, Landroid/content/pm/IPackageManager;->isProtectedBroadcast(Ljava/lang/String;)Z

    move-result v38
    :try_end_0
    .catch Landroid/os/RemoteException; {:try_start_0 .. :try_end_0} :catch_3

    .line 21598
    nop

    .line 21601
    invoke-static/range {p15 .. p15}, Landroid/os/UserHandle;->getAppId(I)I

    move-result v0

    const/4 v6, 0x1

    if-eqz v0, :cond_a

    const/16 v1, 0x403

    if-eq v0, v1, :cond_a

    const/16 v1, 0x42c

    if-eq v0, v1, :cond_a

    packed-switch v0, :pswitch_data_0

    .line 21611
    if-eqz v15, :cond_9

    iget-boolean v0, v15, Lcom/android/server/am/ProcessRecord;->persistent:Z

    if-eqz v0, :cond_9

    .line 21617
    move v0, v6

    goto :goto_2

    .line 21611
    :cond_9
    nop

    .line 21617
    move v0, v7

    :goto_2
    move/from16 v39, v0

    goto :goto_3

    .line 21608
    :cond_a
    :pswitch_0
    nop

    .line 21609
    nop

    .line 21617
    move/from16 v39, v6

    :goto_3
    if-nez v39, :cond_10

    .line 21618
    if-nez v38, :cond_f

    .line 21625
    const-string v0, "android.appwidget.action.APPWIDGET_CONFIGURE"

    invoke-virtual {v0, v12}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v0

    if-nez v0, :cond_b

    const-string v0, "android.appwidget.action.APPWIDGET_UPDATE"

    .line 21626
    invoke-virtual {v0, v12}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v0

    if-eqz v0, :cond_10

    .line 21631
    :cond_b
    if-eqz v14, :cond_e

    .line 21636
    invoke-virtual {v13}, Landroid/content/Intent;->getComponent()Landroid/content/ComponentName;

    move-result-object v0

    if-eqz v0, :cond_d

    .line 21639
    invoke-virtual {v13}, Landroid/content/Intent;->getComponent()Landroid/content/ComponentName;

    move-result-object v0

    invoke-virtual {v0}, Landroid/content/ComponentName;->getPackageName()Ljava/lang/String;

    move-result-object v0

    invoke-virtual {v0, v14}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v0

    if-eqz v0, :cond_c

    goto/16 :goto_4

    .line 21641
    :cond_c
    new-instance v0, Ljava/lang/StringBuilder;

    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V

    const-string v1, "Permission Denial: not allowed to send broadcast "

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0, v12}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v1, " to "

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 21643
    invoke-virtual {v13}, Landroid/content/Intent;->getComponent()Landroid/content/ComponentName;

    move-result-object v1

    invoke-virtual {v1}, Landroid/content/ComponentName;->getPackageName()Ljava/lang/String;

    move-result-object v1

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v1, " from "

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0, v14}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    .line 21645
    const-string v1, "ActivityManager"

    invoke-static {v1, v0}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 21646
    new-instance v1, Ljava/lang/SecurityException;

    invoke-direct {v1, v0}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v1

    .line 21650
    :cond_d
    invoke-virtual {v13, v14}, Landroid/content/Intent;->setPackage(Ljava/lang/String;)Landroid/content/Intent;

    goto :goto_4

    .line 21632
    :cond_e
    new-instance v0, Ljava/lang/StringBuilder;

    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V

    const-string v1, "Permission Denial: not allowed to send broadcast "

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0, v12}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v1, " from unknown caller."

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    .line 21634
    const-string v1, "ActivityManager"

    invoke-static {v1, v0}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 21635
    new-instance v1, Ljava/lang/SecurityException;

    invoke-direct {v1, v0}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v1

    .line 21619
    :cond_f
    new-instance v0, Ljava/lang/StringBuilder;

    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V

    const-string v1, "Permission Denial: not allowed to send broadcast "

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0, v12}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v1, " from pid="

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0, v10}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v1, ", uid="

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0, v9}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    .line 21622
    const-string v1, "ActivityManager"

    invoke-static {v1, v0}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 21623
    new-instance v1, Ljava/lang/SecurityException;

    invoke-direct {v1, v0}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v1

    .line 21655
    :cond_10
    :goto_4
    if-eqz v12, :cond_27

    .line 21656
    invoke-direct/range {p0 .. p0}, Lcom/android/server/am/ActivityManagerService;->getBackgroundLaunchBroadcasts()Landroid/util/ArraySet;

    move-result-object v0

    invoke-virtual {v0, v12}, Landroid/util/ArraySet;->contains(Ljava/lang/Object;)Z

    move-result v0

    if-eqz v0, :cond_11

    .line 21660
    const/high16 v0, 0x1000000

    invoke-virtual {v13, v0}, Landroid/content/Intent;->addFlags(I)Landroid/content/Intent;

    .line 21663
    :cond_11
    invoke-virtual {v12}, Ljava/lang/String;->hashCode()I

    move-result v0

    const/16 v16, 0x4

    const/16 v20, 0x5

    const/16 v1, 0xd

    const/16 v21, 0x6

    const/4 v5, 0x3

    const/16 v22, 0x2

    sparse-switch v0, :sswitch_data_0

    goto/16 :goto_5

    :sswitch_0
    const-string v0, "android.security.action.TRUST_STORE_CHANGED"

    invoke-virtual {v12, v0}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v0

    if-eqz v0, :cond_12

    move/from16 v0, v17

    goto/16 :goto_6

    :sswitch_1
    const-string v0, "android.intent.action.PACKAGE_ADDED"

    invoke-virtual {v12, v0}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v0

    if-eqz v0, :cond_12

    const/16 v0, 0x8

    goto/16 :goto_6

    :sswitch_2
    const-string v0, "android.intent.action.PACKAGES_UNSUSPENDED"

    invoke-virtual {v12, v0}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v0

    if-eqz v0, :cond_12

    move/from16 v0, v21

    goto/16 :goto_6

    :sswitch_3
    const-string v0, "android.hardware.action.NEW_PICTURE"

    invoke-virtual {v12, v0}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v0

    if-eqz v0, :cond_12

    const/16 v0, 0xe

    goto/16 :goto_6

    :sswitch_4
    const-string v0, "com.android.launcher.action.INSTALL_SHORTCUT"

    invoke-virtual {v12, v0}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v0

    if-eqz v0, :cond_12

    const/16 v0, 0x11

    goto/16 :goto_6

    :sswitch_5
    const-string v0, "android.intent.action.PACKAGE_REMOVED"

    invoke-virtual {v12, v0}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v0

    if-eqz v0, :cond_12

    move v0, v6

    goto/16 :goto_6

    :sswitch_6
    const-string v0, "android.intent.action.TIME_SET"

    invoke-virtual {v12, v0}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v0

    if-eqz v0, :cond_12

    const/16 v0, 0xb

    goto/16 :goto_6

    :sswitch_7
    const-string v0, "android.intent.action.TIMEZONE_CHANGED"

    invoke-virtual {v12, v0}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v0

    if-eqz v0, :cond_12

    const/16 v0, 0xa

    goto/16 :goto_6

    :sswitch_8
    const-string v0, "android.intent.action.PACKAGE_DATA_CLEARED"

    invoke-virtual {v12, v0}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v0

    if-eqz v0, :cond_12

    const/16 v0, 0x9

    goto/16 :goto_6

    :sswitch_9
    const-string v0, "android.intent.action.PROXY_CHANGE"

    invoke-virtual {v12, v0}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v0

    if-eqz v0, :cond_12

    move v0, v1

    goto :goto_6

    :sswitch_a
    const-string v0, "android.intent.action.PACKAGE_CHANGED"

    invoke-virtual {v12, v0}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v0

    if-eqz v0, :cond_12

    move/from16 v0, v22

    goto :goto_6

    :sswitch_b
    const-string v0, "android.intent.action.PACKAGE_REPLACED"

    invoke-virtual {v12, v0}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v0

    if-eqz v0, :cond_12

    const/4 v0, 0x7

    goto :goto_6

    :sswitch_c
    const-string v0, "android.intent.action.PACKAGES_SUSPENDED"

    invoke-virtual {v12, v0}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v0

    if-eqz v0, :cond_12

    move/from16 v0, v20

    goto :goto_6

    :sswitch_d
    const-string v0, "android.intent.action.EXTERNAL_APPLICATIONS_AVAILABLE"

    invoke-virtual {v12, v0}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v0

    if-eqz v0, :cond_12

    move/from16 v0, v16

    goto :goto_6

    :sswitch_e
    const-string v0, "android.intent.action.EXTERNAL_APPLICATIONS_UNAVAILABLE"

    invoke-virtual {v12, v0}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v0

    if-eqz v0, :cond_12

    move v0, v5

    goto :goto_6

    :sswitch_f
    const-string v0, "android.intent.action.UID_REMOVED"

    invoke-virtual {v12, v0}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v0

    if-eqz v0, :cond_12

    move v0, v7

    goto :goto_6

    :sswitch_10
    const-string v0, "android.intent.action.CLEAR_DNS_CACHE"

    invoke-virtual {v12, v0}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v0

    if-eqz v0, :cond_12

    const/16 v0, 0xc

    goto :goto_6

    :sswitch_11
    const-string v0, "android.hardware.action.NEW_VIDEO"

    invoke-virtual {v12, v0}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v0

    if-eqz v0, :cond_12

    const/16 v0, 0xf

    goto :goto_6

    :cond_12
    :goto_5
    const/4 v0, -0x1

    :goto_6
    const/16 v2, 0x400

    packed-switch v0, :pswitch_data_1

    .line 21888
    :cond_13
    :goto_7
    move v15, v10

    move-object/from16 v43, v12

    const/4 v12, -0x1

    const/high16 v34, 0x40000000    # 2.0f

    :goto_8
    move v10, v9

    move v9, v6

    goto/16 :goto_1c

    .line 21883
    :pswitch_1
    const-string v0, "ActivityManager"

    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string v2, "Broadcast "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v1, v12}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v2, " no longer supported. It will not be delivered."

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-static {v0, v1}, Landroid/util/Log;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 21885
    return v7

    .line 21878
    :pswitch_2
    iget-object v0, v11, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    const/16 v1, 0x3f

    invoke-virtual {v0, v1}, Lcom/android/server/am/ActivityManagerService$MainHandler;->sendEmptyMessage(I)Z

    .line 21879
    goto :goto_7

    .line 21875
    :pswitch_3
    const/high16 v4, 0x40000000    # 2.0f

    invoke-virtual {v13, v4}, Landroid/content/Intent;->addFlags(I)Landroid/content/Intent;

    .line 21876
    goto/16 :goto_b

    .line 21865
    :pswitch_4
    const/high16 v4, 0x40000000    # 2.0f

    const-string v0, "android.intent.extra.PROXY_INFO"

    invoke-virtual {v13, v0}, Landroid/content/Intent;->getParcelableExtra(Ljava/lang/String;)Landroid/os/Parcelable;

    move-result-object v0

    check-cast v0, Landroid/net/ProxyInfo;

    .line 21866
    iget-object v1, v11, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    iget-object v2, v11, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    const/16 v3, 0x1d

    invoke-virtual {v2, v3, v0}, Lcom/android/server/am/ActivityManagerService$MainHandler;->obtainMessage(ILjava/lang/Object;)Landroid/os/Message;

    move-result-object v0

    invoke-virtual {v1, v0}, Lcom/android/server/am/ActivityManagerService$MainHandler;->sendMessage(Landroid/os/Message;)Z

    .line 21867
    goto/16 :goto_b

    .line 21862
    :pswitch_5
    const/high16 v4, 0x40000000    # 2.0f

    iget-object v0, v11, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    const/16 v1, 0x1c

    invoke-virtual {v0, v1}, Lcom/android/server/am/ActivityManagerService$MainHandler;->sendEmptyMessage(I)Z

    .line 21863
    goto/16 :goto_b

    .line 21846
    :pswitch_6
    const/high16 v4, 0x40000000    # 2.0f

    const-string v0, "android.intent.extra.TIME_PREF_24_HOUR_FORMAT"

    const/4 v1, -0x1

    invoke-virtual {v13, v0, v1}, Landroid/content/Intent;->getIntExtra(Ljava/lang/String;I)I

    move-result v0

    .line 21850
    if-eq v0, v1, :cond_14

    .line 21851
    iget-object v1, v11, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    const/16 v2, 0x29

    .line 21852
    invoke-virtual {v1, v2, v0, v7}, Lcom/android/server/am/ActivityManagerService$MainHandler;->obtainMessage(III)Landroid/os/Message;

    move-result-object v0

    .line 21854
    iget-object v1, v11, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    invoke-virtual {v1, v0}, Lcom/android/server/am/ActivityManagerService$MainHandler;->sendMessage(Landroid/os/Message;)Z

    .line 21856
    :cond_14
    iget-object v0, v11, Lcom/android/server/am/ActivityManagerService;->mBatteryStatsService:Lcom/android/server/am/BatteryStatsService;

    invoke-virtual {v0}, Lcom/android/server/am/BatteryStatsService;->getActiveStatistics()Lcom/android/internal/os/BatteryStatsImpl;

    move-result-object v2

    .line 21857
    monitor-enter v2

    .line 21858
    :try_start_1
    invoke-virtual {v2}, Lcom/android/internal/os/BatteryStatsImpl;->noteCurrentTimeChangedLocked()V

    .line 21859
    monitor-exit v2

    .line 21860
    goto :goto_b

    .line 21859
    :catchall_0
    move-exception v0

    monitor-exit v2
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    throw v0

    .line 21839
    :pswitch_7
    const/high16 v4, 0x40000000    # 2.0f

    iget-object v0, v11, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    invoke-virtual {v0, v1}, Lcom/android/server/am/ActivityManagerService$MainHandler;->sendEmptyMessage(I)Z

    .line 21840
    goto :goto_b

    .line 21827
    :pswitch_8
    const/high16 v4, 0x40000000    # 2.0f

    invoke-virtual {v13}, Landroid/content/Intent;->getData()Landroid/net/Uri;

    move-result-object v0

    .line 21829
    if-eqz v0, :cond_16

    invoke-virtual {v0}, Landroid/net/Uri;->getSchemeSpecificPart()Ljava/lang/String;

    move-result-object v0

    if-eqz v0, :cond_16

    .line 21830
    iget-object v1, v11, Lcom/android/server/am/ActivityManagerService;->mCompatModePackages:Lcom/android/server/am/CompatModePackages;

    invoke-virtual {v1, v0}, Lcom/android/server/am/CompatModePackages;->handlePackageDataClearedLocked(Ljava/lang/String;)V

    .line 21831
    iget-object v1, v11, Lcom/android/server/am/ActivityManagerService;->mAppWarnings:Lcom/android/server/am/AppWarnings;

    invoke-virtual {v1, v0}, Lcom/android/server/am/AppWarnings;->onPackageDataCleared(Ljava/lang/String;)V

    goto :goto_b

    .line 21808
    :pswitch_9
    const/high16 v4, 0x40000000    # 2.0f

    invoke-virtual {v13}, Landroid/content/Intent;->getData()Landroid/net/Uri;

    move-result-object v0

    .line 21810
    if-eqz v0, :cond_16

    invoke-virtual {v0}, Landroid/net/Uri;->getSchemeSpecificPart()Ljava/lang/String;

    move-result-object v0

    if-eqz v0, :cond_16

    .line 21811
    const-string v1, "android.intent.extra.REPLACING"

    .line 21812
    invoke-virtual {v13, v1, v7}, Landroid/content/Intent;->getBooleanExtra(Ljava/lang/String;Z)Z

    move-result v1

    .line 21813
    iget-object v3, v11, Lcom/android/server/am/ActivityManagerService;->mCompatModePackages:Lcom/android/server/am/CompatModePackages;

    invoke-virtual {v3, v0, v1}, Lcom/android/server/am/CompatModePackages;->handlePackageAddedLocked(Ljava/lang/String;Z)V

    .line 21816
    :try_start_2
    invoke-static {}, Landroid/app/AppGlobals;->getPackageManager()Landroid/content/pm/IPackageManager;

    move-result-object v1

    .line 21817
    invoke-interface {v1, v0, v2, v7}, Landroid/content/pm/IPackageManager;->getApplicationInfo(Ljava/lang/String;II)Landroid/content/pm/ApplicationInfo;

    move-result-object v1

    .line 21818
    iget-object v2, v11, Lcom/android/server/am/ActivityManagerService;->mBatteryStatsService:Lcom/android/server/am/BatteryStatsService;

    .line 21819
    if-eqz v1, :cond_15

    iget v1, v1, Landroid/content/pm/ApplicationInfo;->versionCode:I

    int-to-long v4, v1

    goto :goto_9

    .line 21818
    :cond_15
    move-wide/from16 v4, v18

    :goto_9
    invoke-virtual {v2, v0, v4, v5}, Lcom/android/server/am/BatteryStatsService;->notePackageInstalled(Ljava/lang/String;J)V
    :try_end_2
    .catch Landroid/os/RemoteException; {:try_start_2 .. :try_end_2} :catch_0

    .line 21821
    goto :goto_a

    .line 21820
    :catch_0
    move-exception v0

    .line 21822
    :goto_a
    goto/16 :goto_7

    .line 21888
    :cond_16
    :goto_b
    move/from16 v34, v4

    move v15, v10

    move-object/from16 v43, v12

    const/4 v12, -0x1

    goto/16 :goto_8

    .line 21785
    :pswitch_a
    invoke-virtual {v13}, Landroid/content/Intent;->getData()Landroid/net/Uri;

    move-result-object v1

    .line 21787
    if-eqz v1, :cond_13

    invoke-virtual {v1}, Landroid/net/Uri;->getSchemeSpecificPart()Ljava/lang/String;

    move-result-object v3

    if-eqz v3, :cond_13

    .line 21788
    nop

    .line 21790
    :try_start_3
    invoke-static {}, Landroid/app/AppGlobals;->getPackageManager()Landroid/content/pm/IPackageManager;

    move-result-object v0

    .line 21791
    invoke-interface {v0, v3, v2, v8}, Landroid/content/pm/IPackageManager;->getApplicationInfo(Ljava/lang/String;II)Landroid/content/pm/ApplicationInfo;

    move-result-object v0
    :try_end_3
    .catch Landroid/os/RemoteException; {:try_start_3 .. :try_end_3} :catch_1

    .line 21792
    goto :goto_c

    :catch_1
    move-exception v0

    .line 21793
    move-object/from16 v0, v36

    :goto_c
    if-nez v0, :cond_17

    .line 21794
    const-string v0, "ActivityManager"

    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    const-string v4, "Dropping ACTION_PACKAGE_REPLACED for non-existent pkg: ssp="

    invoke-virtual {v2, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v3, " data="

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v2, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-static {v0, v1}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 21796
    return v7

    .line 21798
    :cond_17
    iget-object v1, v11, Lcom/android/server/am/ActivityManagerService;->mStackSupervisor:Lcom/android/server/am/ActivityStackSupervisor;

    invoke-virtual {v1, v0}, Lcom/android/server/am/ActivityStackSupervisor;->updateActivityApplicationInfoLocked(Landroid/content/pm/ApplicationInfo;)V

    .line 21799
    iget-object v1, v11, Lcom/android/server/am/ActivityManagerService;->mServices:Lcom/android/server/am/ActiveServices;

    invoke-virtual {v1, v0}, Lcom/android/server/am/ActiveServices;->updateServiceApplicationInfoLocked(Landroid/content/pm/ApplicationInfo;)V

    .line 21800
    new-array v0, v6, [Ljava/lang/String;

    aput-object v3, v0, v7

    invoke-direct {v11, v5, v0, v8}, Lcom/android/server/am/ActivityManagerService;->sendPackageBroadcastLocked(I[Ljava/lang/String;I)V

    .line 21802
    goto/16 :goto_7

    .line 21674
    :pswitch_b
    const-string v2, "android.permission.BROADCAST_PACKAGE_REMOVED"

    const/4 v0, -0x1

    const/16 v17, 0x1

    move-object v1, v11

    move v3, v10

    const/high16 v34, 0x40000000    # 2.0f

    move v4, v9

    move/from16 v18, v5

    move v5, v0

    move/from16 v6, v17

    invoke-virtual/range {v1 .. v6}, Lcom/android/server/am/ActivityManagerService;->checkComponentPermission(Ljava/lang/String;IIIZ)I

    move-result v0

    if-nez v0, :cond_25

    .line 21686
    invoke-virtual {v12}, Ljava/lang/String;->hashCode()I

    move-result v0

    sparse-switch v0, :sswitch_data_1

    goto :goto_d

    :sswitch_12
    const-string v0, "android.intent.action.PACKAGES_UNSUSPENDED"

    invoke-virtual {v12, v0}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v0

    if-eqz v0, :cond_18

    move/from16 v16, v21

    goto :goto_e

    :sswitch_13
    const-string v0, "android.intent.action.PACKAGE_REMOVED"

    invoke-virtual {v12, v0}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v0

    if-eqz v0, :cond_18

    move/from16 v16, v18

    goto :goto_e

    :sswitch_14
    const-string v0, "android.intent.action.PACKAGE_CHANGED"

    invoke-virtual {v12, v0}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v0

    if-eqz v0, :cond_18

    goto :goto_e

    :sswitch_15
    const-string v0, "android.intent.action.PACKAGES_SUSPENDED"

    invoke-virtual {v12, v0}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v0

    if-eqz v0, :cond_18

    move/from16 v16, v20

    goto :goto_e

    :sswitch_16
    const-string v0, "android.intent.action.EXTERNAL_APPLICATIONS_AVAILABLE"

    invoke-virtual {v12, v0}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v0

    if-eqz v0, :cond_18

    move/from16 v16, v22

    goto :goto_e

    :sswitch_17
    const-string v0, "android.intent.action.EXTERNAL_APPLICATIONS_UNAVAILABLE"

    invoke-virtual {v12, v0}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v0

    if-eqz v0, :cond_18

    const/16 v16, 0x1

    goto :goto_e

    :sswitch_18
    const-string v0, "android.intent.action.UID_REMOVED"

    invoke-virtual {v12, v0}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v0

    if-eqz v0, :cond_18

    move/from16 v16, v7

    goto :goto_e

    :cond_18
    :goto_d
    const/16 v16, -0x1

    :goto_e
    packed-switch v16, :pswitch_data_2

    .line 21782
    :cond_19
    :goto_f
    move v15, v10

    move-object/from16 v43, v12

    :goto_10
    const/4 v9, 0x1

    const/4 v12, -0x1

    goto/16 :goto_1b

    .line 21769
    :pswitch_c
    const-string v0, "android.intent.action.PACKAGES_SUSPENDED"

    .line 21770
    invoke-virtual {v13}, Landroid/content/Intent;->getAction()Ljava/lang/String;

    move-result-object v1

    .line 21769
    invoke-virtual {v0, v1}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v0

    .line 21771
    const-string v1, "android.intent.extra.changed_package_list"

    invoke-virtual {v13, v1}, Landroid/content/Intent;->getStringArrayExtra(Ljava/lang/String;)[Ljava/lang/String;

    move-result-object v1

    .line 21773
    const-string v2, "android.intent.extra.user_handle"

    const/16 v3, -0x2710

    invoke-virtual {v13, v2, v3}, Landroid/content/Intent;->getIntExtra(Ljava/lang/String;I)I

    move-result v2

    .line 21776
    monitor-enter p0

    :try_start_4
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    .line 21777
    iget-object v3, v11, Lcom/android/server/am/ActivityManagerService;->mRecentTasks:Lcom/android/server/am/RecentTasks;

    invoke-virtual {v3, v1, v0, v2}, Lcom/android/server/am/RecentTasks;->onPackagesSuspendedChanged([Ljava/lang/String;ZI)V

    .line 21779
    monitor-exit p0
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_1

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    goto :goto_f

    :catchall_1
    move-exception v0

    :try_start_5
    monitor-exit p0
    :try_end_5
    .catchall {:try_start_5 .. :try_end_5} :catchall_1

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw v0

    .line 21715
    :pswitch_d
    invoke-virtual {v13}, Landroid/content/Intent;->getData()Landroid/net/Uri;

    move-result-object v0

    .line 21717
    if-eqz v0, :cond_19

    invoke-virtual {v0}, Landroid/net/Uri;->getSchemeSpecificPart()Ljava/lang/String;

    move-result-object v0

    if-eqz v0, :cond_19

    .line 21718
    const-string v1, "android.intent.action.PACKAGE_REMOVED"

    invoke-virtual {v1, v12}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v1

    .line 21719
    const-string v2, "android.intent.extra.REPLACING"

    .line 21720
    invoke-virtual {v13, v2, v7}, Landroid/content/Intent;->getBooleanExtra(Ljava/lang/String;Z)Z

    move-result v2

    .line 21721
    const-string v3, "android.intent.extra.DONT_KILL_APP"

    .line 21722
    invoke-virtual {v13, v3, v7}, Landroid/content/Intent;->getBooleanExtra(Ljava/lang/String;Z)Z

    move-result v3

    .line 21723
    const/4 v6, 0x1

    xor-int/lit8 v5, v3, 0x1

    if-eqz v1, :cond_1a

    if-nez v2, :cond_1a

    .line 21724
    move/from16 v16, v6

    goto :goto_11

    .line 21723
    :cond_1a
    nop

    .line 21724
    move/from16 v16, v7

    :goto_11
    if-eqz v1, :cond_20

    .line 21725
    if-eqz v5, :cond_1c

    .line 21726
    const-string v2, "android.intent.extra.UID"

    .line 21727
    const/4 v4, -0x1

    invoke-virtual {v13, v2, v4}, Landroid/content/Intent;->getIntExtra(Ljava/lang/String;I)I

    move-result v2

    .line 21726
    invoke-static {v2}, Landroid/os/UserHandle;->getAppId(I)I

    move-result v3

    const/16 v17, 0x0

    const/16 v18, 0x1

    const/16 v19, 0x1

    const/16 v20, 0x0

    .line 21729
    if-eqz v1, :cond_1b

    const-string/jumbo v1, "pkg removed"

    .line 21726
    :goto_12
    move-object/from16 v21, v1

    goto :goto_13

    .line 21729
    :cond_1b
    const-string/jumbo v1, "pkg changed"

    goto :goto_12

    .line 21726
    :goto_13
    move-object v1, v11

    move-object v2, v0

    move/from16 v23, v4

    move/from16 v4, v17

    move/from16 v40, v5

    move/from16 v5, v18

    move/from16 v6, v19

    move/from16 v7, v20

    move/from16 v41, v8

    move/from16 v8, v16

    move/from16 v9, v41

    move v15, v10

    move-object/from16 v10, v21

    invoke-virtual/range {v1 .. v10}, Lcom/android/server/am/ActivityManagerService;->forceStopPackageLocked(Ljava/lang/String;IZZZZZILjava/lang/String;)Z

    goto :goto_14

    .line 21731
    :cond_1c
    move/from16 v40, v5

    move/from16 v41, v8

    move v15, v10

    :goto_14
    move/from16 v10, v40

    if-eqz v10, :cond_1d

    .line 21732
    nop

    .line 21734
    const/4 v1, 0x0

    goto :goto_15

    .line 21733
    :cond_1d
    nop

    .line 21734
    move/from16 v1, v22

    :goto_15
    const/4 v9, 0x1

    new-array v2, v9, [Ljava/lang/String;

    const/4 v8, 0x0

    aput-object v0, v2, v8

    move/from16 v7, v41

    invoke-direct {v11, v1, v2, v7}, Lcom/android/server/am/ActivityManagerService;->sendPackageBroadcastLocked(I[Ljava/lang/String;I)V

    .line 21736
    if-eqz v16, :cond_1e

    .line 21737
    iget-object v1, v11, Lcom/android/server/am/ActivityManagerService;->mAppOpsService:Lcom/android/server/AppOpsService;

    const-string v2, "android.intent.extra.UID"

    .line 21738
    const/4 v6, -0x1

    invoke-virtual {v13, v2, v6}, Landroid/content/Intent;->getIntExtra(Ljava/lang/String;I)I

    move-result v2

    .line 21737
    invoke-virtual {v1, v2, v0}, Lcom/android/server/AppOpsService;->packageRemoved(ILjava/lang/String;)V

    .line 21741
    invoke-direct {v11, v0, v7, v9, v8}, Lcom/android/server/am/ActivityManagerService;->removeUriPermissionsForPackageLocked(Ljava/lang/String;IZZ)V

    .line 21744
    iget-object v1, v11, Lcom/android/server/am/ActivityManagerService;->mRecentTasks:Lcom/android/server/am/RecentTasks;

    invoke-virtual {v1, v0, v7}, Lcom/android/server/am/RecentTasks;->removeTasksByPackageName(Ljava/lang/String;I)V

    .line 21746
    iget-object v1, v11, Lcom/android/server/am/ActivityManagerService;->mServices:Lcom/android/server/am/ActiveServices;

    invoke-virtual {v1, v0, v7}, Lcom/android/server/am/ActiveServices;->forceStopPackageLocked(Ljava/lang/String;I)V

    .line 21747
    iget-object v1, v11, Lcom/android/server/am/ActivityManagerService;->mAppWarnings:Lcom/android/server/am/AppWarnings;

    invoke-virtual {v1, v0}, Lcom/android/server/am/AppWarnings;->onPackageUninstalled(Ljava/lang/String;)V

    .line 21748
    iget-object v1, v11, Lcom/android/server/am/ActivityManagerService;->mCompatModePackages:Lcom/android/server/am/CompatModePackages;

    invoke-virtual {v1, v0}, Lcom/android/server/am/CompatModePackages;->handlePackageUninstalledLocked(Ljava/lang/String;)V

    .line 21749
    iget-object v1, v11, Lcom/android/server/am/ActivityManagerService;->mBatteryStatsService:Lcom/android/server/am/BatteryStatsService;

    invoke-virtual {v1, v0}, Lcom/android/server/am/BatteryStatsService;->notePackageUninstalled(Ljava/lang/String;)V

    .line 21750
    iget-object v1, v11, Lcom/android/server/am/ActivityManagerService;->mGamingModeController:Lcom/android/internal/util/aospextended/GamingModeController;

    if-eqz v1, :cond_1f

    .line 21751
    iget-object v1, v11, Lcom/android/server/am/ActivityManagerService;->mGamingModeController:Lcom/android/internal/util/aospextended/GamingModeController;

    invoke-virtual {v1, v0}, Lcom/android/internal/util/aospextended/GamingModeController;->notePackageUninstalled(Ljava/lang/String;)V

    goto :goto_16

    .line 21754
    :cond_1e
    const/4 v6, -0x1

    .line 21765
    :cond_1f
    :goto_16
    move v10, v7

    move-object/from16 v43, v12

    goto :goto_18

    .line 21755
    :cond_20
    move v9, v6

    move v15, v10

    const/4 v6, -0x1

    move v10, v5

    move/from16 v45, v8

    move v8, v7

    move/from16 v7, v45

    if-eqz v10, :cond_21

    .line 21756
    const-string v1, "android.intent.extra.UID"

    .line 21757
    invoke-virtual {v13, v1, v6}, Landroid/content/Intent;->getIntExtra(Ljava/lang/String;I)I

    move-result v1

    .line 21756
    invoke-static {v1}, Landroid/os/UserHandle;->getAppId(I)I

    move-result v3

    const/16 v5, -0x2710

    const/16 v16, 0x0

    const/16 v17, 0x1

    const/16 v18, 0x1

    const/16 v19, 0x0

    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string v2, "change "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v1, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v20

    move-object v1, v11

    move-object v2, v0

    move v4, v7

    move/from16 v6, v16

    move/from16 v42, v7

    move/from16 v7, v17

    move/from16 v8, v18

    move/from16 v9, v19

    move-object/from16 v43, v12

    move v12, v10

    move-object/from16 v10, v20

    invoke-direct/range {v1 .. v10}, Lcom/android/server/am/ActivityManagerService;->killPackageProcessesLocked(Ljava/lang/String;IIIZZZZLjava/lang/String;)Z

    goto :goto_17

    .line 21761
    :cond_21
    move/from16 v42, v7

    move-object/from16 v43, v12

    move v12, v10

    :goto_17
    const-string v1, "android.intent.extra.changed_component_name_list"

    .line 21762
    invoke-virtual {v13, v1}, Landroid/content/Intent;->getStringArrayExtra(Ljava/lang/String;)[Ljava/lang/String;

    move-result-object v1

    .line 21761
    move/from16 v10, v42

    invoke-direct {v11, v0, v10, v12, v1}, Lcom/android/server/am/ActivityManagerService;->cleanupDisabledPackageComponentsLocked(Ljava/lang/String;IZ[Ljava/lang/String;)V

    .line 21765
    :goto_18
    nop

    .line 21782
    move v8, v10

    goto/16 :goto_10

    .line 21711
    :pswitch_e
    move v15, v10

    move-object/from16 v43, v12

    move v10, v8

    iget-object v0, v11, Lcom/android/server/am/ActivityManagerService;->mRecentTasks:Lcom/android/server/am/RecentTasks;

    const/4 v12, -0x1

    invoke-virtual {v0, v12}, Lcom/android/server/am/RecentTasks;->cleanupLocked(I)V

    .line 21712
    goto :goto_1a

    .line 21697
    :pswitch_f
    move v15, v10

    move-object/from16 v43, v12

    const/4 v12, -0x1

    move v10, v8

    const-string v0, "android.intent.extra.changed_package_list"

    .line 21698
    invoke-virtual {v13, v0}, Landroid/content/Intent;->getStringArrayExtra(Ljava/lang/String;)[Ljava/lang/String;

    move-result-object v0

    .line 21699
    if-eqz v0, :cond_23

    array-length v1, v0

    if-lez v1, :cond_23

    .line 21700
    const/4 v9, 0x0

    :goto_19
    array-length v1, v0

    if-ge v9, v1, :cond_22

    .line 21701
    aget-object v2, v0, v9

    const/4 v3, -0x1

    const/4 v4, 0x0

    const/4 v5, 0x1

    const/4 v6, 0x1

    const/4 v7, 0x0

    const/4 v8, 0x0

    const-string/jumbo v16, "storage unmount"

    move-object v1, v11

    move/from16 v17, v9

    move v9, v10

    move/from16 v44, v10

    move-object/from16 v10, v16

    invoke-virtual/range {v1 .. v10}, Lcom/android/server/am/ActivityManagerService;->forceStopPackageLocked(Ljava/lang/String;IZZZZZILjava/lang/String;)Z

    .line 21700
    add-int/lit8 v9, v17, 0x1

    move/from16 v10, v44

    goto :goto_19

    .line 21704
    :cond_22
    move/from16 v44, v10

    iget-object v1, v11, Lcom/android/server/am/ActivityManagerService;->mRecentTasks:Lcom/android/server/am/RecentTasks;

    invoke-virtual {v1, v12}, Lcom/android/server/am/RecentTasks;->cleanupLocked(I)V

    .line 21705
    move/from16 v8, v44

    const/4 v9, 0x1

    invoke-direct {v11, v9, v0, v8}, Lcom/android/server/am/ActivityManagerService;->sendPackageBroadcastLocked(I[Ljava/lang/String;I)V

    goto :goto_1b

    .line 21782
    :cond_23
    move v8, v10

    :goto_1a
    const/4 v9, 0x1

    goto :goto_1b

    .line 21688
    :pswitch_10
    move v15, v10

    move-object/from16 v43, v12

    const/4 v9, 0x1

    const/4 v12, -0x1

    invoke-direct {v11, v13}, Lcom/android/server/am/ActivityManagerService;->getUidFromIntent(Landroid/content/Intent;)I

    move-result v0

    .line 21689
    if-ltz v0, :cond_24

    .line 21690
    iget-object v1, v11, Lcom/android/server/am/ActivityManagerService;->mBatteryStatsService:Lcom/android/server/am/BatteryStatsService;

    invoke-virtual {v1, v0}, Lcom/android/server/am/BatteryStatsService;->removeUid(I)V

    .line 21691
    iget-object v1, v11, Lcom/android/server/am/ActivityManagerService;->mAppOpsService:Lcom/android/server/AppOpsService;

    invoke-virtual {v1, v0}, Lcom/android/server/AppOpsService;->uidRemoved(I)V

    .line 21782
    :cond_24
    :goto_1b
    nop

    .line 21888
    move/from16 v10, p15

    goto :goto_1c

    .line 21678
    :cond_25
    move v15, v10

    new-instance v0, Ljava/lang/StringBuilder;

    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V

    const-string v1, "Permission Denial: "

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v13}, Landroid/content/Intent;->getAction()Ljava/lang/String;

    move-result-object v1

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v1, " broadcast from "

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0, v14}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v1, " (pid="

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0, v15}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v1, ", uid="

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move/from16 v10, p15

    invoke-virtual {v0, v10}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v1, ") requires "

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v1, "android.permission.BROADCAST_PACKAGE_REMOVED"

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    .line 21683
    const-string v1, "ActivityManager"

    invoke-static {v1, v0}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 21684
    new-instance v1, Ljava/lang/SecurityException;

    invoke-direct {v1, v0}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v1

    .line 21888
    :goto_1c
    const-string v0, "android.intent.action.PACKAGE_ADDED"

    move-object/from16 v1, v43

    invoke-virtual {v0, v1}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v0

    if-nez v0, :cond_26

    const-string v0, "android.intent.action.PACKAGE_REMOVED"

    .line 21889
    invoke-virtual {v0, v1}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v0

    if-nez v0, :cond_26

    const-string v0, "android.intent.action.PACKAGE_REPLACED"

    .line 21890
    invoke-virtual {v0, v1}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v0

    if-eqz v0, :cond_28

    .line 21891
    :cond_26
    invoke-direct {v11, v13}, Lcom/android/server/am/ActivityManagerService;->getUidFromIntent(Landroid/content/Intent;)I

    move-result v0

    .line 21892
    if-eq v0, v12, :cond_28

    .line 21893
    iget-object v1, v11, Lcom/android/server/am/ActivityManagerService;->mActiveUids:Landroid/util/SparseArray;

    invoke-virtual {v1, v0}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Lcom/android/server/am/UidRecord;

    .line 21894
    if-eqz v0, :cond_28

    .line 21895
    invoke-virtual {v0}, Lcom/android/server/am/UidRecord;->updateHasInternetPermission()V

    goto :goto_1d

    .line 21902
    :cond_27
    move v15, v10

    const/4 v12, -0x1

    const/high16 v34, 0x40000000    # 2.0f

    move v10, v9

    move v9, v6

    :cond_28
    :goto_1d
    if-eqz p13, :cond_32

    .line 21903
    const-string v0, "android.permission.BROADCAST_STICKY"

    invoke-virtual {v11, v0, v15, v10}, Lcom/android/server/am/ActivityManagerService;->checkPermission(Ljava/lang/String;II)I

    move-result v0

    if-nez v0, :cond_31

    .line 21912
    move-object/from16 v7, p9

    if-eqz v7, :cond_29

    array-length v0, v7

    if-lez v0, :cond_29

    .line 21913
    const-string v0, "ActivityManager"

    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string v2, "Can\'t broadcast sticky intent "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v1, v13}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    const-string v2, " and enforce permissions "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 21914
    invoke-static/range {p9 .. p9}, Ljava/util/Arrays;->toString([Ljava/lang/Object;)Ljava/lang/String;

    move-result-object v2

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    .line 21913
    invoke-static {v0, v1}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 21915
    return v12

    .line 21917
    :cond_29
    invoke-virtual {v13}, Landroid/content/Intent;->getComponent()Landroid/content/ComponentName;

    move-result-object v0

    if-nez v0, :cond_30

    .line 21923
    if-eq v8, v12, :cond_2b

    .line 21927
    iget-object v0, v11, Lcom/android/server/am/ActivityManagerService;->mStickyBroadcasts:Landroid/util/SparseArray;

    invoke-virtual {v0, v12}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Landroid/util/ArrayMap;

    .line 21929
    if-eqz v0, :cond_2b

    .line 21930
    invoke-virtual {v13}, Landroid/content/Intent;->getAction()Ljava/lang/String;

    move-result-object v1

    invoke-virtual {v0, v1}, Landroid/util/ArrayMap;->get(Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Ljava/util/ArrayList;

    .line 21931
    if-eqz v0, :cond_2b

    .line 21932
    invoke-virtual {v0}, Ljava/util/ArrayList;->size()I

    move-result v1

    .line 21934
    const/4 v2, 0x0

    :goto_1e
    if-ge v2, v1, :cond_2b

    .line 21935
    invoke-virtual {v0, v2}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v3

    check-cast v3, Landroid/content/Intent;

    invoke-virtual {v13, v3}, Landroid/content/Intent;->filterEquals(Landroid/content/Intent;)Z

    move-result v3

    if-nez v3, :cond_2a

    .line 21934
    add-int/lit8 v2, v2, 0x1

    goto :goto_1e

    .line 21936
    :cond_2a
    new-instance v0, Ljava/lang/IllegalArgumentException;

    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string v2, "Sticky broadcast "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v1, v13}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    const-string v2, " for user "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v1, v8}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v2, " conflicts with existing global broadcast"

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-direct {v0, v1}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v0

    .line 21944
    :cond_2b
    iget-object v0, v11, Lcom/android/server/am/ActivityManagerService;->mStickyBroadcasts:Landroid/util/SparseArray;

    invoke-virtual {v0, v8}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Landroid/util/ArrayMap;

    .line 21945
    if-nez v0, :cond_2c

    .line 21946
    new-instance v0, Landroid/util/ArrayMap;

    invoke-direct {v0}, Landroid/util/ArrayMap;-><init>()V

    .line 21947
    iget-object v1, v11, Lcom/android/server/am/ActivityManagerService;->mStickyBroadcasts:Landroid/util/SparseArray;

    invoke-virtual {v1, v8, v0}, Landroid/util/SparseArray;->put(ILjava/lang/Object;)V

    .line 21949
    :cond_2c
    invoke-virtual {v13}, Landroid/content/Intent;->getAction()Ljava/lang/String;

    move-result-object v1

    invoke-virtual {v0, v1}, Landroid/util/ArrayMap;->get(Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object v1

    check-cast v1, Ljava/util/ArrayList;

    .line 21950
    if-nez v1, :cond_2d

    .line 21951
    new-instance v1, Ljava/util/ArrayList;

    invoke-direct {v1}, Ljava/util/ArrayList;-><init>()V

    .line 21952
    invoke-virtual {v13}, Landroid/content/Intent;->getAction()Ljava/lang/String;

    move-result-object v2

    invoke-virtual {v0, v2, v1}, Landroid/util/ArrayMap;->put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    .line 21954
    :cond_2d
    invoke-virtual {v1}, Ljava/util/ArrayList;->size()I

    move-result v0

    .line 21956
    const/4 v2, 0x0

    :goto_1f
    if-ge v2, v0, :cond_2f

    .line 21957
    invoke-virtual {v1, v2}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v3

    check-cast v3, Landroid/content/Intent;

    invoke-virtual {v13, v3}, Landroid/content/Intent;->filterEquals(Landroid/content/Intent;)Z

    move-result v3

    if-eqz v3, :cond_2e

    .line 21959
    new-instance v3, Landroid/content/Intent;

    invoke-direct {v3, v13}, Landroid/content/Intent;-><init>(Landroid/content/Intent;)V

    invoke-virtual {v1, v2, v3}, Ljava/util/ArrayList;->set(ILjava/lang/Object;)Ljava/lang/Object;

    .line 21960
    goto :goto_20

    .line 21956
    :cond_2e
    add-int/lit8 v2, v2, 0x1

    goto :goto_1f

    .line 21963
    :cond_2f
    :goto_20
    if-lt v2, v0, :cond_33

    .line 21964
    new-instance v0, Landroid/content/Intent;

    invoke-direct {v0, v13}, Landroid/content/Intent;-><init>(Landroid/content/Intent;)V

    invoke-virtual {v1, v0}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    goto :goto_21

    .line 21918
    :cond_30
    new-instance v0, Ljava/lang/SecurityException;

    const-string v1, "Sticky broadcasts can\'t target a specific component"

    invoke-direct {v0, v1}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v0

    .line 21906
    :cond_31
    new-instance v0, Ljava/lang/StringBuilder;

    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V

    const-string v1, "Permission Denial: broadcastIntent() requesting a sticky broadcast from pid="

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0, v15}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v1, ", uid="

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0, v10}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v1, " requires "

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v1, "android.permission.BROADCAST_STICKY"

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    .line 21909
    const-string v1, "ActivityManager"

    invoke-static {v1, v0}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 21910
    new-instance v1, Ljava/lang/SecurityException;

    invoke-direct {v1, v0}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v1

    .line 21969
    :cond_32
    move-object/from16 v7, p9

    :cond_33
    :goto_21
    if-ne v8, v12, :cond_34

    .line 21971
    iget-object v0, v11, Lcom/android/server/am/ActivityManagerService;->mUserController:Lcom/android/server/am/UserController;

    invoke-virtual {v0}, Lcom/android/server/am/UserController;->getStartedUserArray()[I

    move-result-object v0

    .line 21978
    const/4 v6, 0x0

    goto :goto_22

    .line 21974
    :cond_34
    new-array v0, v9, [I

    const/4 v6, 0x0

    aput v8, v0, v6

    .line 21978
    :goto_22
    nop

    .line 21979
    nop

    .line 21981
    invoke-virtual {v13}, Landroid/content/Intent;->getFlags()I

    move-result v1

    and-int v1, v1, v34

    if-nez v1, :cond_35

    .line 21983
    move-object v5, v13

    move-object/from16 v13, p4

    invoke-direct {v11, v5, v13, v10, v0}, Lcom/android/server/am/ActivityManagerService;->collectReceiverComponents(Landroid/content/Intent;Ljava/lang/String;I[I)Ljava/util/List;

    move-result-object v1

    .line 21985
    move-object v4, v1

    goto :goto_23

    :cond_35
    move-object v5, v13

    move-object/from16 v13, p4

    move-object/from16 v4, v36

    :goto_23
    invoke-virtual {v5}, Landroid/content/Intent;->getComponent()Landroid/content/ComponentName;

    move-result-object v1

    if-nez v1, :cond_3b

    .line 21986
    if-ne v8, v12, :cond_3a

    const/16 v1, 0x7d0

    if-ne v10, v1, :cond_3a

    .line 21988
    move v1, v6

    move-object/from16 v2, v36

    :goto_24
    array-length v3, v0

    if-ge v1, v3, :cond_39

    .line 21989
    iget-object v3, v11, Lcom/android/server/am/ActivityManagerService;->mUserController:Lcom/android/server/am/UserController;

    const-string v12, "no_debugging_features"

    aget v9, v0, v1

    invoke-virtual {v3, v12, v9}, Lcom/android/server/am/UserController;->hasUserRestriction(Ljava/lang/String;I)Z

    move-result v3

    if-eqz v3, :cond_36

    .line 21991
    goto :goto_25

    .line 21993
    :cond_36
    iget-object v3, v11, Lcom/android/server/am/ActivityManagerService;->mReceiverResolver:Lcom/android/server/IntentResolver;

    aget v9, v0, v1

    .line 21994
    invoke-virtual {v3, v5, v13, v6, v9}, Lcom/android/server/IntentResolver;->queryIntent(Landroid/content/Intent;Ljava/lang/String;ZI)Ljava/util/List;

    move-result-object v3

    .line 21996
    if-nez v2, :cond_37

    .line 21997
    nop

    .line 21988
    move-object v2, v3

    goto :goto_25

    .line 21998
    :cond_37
    if-eqz v3, :cond_38

    .line 21999
    invoke-interface {v2, v3}, Ljava/util/List;->addAll(Ljava/util/Collection;)Z

    .line 21988
    :cond_38
    :goto_25
    add-int/lit8 v1, v1, 0x1

    const/4 v9, 0x1

    goto :goto_24

    .line 22008
    :cond_39
    move-object v0, v2

    goto :goto_26

    .line 22003
    :cond_3a
    iget-object v0, v11, Lcom/android/server/am/ActivityManagerService;->mReceiverResolver:Lcom/android/server/IntentResolver;

    invoke-virtual {v0, v5, v13, v6, v8}, Lcom/android/server/IntentResolver;->queryIntent(Landroid/content/Intent;Ljava/lang/String;ZI)Ljava/util/List;

    move-result-object v0

    goto :goto_26

    .line 22008
    :cond_3b
    move-object/from16 v0, v36

    .line 22009
    :goto_26
    invoke-virtual {v5}, Landroid/content/Intent;->getFlags()I

    move-result v1

    const/high16 v2, 0x20000000

    and-int/2addr v1, v2

    if-eqz v1, :cond_3c

    .line 22014
    const/4 v9, 0x1

    goto :goto_27

    .line 22009
    :cond_3c
    nop

    .line 22014
    move v9, v6

    :goto_27
    if-eqz v0, :cond_3d

    invoke-interface {v0}, Ljava/util/List;->size()I

    move-result v1

    goto :goto_28

    .line 22015
    :cond_3d
    move v1, v6

    :goto_28
    if-nez p12, :cond_41

    if-lez v1, :cond_41

    .line 22019
    if-eqz v39, :cond_3e

    .line 22020
    move-object v1, v11

    move-object v2, v5

    move-object/from16 v3, p1

    move-object v15, v4

    move-object v4, v14

    move-object v12, v5

    move v5, v10

    move/from16 v35, v6

    move/from16 v6, v38

    move-object v7, v0

    invoke-direct/range {v1 .. v7}, Lcom/android/server/am/ActivityManagerService;->checkBroadcastFromSystem(Landroid/content/Intent;Lcom/android/server/am/ProcessRecord;Ljava/lang/String;IZLjava/util/List;)V

    goto :goto_29

    .line 22023
    :cond_3e
    move-object v15, v4

    move-object v12, v5

    move/from16 v35, v6

    :goto_29
    invoke-virtual {v11, v12}, Lcom/android/server/am/ActivityManagerService;->broadcastQueueForIntent(Landroid/content/Intent;)Lcom/android/server/am/BroadcastQueue;

    move-result-object v1

    .line 22024
    new-instance v2, Lcom/android/server/am/BroadcastRecord;

    const/16 v31, 0x0

    move-object v7, v12

    move-object v12, v2

    move-object v13, v1

    move-object v14, v7

    move-object v3, v15

    move-object/from16 v15, p1

    move-object/from16 v16, p2

    move/from16 v17, p14

    move/from16 v18, v10

    move/from16 v19, v33

    move-object/from16 v20, p4

    move-object/from16 v21, p9

    move/from16 v22, p10

    move-object/from16 v23, v37

    move-object/from16 v24, v0

    move-object/from16 v25, p5

    move/from16 v26, p6

    move-object/from16 v27, p7

    move-object/from16 v28, p8

    move/from16 v29, p12

    move/from16 v30, p13

    move/from16 v32, v8

    invoke-direct/range {v12 .. v32}, Lcom/android/server/am/BroadcastRecord;-><init>(Lcom/android/server/am/BroadcastQueue;Landroid/content/Intent;Lcom/android/server/am/ProcessRecord;Ljava/lang/String;IIZLjava/lang/String;[Ljava/lang/String;ILandroid/app/BroadcastOptions;Ljava/util/List;Landroid/content/IIntentReceiver;ILjava/lang/String;Landroid/os/Bundle;ZZZI)V

    .line 22029
    if-eqz v9, :cond_3f

    .line 22030
    invoke-virtual {v1, v2}, Lcom/android/server/am/BroadcastQueue;->replaceParallelBroadcastLocked(Lcom/android/server/am/BroadcastRecord;)Lcom/android/server/am/BroadcastRecord;

    move-result-object v0

    if-eqz v0, :cond_3f

    .line 22032
    const/4 v0, 0x1

    goto :goto_2a

    .line 22030
    :cond_3f
    nop

    .line 22032
    move/from16 v0, v35

    :goto_2a
    if-nez v0, :cond_40

    .line 22033
    invoke-virtual {v1, v2}, Lcom/android/server/am/BroadcastQueue;->enqueueParallelBroadcastLocked(Lcom/android/server/am/BroadcastRecord;)V

    .line 22034
    invoke-virtual {v1}, Lcom/android/server/am/BroadcastQueue;->scheduleBroadcastsLocked()V

    .line 22036
    :cond_40
    nop

    .line 22037
    nop

    .line 22041
    move/from16 v1, v35

    move-object/from16 v0, v36

    goto :goto_2b

    :cond_41
    move-object v3, v4

    move-object v7, v5

    move/from16 v35, v6

    .line 22042
    :goto_2b
    if-eqz v3, :cond_4e

    .line 22049
    nop

    .line 22050
    const-string v2, "android.intent.action.PACKAGE_ADDED"

    invoke-virtual {v7}, Landroid/content/Intent;->getAction()Ljava/lang/String;

    move-result-object v4

    invoke-virtual {v2, v4}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v2

    if-nez v2, :cond_44

    const-string v2, "android.intent.action.PACKAGE_RESTARTED"

    .line 22051
    invoke-virtual {v7}, Landroid/content/Intent;->getAction()Ljava/lang/String;

    move-result-object v4

    invoke-virtual {v2, v4}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v2

    if-nez v2, :cond_44

    const-string v2, "android.intent.action.PACKAGE_DATA_CLEARED"

    .line 22052
    invoke-virtual {v7}, Landroid/content/Intent;->getAction()Ljava/lang/String;

    move-result-object v4

    invoke-virtual {v2, v4}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v2

    if-eqz v2, :cond_42

    goto :goto_2c

    .line 22060
    :cond_42
    const-string v2, "android.intent.action.EXTERNAL_APPLICATIONS_AVAILABLE"

    invoke-virtual {v7}, Landroid/content/Intent;->getAction()Ljava/lang/String;

    move-result-object v4

    invoke-virtual {v2, v4}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v2

    if-eqz v2, :cond_43

    .line 22061
    const-string v2, "android.intent.extra.changed_package_list"

    invoke-virtual {v7, v2}, Landroid/content/Intent;->getStringArrayExtra(Ljava/lang/String;)[Ljava/lang/String;

    move-result-object v2

    goto :goto_2e

    .line 22063
    :cond_43
    move-object/from16 v2, v36

    goto :goto_2e

    .line 22053
    :cond_44
    :goto_2c
    invoke-virtual {v7}, Landroid/content/Intent;->getData()Landroid/net/Uri;

    move-result-object v2

    .line 22054
    if-eqz v2, :cond_45

    .line 22055
    invoke-virtual {v2}, Landroid/net/Uri;->getSchemeSpecificPart()Ljava/lang/String;

    move-result-object v2

    .line 22056
    if-eqz v2, :cond_45

    .line 22057
    const/4 v4, 0x1

    new-array v5, v4, [Ljava/lang/String;

    aput-object v2, v5, v35

    goto :goto_2d

    .line 22060
    :cond_45
    move-object/from16 v5, v36

    .line 22063
    :goto_2d
    move-object v2, v5

    :goto_2e
    if-eqz v2, :cond_48

    array-length v4, v2

    if-lez v4, :cond_48

    .line 22064
    array-length v4, v2

    move/from16 v5, v35

    :goto_2f
    if-ge v5, v4, :cond_48

    aget-object v6, v2, v5

    .line 22065
    if-eqz v6, :cond_47

    .line 22066
    invoke-interface {v3}, Ljava/util/List;->size()I

    move-result v12

    .line 22067
    move v13, v12

    move/from16 v12, v35

    :goto_30
    if-ge v12, v13, :cond_47

    .line 22068
    invoke-interface {v3, v12}, Ljava/util/List;->get(I)Ljava/lang/Object;

    move-result-object v14

    check-cast v14, Landroid/content/pm/ResolveInfo;

    .line 22069
    iget-object v14, v14, Landroid/content/pm/ResolveInfo;->activityInfo:Landroid/content/pm/ActivityInfo;

    iget-object v14, v14, Landroid/content/pm/ActivityInfo;->packageName:Ljava/lang/String;

    invoke-virtual {v14, v6}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v14

    if-eqz v14, :cond_46

    .line 22070
    invoke-interface {v3, v12}, Ljava/util/List;->remove(I)Ljava/lang/Object;

    .line 22071
    add-int/lit8 v12, v12, -0x1

    .line 22072
    add-int/lit8 v13, v13, -0x1

    .line 22067
    :cond_46
    const/4 v14, 0x1

    add-int/2addr v12, v14

    goto :goto_30

    .line 22064
    :cond_47
    const/4 v14, 0x1

    add-int/lit8 v5, v5, 0x1

    goto :goto_2f

    .line 22079
    :cond_48
    if-eqz v3, :cond_49

    invoke-interface {v3}, Ljava/util/List;->size()I

    move-result v2

    goto :goto_31

    .line 22080
    :cond_49
    move/from16 v2, v35

    .line 22081
    :goto_31
    nop

    .line 22082
    nop

    .line 22083
    move v4, v2

    move/from16 v2, v35

    move v5, v2

    move-object/from16 v6, v36

    move-object v12, v6

    :goto_32
    if-ge v2, v4, :cond_4d

    if-ge v5, v1, :cond_4d

    .line 22084
    if-nez v6, :cond_4a

    .line 22085
    invoke-interface {v3, v2}, Ljava/util/List;->get(I)Ljava/lang/Object;

    move-result-object v6

    check-cast v6, Landroid/content/pm/ResolveInfo;

    .line 22087
    :cond_4a
    if-nez v12, :cond_4b

    .line 22088
    invoke-interface {v0, v5}, Ljava/util/List;->get(I)Ljava/lang/Object;

    move-result-object v12

    check-cast v12, Lcom/android/server/am/BroadcastFilter;

    .line 22090
    :cond_4b
    invoke-virtual {v12}, Lcom/android/server/am/BroadcastFilter;->getPriority()I

    move-result v13

    iget v14, v6, Landroid/content/pm/ResolveInfo;->priority:I

    if-lt v13, v14, :cond_4c

    .line 22092
    invoke-interface {v3, v2, v12}, Ljava/util/List;->add(ILjava/lang/Object;)V

    .line 22093
    add-int/lit8 v5, v5, 0x1

    .line 22094
    nop

    .line 22095
    add-int/lit8 v2, v2, 0x1

    .line 22096
    add-int/lit8 v4, v4, 0x1

    .line 22083
    move-object/from16 v12, v36

    goto :goto_32

    .line 22099
    :cond_4c
    add-int/lit8 v2, v2, 0x1

    .line 22100
    nop

    .line 22083
    move-object/from16 v6, v36

    goto :goto_32

    .line 22104
    :cond_4d
    move-object v15, v3

    goto :goto_33

    :cond_4e
    move-object v15, v3

    move/from16 v5, v35

    :goto_33
    if-ge v5, v1, :cond_50

    .line 22105
    if-nez v15, :cond_4f

    .line 22106
    new-instance v15, Ljava/util/ArrayList;

    invoke-direct {v15}, Ljava/util/ArrayList;-><init>()V

    .line 22108
    :cond_4f
    invoke-interface {v0, v5}, Ljava/util/List;->get(I)Ljava/lang/Object;

    move-result-object v2

    invoke-interface {v15, v2}, Ljava/util/List;->add(Ljava/lang/Object;)Z

    .line 22109
    add-int/lit8 v5, v5, 0x1

    goto :goto_33

    .line 22112
    :cond_50
    if-eqz v39, :cond_51

    .line 22113
    move-object v1, v11

    move-object v2, v7

    move-object/from16 v3, p1

    move-object/from16 v4, p2

    move v5, v10

    move/from16 v6, v38

    move-object v14, v7

    move-object v7, v15

    invoke-direct/range {v1 .. v7}, Lcom/android/server/am/ActivityManagerService;->checkBroadcastFromSystem(Landroid/content/Intent;Lcom/android/server/am/ProcessRecord;Ljava/lang/String;IZLjava/util/List;)V

    goto :goto_34

    .line 22117
    :cond_51
    move-object v14, v7

    :goto_34
    if-eqz v15, :cond_52

    invoke-interface {v15}, Ljava/util/List;->size()I

    move-result v0

    if-gtz v0, :cond_53

    :cond_52
    if-eqz p5, :cond_57

    .line 22119
    :cond_53
    invoke-virtual {v11, v14}, Lcom/android/server/am/ActivityManagerService;->broadcastQueueForIntent(Landroid/content/Intent;)Lcom/android/server/am/BroadcastQueue;

    move-result-object v1

    .line 22120
    new-instance v0, Lcom/android/server/am/BroadcastRecord;

    const/16 v31, 0x0

    move-object v12, v0

    move-object v13, v1

    move-object v2, v14

    move-object v3, v15

    move-object/from16 v15, p1

    move-object/from16 v16, p2

    move/from16 v17, p14

    move/from16 v18, v10

    move/from16 v19, v33

    move-object/from16 v20, p4

    move-object/from16 v21, p9

    move/from16 v22, p10

    move-object/from16 v23, v37

    move-object/from16 v24, v3

    move-object/from16 v25, p5

    move/from16 v26, p6

    move-object/from16 v27, p7

    move-object/from16 v28, p8

    move/from16 v29, p12

    move/from16 v30, p13

    move/from16 v32, v8

    invoke-direct/range {v12 .. v32}, Lcom/android/server/am/BroadcastRecord;-><init>(Lcom/android/server/am/BroadcastQueue;Landroid/content/Intent;Lcom/android/server/am/ProcessRecord;Ljava/lang/String;IIZLjava/lang/String;[Ljava/lang/String;ILandroid/app/BroadcastOptions;Ljava/util/List;Landroid/content/IIntentReceiver;ILjava/lang/String;Landroid/os/Bundle;ZZZI)V

    .line 22131
    if-eqz v9, :cond_54

    invoke-virtual {v1, v0}, Lcom/android/server/am/BroadcastQueue;->replaceOrderedBroadcastLocked(Lcom/android/server/am/BroadcastRecord;)Lcom/android/server/am/BroadcastRecord;

    move-result-object v36

    .line 22132
    :goto_35
    move-object/from16 v3, v36

    goto :goto_36

    .line 22131
    :cond_54
    goto :goto_35

    .line 22132
    :goto_36
    if-eqz v3, :cond_55

    .line 22134
    iget-object v0, v3, Lcom/android/server/am/BroadcastRecord;->resultTo:Landroid/content/IIntentReceiver;

    if-eqz v0, :cond_56

    .line 22135
    iget-object v0, v3, Lcom/android/server/am/BroadcastRecord;->intent:Landroid/content/Intent;

    invoke-virtual {v11, v0}, Lcom/android/server/am/ActivityManagerService;->broadcastQueueForIntent(Landroid/content/Intent;)Lcom/android/server/am/BroadcastQueue;

    move-result-object v4

    .line 22137
    :try_start_6
    iget-object v5, v3, Lcom/android/server/am/BroadcastRecord;->callerApp:Lcom/android/server/am/ProcessRecord;

    iget-object v6, v3, Lcom/android/server/am/BroadcastRecord;->resultTo:Landroid/content/IIntentReceiver;

    iget-object v7, v3, Lcom/android/server/am/BroadcastRecord;->intent:Landroid/content/Intent;

    const/4 v8, 0x0

    const/4 v9, 0x0

    const/4 v10, 0x0

    const/4 v11, 0x0

    const/4 v12, 0x0

    iget v13, v3, Lcom/android/server/am/BroadcastRecord;->userId:I

    invoke-virtual/range {v4 .. v13}, Lcom/android/server/am/BroadcastQueue;->performReceiveLocked(Lcom/android/server/am/ProcessRecord;Landroid/content/IIntentReceiver;Landroid/content/Intent;ILjava/lang/String;Landroid/os/Bundle;ZZI)V
    :try_end_6
    .catch Landroid/os/RemoteException; {:try_start_6 .. :try_end_6} :catch_2

    .line 22146
    goto :goto_37

    .line 22141
    :catch_2
    move-exception v0

    .line 22142
    const-string v3, "ActivityManager"

    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    const-string v5, "Failure ["

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget-object v1, v1, Lcom/android/server/am/BroadcastQueue;->mQueueName:Ljava/lang/String;

    invoke-virtual {v4, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v1, "] sending broadcast result of "

    invoke-virtual {v4, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v4, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-static {v3, v1, v0}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I

    .line 22147
    :goto_37
    goto :goto_38

    .line 22149
    :cond_55
    invoke-virtual {v1, v0}, Lcom/android/server/am/BroadcastQueue;->enqueueOrderedBroadcastLocked(Lcom/android/server/am/BroadcastRecord;)V

    .line 22150
    invoke-virtual {v1}, Lcom/android/server/am/BroadcastQueue;->scheduleBroadcastsLocked()V

    .line 22152
    :cond_56
    :goto_38
    goto :goto_39

    .line 22155
    :cond_57
    move-object v2, v14

    invoke-virtual {v2}, Landroid/content/Intent;->getComponent()Landroid/content/ComponentName;

    move-result-object v0

    if-nez v0, :cond_58

    invoke-virtual {v2}, Landroid/content/Intent;->getPackage()Ljava/lang/String;

    move-result-object v0

    if-nez v0, :cond_58

    .line 22156
    invoke-virtual {v2}, Landroid/content/Intent;->getFlags()I

    move-result v0

    and-int v0, v0, v34

    if-nez v0, :cond_58

    .line 22158
    invoke-virtual {v2}, Landroid/content/Intent;->getAction()Ljava/lang/String;

    move-result-object v2

    const/4 v4, 0x0

    const/4 v5, 0x0

    const-wide/16 v6, 0x0

    move-object v1, v11

    move-object/from16 v3, p2

    invoke-virtual/range {v1 .. v7}, Lcom/android/server/am/ActivityManagerService;->addBroadcastStatLocked(Ljava/lang/String;Ljava/lang/String;IIJ)V

    .line 22162
    :cond_58
    :goto_39
    return v35

    .line 21595
    :catch_3
    move-exception v0

    move/from16 v35, v7

    .line 21596
    const-string v1, "ActivityManager"

    const-string v2, "Remote exception"

    invoke-static {v1, v2, v0}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I

    .line 21597
    return v35

    nop

    nop

    :pswitch_data_0
    .packed-switch 0x3e8
        :pswitch_0
        :pswitch_0
        :pswitch_0
    .end packed-switch

    :sswitch_data_0
    .sparse-switch
        -0x7d14f855 -> :sswitch_11
        -0x7babae4b -> :sswitch_10
        -0x6849e2b4 -> :sswitch_f
        -0x53ae571d -> :sswitch_e
        -0x4fc097e4 -> :sswitch_d
        -0x3bb3e592 -> :sswitch_c
        -0x304ed112 -> :sswitch_b
        0xa480416 -> :sswitch_a
        0xaf62806 -> :sswitch_9
        0xff13fb5 -> :sswitch_8
        0x1df32313 -> :sswitch_7
        0x1e1f7f95 -> :sswitch_6
        0x1f50b9c2 -> :sswitch_5
        0x2114f460 -> :sswitch_4
        0x36db402e -> :sswitch_3
        0x4cef8b35 -> :sswitch_2
        0x5c1076e2 -> :sswitch_1
        0x6f08f706 -> :sswitch_0
    .end sparse-switch

    :pswitch_data_1
    .packed-switch 0x0
        :pswitch_b
        :pswitch_b
        :pswitch_b
        :pswitch_b
        :pswitch_b
        :pswitch_b
        :pswitch_b
        :pswitch_a
        :pswitch_9
        :pswitch_8
        :pswitch_7
        :pswitch_6
        :pswitch_5
        :pswitch_4
        :pswitch_3
        :pswitch_3
        :pswitch_2
        :pswitch_1
    .end packed-switch

    :sswitch_data_1
    .sparse-switch
        -0x6849e2b4 -> :sswitch_18
        -0x53ae571d -> :sswitch_17
        -0x4fc097e4 -> :sswitch_16
        -0x3bb3e592 -> :sswitch_15
        0xa480416 -> :sswitch_14
        0x1f50b9c2 -> :sswitch_13
        0x4cef8b35 -> :sswitch_12
    .end sparse-switch

    :pswitch_data_2
    .packed-switch 0x0
        :pswitch_10
        :pswitch_f
        :pswitch_e
        :pswitch_d
        :pswitch_d
        :pswitch_c
        :pswitch_c
    .end packed-switch
.end method

.method broadcastQueueForIntent(Landroid/content/Intent;)Lcom/android/server/am/BroadcastQueue;
    .locals 1

    .line 753
    invoke-virtual {p1}, Landroid/content/Intent;->getFlags()I

    move-result p1

    const/high16 v0, 0x10000000

    and-int/2addr p1, v0

    if-eqz p1, :cond_0

    const/4 p1, 0x1

    goto :goto_0

    :cond_0
    const/4 p1, 0x0

    .line 757
    :goto_0
    if-eqz p1, :cond_1

    iget-object p1, p0, Lcom/android/server/am/ActivityManagerService;->mFgBroadcastQueue:Lcom/android/server/am/BroadcastQueue;

    goto :goto_1

    :cond_1
    iget-object p1, p0, Lcom/android/server/am/ActivityManagerService;->mBgBroadcastQueue:Lcom/android/server/am/BroadcastQueue;

    :goto_1
    return-object p1
.end method

.method public canShowErrorDialogs()Z
    .locals 4

    .line 849
    iget-boolean v0, p0, Lcom/android/server/am/ActivityManagerService;->mShowDialogs:Z

    const/4 v1, 0x0

    if-eqz v0, :cond_1

    iget-boolean v0, p0, Lcom/android/server/am/ActivityManagerService;->mSleeping:Z

    if-nez v0, :cond_1

    iget-boolean v0, p0, Lcom/android/server/am/ActivityManagerService;->mShuttingDown:Z

    if-nez v0, :cond_1

    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mKeyguardController:Lcom/android/server/am/KeyguardController;

    .line 850
    invoke-virtual {v0, v1}, Lcom/android/server/am/KeyguardController;->isKeyguardOrAodShowing(I)Z

    move-result v0

    if-nez v0, :cond_1

    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mUserController:Lcom/android/server/am/UserController;

    const-string v2, "no_system_error_dialogs"

    iget-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mUserController:Lcom/android/server/am/UserController;

    .line 852
    invoke-virtual {v3}, Lcom/android/server/am/UserController;->getCurrentUserId()I

    move-result v3

    .line 851
    invoke-virtual {v0, v2, v3}, Lcom/android/server/am/UserController;->hasUserRestriction(Ljava/lang/String;I)Z

    move-result v0

    if-nez v0, :cond_1

    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mContext:Landroid/content/Context;

    .line 853
    invoke-static {v0}, Landroid/os/UserManager;->isDeviceInDemoMode(Landroid/content/Context;)Z

    move-result v0

    if-eqz v0, :cond_0

    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mUserController:Lcom/android/server/am/UserController;

    .line 854
    invoke-virtual {v0}, Lcom/android/server/am/UserController;->getCurrentUser()Landroid/content/pm/UserInfo;

    move-result-object v0

    invoke-virtual {v0}, Landroid/content/pm/UserInfo;->isDemo()Z

    move-result v0

    if-nez v0, :cond_1

    :cond_0
    const/4 v1, 0x1

    nop

    .line 849
    :cond_1
    return v1
.end method

.method public cancelIntentSender(Landroid/content/IIntentSender;)V
    .locals 4

    .line 8691
    instance-of v0, p1, Lcom/android/server/am/PendingIntentRecord;

    if-nez v0, :cond_0

    .line 8692
    return-void

    .line 8694
    :cond_0
    monitor-enter p0

    :try_start_0
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    .line 8695
    check-cast p1, Lcom/android/server/am/PendingIntentRecord;
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 8697
    :try_start_1
    invoke-static {}, Landroid/app/AppGlobals;->getPackageManager()Landroid/content/pm/IPackageManager;

    move-result-object v0

    iget-object v1, p1, Lcom/android/server/am/PendingIntentRecord;->key:Lcom/android/server/am/PendingIntentRecord$Key;

    iget-object v1, v1, Lcom/android/server/am/PendingIntentRecord$Key;->packageName:Ljava/lang/String;

    const/high16 v2, 0x10000000

    .line 8698
    invoke-static {}, Landroid/os/UserHandle;->getCallingUserId()I

    move-result v3

    .line 8697
    invoke-interface {v0, v1, v2, v3}, Landroid/content/pm/IPackageManager;->getPackageUid(Ljava/lang/String;II)I

    move-result v0

    .line 8699
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v1

    invoke-static {v0, v1}, Landroid/os/UserHandle;->isSameApp(II)Z

    move-result v0
    :try_end_1
    .catch Landroid/os/RemoteException; {:try_start_1 .. :try_end_1} :catch_0
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    if-eqz v0, :cond_1

    .line 8710
    nop

    .line 8711
    const/4 v0, 0x1

    :try_start_2
    invoke-virtual {p0, p1, v0}, Lcom/android/server/am/ActivityManagerService;->cancelIntentSenderLocked(Lcom/android/server/am/PendingIntentRecord;Z)V

    .line 8712
    monitor-exit p0
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    .line 8713
    return-void

    .line 8700
    :cond_1
    :try_start_3
    new-instance v0, Ljava/lang/StringBuilder;

    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V

    const-string v1, "Permission Denial: cancelIntentSender() from pid="

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 8701
    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result v1

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v1, ", uid="

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 8702
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v1

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v1, " is not allowed to cancel package "

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget-object p1, p1, Lcom/android/server/am/PendingIntentRecord;->key:Lcom/android/server/am/PendingIntentRecord$Key;

    iget-object p1, p1, Lcom/android/server/am/PendingIntentRecord$Key;->packageName:Ljava/lang/String;

    invoke-virtual {v0, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object p1

    .line 8705
    const-string v0, "ActivityManager"

    invoke-static {v0, p1}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 8706
    new-instance v0, Ljava/lang/SecurityException;

    invoke-direct {v0, p1}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v0
    :try_end_3
    .catch Landroid/os/RemoteException; {:try_start_3 .. :try_end_3} :catch_0
    .catchall {:try_start_3 .. :try_end_3} :catchall_0

    .line 8708
    :catch_0
    move-exception p1

    .line 8709
    :try_start_4
    new-instance v0, Ljava/lang/SecurityException;

    invoke-direct {v0, p1}, Ljava/lang/SecurityException;-><init>(Ljava/lang/Throwable;)V

    throw v0

    .line 8712
    :catchall_0
    move-exception p1

    monitor-exit p0
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw p1
.end method

.method cancelIntentSenderLocked(Lcom/android/server/am/PendingIntentRecord;Z)V
    .locals 2

    .line 8716
    invoke-virtual {p0, p1}, Lcom/android/server/am/ActivityManagerService;->makeIntentSenderCanceledLocked(Lcom/android/server/am/PendingIntentRecord;)V

    .line 8717
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mIntentSenderRecords:Ljava/util/HashMap;

    iget-object v1, p1, Lcom/android/server/am/PendingIntentRecord;->key:Lcom/android/server/am/PendingIntentRecord$Key;

    invoke-virtual {v0, v1}, Ljava/util/HashMap;->remove(Ljava/lang/Object;)Ljava/lang/Object;

    .line 8718
    if-eqz p2, :cond_0

    iget-object p2, p1, Lcom/android/server/am/PendingIntentRecord;->key:Lcom/android/server/am/PendingIntentRecord$Key;

    iget-object p2, p2, Lcom/android/server/am/PendingIntentRecord$Key;->activity:Lcom/android/server/am/ActivityRecord;

    if-eqz p2, :cond_0

    .line 8719
    iget-object p2, p1, Lcom/android/server/am/PendingIntentRecord;->key:Lcom/android/server/am/PendingIntentRecord$Key;

    iget-object p2, p2, Lcom/android/server/am/PendingIntentRecord$Key;->activity:Lcom/android/server/am/ActivityRecord;

    iget-object p2, p2, Lcom/android/server/am/ActivityRecord;->pendingResults:Ljava/util/HashSet;

    iget-object p1, p1, Lcom/android/server/am/PendingIntentRecord;->ref:Ljava/lang/ref/WeakReference;

    invoke-virtual {p2, p1}, Ljava/util/HashSet;->remove(Ljava/lang/Object;)Z

    .line 8721
    :cond_0
    return-void
.end method

.method public cancelRecentsAnimation(Z)V
    .locals 7

    .line 5537
    const-string v0, "android.permission.MANAGE_ACTIVITY_STACKS"

    const-string v1, "cancelRecentsAnimation()"

    invoke-virtual {p0, v0, v1}, Lcom/android/server/am/ActivityManagerService;->enforceCallerIsRecentsOrHasPermission(Ljava/lang/String;Ljava/lang/String;)V

    .line 5538
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v0

    int-to-long v0, v0

    .line 5539
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v2

    .line 5541
    :try_start_0
    monitor-enter p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_1

    :try_start_1
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    .line 5543
    iget-object v4, p0, Lcom/android/server/am/ActivityManagerService;->mWindowManager:Lcom/android/server/wm/WindowManagerService;

    if-eqz p1, :cond_0

    .line 5544
    const/4 p1, 0x2

    goto :goto_0

    .line 5545
    :cond_0
    const/4 p1, 0x0

    :goto_0
    new-instance v5, Ljava/lang/StringBuilder;

    invoke-direct {v5}, Ljava/lang/StringBuilder;-><init>()V

    const-string v6, "cancelRecentsAnimation/uid="

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v5, v0, v1}, Ljava/lang/StringBuilder;->append(J)Ljava/lang/StringBuilder;

    invoke-virtual {v5}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    .line 5543
    invoke-virtual {v4, p1, v0}, Lcom/android/server/wm/WindowManagerService;->cancelRecentsAnimationSynchronously(ILjava/lang/String;)V

    .line 5546
    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    :try_start_2
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_1

    .line 5548
    invoke-static {v2, v3}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 5549
    nop

    .line 5550
    return-void

    .line 5546
    :catchall_0
    move-exception p1

    :try_start_3
    monitor-exit p0
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_0

    :try_start_4
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw p1
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_1

    .line 5548
    :catchall_1
    move-exception p1

    invoke-static {v2, v3}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    throw p1
.end method

.method public cancelTaskWindowTransition(I)V
    .locals 5

    .line 11161
    const-string v0, "android.permission.MANAGE_ACTIVITY_STACKS"

    const-string v1, "cancelTaskWindowTransition()"

    invoke-virtual {p0, v0, v1}, Lcom/android/server/am/ActivityManagerService;->enforceCallerIsRecentsOrHasPermission(Ljava/lang/String;Ljava/lang/String;)V

    .line 11163
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v0

    .line 11165
    :try_start_0
    monitor-enter p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_1

    :try_start_1
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    .line 11166
    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mStackSupervisor:Lcom/android/server/am/ActivityStackSupervisor;

    const/4 v3, 0x0

    invoke-virtual {v2, p1, v3}, Lcom/android/server/am/ActivityStackSupervisor;->anyTaskForIdLocked(II)Lcom/android/server/am/TaskRecord;

    move-result-object v2

    .line 11168
    if-nez v2, :cond_0

    .line 11169
    const-string v2, "ActivityManager"

    new-instance v3, Ljava/lang/StringBuilder;

    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V

    const-string v4, "cancelTaskWindowTransition: taskId="

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v3, p1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string p1, " not found"

    invoke-virtual {v3, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object p1

    invoke-static {v2, p1}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 11170
    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 11175
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 11170
    return-void

    .line 11172
    :cond_0
    :try_start_2
    invoke-virtual {v2}, Lcom/android/server/am/TaskRecord;->cancelWindowTransition()V

    .line 11173
    monitor-exit p0
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    :try_start_3
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_1

    .line 11175
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 11176
    nop

    .line 11177
    return-void

    .line 11173
    :catchall_0
    move-exception p1

    :try_start_4
    monitor-exit p0
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_0

    :try_start_5
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw p1
    :try_end_5
    .catchall {:try_start_5 .. :try_end_5} :catchall_1

    .line 11175
    :catchall_1
    move-exception p1

    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    throw p1
.end method

.method checkAllowAppSwitchUid(I)Z
    .locals 4

    .line 13808
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mAllowAppSwitchUids:Landroid/util/SparseArray;

    invoke-static {p1}, Landroid/os/UserHandle;->getUserId(I)I

    move-result v1

    invoke-virtual {v0, v1}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Landroid/util/ArrayMap;

    .line 13809
    if-eqz v0, :cond_1

    .line 13810
    invoke-virtual {v0}, Landroid/util/ArrayMap;->size()I

    move-result v1

    const/4 v2, 0x1

    sub-int/2addr v1, v2

    :goto_0
    if-ltz v1, :cond_1

    .line 13811
    invoke-virtual {v0, v1}, Landroid/util/ArrayMap;->valueAt(I)Ljava/lang/Object;

    move-result-object v3

    check-cast v3, Ljava/lang/Integer;

    invoke-virtual {v3}, Ljava/lang/Integer;->intValue()I

    move-result v3

    if-ne v3, p1, :cond_0

    .line 13812
    return v2

    .line 13810
    :cond_0
    add-int/lit8 v1, v1, -0x1

    goto :goto_0

    .line 13816
    :cond_1
    const/4 p1, 0x0

    return p1
.end method

.method checkAppInLaunchingProvidersLocked(Lcom/android/server/am/ProcessRecord;)Z
    .locals 3

    .line 20596
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mLaunchingProviders:Ljava/util/ArrayList;

    invoke-virtual {v0}, Ljava/util/ArrayList;->size()I

    move-result v0

    const/4 v1, 0x1

    sub-int/2addr v0, v1

    :goto_0
    if-ltz v0, :cond_1

    .line 20597
    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mLaunchingProviders:Ljava/util/ArrayList;

    invoke-virtual {v2, v0}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Lcom/android/server/am/ContentProviderRecord;

    .line 20598
    iget-object v2, v2, Lcom/android/server/am/ContentProviderRecord;->launchingApp:Lcom/android/server/am/ProcessRecord;

    if-ne v2, p1, :cond_0

    .line 20599
    return v1

    .line 20596
    :cond_0
    add-int/lit8 v0, v0, -0x1

    goto :goto_0

    .line 20602
    :cond_1
    const/4 p1, 0x0

    return p1
.end method

.method checkAppSwitchAllowedLocked(IIIILjava/lang/String;)Z
    .locals 8

    .line 13821
    iget-wide v0, p0, Lcom/android/server/am/ActivityManagerService;->mAppSwitchesAllowedTime:J

    invoke-static {}, Landroid/os/SystemClock;->uptimeMillis()J

    move-result-wide v2

    cmp-long v0, v0, v2

    const/4 v1, 0x1

    if-gez v0, :cond_0

    .line 13822
    return v1

    .line 13825
    :cond_0
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mRecentTasks:Lcom/android/server/am/RecentTasks;

    invoke-virtual {v0, p2}, Lcom/android/server/am/RecentTasks;->isCallerRecents(I)Z

    move-result v0

    if-eqz v0, :cond_1

    .line 13826
    return v1

    .line 13829
    :cond_1
    const-string v3, "android.permission.STOP_APP_SWITCHES"

    const/4 v6, -0x1

    const/4 v7, 0x1

    move-object v2, p0

    move v4, p1

    move v5, p2

    invoke-virtual/range {v2 .. v7}, Lcom/android/server/am/ActivityManagerService;->checkComponentPermission(Ljava/lang/String;IIIZ)I

    move-result p1

    .line 13830
    if-nez p1, :cond_2

    .line 13831
    return v1

    .line 13833
    :cond_2
    invoke-virtual {p0, p2}, Lcom/android/server/am/ActivityManagerService;->checkAllowAppSwitchUid(I)Z

    move-result p1

    if-eqz p1, :cond_3

    .line 13834
    return v1

    .line 13839
    :cond_3
    const/4 p1, -0x1

    if-eq p4, p1, :cond_5

    if-eq p4, p2, :cond_5

    .line 13840
    const-string v3, "android.permission.STOP_APP_SWITCHES"

    const/4 v6, -0x1

    const/4 v7, 0x1

    move-object v2, p0

    move v4, p3

    move v5, p4

    invoke-virtual/range {v2 .. v7}, Lcom/android/server/am/ActivityManagerService;->checkComponentPermission(Ljava/lang/String;IIIZ)I

    move-result p1

    .line 13841
    if-nez p1, :cond_4

    .line 13842
    return v1

    .line 13844
    :cond_4
    invoke-virtual {p0, p4}, Lcom/android/server/am/ActivityManagerService;->checkAllowAppSwitchUid(I)Z

    move-result p1

    if-eqz p1, :cond_5

    .line 13845
    return v1

    .line 13849
    :cond_5
    const-string p1, "ActivityManager"

    new-instance p3, Ljava/lang/StringBuilder;

    invoke-direct {p3}, Ljava/lang/StringBuilder;-><init>()V

    invoke-virtual {p3, p5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string p4, " request from "

    invoke-virtual {p3, p4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {p3, p2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string p2, " stopped"

    invoke-virtual {p3, p2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {p3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object p2

    invoke-static {p1, p2}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 13850
    const/4 p1, 0x0

    return p1
.end method

.method checkAuthorityGrants(ILandroid/content/pm/ProviderInfo;IZ)Z
    .locals 4

    .line 12239
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mGrantedUriPermissions:Landroid/util/SparseArray;

    invoke-virtual {v0, p1}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    move-result-object p1

    check-cast p1, Landroid/util/ArrayMap;

    .line 12240
    if-eqz p1, :cond_2

    .line 12241
    invoke-virtual {p1}, Landroid/util/ArrayMap;->size()I

    move-result v0

    const/4 v1, 0x1

    sub-int/2addr v0, v1

    :goto_0
    if-ltz v0, :cond_2

    .line 12242
    invoke-virtual {p1, v0}, Landroid/util/ArrayMap;->keyAt(I)Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Lcom/android/server/am/ActivityManagerService$GrantUri;

    .line 12243
    iget v3, v2, Lcom/android/server/am/ActivityManagerService$GrantUri;->sourceUserId:I

    if-eq v3, p3, :cond_0

    if-nez p4, :cond_1

    .line 12244
    :cond_0
    iget-object v2, v2, Lcom/android/server/am/ActivityManagerService$GrantUri;->uri:Landroid/net/Uri;

    invoke-virtual {p0, v2, p2}, Lcom/android/server/am/ActivityManagerService;->matchesProvider(Landroid/net/Uri;Landroid/content/pm/ProviderInfo;)Z

    move-result v2

    if-eqz v2, :cond_1

    .line 12245
    return v1

    .line 12241
    :cond_1
    add-int/lit8 v0, v0, -0x1

    goto :goto_0

    .line 12250
    :cond_2
    const/4 p1, 0x0

    return p1
.end method

.method checkCallingPermission(Ljava/lang/String;)I
    .locals 2

    .line 9377
    nop

    .line 9378
    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result v0

    .line 9379
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v1

    invoke-static {v1}, Landroid/os/UserHandle;->getAppId(I)I

    move-result v1

    .line 9377
    invoke-virtual {p0, p1, v0, v1}, Lcom/android/server/am/ActivityManagerService;->checkPermission(Ljava/lang/String;II)I

    move-result p1

    return p1
.end method

.method checkComponentPermission(Ljava/lang/String;IIIZ)I
    .locals 1

    .line 9328
    sget v0, Lcom/android/server/am/ActivityManagerService;->MY_PID:I

    if-ne p2, v0, :cond_0

    .line 9329
    const/4 p1, 0x0

    return p1

    .line 9331
    :cond_0
    invoke-static {p1, p3, p4, p5}, Landroid/app/ActivityManager;->checkComponentPermission(Ljava/lang/String;IIZ)I

    move-result p1

    return p1
.end method

.method public checkContentProviderAccess(Ljava/lang/String;I)Ljava/lang/String;
    .locals 3

    .line 12122
    const/4 v0, -0x1

    if-ne p2, v0, :cond_0

    .line 12123
    iget-object p2, p0, Lcom/android/server/am/ActivityManagerService;->mContext:Landroid/content/Context;

    const-string v0, "android.permission.INTERACT_ACROSS_USERS_FULL"

    const-string v1, "ActivityManager"

    invoke-virtual {p2, v0, v1}, Landroid/content/Context;->enforceCallingOrSelfPermission(Ljava/lang/String;Ljava/lang/String;)V

    .line 12125
    invoke-static {}, Landroid/os/UserHandle;->getCallingUserId()I

    move-result p2

    .line 12128
    :cond_0
    const/4 v0, 0x0

    .line 12130
    :try_start_0
    invoke-static {}, Landroid/app/AppGlobals;->getPackageManager()Landroid/content/pm/IPackageManager;

    move-result-object v1

    const v2, 0xc0e00

    invoke-interface {v1, p1, v2, p2}, Landroid/content/pm/IPackageManager;->resolveContentProvider(Ljava/lang/String;II)Landroid/content/pm/ProviderInfo;

    move-result-object v1
    :try_end_0
    .catch Landroid/os/RemoteException; {:try_start_0 .. :try_end_0} :catch_0

    .line 12137
    nop

    .line 12138
    move-object v0, v1

    goto :goto_0

    .line 12136
    :catch_0
    move-exception v1

    .line 12138
    :goto_0
    if-nez v0, :cond_1

    .line 12139
    new-instance v0, Ljava/lang/StringBuilder;

    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V

    const-string v1, "Failed to find provider "

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string p1, " for user "

    invoke-virtual {v0, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0, p2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string p1, "; expected to find a valid ContentProvider for this authority"

    invoke-virtual {v0, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object p1

    return-object p1

    .line 12143
    :cond_1
    nop

    .line 12144
    iget-object p1, p0, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Landroid/util/SparseArray;

    monitor-enter p1

    .line 12145
    :try_start_1
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Landroid/util/SparseArray;

    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result v2

    invoke-virtual {v1, v2}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    move-result-object v1

    check-cast v1, Lcom/android/server/am/ProcessRecord;

    .line 12146
    monitor-exit p1
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_1

    .line 12147
    if-nez v1, :cond_2

    .line 12148
    new-instance p1, Ljava/lang/StringBuilder;

    invoke-direct {p1}, Ljava/lang/StringBuilder;-><init>()V

    const-string p2, "Failed to find PID "

    invoke-virtual {p1, p2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result p2

    invoke-virtual {p1, p2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {p1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object p1

    return-object p1

    .line 12151
    :cond_2
    monitor-enter p0

    :try_start_2
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    .line 12152
    const/4 p1, 0x1

    invoke-direct {p0, v0, v1, p2, p1}, Lcom/android/server/am/ActivityManagerService;->checkContentProviderPermissionLocked(Landroid/content/pm/ProviderInfo;Lcom/android/server/am/ProcessRecord;IZ)Ljava/lang/String;

    move-result-object p1

    monitor-exit p0
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    return-object p1

    .line 12153
    :catchall_0
    move-exception p1

    :try_start_3
    monitor-exit p0
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw p1

    .line 12146
    :catchall_1
    move-exception p2

    :try_start_4
    monitor-exit p1
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_1

    throw p2
.end method

.method final checkExcessivePowerUsageLocked()V
    .locals 25

    .line 24656
    move-object/from16 v0, p0

    invoke-virtual/range {p0 .. p0}, Lcom/android/server/am/ActivityManagerService;->updateCpuStatsNow()V

    .line 24658
    iget-object v1, v0, Lcom/android/server/am/ActivityManagerService;->mBatteryStatsService:Lcom/android/server/am/BatteryStatsService;

    invoke-virtual {v1}, Lcom/android/server/am/BatteryStatsService;->getActiveStatistics()Lcom/android/internal/os/BatteryStatsImpl;

    move-result-object v1

    .line 24659
    nop

    .line 24660
    iget-wide v2, v0, Lcom/android/server/am/ActivityManagerService;->mLastPowerCheckUptime:J

    const-wide/16 v9, 0x0

    cmp-long v2, v2, v9

    if-nez v2, :cond_0

    .line 24661
    const/4 v2, 0x0

    .line 24663
    move v12, v2

    goto :goto_0

    :cond_0
    const/4 v12, 0x1

    :goto_0
    invoke-static {}, Landroid/os/SystemClock;->uptimeMillis()J

    move-result-wide v13

    .line 24664
    iget-wide v2, v0, Lcom/android/server/am/ActivityManagerService;->mLastPowerCheckUptime:J

    sub-long v7, v13, v2

    .line 24665
    iput-wide v13, v0, Lcom/android/server/am/ActivityManagerService;->mLastPowerCheckUptime:J

    .line 24666
    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mLruProcesses:Ljava/util/ArrayList;

    invoke-virtual {v2}, Ljava/util/ArrayList;->size()I

    move-result v2

    .line 24667
    :goto_1
    if-lez v2, :cond_b

    .line 24668
    add-int/lit8 v15, v2, -0x1

    .line 24669
    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mLruProcesses:Ljava/util/ArrayList;

    invoke-virtual {v2, v15}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v2

    move-object v5, v2

    check-cast v5, Lcom/android/server/am/ProcessRecord;

    .line 24670
    iget v2, v5, Lcom/android/server/am/ProcessRecord;->setProcState:I

    const/16 v3, 0xd

    if-lt v2, v3, :cond_a

    .line 24671
    iget-wide v3, v5, Lcom/android/server/am/ProcessRecord;->lastCpuTime:J

    cmp-long v2, v3, v9

    if-gtz v2, :cond_1

    .line 24672
    nop

    .line 24667
    move-wide/from16 v16, v9

    move/from16 v18, v12

    move-wide/from16 v21, v13

    const/4 v4, 0x1

    move-wide v13, v7

    goto/16 :goto_7

    .line 24674
    :cond_1
    iget-wide v2, v5, Lcom/android/server/am/ProcessRecord;->curCpuTime:J

    iget-wide v9, v5, Lcom/android/server/am/ProcessRecord;->lastCpuTime:J

    sub-long v9, v2, v9

    .line 24690
    if-eqz v12, :cond_8

    const-wide/16 v16, 0x0

    cmp-long v2, v7, v16

    if-lez v2, :cond_7

    .line 24693
    iget-wide v2, v5, Lcom/android/server/am/ProcessRecord;->whenUnimportant:J

    move/from16 v18, v12

    sub-long v11, v13, v2

    .line 24694
    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mConstants:Lcom/android/server/am/ActivityManagerConstants;

    iget-wide v2, v2, Lcom/android/server/am/ActivityManagerConstants;->POWER_CHECK_INTERVAL:J

    cmp-long v2, v11, v2

    if-gtz v2, :cond_2

    .line 24695
    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mConstants:Lcom/android/server/am/ActivityManagerConstants;

    iget v2, v2, Lcom/android/server/am/ActivityManagerConstants;->POWER_CHECK_MAX_CPU_1:I

    .line 24704
    :goto_2
    move v6, v2

    goto :goto_4

    .line 24696
    :cond_2
    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mConstants:Lcom/android/server/am/ActivityManagerConstants;

    iget-wide v2, v2, Lcom/android/server/am/ActivityManagerConstants;->POWER_CHECK_INTERVAL:J

    const-wide/16 v19, 0x2

    mul-long v2, v2, v19

    cmp-long v2, v11, v2

    if-lez v2, :cond_5

    iget v2, v5, Lcom/android/server/am/ProcessRecord;->setProcState:I

    const/16 v3, 0xd

    if-gt v2, v3, :cond_3

    goto :goto_3

    .line 24699
    :cond_3
    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mConstants:Lcom/android/server/am/ActivityManagerConstants;

    iget-wide v2, v2, Lcom/android/server/am/ActivityManagerConstants;->POWER_CHECK_INTERVAL:J

    const-wide/16 v19, 0x3

    mul-long v2, v2, v19

    cmp-long v2, v11, v2

    if-gtz v2, :cond_4

    .line 24700
    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mConstants:Lcom/android/server/am/ActivityManagerConstants;

    iget v2, v2, Lcom/android/server/am/ActivityManagerConstants;->POWER_CHECK_MAX_CPU_3:I

    goto :goto_2

    .line 24702
    :cond_4
    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mConstants:Lcom/android/server/am/ActivityManagerConstants;

    iget v2, v2, Lcom/android/server/am/ActivityManagerConstants;->POWER_CHECK_MAX_CPU_4:I

    goto :goto_2

    .line 24698
    :cond_5
    :goto_3
    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mConstants:Lcom/android/server/am/ActivityManagerConstants;

    iget v2, v2, Lcom/android/server/am/ActivityManagerConstants;->POWER_CHECK_MAX_CPU_2:I

    goto :goto_2

    .line 24704
    :goto_4
    const-wide/16 v2, 0x64

    mul-long/2addr v2, v9

    div-long/2addr v2, v7

    move-wide/from16 v21, v13

    int-to-long v13, v6

    cmp-long v2, v2, v13

    if-ltz v2, :cond_6

    .line 24705
    monitor-enter v1

    .line 24706
    :try_start_0
    iget-object v2, v5, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget v3, v2, Landroid/content/pm/ApplicationInfo;->uid:I

    iget-object v4, v5, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;

    move-object v2, v1

    move-object v13, v5

    move v14, v6

    move-wide v5, v7

    move-object/from16 v23, v13

    move/from16 v24, v14

    move-wide v13, v7

    move-wide v7, v9

    invoke-virtual/range {v2 .. v8}, Lcom/android/internal/os/BatteryStatsImpl;->reportExcessiveCpuLocked(ILjava/lang/String;JJ)V

    .line 24708
    monitor-exit v1
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 24709
    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    const-string v3, "excessive cpu "

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v2, v9, v10}, Ljava/lang/StringBuilder;->append(J)Ljava/lang/StringBuilder;

    const-string v3, " during "

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v2, v13, v14}, Ljava/lang/StringBuilder;->append(J)Ljava/lang/StringBuilder;

    const-string v3, " dur="

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v2, v11, v12}, Ljava/lang/StringBuilder;->append(J)Ljava/lang/StringBuilder;

    const-string v3, " limit="

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move/from16 v3, v24

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v2

    move-object/from16 v3, v23

    const/4 v4, 0x1

    invoke-virtual {v3, v2, v4}, Lcom/android/server/am/ProcessRecord;->kill(Ljava/lang/String;Z)V

    .line 24711
    iget-object v2, v3, Lcom/android/server/am/ProcessRecord;->baseProcessTracker:Lcom/android/internal/app/procstats/ProcessState;

    if-eqz v2, :cond_9

    .line 24712
    iget-object v2, v3, Lcom/android/server/am/ProcessRecord;->baseProcessTracker:Lcom/android/internal/app/procstats/ProcessState;

    iget-object v5, v3, Lcom/android/server/am/ProcessRecord;->pkgList:Landroid/util/ArrayMap;

    invoke-virtual {v2, v5}, Lcom/android/internal/app/procstats/ProcessState;->reportExcessiveCpu(Landroid/util/ArrayMap;)V

    goto :goto_6

    .line 24708
    :catchall_0
    move-exception v0

    :try_start_1
    monitor-exit v1
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    throw v0

    .line 24716
    :cond_6
    move-object v3, v5

    move-wide v13, v7

    const/4 v4, 0x1

    goto :goto_6

    :cond_7
    move-object v3, v5

    move/from16 v18, v12

    move-wide/from16 v21, v13

    const/4 v4, 0x1

    goto :goto_5

    :cond_8
    move-object v3, v5

    move/from16 v18, v12

    move-wide/from16 v21, v13

    const/4 v4, 0x1

    const-wide/16 v16, 0x0

    :goto_5
    move-wide v13, v7

    :cond_9
    :goto_6
    iget-wide v5, v3, Lcom/android/server/am/ProcessRecord;->curCpuTime:J

    iput-wide v5, v3, Lcom/android/server/am/ProcessRecord;->lastCpuTime:J

    goto :goto_7

    .line 24718
    :cond_a
    move-wide/from16 v16, v9

    move/from16 v18, v12

    move-wide/from16 v21, v13

    const/4 v4, 0x1

    move-wide v13, v7

    .line 24667
    :goto_7
    move-wide v7, v13

    move v2, v15

    move-wide/from16 v9, v16

    move/from16 v12, v18

    move-wide/from16 v13, v21

    goto/16 :goto_1

    .line 24719
    :cond_b
    return-void
.end method

.method public checkGrantUriPermission(ILjava/lang/String;Landroid/net/Uri;II)I
    .locals 7

    .line 9974
    const-string v0, "checkGrantUriPermission"

    invoke-virtual {p0, v0}, Lcom/android/server/am/ActivityManagerService;->enforceNotIsolatedCaller(Ljava/lang/String;)V

    .line 9975
    monitor-enter p0

    :try_start_0
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    .line 9976
    new-instance v4, Lcom/android/server/am/ActivityManagerService$GrantUri;

    const/4 v0, 0x0

    invoke-direct {v4, p5, p3, v0}, Lcom/android/server/am/ActivityManagerService$GrantUri;-><init>(ILandroid/net/Uri;Z)V

    const/4 v6, -0x1

    move-object v1, p0

    move v2, p1

    move-object v3, p2

    move v5, p4

    invoke-virtual/range {v1 .. v6}, Lcom/android/server/am/ActivityManagerService;->checkGrantUriPermissionLocked(ILjava/lang/String;Lcom/android/server/am/ActivityManagerService$GrantUri;II)I

    move-result p1

    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    return p1

    .line 9978
    :catchall_0
    move-exception p1

    :try_start_1
    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw p1
.end method

.method checkGrantUriPermissionFromIntentLocked(ILjava/lang/String;Landroid/content/Intent;ILcom/android/server/am/ActivityManagerService$NeededUriGrants;I)Lcom/android/server/am/ActivityManagerService$NeededUriGrants;
    .locals 15
    .annotation build Lcom/android/internal/annotations/GuardedBy;
        value = "this"
    .end annotation

    move-object/from16 v0, p2

    move/from16 v8, p4

    move-object/from16 v7, p5

    .line 10072
    if-eqz v0, :cond_d

    .line 10076
    const/4 v1, 0x0

    if-nez p3, :cond_0

    .line 10077
    return-object v1

    .line 10079
    :cond_0
    invoke-virtual/range {p3 .. p3}, Landroid/content/Intent;->getData()Landroid/net/Uri;

    move-result-object v3

    .line 10080
    invoke-virtual/range {p3 .. p3}, Landroid/content/Intent;->getClipData()Landroid/content/ClipData;

    move-result-object v9

    .line 10081
    if-nez v3, :cond_1

    if-nez v9, :cond_1

    .line 10082
    return-object v1

    .line 10085
    :cond_1
    invoke-virtual/range {p3 .. p3}, Landroid/content/Intent;->getContentUserHint()I

    move-result v2

    .line 10086
    const/4 v4, -0x2

    if-ne v2, v4, :cond_2

    .line 10087
    invoke-static/range {p1 .. p1}, Landroid/os/UserHandle;->getUserId(I)I

    move-result v2

    .line 10089
    :cond_2
    move v10, v2

    invoke-static {}, Landroid/app/AppGlobals;->getPackageManager()Landroid/content/pm/IPackageManager;

    move-result-object v2

    .line 10091
    if-eqz v7, :cond_3

    .line 10092
    iget v1, v7, Lcom/android/server/am/ActivityManagerService$NeededUriGrants;->targetUid:I

    .line 10107
    move/from16 v11, p6

    move v6, v1

    goto :goto_0

    .line 10095
    :cond_3
    const/high16 v4, 0x10000000

    move/from16 v11, p6

    :try_start_0
    invoke-interface {v2, v0, v4, v11}, Landroid/content/pm/IPackageManager;->getPackageUid(Ljava/lang/String;II)I

    move-result v2
    :try_end_0
    .catch Landroid/os/RemoteException; {:try_start_0 .. :try_end_0} :catch_0

    .line 10099
    nop

    .line 10100
    if-gez v2, :cond_4

    .line 10104
    return-object v1

    .line 10107
    :cond_4
    move v6, v2

    :goto_0
    if-eqz v3, :cond_6

    .line 10108
    invoke-static {v10, v3}, Lcom/android/server/am/ActivityManagerService$GrantUri;->resolve(ILandroid/net/Uri;)Lcom/android/server/am/ActivityManagerService$GrantUri;

    move-result-object v12

    .line 10109
    move-object v1, p0

    move/from16 v2, p1

    move-object v3, v0

    move-object v4, v12

    move v5, v8

    invoke-virtual/range {v1 .. v6}, Lcom/android/server/am/ActivityManagerService;->checkGrantUriPermissionLocked(ILjava/lang/String;Lcom/android/server/am/ActivityManagerService$GrantUri;II)I

    move-result v6

    .line 10111
    if-lez v6, :cond_6

    .line 10112
    if-nez v7, :cond_5

    .line 10113
    new-instance v1, Lcom/android/server/am/ActivityManagerService$NeededUriGrants;

    invoke-direct {v1, v0, v6, v8}, Lcom/android/server/am/ActivityManagerService$NeededUriGrants;-><init>(Ljava/lang/String;II)V

    .line 10115
    move-object v7, v1

    :cond_5
    invoke-virtual {v7, v12}, Lcom/android/server/am/ActivityManagerService$NeededUriGrants;->add(Ljava/lang/Object;)Z

    .line 10118
    :cond_6
    if-eqz v9, :cond_c

    .line 10119
    const/4 v1, 0x0

    move v12, v1

    move v14, v6

    move-object v13, v7

    :goto_1
    invoke-virtual {v9}, Landroid/content/ClipData;->getItemCount()I

    move-result v1

    if-ge v12, v1, :cond_b

    .line 10120
    invoke-virtual {v9, v12}, Landroid/content/ClipData;->getItemAt(I)Landroid/content/ClipData$Item;

    move-result-object v1

    invoke-virtual {v1}, Landroid/content/ClipData$Item;->getUri()Landroid/net/Uri;

    move-result-object v1

    .line 10121
    if-eqz v1, :cond_9

    .line 10122
    invoke-static {v10, v1}, Lcom/android/server/am/ActivityManagerService$GrantUri;->resolve(ILandroid/net/Uri;)Lcom/android/server/am/ActivityManagerService$GrantUri;

    move-result-object v7

    .line 10123
    move-object v1, p0

    move/from16 v2, p1

    move-object v3, v0

    move-object v4, v7

    move v5, v8

    move v6, v14

    invoke-virtual/range {v1 .. v6}, Lcom/android/server/am/ActivityManagerService;->checkGrantUriPermissionLocked(ILjava/lang/String;Lcom/android/server/am/ActivityManagerService$GrantUri;II)I

    move-result v14

    .line 10125
    if-lez v14, :cond_8

    .line 10126
    if-nez v13, :cond_7

    .line 10127
    new-instance v13, Lcom/android/server/am/ActivityManagerService$NeededUriGrants;

    invoke-direct {v13, v0, v14, v8}, Lcom/android/server/am/ActivityManagerService$NeededUriGrants;-><init>(Ljava/lang/String;II)V

    .line 10129
    :cond_7
    invoke-virtual {v13, v7}, Lcom/android/server/am/ActivityManagerService$NeededUriGrants;->add(Ljava/lang/Object;)Z

    .line 10131
    :cond_8
    goto :goto_2

    .line 10132
    :cond_9
    invoke-virtual {v9, v12}, Landroid/content/ClipData;->getItemAt(I)Landroid/content/ClipData$Item;

    move-result-object v1

    invoke-virtual {v1}, Landroid/content/ClipData$Item;->getIntent()Landroid/content/Intent;

    move-result-object v4

    .line 10133
    if-eqz v4, :cond_a

    .line 10134
    move-object v1, p0

    move/from16 v2, p1

    move-object v3, v0

    move v5, v8

    move-object v6, v13

    move v7, v11

    invoke-virtual/range {v1 .. v7}, Lcom/android/server/am/ActivityManagerService;->checkGrantUriPermissionFromIntentLocked(ILjava/lang/String;Landroid/content/Intent;ILcom/android/server/am/ActivityManagerService$NeededUriGrants;I)Lcom/android/server/am/ActivityManagerService$NeededUriGrants;

    move-result-object v1

    .line 10136
    if-eqz v1, :cond_a

    .line 10137
    nop

    .line 10119
    move-object v13, v1

    :cond_a
    :goto_2
    add-int/lit8 v12, v12, 0x1

    goto :goto_1

    .line 10144
    :cond_b
    move-object v7, v13

    :cond_c
    return-object v7

    .line 10097
    :catch_0
    move-exception v0

    .line 10098
    return-object v1

    .line 10073
    :cond_d
    new-instance v0, Ljava/lang/NullPointerException;

    const-string/jumbo v1, "targetPkg"

    invoke-direct {v0, v1}, Ljava/lang/NullPointerException;-><init>(Ljava/lang/String;)V

    throw v0
.end method

.method checkGrantUriPermissionLocked(ILjava/lang/String;Lcom/android/server/am/ActivityManagerService$GrantUri;II)I
    .locals 16
    .annotation build Lcom/android/internal/annotations/GuardedBy;
        value = "this"
    .end annotation

    move-object/from16 v0, p0

    move/from16 v8, p1

    move-object/from16 v1, p2

    move-object/from16 v9, p3

    move/from16 v10, p4

    .line 9795
    invoke-static/range {p4 .. p4}, Landroid/content/Intent;->isAccessUriMode(I)Z

    move-result v2

    const/4 v3, -0x1

    if-nez v2, :cond_0

    .line 9796
    return v3

    .line 9799
    :cond_0
    nop

    .line 9804
    invoke-static {}, Landroid/app/AppGlobals;->getPackageManager()Landroid/content/pm/IPackageManager;

    move-result-object v11

    .line 9807
    const-string v2, "content"

    iget-object v4, v9, Lcom/android/server/am/ActivityManagerService$GrantUri;->uri:Landroid/net/Uri;

    invoke-virtual {v4}, Landroid/net/Uri;->getScheme()Ljava/lang/String;

    move-result-object v4

    invoke-virtual {v2, v4}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v2

    if-nez v2, :cond_1

    .line 9810
    return v3

    .line 9815
    :cond_1
    invoke-static/range {p1 .. p1}, Landroid/os/UserHandle;->getAppId(I)I

    move-result v2

    .line 9816
    const/16 v4, 0x3e8

    if-eq v2, v4, :cond_2

    if-nez v2, :cond_3

    .line 9817
    :cond_2
    const-string v2, "com.android.settings.files"

    iget-object v4, v9, Lcom/android/server/am/ActivityManagerService$GrantUri;->uri:Landroid/net/Uri;

    invoke-virtual {v4}, Landroid/net/Uri;->getAuthority()Ljava/lang/String;

    move-result-object v4

    invoke-virtual {v2, v4}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v2

    if-eqz v2, :cond_17

    .line 9829
    :cond_3
    iget-object v2, v9, Lcom/android/server/am/ActivityManagerService$GrantUri;->uri:Landroid/net/Uri;

    invoke-virtual {v2}, Landroid/net/Uri;->getAuthority()Ljava/lang/String;

    move-result-object v2

    .line 9830
    iget v4, v9, Lcom/android/server/am/ActivityManagerService$GrantUri;->sourceUserId:I

    const/high16 v5, 0x10000000

    invoke-direct {v0, v2, v4, v5}, Lcom/android/server/am/ActivityManagerService;->getProviderInfoLocked(Ljava/lang/String;II)Landroid/content/pm/ProviderInfo;

    move-result-object v12

    .line 9832
    if-nez v12, :cond_4

    .line 9833
    const-string v0, "ActivityManager"

    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string v2, "No content provider found for permission check: "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget-object v2, v9, Lcom/android/server/am/ActivityManagerService$GrantUri;->uri:Landroid/net/Uri;

    .line 9834
    invoke-virtual {v2}, Landroid/net/Uri;->toSafeString()Ljava/lang/String;

    move-result-object v2

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    .line 9833
    invoke-static {v0, v1}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 9835
    return v3

    .line 9838
    :cond_4
    nop

    .line 9839
    if-gez p5, :cond_6

    if-eqz v1, :cond_6

    .line 9841
    nop

    .line 9842
    :try_start_0
    invoke-static/range {p1 .. p1}, Landroid/os/UserHandle;->getUserId(I)I

    move-result v2

    .line 9841
    invoke-interface {v11, v1, v5, v2}, Landroid/content/pm/IPackageManager;->getPackageUid(Ljava/lang/String;II)I

    move-result v1
    :try_end_0
    .catch Landroid/os/RemoteException; {:try_start_0 .. :try_end_0} :catch_0

    .line 9843
    if-gez v1, :cond_5

    .line 9846
    return v3

    .line 9850
    :cond_5
    nop

    .line 9855
    move v13, v1

    goto :goto_0

    .line 9848
    :catch_0
    move-exception v0

    .line 9849
    return v3

    .line 9855
    :cond_6
    move/from16 v13, p5

    :goto_0
    and-int/lit8 v1, v10, 0x40

    if-eqz v1, :cond_7

    .line 9859
    nop

    .line 9866
    move v7, v13

    goto :goto_1

    .line 9863
    :cond_7
    nop

    .line 9866
    move v7, v3

    :goto_1
    const/4 v14, 0x0

    if-ltz v13, :cond_8

    .line 9868
    move-object v1, v0

    move-object v2, v11

    move-object v3, v12

    move-object v4, v9

    move v5, v13

    move v6, v10

    invoke-direct/range {v1 .. v6}, Lcom/android/server/am/ActivityManagerService;->checkHoldingPermissionsLocked(Landroid/content/pm/IPackageManager;Landroid/content/pm/ProviderInfo;Lcom/android/server/am/ActivityManagerService$GrantUri;II)Z

    move-result v1

    if-eqz v1, :cond_e

    .line 9872
    return v7

    .line 9876
    :cond_8
    iget-boolean v1, v12, Landroid/content/pm/ProviderInfo;->exported:Z

    .line 9877
    and-int/lit8 v2, v10, 0x1

    if-eqz v2, :cond_9

    .line 9878
    iget-object v3, v12, Landroid/content/pm/ProviderInfo;->readPermission:Ljava/lang/String;

    if-eqz v3, :cond_9

    .line 9879
    nop

    .line 9882
    move v1, v14

    :cond_9
    and-int/lit8 v3, v10, 0x2

    if-eqz v3, :cond_a

    .line 9883
    iget-object v4, v12, Landroid/content/pm/ProviderInfo;->writePermission:Ljava/lang/String;

    if-eqz v4, :cond_a

    .line 9884
    nop

    .line 9887
    move v1, v14

    :cond_a
    iget-object v4, v12, Landroid/content/pm/ProviderInfo;->pathPermissions:[Landroid/content/pm/PathPermission;

    if-eqz v4, :cond_d

    .line 9888
    iget-object v4, v12, Landroid/content/pm/ProviderInfo;->pathPermissions:[Landroid/content/pm/PathPermission;

    array-length v4, v4

    .line 9889
    move v5, v14

    :goto_2
    if-ge v5, v4, :cond_d

    .line 9890
    iget-object v6, v12, Landroid/content/pm/ProviderInfo;->pathPermissions:[Landroid/content/pm/PathPermission;

    aget-object v6, v6, v5

    if-eqz v6, :cond_c

    iget-object v6, v12, Landroid/content/pm/ProviderInfo;->pathPermissions:[Landroid/content/pm/PathPermission;

    aget-object v6, v6, v5

    iget-object v15, v9, Lcom/android/server/am/ActivityManagerService$GrantUri;->uri:Landroid/net/Uri;

    .line 9891
    invoke-virtual {v15}, Landroid/net/Uri;->getPath()Ljava/lang/String;

    move-result-object v15

    invoke-virtual {v6, v15}, Landroid/content/pm/PathPermission;->match(Ljava/lang/String;)Z

    move-result v6

    if-eqz v6, :cond_c

    .line 9892
    if-eqz v2, :cond_b

    .line 9893
    iget-object v2, v12, Landroid/content/pm/ProviderInfo;->pathPermissions:[Landroid/content/pm/PathPermission;

    aget-object v2, v2, v5

    invoke-virtual {v2}, Landroid/content/pm/PathPermission;->getReadPermission()Ljava/lang/String;

    move-result-object v2

    if-eqz v2, :cond_b

    .line 9894
    nop

    .line 9897
    move v1, v14

    :cond_b
    if-eqz v3, :cond_d

    .line 9898
    iget-object v2, v12, Landroid/content/pm/ProviderInfo;->pathPermissions:[Landroid/content/pm/PathPermission;

    aget-object v2, v2, v5

    invoke-virtual {v2}, Landroid/content/pm/PathPermission;->getWritePermission()Ljava/lang/String;

    move-result-object v2

    if-eqz v2, :cond_d

    .line 9899
    nop

    .line 9906
    move v1, v14

    goto :goto_3

    .line 9889
    :cond_c
    add-int/lit8 v5, v5, 0x1

    goto :goto_2

    .line 9906
    :cond_d
    :goto_3
    if-eqz v1, :cond_e

    .line 9907
    return v7

    .line 9917
    :cond_e
    invoke-static {v13}, Landroid/os/UserHandle;->getUserId(I)I

    move-result v1

    iget v2, v9, Lcom/android/server/am/ActivityManagerService$GrantUri;->sourceUserId:I

    const/4 v15, 0x1

    if-eq v1, v2, :cond_f

    const/4 v7, 0x0

    .line 9918
    move-object v1, v0

    move-object v2, v11

    move-object v3, v12

    move-object v4, v9

    move v5, v8

    move v6, v10

    invoke-direct/range {v1 .. v7}, Lcom/android/server/am/ActivityManagerService;->checkHoldingPermissionsInternalLocked(Landroid/content/pm/IPackageManager;Landroid/content/pm/ProviderInfo;Lcom/android/server/am/ActivityManagerService$GrantUri;IIZ)Z

    move-result v1

    if-eqz v1, :cond_f

    .line 9922
    move v1, v15

    goto :goto_4

    .line 9918
    :cond_f
    nop

    .line 9922
    move v1, v14

    :goto_4
    if-nez v1, :cond_14

    .line 9923
    iget-boolean v1, v12, Landroid/content/pm/ProviderInfo;->grantUriPermissions:Z

    if-eqz v1, :cond_13

    .line 9929
    iget-object v1, v12, Landroid/content/pm/ProviderInfo;->uriPermissionPatterns:[Landroid/os/PatternMatcher;

    if-eqz v1, :cond_14

    .line 9930
    iget-object v1, v12, Landroid/content/pm/ProviderInfo;->uriPermissionPatterns:[Landroid/os/PatternMatcher;

    array-length v1, v1

    .line 9931
    nop

    .line 9932
    move v2, v14

    :goto_5
    if-ge v2, v1, :cond_11

    .line 9933
    iget-object v3, v12, Landroid/content/pm/ProviderInfo;->uriPermissionPatterns:[Landroid/os/PatternMatcher;

    aget-object v3, v3, v2

    if-eqz v3, :cond_10

    iget-object v3, v12, Landroid/content/pm/ProviderInfo;->uriPermissionPatterns:[Landroid/os/PatternMatcher;

    aget-object v3, v3, v2

    iget-object v4, v9, Lcom/android/server/am/ActivityManagerService$GrantUri;->uri:Landroid/net/Uri;

    .line 9934
    invoke-virtual {v4}, Landroid/net/Uri;->getPath()Ljava/lang/String;

    move-result-object v4

    invoke-virtual {v3, v4}, Landroid/os/PatternMatcher;->match(Ljava/lang/String;)Z

    move-result v3

    if-eqz v3, :cond_10

    .line 9935
    nop

    .line 9936
    nop

    .line 9939
    move v14, v15

    goto :goto_6

    .line 9932
    :cond_10
    add-int/lit8 v2, v2, 0x1

    goto :goto_5

    .line 9939
    :cond_11
    :goto_6
    if-eqz v14, :cond_12

    goto :goto_7

    .line 9940
    :cond_12
    new-instance v0, Ljava/lang/SecurityException;

    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string v2, "Provider "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget-object v2, v12, Landroid/content/pm/ProviderInfo;->packageName:Ljava/lang/String;

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v2, "/"

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget-object v2, v12, Landroid/content/pm/ProviderInfo;->name:Ljava/lang/String;

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v2, " does not allow granting of permission to path of Uri "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v1, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-direct {v0, v1}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v0

    .line 9924
    :cond_13
    new-instance v0, Ljava/lang/SecurityException;

    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string v2, "Provider "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget-object v2, v12, Landroid/content/pm/ProviderInfo;->packageName:Ljava/lang/String;

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v2, "/"

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget-object v2, v12, Landroid/content/pm/ProviderInfo;->name:Ljava/lang/String;

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v2, " does not allow granting of Uri permissions (uri "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v1, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    const-string v2, ")"

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-direct {v0, v1}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v0

    .line 9950
    :cond_14
    :goto_7
    move-object v1, v0

    move-object v2, v11

    move-object v3, v12

    move-object v4, v9

    move v5, v8

    move v6, v10

    invoke-direct/range {v1 .. v6}, Lcom/android/server/am/ActivityManagerService;->checkHoldingPermissionsLocked(Landroid/content/pm/IPackageManager;Landroid/content/pm/ProviderInfo;Lcom/android/server/am/ActivityManagerService$GrantUri;II)Z

    move-result v1

    if-nez v1, :cond_16

    .line 9952
    invoke-direct {v0, v9, v8, v10}, Lcom/android/server/am/ActivityManagerService;->checkUriPermissionLocked(Lcom/android/server/am/ActivityManagerService$GrantUri;II)Z

    move-result v0

    if-nez v0, :cond_16

    .line 9953
    const-string v0, "android.permission.MANAGE_DOCUMENTS"

    iget-object v1, v12, Landroid/content/pm/ProviderInfo;->readPermission:Ljava/lang/String;

    invoke-virtual {v0, v1}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v0

    if-eqz v0, :cond_15

    .line 9954
    new-instance v0, Ljava/lang/SecurityException;

    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string v2, "UID "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v1, v8}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v2, " does not have permission to "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v1, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    const-string v2, "; you could obtain access using ACTION_OPEN_DOCUMENT or related APIs"

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-direct {v0, v1}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v0

    .line 9959
    :cond_15
    new-instance v0, Ljava/lang/SecurityException;

    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string v2, "UID "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v1, v8}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v2, " does not have permission to "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v1, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-direct {v0, v1}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v0

    .line 9964
    :cond_16
    return v13

    .line 9823
    :cond_17
    const-string v0, "ActivityManager"

    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string v2, "For security reasons, the system cannot issue a Uri permission grant to "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v1, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    const-string v2, "; use startActivityAsCaller() instead"

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-static {v0, v1}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 9825
    return v3
.end method

.method public checkPermission(Ljava/lang/String;II)I
    .locals 6

    .line 9346
    if-nez p1, :cond_0

    .line 9347
    const/4 p1, -0x1

    return p1

    .line 9349
    :cond_0
    const/4 v4, -0x1

    const/4 v5, 0x1

    move-object v0, p0

    move-object v1, p1

    move v2, p2

    move v3, p3

    invoke-virtual/range {v0 .. v5}, Lcom/android/server/am/ActivityManagerService;->checkComponentPermission(Ljava/lang/String;IIIZ)I

    move-result p1

    return p1
.end method

.method public checkPermissionWithToken(Ljava/lang/String;IILandroid/os/IBinder;)I
    .locals 6

    .line 9354
    if-nez p1, :cond_0

    .line 9355
    const/4 p1, -0x1

    return p1

    .line 9361
    :cond_0
    sget-object v0, Lcom/android/server/am/ActivityManagerService;->sCallerIdentity:Ljava/lang/ThreadLocal;

    invoke-virtual {v0}, Ljava/lang/ThreadLocal;->get()Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Lcom/android/server/am/ActivityManagerService$Identity;

    .line 9362
    if-eqz v0, :cond_1

    iget-object v1, v0, Lcom/android/server/am/ActivityManagerService$Identity;->token:Landroid/os/IBinder;

    if-ne v1, p4, :cond_1

    .line 9363
    const-string p2, "ActivityManager"

    new-instance p3, Ljava/lang/StringBuilder;

    invoke-direct {p3}, Ljava/lang/StringBuilder;-><init>()V

    const-string p4, "checkComponentPermission() adjusting {pid,uid} to {"

    invoke-virtual {p3, p4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget p4, v0, Lcom/android/server/am/ActivityManagerService$Identity;->pid:I

    invoke-virtual {p3, p4}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string p4, ","

    invoke-virtual {p3, p4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget p4, v0, Lcom/android/server/am/ActivityManagerService$Identity;->uid:I

    invoke-virtual {p3, p4}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string/jumbo p4, "}"

    invoke-virtual {p3, p4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {p3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object p3

    invoke-static {p2, p3}, Landroid/util/Slog;->d(Ljava/lang/String;Ljava/lang/String;)I

    .line 9365
    iget p3, v0, Lcom/android/server/am/ActivityManagerService$Identity;->uid:I

    .line 9366
    iget p2, v0, Lcom/android/server/am/ActivityManagerService$Identity;->pid:I

    .line 9369
    :cond_1
    move v2, p2

    move v3, p3

    const/4 v4, -0x1

    const/4 v5, 0x1

    move-object v0, p0

    move-object v1, p1

    invoke-virtual/range {v0 .. v5}, Lcom/android/server/am/ActivityManagerService;->checkComponentPermission(Ljava/lang/String;IIIZ)I

    move-result p1

    return p1
.end method

.method public checkUriPermission(Landroid/net/Uri;IIIILandroid/os/IBinder;)I
    .locals 2

    .line 9762
    const-string v0, "checkUriPermission"

    invoke-virtual {p0, v0}, Lcom/android/server/am/ActivityManagerService;->enforceNotIsolatedCaller(Ljava/lang/String;)V

    .line 9766
    sget-object v0, Lcom/android/server/am/ActivityManagerService;->sCallerIdentity:Ljava/lang/ThreadLocal;

    invoke-virtual {v0}, Ljava/lang/ThreadLocal;->get()Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Lcom/android/server/am/ActivityManagerService$Identity;

    .line 9767
    if-eqz v0, :cond_0

    iget-object v1, v0, Lcom/android/server/am/ActivityManagerService$Identity;->token:Landroid/os/IBinder;

    if-ne v1, p6, :cond_0

    .line 9768
    iget p3, v0, Lcom/android/server/am/ActivityManagerService$Identity;->uid:I

    .line 9769
    iget p2, v0, Lcom/android/server/am/ActivityManagerService$Identity;->pid:I

    .line 9773
    :cond_0
    sget p6, Lcom/android/server/am/ActivityManagerService;->MY_PID:I

    const/4 v0, 0x0

    if-ne p2, p6, :cond_1

    .line 9774
    return v0

    .line 9776
    :cond_1
    monitor-enter p0

    :try_start_0
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    .line 9777
    new-instance p2, Lcom/android/server/am/ActivityManagerService$GrantUri;

    invoke-direct {p2, p5, p1, v0}, Lcom/android/server/am/ActivityManagerService$GrantUri;-><init>(ILandroid/net/Uri;Z)V

    invoke-direct {p0, p2, p3, p4}, Lcom/android/server/am/ActivityManagerService;->checkUriPermissionLocked(Lcom/android/server/am/ActivityManagerService$GrantUri;II)Z

    move-result p1

    if-eqz p1, :cond_2

    .line 9778
    goto :goto_0

    .line 9779
    :cond_2
    const/4 v0, -0x1

    :goto_0
    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 9777
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    return v0

    .line 9780
    :catchall_0
    move-exception p1

    :try_start_1
    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw p1
.end method

.method cleanupAppInLaunchingProvidersLocked(Lcom/android/server/am/ProcessRecord;Z)Z
    .locals 5

    .line 20610
    nop

    .line 20611
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mLaunchingProviders:Ljava/util/ArrayList;

    invoke-virtual {v0}, Ljava/util/ArrayList;->size()I

    move-result v0

    const/4 v1, 0x1

    sub-int/2addr v0, v1

    const/4 v2, 0x0

    :goto_0
    if-ltz v0, :cond_2

    .line 20612
    iget-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mLaunchingProviders:Ljava/util/ArrayList;

    invoke-virtual {v3, v0}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v3

    check-cast v3, Lcom/android/server/am/ContentProviderRecord;

    .line 20613
    iget-object v4, v3, Lcom/android/server/am/ContentProviderRecord;->launchingApp:Lcom/android/server/am/ProcessRecord;

    if-ne v4, p1, :cond_1

    .line 20614
    if-nez p2, :cond_0

    iget-boolean v4, p1, Lcom/android/server/am/ProcessRecord;->bad:Z

    if-nez v4, :cond_0

    invoke-virtual {v3}, Lcom/android/server/am/ContentProviderRecord;->hasConnectionOrHandle()Z

    move-result v4

    if-eqz v4, :cond_0

    .line 20615
    nop

    .line 20611
    move v2, v1

    goto :goto_1

    .line 20617
    :cond_0
    invoke-direct {p0, p1, v3, v1}, Lcom/android/server/am/ActivityManagerService;->removeDyingProviderLocked(Lcom/android/server/am/ProcessRecord;Lcom/android/server/am/ContentProviderRecord;Z)Z

    .line 20611
    :cond_1
    :goto_1
    add-int/lit8 v0, v0, -0x1

    goto :goto_0

    .line 20621
    :cond_2
    return v2
.end method

.method public clearApplicationUserData(Ljava/lang/String;ZLandroid/content/pm/IPackageDataObserver;I)Z
    .locals 19

    move-object/from16 v7, p0

    move-object/from16 v8, p1

    move-object/from16 v9, p3

    .line 6721
    const-string v0, "clearApplicationUserData"

    invoke-virtual {v7, v0}, Lcom/android/server/am/ActivityManagerService;->enforceNotIsolatedCaller(Ljava/lang/String;)V

    .line 6722
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v6

    .line 6723
    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result v5

    .line 6724
    iget-object v10, v7, Lcom/android/server/am/ActivityManagerService;->mUserController:Lcom/android/server/am/UserController;

    const-string v16, "clearApplicationUserData"

    const/4 v14, 0x0

    const/4 v15, 0x2

    const/16 v17, 0x0

    move v11, v5

    move v12, v6

    move/from16 v13, p4

    invoke-virtual/range {v10 .. v17}, Lcom/android/server/am/UserController;->handleIncomingUser(IIIZILjava/lang/String;Ljava/lang/String;)I

    move-result v10

    .line 6730
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v11

    .line 6732
    :try_start_0
    invoke-static {}, Landroid/app/AppGlobals;->getPackageManager()Landroid/content/pm/IPackageManager;

    move-result-object v13

    .line 6733
    monitor-enter p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_2

    :try_start_1
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    .line 6735
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/am/ActivityManagerService;->getPackageManagerInternalLocked()Landroid/content/pm/PackageManagerInternal;

    move-result-object v0

    invoke-virtual {v0, v10, v8}, Landroid/content/pm/PackageManagerInternal;->isPackageDataProtected(ILjava/lang/String;)Z

    move-result v0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_1

    if-nez v0, :cond_f

    .line 6741
    const/4 v1, 0x0

    .line 6743
    const/16 v0, 0x2000

    :try_start_2
    invoke-interface {v13, v8, v0, v10}, Landroid/content/pm/IPackageManager;->getApplicationInfo(Ljava/lang/String;II)Landroid/content/pm/ApplicationInfo;

    move-result-object v0
    :try_end_2
    .catch Landroid/os/RemoteException; {:try_start_2 .. :try_end_2} :catch_0
    .catchall {:try_start_2 .. :try_end_2} :catchall_1

    .line 6747
    goto :goto_0

    .line 6745
    :catch_0
    move-exception v0

    .line 6748
    move-object v0, v1

    .line 6750
    :goto_0
    const/4 v15, 0x0

    if-eqz v0, :cond_0

    :try_start_3
    iget v1, v0, Landroid/content/pm/ApplicationInfo;->uid:I

    if-ne v1, v6, :cond_0

    .line 6752
    const/4 v1, 0x1

    goto :goto_1

    .line 6750
    :cond_0
    nop

    .line 6752
    move v1, v15

    :goto_1
    if-nez v1, :cond_2

    const-string v2, "android.permission.CLEAR_APP_USER_DATA"

    const/16 v16, -0x1

    const/16 v17, 0x1

    move-object v1, v7

    move v3, v5

    move v4, v6

    move v14, v5

    move/from16 v5, v16

    move/from16 v18, v6

    move/from16 v6, v17

    invoke-virtual/range {v1 .. v6}, Lcom/android/server/am/ActivityManagerService;->checkComponentPermission(Ljava/lang/String;IIIZ)I

    move-result v1

    if-nez v1, :cond_1

    goto :goto_2

    .line 6754
    :cond_1
    new-instance v0, Ljava/lang/SecurityException;

    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string v2, "PID "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v1, v14}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v2, " does not have permission "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v2, "android.permission.CLEAR_APP_USER_DATA"

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v2, " to clear data of package "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v1, v8}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-direct {v0, v1}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v0

    .line 6759
    :cond_2
    move v14, v5

    move/from16 v18, v6

    :goto_2
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/am/ActivityManagerService;->getPackageManagerInternalLocked()Landroid/content/pm/PackageManagerInternal;

    move-result-object v1

    .line 6760
    invoke-virtual {v1, v8, v10}, Landroid/content/pm/PackageManagerInternal;->hasInstantApplicationMetadata(Ljava/lang/String;I)Z

    move-result v1

    .line 6761
    if-nez v0, :cond_3

    if-nez v1, :cond_3

    .line 6763
    const/16 v16, 0x1

    goto :goto_3

    .line 6761
    :cond_3
    nop

    .line 6763
    move/from16 v16, v15

    :goto_3
    if-eqz v0, :cond_4

    invoke-virtual {v0}, Landroid/content/pm/ApplicationInfo;->isInstantApp()Z

    move-result v2

    if-nez v2, :cond_5

    :cond_4
    if-eqz v1, :cond_6

    .line 6765
    :cond_5
    const/16 v17, 0x1

    goto :goto_4

    .line 6763
    :cond_6
    nop

    .line 6765
    move/from16 v17, v15

    :goto_4
    const-string v2, "android.permission.ACCESS_INSTANT_APPS"

    const/4 v5, -0x1

    const/4 v6, 0x1

    move-object v1, v7

    move v3, v14

    move/from16 v4, v18

    invoke-virtual/range {v1 .. v6}, Lcom/android/server/am/ActivityManagerService;->checkComponentPermission(Ljava/lang/String;IIIZ)I

    move-result v1

    if-nez v1, :cond_7

    .line 6769
    const/4 v1, 0x1

    goto :goto_5

    .line 6765
    :cond_7
    nop

    .line 6769
    move v1, v15

    :goto_5
    if-nez v16, :cond_d

    if-eqz v17, :cond_8

    if-nez v1, :cond_8

    goto/16 :goto_8

    .line 6782
    :cond_8
    if-eqz v0, :cond_9

    .line 6783
    iget v1, v0, Landroid/content/pm/ApplicationInfo;->uid:I

    const-string v2, "clear data"

    invoke-direct {v7, v8, v1, v2}, Lcom/android/server/am/ActivityManagerService;->forceStopPackageLocked(Ljava/lang/String;ILjava/lang/String;)V

    .line 6784
    iget-object v1, v7, Lcom/android/server/am/ActivityManagerService;->mRecentTasks:Lcom/android/server/am/RecentTasks;

    invoke-virtual {v1, v8, v10}, Lcom/android/server/am/RecentTasks;->removeTasksByPackageName(Ljava/lang/String;I)V

    .line 6786
    :cond_9
    monitor-exit p0
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_1

    :try_start_4
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    .line 6788
    new-instance v14, Lcom/android/server/am/ActivityManagerService$7;

    move-object v1, v14

    move-object v2, v7

    move-object v3, v0

    move v4, v10

    move/from16 v5, v17

    move-object v6, v9

    invoke-direct/range {v1 .. v6}, Lcom/android/server/am/ActivityManagerService$7;-><init>(Lcom/android/server/am/ActivityManagerService;Landroid/content/pm/ApplicationInfo;IZLandroid/content/pm/IPackageDataObserver;)V
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_2

    .line 6820
    :try_start_5
    invoke-interface {v13, v8, v14, v10}, Landroid/content/pm/IPackageManager;->clearApplicationUserData(Ljava/lang/String;Landroid/content/pm/IPackageDataObserver;I)V

    .line 6822
    if-eqz v0, :cond_c

    .line 6826
    if-nez p2, :cond_b

    .line 6827
    monitor-enter p0
    :try_end_5
    .catch Landroid/os/RemoteException; {:try_start_5 .. :try_end_5} :catch_1
    .catchall {:try_start_5 .. :try_end_5} :catchall_2

    :try_start_6
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    .line 6829
    const/4 v1, 0x1

    invoke-direct {v7, v8, v10, v1, v15}, Lcom/android/server/am/ActivityManagerService;->removeUriPermissionsForPackageLocked(Ljava/lang/String;IZZ)V

    .line 6831
    monitor-exit p0
    :try_end_6
    .catchall {:try_start_6 .. :try_end_6} :catchall_0

    :try_start_7
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    .line 6834
    invoke-static {}, Landroid/app/NotificationManager;->getService()Landroid/app/INotificationManager;

    move-result-object v1

    .line 6835
    iget v2, v0, Landroid/content/pm/ApplicationInfo;->uid:I

    iget v3, v0, Landroid/content/pm/ApplicationInfo;->uid:I

    move/from16 v4, v18

    if-ne v4, v3, :cond_a

    const/4 v15, 0x1

    nop

    :cond_a
    invoke-interface {v1, v8, v2, v15}, Landroid/app/INotificationManager;->clearData(Ljava/lang/String;IZ)V
    :try_end_7
    .catch Landroid/os/RemoteException; {:try_start_7 .. :try_end_7} :catch_1
    .catchall {:try_start_7 .. :try_end_7} :catchall_2

    goto :goto_6

    .line 6831
    :catchall_0
    move-exception v0

    :try_start_8
    monitor-exit p0
    :try_end_8
    .catchall {:try_start_8 .. :try_end_8} :catchall_0

    :try_start_9
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw v0

    .line 6839
    :cond_b
    :goto_6
    const-class v1, Lcom/android/server/job/JobSchedulerInternal;

    invoke-static {v1}, Lcom/android/server/LocalServices;->getService(Ljava/lang/Class;)Ljava/lang/Object;

    move-result-object v1

    check-cast v1, Lcom/android/server/job/JobSchedulerInternal;

    .line 6840
    iget v2, v0, Landroid/content/pm/ApplicationInfo;->uid:I

    const-string v3, "clear data"

    invoke-interface {v1, v2, v3}, Lcom/android/server/job/JobSchedulerInternal;->cancelJobsForUid(ILjava/lang/String;)V

    .line 6843
    const-class v1, Lcom/android/server/AlarmManagerInternal;

    invoke-static {v1}, Lcom/android/server/LocalServices;->getService(Ljava/lang/Class;)Ljava/lang/Object;

    move-result-object v1

    check-cast v1, Lcom/android/server/AlarmManagerInternal;

    .line 6844
    iget v0, v0, Landroid/content/pm/ApplicationInfo;->uid:I

    invoke-interface {v1, v0}, Lcom/android/server/AlarmManagerInternal;->removeAlarmsForUid(I)V
    :try_end_9
    .catch Landroid/os/RemoteException; {:try_start_9 .. :try_end_9} :catch_1
    .catchall {:try_start_9 .. :try_end_9} :catchall_2

    .line 6847
    :cond_c
    goto :goto_7

    .line 6846
    :catch_1
    move-exception v0

    .line 6849
    :goto_7
    invoke-static {v11, v12}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 6850
    nop

    .line 6851
    const/4 v1, 0x1

    return v1

    .line 6771
    :cond_d
    :goto_8
    :try_start_a
    const-string v0, "ActivityManager"

    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string v2, "Invalid packageName: "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v1, v8}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-static {v0, v1}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I
    :try_end_a
    .catchall {:try_start_a .. :try_end_a} :catchall_1

    .line 6772
    if-eqz v9, :cond_e

    .line 6774
    :try_start_b
    invoke-interface {v9, v8, v15}, Landroid/content/pm/IPackageDataObserver;->onRemoveCompleted(Ljava/lang/String;Z)V
    :try_end_b
    .catch Landroid/os/RemoteException; {:try_start_b .. :try_end_b} :catch_2
    .catchall {:try_start_b .. :try_end_b} :catchall_1

    .line 6777
    goto :goto_9

    .line 6775
    :catch_2
    move-exception v0

    .line 6776
    :try_start_c
    const-string v0, "ActivityManager"

    const-string v1, "Observer no longer exists."

    invoke-static {v0, v1}, Landroid/util/Slog;->i(Ljava/lang/String;Ljava/lang/String;)I

    .line 6779
    :cond_e
    :goto_9
    monitor-exit p0
    :try_end_c
    .catchall {:try_start_c .. :try_end_c} :catchall_1

    .line 6849
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    invoke-static {v11, v12}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 6779
    return v15

    .line 6737
    :cond_f
    :try_start_d
    new-instance v0, Ljava/lang/SecurityException;

    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string v2, "Cannot clear data for a protected package: "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v1, v8}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-direct {v0, v1}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v0

    .line 6786
    :catchall_1
    move-exception v0

    monitor-exit p0
    :try_end_d
    .catchall {:try_start_d .. :try_end_d} :catchall_1

    :try_start_e
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw v0
    :try_end_e
    .catchall {:try_start_e .. :try_end_e} :catchall_2

    .line 6849
    :catchall_2
    move-exception v0

    invoke-static {v11, v12}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    throw v0
.end method

.method final clearBroadcastQueueForUserLocked(I)Z
    .locals 5

    .line 7425
    nop

    .line 7426
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mBroadcastQueues:[Lcom/android/server/am/BroadcastQueue;

    array-length v0, v0

    const/4 v1, 0x1

    sub-int/2addr v0, v1

    const/4 v2, 0x0

    :goto_0
    if-ltz v0, :cond_0

    .line 7427
    iget-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mBroadcastQueues:[Lcom/android/server/am/BroadcastQueue;

    aget-object v3, v3, v0

    const/4 v4, 0x0

    invoke-virtual {v3, v4, v4, p1, v1}, Lcom/android/server/am/BroadcastQueue;->cleanupDisabledPackageReceiversLocked(Ljava/lang/String;Ljava/util/Set;IZ)Z

    move-result v3

    or-int/2addr v2, v3

    .line 7426
    add-int/lit8 v0, v0, -0x1

    goto :goto_0

    .line 7430
    :cond_0
    return v2
.end method

.method public clearGrantedUriPermissions(Ljava/lang/String;I)V
    .locals 2

    .line 10838
    const-string v0, "android.permission.CLEAR_APP_GRANTED_URI_PERMISSIONS"

    const-string v1, "clearGrantedUriPermissions"

    invoke-virtual {p0, v0, v1}, Lcom/android/server/am/ActivityManagerService;->enforceCallingPermission(Ljava/lang/String;Ljava/lang/String;)V

    .line 10840
    monitor-enter p0

    :try_start_0
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    .line 10841
    const/4 v0, 0x1

    invoke-direct {p0, p1, p2, v0, v0}, Lcom/android/server/am/ActivityManagerService;->removeUriPermissionsForPackageLocked(Ljava/lang/String;IZZ)V

    .line 10842
    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    .line 10843
    return-void

    .line 10842
    :catchall_0
    move-exception p1

    :try_start_1
    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw p1
.end method

.method clearOomAdjObserver()V
    .locals 1

    .line 5206
    monitor-enter p0

    :try_start_0
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    .line 5207
    const/4 v0, -0x1

    iput v0, p0, Lcom/android/server/am/ActivityManagerService;->mCurOomAdjUid:I

    .line 5208
    const/4 v0, 0x0

    iput-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mCurOomAdjObserver:Lcom/android/server/am/ActivityManagerService$OomAdjObserver;

    .line 5209
    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    .line 5210
    return-void

    .line 5209
    :catchall_0
    move-exception v0

    :try_start_1
    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw v0
.end method

.method public clearPendingBackup()V
    .locals 2

    .line 20970
    const-string v0, "android.permission.BACKUP"

    const-string v1, "clearPendingBackup"

    invoke-virtual {p0, v0, v1}, Lcom/android/server/am/ActivityManagerService;->enforceCallingPermission(Ljava/lang/String;Ljava/lang/String;)V

    .line 20972
    monitor-enter p0

    :try_start_0
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    .line 20973
    const/4 v0, 0x0

    iput-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mBackupTarget:Lcom/android/server/am/BackupRecord;

    .line 20974
    iput-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mBackupAppName:Ljava/lang/String;

    .line 20975
    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    .line 20977
    const-class v0, Lcom/android/server/job/JobSchedulerInternal;

    invoke-static {v0}, Lcom/android/server/LocalServices;->getService(Ljava/lang/Class;)Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Lcom/android/server/job/JobSchedulerInternal;

    .line 20978
    invoke-interface {v0}, Lcom/android/server/job/JobSchedulerInternal;->clearAllBackingUpUids()V

    .line 20979
    return-void

    .line 20975
    :catchall_0
    move-exception v0

    :try_start_1
    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw v0
.end method

.method public closeSystemDialogs(Ljava/lang/String;)V
    .locals 6

    .line 7105
    const-string v0, "closeSystemDialogs"

    invoke-virtual {p0, v0}, Lcom/android/server/am/ActivityManagerService;->enforceNotIsolatedCaller(Ljava/lang/String;)V

    .line 7107
    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result v0

    .line 7108
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v1

    .line 7109
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v2

    .line 7111
    :try_start_0
    monitor-enter p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_2

    :try_start_1
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    .line 7114
    const/16 v4, 0x2710

    if-lt v1, v4, :cond_0

    .line 7116
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Landroid/util/SparseArray;

    monitor-enter v1
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_1

    .line 7117
    :try_start_2
    iget-object v4, p0, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Landroid/util/SparseArray;

    invoke-virtual {v4, v0}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Lcom/android/server/am/ProcessRecord;

    .line 7118
    monitor-exit v1
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    .line 7119
    :try_start_3
    iget v1, v0, Lcom/android/server/am/ProcessRecord;->curRawAdj:I

    const/16 v4, 0xc8

    if-le v1, v4, :cond_0

    .line 7120
    const-string v1, "ActivityManager"

    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    const-string v5, "Ignoring closeSystemDialogs "

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v4, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string p1, " from background process "

    invoke-virtual {v4, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v4, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object p1

    invoke-static {v1, p1}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 7122
    monitor-exit p0
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_1

    .line 7128
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    invoke-static {v2, v3}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 7122
    return-void

    .line 7118
    :catchall_0
    move-exception p1

    :try_start_4
    monitor-exit v1
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_0

    :try_start_5
    throw p1

    .line 7125
    :cond_0
    invoke-virtual {p0, p1}, Lcom/android/server/am/ActivityManagerService;->closeSystemDialogsLocked(Ljava/lang/String;)V

    .line 7126
    monitor-exit p0
    :try_end_5
    .catchall {:try_start_5 .. :try_end_5} :catchall_1

    :try_start_6
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V
    :try_end_6
    .catchall {:try_start_6 .. :try_end_6} :catchall_2

    .line 7128
    invoke-static {v2, v3}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 7129
    nop

    .line 7130
    return-void

    .line 7126
    :catchall_1
    move-exception p1

    :try_start_7
    monitor-exit p0
    :try_end_7
    .catchall {:try_start_7 .. :try_end_7} :catchall_1

    :try_start_8
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw p1
    :try_end_8
    .catchall {:try_start_8 .. :try_end_8} :catchall_2

    .line 7128
    :catchall_2
    move-exception p1

    invoke-static {v2, v3}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    throw p1
.end method

.method closeSystemDialogsLocked(Ljava/lang/String;)V
    .locals 17
    .annotation build Lcom/android/internal/annotations/GuardedBy;
        value = "this"
    .end annotation

    move-object/from16 v0, p0

    .line 7134
    move-object/from16 v1, p1

    new-instance v3, Landroid/content/Intent;

    const-string v2, "android.intent.action.CLOSE_SYSTEM_DIALOGS"

    invoke-direct {v3, v2}, Landroid/content/Intent;-><init>(Ljava/lang/String;)V

    .line 7135
    const/high16 v2, 0x50000000

    invoke-virtual {v3, v2}, Landroid/content/Intent;->addFlags(I)Landroid/content/Intent;

    .line 7137
    if-eqz v1, :cond_0

    .line 7138
    const-string/jumbo v2, "reason"

    invoke-virtual {v3, v2, v1}, Landroid/content/Intent;->putExtra(Ljava/lang/String;Ljava/lang/String;)Landroid/content/Intent;

    .line 7140
    :cond_0
    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mWindowManager:Lcom/android/server/wm/WindowManagerService;

    invoke-virtual {v2, v1}, Lcom/android/server/wm/WindowManagerService;->closeSystemDialogs(Ljava/lang/String;)V

    .line 7142
    iget-object v1, v0, Lcom/android/server/am/ActivityManagerService;->mStackSupervisor:Lcom/android/server/am/ActivityStackSupervisor;

    invoke-virtual {v1}, Lcom/android/server/am/ActivityStackSupervisor;->closeSystemDialogsLocked()V

    .line 7144
    const/4 v1, 0x0

    const/4 v2, 0x0

    const/4 v4, 0x0

    const/4 v5, 0x0

    const/4 v6, 0x0

    const/4 v7, 0x0

    const/4 v8, 0x0

    const/4 v9, 0x0

    const/4 v10, -0x1

    const/4 v11, 0x0

    const/4 v12, 0x0

    const/4 v13, 0x0

    const/4 v14, -0x1

    const/16 v15, 0x3e8

    const/16 v16, -0x1

    invoke-virtual/range {v0 .. v16}, Lcom/android/server/am/ActivityManagerService;->broadcastIntentLocked(Lcom/android/server/am/ProcessRecord;Ljava/lang/String;Landroid/content/Intent;Ljava/lang/String;Landroid/content/IIntentReceiver;ILjava/lang/String;Landroid/os/Bundle;[Ljava/lang/String;ILandroid/os/Bundle;ZZIII)I

    .line 7147
    return-void
.end method

.method collectProcesses(Ljava/io/PrintWriter;IZ[Ljava/lang/String;)Ljava/util/ArrayList;
    .locals 5
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "(",
            "Ljava/io/PrintWriter;",
            "IZ[",
            "Ljava/lang/String;",
            ")",
            "Ljava/util/ArrayList<",
            "Lcom/android/server/am/ProcessRecord;",
            ">;"
        }
    .end annotation

    .line 18706
    monitor-enter p0

    :try_start_0
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    .line 18707
    if-eqz p4, :cond_5

    array-length p1, p4

    if-le p1, p2, :cond_5

    aget-object p1, p4, p2

    const/4 v0, 0x0

    .line 18708
    invoke-virtual {p1, v0}, Ljava/lang/String;->charAt(I)C

    move-result p1

    const/16 v0, 0x2d

    if-eq p1, v0, :cond_5

    .line 18709
    new-instance p1, Ljava/util/ArrayList;

    invoke-direct {p1}, Ljava/util/ArrayList;-><init>()V
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 18710
    nop

    .line 18712
    :try_start_1
    aget-object v0, p4, p2

    invoke-static {v0}, Ljava/lang/Integer;->parseInt(Ljava/lang/String;)I

    move-result v0
    :try_end_1
    .catch Ljava/lang/NumberFormatException; {:try_start_1 .. :try_end_1} :catch_0
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 18714
    goto :goto_0

    .line 18713
    :catch_0
    move-exception v0

    .line 18715
    const/4 v0, -0x1

    :goto_0
    :try_start_2
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mLruProcesses:Ljava/util/ArrayList;

    invoke-virtual {v1}, Ljava/util/ArrayList;->size()I

    move-result v1

    add-int/lit8 v1, v1, -0x1

    :goto_1
    if-ltz v1, :cond_3

    .line 18716
    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mLruProcesses:Ljava/util/ArrayList;

    invoke-virtual {v2, v1}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Lcom/android/server/am/ProcessRecord;

    .line 18717
    iget v3, v2, Lcom/android/server/am/ProcessRecord;->pid:I

    if-lez v3, :cond_0

    iget v3, v2, Lcom/android/server/am/ProcessRecord;->pid:I

    if-ne v3, v0, :cond_0

    .line 18718
    invoke-virtual {p1, v2}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    goto :goto_2

    .line 18719
    :cond_0
    if-eqz p3, :cond_1

    iget-object v3, v2, Lcom/android/server/am/ProcessRecord;->pkgList:Landroid/util/ArrayMap;

    if-eqz v3, :cond_1

    iget-object v3, v2, Lcom/android/server/am/ProcessRecord;->pkgList:Landroid/util/ArrayMap;

    aget-object v4, p4, p2

    .line 18720
    invoke-virtual {v3, v4}, Landroid/util/ArrayMap;->containsKey(Ljava/lang/Object;)Z

    move-result v3

    if-eqz v3, :cond_1

    .line 18721
    invoke-virtual {p1, v2}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    goto :goto_2

    .line 18722
    :cond_1
    iget-object v3, v2, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;

    aget-object v4, p4, p2

    invoke-virtual {v3, v4}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v3

    if-eqz v3, :cond_2

    .line 18723
    invoke-virtual {p1, v2}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    .line 18715
    :cond_2
    :goto_2
    add-int/lit8 v1, v1, -0x1

    goto :goto_1

    .line 18726
    :cond_3
    invoke-virtual {p1}, Ljava/util/ArrayList;->size()I

    move-result p2

    if-gtz p2, :cond_4

    .line 18727
    const/4 p1, 0x0

    monitor-exit p0
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    return-object p1

    .line 18729
    :cond_4
    goto :goto_3

    .line 18730
    :cond_5
    :try_start_3
    new-instance p1, Ljava/util/ArrayList;

    iget-object p2, p0, Lcom/android/server/am/ActivityManagerService;->mLruProcesses:Ljava/util/ArrayList;

    invoke-direct {p1, p2}, Ljava/util/ArrayList;-><init>(Ljava/util/Collection;)V

    .line 18732
    :goto_3
    monitor-exit p0
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    .line 18733
    return-object p1

    .line 18732
    :catchall_0
    move-exception p1

    :try_start_4
    monitor-exit p0
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw p1
.end method

.method compatibilityInfoForPackageLocked(Landroid/content/pm/ApplicationInfo;)Landroid/content/res/CompatibilityInfo;
    .locals 1

    .line 4865
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mCompatModePackages:Lcom/android/server/am/CompatModePackages;

    invoke-virtual {v0, p1}, Lcom/android/server/am/CompatModePackages;->compatibilityInfoForPackageLocked(Landroid/content/pm/ApplicationInfo;)Landroid/content/res/CompatibilityInfo;

    move-result-object p1

    return-object p1
.end method

.method public convertFromTranslucent(Landroid/os/IBinder;)Z
    .locals 7

    .line 14551
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v0

    .line 14553
    :try_start_0
    monitor-enter p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_1

    :try_start_1
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    .line 14554
    invoke-static {p1}, Lcom/android/server/am/ActivityRecord;->isInStackLocked(Landroid/os/IBinder;)Lcom/android/server/am/ActivityRecord;

    move-result-object v2

    .line 14555
    const/4 v3, 0x0

    if-nez v2, :cond_0

    .line 14556
    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 14566
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 14556
    return v3

    .line 14558
    :cond_0
    const/4 v4, 0x1

    :try_start_2
    invoke-virtual {v2, v4}, Lcom/android/server/am/ActivityRecord;->changeWindowTranslucency(Z)Z

    move-result v2

    .line 14559
    if-eqz v2, :cond_1

    .line 14560
    iget-object v5, p0, Lcom/android/server/am/ActivityManagerService;->mStackSupervisor:Lcom/android/server/am/ActivityStackSupervisor;

    const/4 v6, 0x0

    invoke-virtual {v5, v6, v3, v3}, Lcom/android/server/am/ActivityStackSupervisor;->ensureActivitiesVisibleLocked(Lcom/android/server/am/ActivityRecord;IZ)V

    .line 14562
    :cond_1
    iget-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mWindowManager:Lcom/android/server/wm/WindowManagerService;

    invoke-virtual {v3, p1, v4}, Lcom/android/server/wm/WindowManagerService;->setAppFullscreen(Landroid/os/IBinder;Z)V

    .line 14563
    monitor-exit p0
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    .line 14566
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 14563
    return v2

    .line 14564
    :catchall_0
    move-exception p1

    :try_start_3
    monitor-exit p0
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_0

    :try_start_4
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw p1
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_1

    .line 14566
    :catchall_1
    move-exception p1

    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    throw p1
.end method

.method public convertToTranslucent(Landroid/os/IBinder;Landroid/os/Bundle;)Z
    .locals 7

    .line 14572
    invoke-static {p2}, Lcom/android/server/am/SafeActivityOptions;->fromBundle(Landroid/os/Bundle;)Lcom/android/server/am/SafeActivityOptions;

    move-result-object p2

    .line 14573
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v0

    .line 14575
    :try_start_0
    monitor-enter p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_1

    :try_start_1
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    .line 14576
    invoke-static {p1}, Lcom/android/server/am/ActivityRecord;->isInStackLocked(Landroid/os/IBinder;)Lcom/android/server/am/ActivityRecord;

    move-result-object v2

    .line 14577
    const/4 v3, 0x0

    if-nez v2, :cond_0

    .line 14578
    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 14595
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 14578
    return v3

    .line 14580
    :cond_0
    :try_start_2
    invoke-virtual {v2}, Lcom/android/server/am/ActivityRecord;->getTask()Lcom/android/server/am/TaskRecord;

    move-result-object v4

    .line 14581
    iget-object v5, v4, Lcom/android/server/am/TaskRecord;->mActivities:Ljava/util/ArrayList;

    invoke-virtual {v5, v2}, Ljava/util/ArrayList;->lastIndexOf(Ljava/lang/Object;)I

    move-result v5

    .line 14582
    const/4 v6, 0x0

    if-lez v5, :cond_2

    .line 14583
    iget-object v4, v4, Lcom/android/server/am/TaskRecord;->mActivities:Ljava/util/ArrayList;

    add-int/lit8 v5, v5, -0x1

    invoke-virtual {v4, v5}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v4

    check-cast v4, Lcom/android/server/am/ActivityRecord;

    .line 14584
    if-eqz p2, :cond_1

    invoke-virtual {p2, v2}, Lcom/android/server/am/SafeActivityOptions;->getOptions(Lcom/android/server/am/ActivityRecord;)Landroid/app/ActivityOptions;

    move-result-object p2

    goto :goto_0

    :cond_1
    move-object p2, v6

    :goto_0
    iput-object p2, v4, Lcom/android/server/am/ActivityRecord;->returningOptions:Landroid/app/ActivityOptions;

    .line 14586
    :cond_2
    invoke-virtual {v2, v3}, Lcom/android/server/am/ActivityRecord;->changeWindowTranslucency(Z)Z

    move-result p2

    .line 14587
    if-eqz p2, :cond_3

    .line 14588
    invoke-virtual {v2}, Lcom/android/server/am/ActivityRecord;->getStack()Lcom/android/server/am/ActivityStack;

    move-result-object v4

    invoke-virtual {v4, v2}, Lcom/android/server/am/ActivityStack;->convertActivityToTranslucent(Lcom/android/server/am/ActivityRecord;)V

    .line 14590
    :cond_3
    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mStackSupervisor:Lcom/android/server/am/ActivityStackSupervisor;

    invoke-virtual {v2, v6, v3, v3}, Lcom/android/server/am/ActivityStackSupervisor;->ensureActivitiesVisibleLocked(Lcom/android/server/am/ActivityRecord;IZ)V

    .line 14591
    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mWindowManager:Lcom/android/server/wm/WindowManagerService;

    invoke-virtual {v2, p1, v3}, Lcom/android/server/wm/WindowManagerService;->setAppFullscreen(Landroid/os/IBinder;Z)V

    .line 14592
    monitor-exit p0
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    .line 14595
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 14592
    return p2

    .line 14593
    :catchall_0
    move-exception p1

    :try_start_3
    monitor-exit p0
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_0

    :try_start_4
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw p1
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_1

    .line 14595
    :catchall_1
    move-exception p1

    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    throw p1
.end method

.method public crashApplication(IILjava/lang/String;ILjava/lang/String;)V
    .locals 7

    .line 5939
    const-string v0, "android.permission.FORCE_STOP_PACKAGES"

    invoke-virtual {p0, v0}, Lcom/android/server/am/ActivityManagerService;->checkCallingPermission(Ljava/lang/String;)I

    move-result v0

    if-nez v0, :cond_0

    .line 5949
    monitor-enter p0

    :try_start_0
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    .line 5950
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mAppErrors:Lcom/android/server/am/AppErrors;

    move v2, p1

    move v3, p2

    move-object v4, p3

    move v5, p4

    move-object v6, p5

    invoke-virtual/range {v1 .. v6}, Lcom/android/server/am/AppErrors;->scheduleAppCrashLocked(IILjava/lang/String;ILjava/lang/String;)V

    .line 5951
    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    .line 5952
    return-void

    .line 5951
    :catchall_0
    move-exception p1

    :try_start_1
    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw p1

    .line 5941
    :cond_0
    new-instance p1, Ljava/lang/StringBuilder;

    invoke-direct {p1}, Ljava/lang/StringBuilder;-><init>()V

    const-string p2, "Permission Denial: crashApplication() from pid="

    invoke-virtual {p1, p2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 5942
    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result p2

    invoke-virtual {p1, p2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string p2, ", uid="

    invoke-virtual {p1, p2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 5943
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result p2

    invoke-virtual {p1, p2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string p2, " requires "

    invoke-virtual {p1, p2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string p2, "android.permission.FORCE_STOP_PACKAGES"

    invoke-virtual {p1, p2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {p1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object p1

    .line 5945
    const-string p2, "ActivityManager"

    invoke-static {p2, p1}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 5946
    new-instance p2, Ljava/lang/SecurityException;

    invoke-direct {p2, p1}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw p2
.end method

.method protected createRecentTasks()Lcom/android/server/am/RecentTasks;
    .locals 2

    .line 3317
    new-instance v0, Lcom/android/server/am/RecentTasks;

    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mStackSupervisor:Lcom/android/server/am/ActivityStackSupervisor;

    invoke-direct {v0, p0, v1}, Lcom/android/server/am/RecentTasks;-><init>(Lcom/android/server/am/ActivityManagerService;Lcom/android/server/am/ActivityStackSupervisor;)V

    return-object v0
.end method

.method public createStackOnDisplay(I)I
    .locals 3
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Landroid/os/RemoteException;
        }
    .end annotation

    .line 11445
    const-string v0, "android.permission.MANAGE_ACTIVITY_STACKS"

    const-string v1, "createStackOnDisplay()"

    invoke-virtual {p0, v0, v1}, Lcom/android/server/am/ActivityManagerService;->enforceCallingPermission(Ljava/lang/String;Ljava/lang/String;)V

    .line 11446
    monitor-enter p0

    :try_start_0
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    .line 11447
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mStackSupervisor:Lcom/android/server/am/ActivityStackSupervisor;

    .line 11448
    invoke-virtual {v0, p1}, Lcom/android/server/am/ActivityStackSupervisor;->getActivityDisplayOrCreateLocked(I)Lcom/android/server/am/ActivityDisplay;

    move-result-object p1

    .line 11449
    const/4 v0, -0x1

    if-nez p1, :cond_0

    .line 11450
    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    return v0

    .line 11453
    :cond_0
    const/4 v1, 0x4

    const/4 v2, 0x1

    :try_start_1
    invoke-virtual {p1, v1, v2, v2}, Lcom/android/server/am/ActivityDisplay;->createStack(IIZ)Lcom/android/server/am/ActivityStack;

    move-result-object p1

    .line 11456
    if-eqz p1, :cond_1

    iget v0, p1, Lcom/android/server/am/ActivityStack;->mStackId:I

    nop

    :cond_1
    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    return v0

    .line 11457
    :catchall_0
    move-exception p1

    :try_start_2
    monitor-exit p0
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw p1
.end method

.method protected createStackSupervisor()Lcom/android/server/am/ActivityStackSupervisor;
    .locals 2

    .line 3311
    new-instance v0, Lcom/android/server/am/ActivityStackSupervisor;

    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    invoke-virtual {v1}, Lcom/android/server/am/ActivityManagerService$MainHandler;->getLooper()Landroid/os/Looper;

    move-result-object v1

    invoke-direct {v0, p0, v1}, Lcom/android/server/am/ActivityStackSupervisor;-><init>(Lcom/android/server/am/ActivityManagerService;Landroid/os/Looper;)V

    .line 3312
    invoke-virtual {v0}, Lcom/android/server/am/ActivityStackSupervisor;->initialize()V

    .line 3313
    return-object v0
.end method

.method decProviderCountLocked(Lcom/android/server/am/ContentProviderConnection;Lcom/android/server/am/ContentProviderRecord;Landroid/os/IBinder;Z)Z
    .locals 2

    .line 12311
    const/4 v0, 0x0

    if-eqz p1, :cond_3

    .line 12312
    iget-object p2, p1, Lcom/android/server/am/ContentProviderConnection;->provider:Lcom/android/server/am/ContentProviderRecord;

    .line 12318
    const/4 p3, 0x1

    if-eqz p4, :cond_0

    .line 12319
    iget p4, p1, Lcom/android/server/am/ContentProviderConnection;->stableCount:I

    sub-int/2addr p4, p3

    iput p4, p1, Lcom/android/server/am/ContentProviderConnection;->stableCount:I

    goto :goto_0

    .line 12321
    :cond_0
    iget p4, p1, Lcom/android/server/am/ContentProviderConnection;->unstableCount:I

    sub-int/2addr p4, p3

    iput p4, p1, Lcom/android/server/am/ContentProviderConnection;->unstableCount:I

    .line 12323
    :goto_0
    iget p4, p1, Lcom/android/server/am/ContentProviderConnection;->stableCount:I

    if-nez p4, :cond_2

    iget p4, p1, Lcom/android/server/am/ContentProviderConnection;->unstableCount:I

    if-nez p4, :cond_2

    .line 12324
    iget-object p4, p2, Lcom/android/server/am/ContentProviderRecord;->connections:Ljava/util/ArrayList;

    invoke-virtual {p4, p1}, Ljava/util/ArrayList;->remove(Ljava/lang/Object;)Z

    .line 12325
    iget-object p4, p1, Lcom/android/server/am/ContentProviderConnection;->client:Lcom/android/server/am/ProcessRecord;

    iget-object p4, p4, Lcom/android/server/am/ProcessRecord;->conProviders:Ljava/util/ArrayList;

    invoke-virtual {p4, p1}, Ljava/util/ArrayList;->remove(Ljava/lang/Object;)Z

    .line 12326
    iget-object p4, p1, Lcom/android/server/am/ContentProviderConnection;->client:Lcom/android/server/am/ProcessRecord;

    iget p4, p4, Lcom/android/server/am/ProcessRecord;->setProcState:I

    const/16 v0, 0xe

    if-ge p4, v0, :cond_1

    .line 12330
    iget-object p4, p2, Lcom/android/server/am/ContentProviderRecord;->proc:Lcom/android/server/am/ProcessRecord;

    if-eqz p4, :cond_1

    .line 12331
    iget-object p4, p2, Lcom/android/server/am/ContentProviderRecord;->proc:Lcom/android/server/am/ProcessRecord;

    invoke-static {}, Landroid/os/SystemClock;->uptimeMillis()J

    move-result-wide v0

    iput-wide v0, p4, Lcom/android/server/am/ProcessRecord;->lastProviderTime:J

    .line 12334
    :cond_1
    iget-object p4, p1, Lcom/android/server/am/ContentProviderConnection;->client:Lcom/android/server/am/ProcessRecord;

    iget p4, p4, Lcom/android/server/am/ProcessRecord;->uid:I

    iget-object p1, p1, Lcom/android/server/am/ContentProviderConnection;->client:Lcom/android/server/am/ProcessRecord;

    iget-object p1, p1, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;

    iget v0, p2, Lcom/android/server/am/ContentProviderRecord;->uid:I

    iget-object p2, p2, Lcom/android/server/am/ContentProviderRecord;->name:Landroid/content/ComponentName;

    invoke-virtual {p0, p4, p1, v0, p2}, Lcom/android/server/am/ActivityManagerService;->stopAssociationLocked(ILjava/lang/String;ILandroid/content/ComponentName;)V

    .line 12335
    return p3

    .line 12337
    :cond_2
    return v0

    .line 12339
    :cond_3
    invoke-virtual {p2, p3}, Lcom/android/server/am/ContentProviderRecord;->removeExternalProcessHandleLocked(Landroid/os/IBinder;)Z

    .line 12340
    return v0
.end method

.method public final disableOverlays()V
    .locals 9

    .line 14959
    :try_start_0
    const-string/jumbo v0, "overlay"

    .line 14960
    invoke-static {v0}, Landroid/os/ServiceManager;->getService(Ljava/lang/String;)Landroid/os/IBinder;

    move-result-object v0

    .line 14959
    invoke-static {v0}, Landroid/content/om/IOverlayManager$Stub;->asInterface(Landroid/os/IBinder;)Landroid/content/om/IOverlayManager;

    move-result-object v0

    .line 14961
    if-nez v0, :cond_0

    .line 14962
    return-void

    .line 14964
    :cond_0
    const-string v1, "ActivityManager"

    const-string v2, "Contacting the Overlay Manager Service for the list of enabled overlays"

    invoke-static {v1, v2}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    .line 14965
    const/4 v1, 0x0

    invoke-interface {v0, v1}, Landroid/content/om/IOverlayManager;->getAllOverlays(I)Ljava/util/Map;

    move-result-object v2

    .line 14966
    if-eqz v2, :cond_3

    .line 14967
    const-string v3, "ActivityManager"

    const-string v4, "The Overlay Manager Service provided the list of enabled overlays"

    invoke-static {v3, v4}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    .line 14968
    invoke-interface {v2}, Ljava/util/Map;->keySet()Ljava/util/Set;

    move-result-object v3

    .line 14969
    invoke-interface {v3}, Ljava/util/Set;->iterator()Ljava/util/Iterator;

    move-result-object v3

    :goto_0
    invoke-interface {v3}, Ljava/util/Iterator;->hasNext()Z

    move-result v4

    if-eqz v4, :cond_3

    invoke-interface {v3}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v4

    check-cast v4, Ljava/lang/String;

    .line 14970
    invoke-interface {v2, v4}, Ljava/util/Map;->get(Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object v4

    check-cast v4, Ljava/util/List;

    invoke-interface {v4}, Ljava/util/List;->iterator()Ljava/util/Iterator;

    move-result-object v4

    :goto_1
    invoke-interface {v4}, Ljava/util/Iterator;->hasNext()Z

    move-result v5

    if-eqz v5, :cond_2

    invoke-interface {v4}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v5

    check-cast v5, Landroid/content/om/OverlayInfo;

    .line 14971
    invoke-virtual {v5}, Landroid/content/om/OverlayInfo;->isEnabled()Z

    move-result v6

    if-eqz v6, :cond_1

    .line 14972
    iget-object v6, v5, Landroid/content/om/OverlayInfo;->packageName:Ljava/lang/String;

    invoke-interface {v0, v6, v1, v1}, Landroid/content/om/IOverlayManager;->setEnabled(Ljava/lang/String;ZI)Z

    .line 14973
    const-string v6, "ActivityManager"

    new-instance v7, Ljava/lang/StringBuilder;

    invoke-direct {v7}, Ljava/lang/StringBuilder;-><init>()V

    const-string v8, "Now disabling \'"

    invoke-virtual {v7, v8}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget-object v5, v5, Landroid/content/om/OverlayInfo;->packageName:Ljava/lang/String;

    invoke-virtual {v7, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v5, "\'"

    invoke-virtual {v7, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v7}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v5

    invoke-static {v6, v5}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I
    :try_end_0
    .catch Landroid/os/RemoteException; {:try_start_0 .. :try_end_0} :catch_0

    .line 14975
    :cond_1
    goto :goto_1

    .line 14976
    :cond_2
    goto :goto_0

    .line 14981
    :cond_3
    goto :goto_2

    .line 14978
    :catch_0
    move-exception v0

    .line 14979
    invoke-virtual {v0}, Landroid/os/RemoteException;->printStackTrace()V

    .line 14980
    const-string v0, "ActivityManager"

    const-string v1, "RemoteException while trying to contact the Overlay Manager Service!"

    invoke-static {v0, v1}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    .line 14982
    :goto_2
    return-void
.end method

.method public dismissKeyguard(Landroid/os/IBinder;Lcom/android/internal/policy/IKeyguardDismissCallback;Ljava/lang/CharSequence;)V
    .locals 3
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Landroid/os/RemoteException;
        }
    .end annotation

    .line 27417
    if-eqz p3, :cond_0

    .line 27418
    const-string v0, "android.permission.SHOW_KEYGUARD_MESSAGE"

    const-string v1, "dismissKeyguard()"

    invoke-virtual {p0, v0, v1}, Lcom/android/server/am/ActivityManagerService;->enforceCallingPermission(Ljava/lang/String;Ljava/lang/String;)V

    .line 27421
    :cond_0
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v0

    .line 27423
    :try_start_0
    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mKeyguardController:Lcom/android/server/am/KeyguardController;

    invoke-virtual {v2, p1, p2, p3}, Lcom/android/server/am/KeyguardController;->dismissKeyguard(Landroid/os/IBinder;Lcom/android/internal/policy/IKeyguardDismissCallback;Ljava/lang/CharSequence;)V
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 27425
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 27426
    nop

    .line 27427
    return-void

    .line 27425
    :catchall_0
    move-exception p1

    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    throw p1
.end method

.method public dismissPip(ZI)V
    .locals 5

    .line 11667
    const-string v0, "android.permission.MANAGE_ACTIVITY_STACKS"

    const-string v1, "dismissPip()"

    invoke-virtual {p0, v0, v1}, Lcom/android/server/am/ActivityManagerService;->enforceCallerIsRecentsOrHasPermission(Ljava/lang/String;Ljava/lang/String;)V

    .line 11668
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v0

    .line 11670
    :try_start_0
    monitor-enter p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_1

    :try_start_1
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    .line 11671
    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mStackSupervisor:Lcom/android/server/am/ActivityStackSupervisor;

    .line 11672
    invoke-virtual {v2}, Lcom/android/server/am/ActivityStackSupervisor;->getDefaultDisplay()Lcom/android/server/am/ActivityDisplay;

    move-result-object v2

    invoke-virtual {v2}, Lcom/android/server/am/ActivityDisplay;->getPinnedStack()Lcom/android/server/am/PinnedActivityStack;

    move-result-object v2

    .line 11673
    if-nez v2, :cond_0

    .line 11674
    const-string p1, "ActivityManager"

    const-string p2, "dismissPip: pinned stack not found."

    invoke-static {p1, p2}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 11675
    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 11689
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 11675
    return-void

    .line 11677
    :cond_0
    :try_start_2
    invoke-virtual {v2}, Lcom/android/server/am/PinnedActivityStack;->getWindowingMode()I

    move-result v3

    const/4 v4, 0x2

    if-ne v3, v4, :cond_2

    .line 11681
    if-eqz p1, :cond_1

    .line 11682
    const/4 p1, 0x0

    const/4 v3, 0x0

    invoke-virtual {v2, v3, v3, p2, p1}, Lcom/android/server/am/PinnedActivityStack;->animateResizePinnedStack(Landroid/graphics/Rect;Landroid/graphics/Rect;IZ)V

    goto :goto_0

    .line 11685
    :cond_1
    iget-object p1, p0, Lcom/android/server/am/ActivityManagerService;->mStackSupervisor:Lcom/android/server/am/ActivityStackSupervisor;

    const/4 p2, 0x1

    invoke-virtual {p1, v2, p2}, Lcom/android/server/am/ActivityStackSupervisor;->moveTasksToFullscreenStackLocked(Lcom/android/server/am/ActivityStack;Z)V

    .line 11687
    :goto_0
    monitor-exit p0
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    :try_start_3
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_1

    .line 11689
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 11690
    nop

    .line 11691
    return-void

    .line 11678
    :cond_2
    :try_start_4
    new-instance p1, Ljava/lang/IllegalArgumentException;

    new-instance p2, Ljava/lang/StringBuilder;

    invoke-direct {p2}, Ljava/lang/StringBuilder;-><init>()V

    const-string v3, "Stack: "

    invoke-virtual {p2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {p2, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    const-string v2, " doesn\'t support animated resize."

    invoke-virtual {p2, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {p2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object p2

    invoke-direct {p1, p2}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw p1

    .line 11687
    :catchall_0
    move-exception p1

    monitor-exit p0
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_0

    :try_start_5
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw p1
    :try_end_5
    .catchall {:try_start_5 .. :try_end_5} :catchall_1

    .line 11689
    :catchall_1
    move-exception p1

    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    throw p1
.end method

.method public dismissSplitScreenMode(Z)V
    .locals 4

    .line 11626
    const-string v0, "android.permission.MANAGE_ACTIVITY_STACKS"

    const-string v1, "dismissSplitScreenMode()"

    invoke-virtual {p0, v0, v1}, Lcom/android/server/am/ActivityManagerService;->enforceCallerIsRecentsOrHasPermission(Ljava/lang/String;Ljava/lang/String;)V

    .line 11627
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v0

    .line 11629
    :try_start_0
    monitor-enter p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_1

    :try_start_1
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    .line 11630
    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mStackSupervisor:Lcom/android/server/am/ActivityStackSupervisor;

    .line 11631
    invoke-virtual {v2}, Lcom/android/server/am/ActivityStackSupervisor;->getDefaultDisplay()Lcom/android/server/am/ActivityDisplay;

    move-result-object v2

    invoke-virtual {v2}, Lcom/android/server/am/ActivityDisplay;->getSplitScreenPrimaryStack()Lcom/android/server/am/ActivityStack;

    move-result-object v2

    .line 11632
    if-nez v2, :cond_0

    .line 11633
    const-string p1, "ActivityManager"

    const-string v2, "dismissSplitScreenMode: primary split-screen stack not found."

    invoke-static {p1, v2}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 11634
    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 11655
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 11634
    return-void

    .line 11637
    :cond_0
    if-eqz p1, :cond_1

    .line 11640
    :try_start_2
    const-string p1, "dismissSplitScreenMode"

    invoke-virtual {v2, p1}, Lcom/android/server/am/ActivityStack;->moveToFront(Ljava/lang/String;)V

    goto :goto_0

    .line 11641
    :cond_1
    iget-object p1, p0, Lcom/android/server/am/ActivityManagerService;->mStackSupervisor:Lcom/android/server/am/ActivityStackSupervisor;

    invoke-virtual {p1, v2}, Lcom/android/server/am/ActivityStackSupervisor;->isFocusedStack(Lcom/android/server/am/ActivityStack;)Z

    move-result p1

    if-eqz p1, :cond_2

    .line 11645
    invoke-virtual {v2}, Lcom/android/server/am/ActivityStack;->getDisplay()Lcom/android/server/am/ActivityDisplay;

    move-result-object p1

    const/4 v3, 0x4

    invoke-virtual {p1, v3}, Lcom/android/server/am/ActivityDisplay;->getTopStackInWindowingMode(I)Lcom/android/server/am/ActivityStack;

    move-result-object p1

    .line 11647
    if-eqz p1, :cond_2

    .line 11648
    const-string v3, "dismissSplitScreenMode_other"

    invoke-virtual {p1, v3}, Lcom/android/server/am/ActivityStack;->moveToFront(Ljava/lang/String;)V

    .line 11652
    :cond_2
    :goto_0
    const/4 p1, 0x1

    invoke-virtual {v2, p1}, Lcom/android/server/am/ActivityStack;->setWindowingMode(I)V

    .line 11653
    monitor-exit p0
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    :try_start_3
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_1

    .line 11655
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 11656
    nop

    .line 11657
    return-void

    .line 11653
    :catchall_0
    move-exception p1

    :try_start_4
    monitor-exit p0
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_0

    :try_start_5
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw p1
    :try_end_5
    .catchall {:try_start_5 .. :try_end_5} :catchall_1

    .line 11655
    :catchall_1
    move-exception p1

    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    throw p1
.end method

.method dispatchOomAdjObserver(Ljava/lang/String;)V
    .locals 1

    .line 5189
    monitor-enter p0

    :try_start_0
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    .line 5190
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mCurOomAdjObserver:Lcom/android/server/am/ActivityManagerService$OomAdjObserver;

    .line 5191
    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    .line 5193
    if-eqz v0, :cond_0

    .line 5194
    invoke-interface {v0, p1}, Lcom/android/server/am/ActivityManagerService$OomAdjObserver;->onOomAdjMessage(Ljava/lang/String;)V

    .line 5196
    :cond_0
    return-void

    .line 5191
    :catchall_0
    move-exception p1

    :try_start_1
    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw p1
.end method

.method dispatchUidsChanged()V
    .locals 8
    .annotation build Lcom/android/internal/annotations/VisibleForTesting;
    .end annotation

    .line 5043
    monitor-enter p0

    :try_start_0
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    .line 5044
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mPendingUidChanges:Ljava/util/ArrayList;

    invoke-virtual {v0}, Ljava/util/ArrayList;->size()I

    move-result v0

    .line 5045
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mActiveUidChanges:[Lcom/android/server/am/UidRecord$ChangeItem;

    array-length v1, v1

    if-ge v1, v0, :cond_0

    .line 5046
    new-array v1, v0, [Lcom/android/server/am/UidRecord$ChangeItem;

    iput-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mActiveUidChanges:[Lcom/android/server/am/UidRecord$ChangeItem;

    .line 5048
    :cond_0
    const/4 v1, 0x0

    move v2, v1

    :goto_0
    if-ge v2, v0, :cond_2

    .line 5049
    iget-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mPendingUidChanges:Ljava/util/ArrayList;

    invoke-virtual {v3, v2}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v3

    check-cast v3, Lcom/android/server/am/UidRecord$ChangeItem;

    .line 5050
    iget-object v4, p0, Lcom/android/server/am/ActivityManagerService;->mActiveUidChanges:[Lcom/android/server/am/UidRecord$ChangeItem;

    aput-object v3, v4, v2

    .line 5051
    iget-object v4, v3, Lcom/android/server/am/UidRecord$ChangeItem;->uidRecord:Lcom/android/server/am/UidRecord;

    if-eqz v4, :cond_1

    .line 5052
    iget-object v4, v3, Lcom/android/server/am/UidRecord$ChangeItem;->uidRecord:Lcom/android/server/am/UidRecord;

    const/4 v5, 0x0

    iput-object v5, v4, Lcom/android/server/am/UidRecord;->pendingChange:Lcom/android/server/am/UidRecord$ChangeItem;

    .line 5053
    iput-object v5, v3, Lcom/android/server/am/UidRecord$ChangeItem;->uidRecord:Lcom/android/server/am/UidRecord;

    .line 5048
    :cond_1
    add-int/lit8 v2, v2, 0x1

    goto :goto_0

    .line 5056
    :cond_2
    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mPendingUidChanges:Ljava/util/ArrayList;

    invoke-virtual {v2}, Ljava/util/ArrayList;->clear()V

    .line 5059
    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_1

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    .line 5061
    iget v2, p0, Lcom/android/server/am/ActivityManagerService;->mUidChangeDispatchCount:I

    add-int/2addr v2, v0

    iput v2, p0, Lcom/android/server/am/ActivityManagerService;->mUidChangeDispatchCount:I

    .line 5062
    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mUidObservers:Landroid/os/RemoteCallbackList;

    invoke-virtual {v2}, Landroid/os/RemoteCallbackList;->beginBroadcast()I

    move-result v2

    .line 5063
    :goto_1
    if-lez v2, :cond_3

    .line 5064
    add-int/lit8 v2, v2, -0x1

    .line 5065
    iget-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mUidObservers:Landroid/os/RemoteCallbackList;

    invoke-virtual {v3, v2}, Landroid/os/RemoteCallbackList;->getBroadcastItem(I)Landroid/os/IInterface;

    move-result-object v3

    check-cast v3, Landroid/app/IUidObserver;

    iget-object v4, p0, Lcom/android/server/am/ActivityManagerService;->mUidObservers:Landroid/os/RemoteCallbackList;

    .line 5066
    invoke-virtual {v4, v2}, Landroid/os/RemoteCallbackList;->getBroadcastCookie(I)Ljava/lang/Object;

    move-result-object v4

    check-cast v4, Lcom/android/server/am/ActivityManagerService$UidObserverRegistration;

    .line 5065
    invoke-direct {p0, v3, v4, v0}, Lcom/android/server/am/ActivityManagerService;->dispatchUidsChangedForObserver(Landroid/app/IUidObserver;Lcom/android/server/am/ActivityManagerService$UidObserverRegistration;I)V

    goto :goto_1

    .line 5068
    :cond_3
    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mUidObservers:Landroid/os/RemoteCallbackList;

    invoke-virtual {v2}, Landroid/os/RemoteCallbackList;->finishBroadcast()V

    .line 5070
    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mUidObservers:Landroid/os/RemoteCallbackList;

    invoke-virtual {v2}, Landroid/os/RemoteCallbackList;->getRegisteredCallbackCount()I

    move-result v2

    if-lez v2, :cond_8

    .line 5071
    move v2, v1

    :goto_2
    if-ge v2, v0, :cond_8

    .line 5072
    iget-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mActiveUidChanges:[Lcom/android/server/am/UidRecord$ChangeItem;

    aget-object v3, v3, v2

    .line 5073
    iget v4, v3, Lcom/android/server/am/UidRecord$ChangeItem;->change:I

    const/4 v5, 0x1

    and-int/2addr v4, v5

    if-eqz v4, :cond_4

    .line 5074
    iget-object v4, p0, Lcom/android/server/am/ActivityManagerService;->mValidateUids:Landroid/util/SparseArray;

    iget v3, v3, Lcom/android/server/am/UidRecord$ChangeItem;->uid:I

    invoke-virtual {v4, v3}, Landroid/util/SparseArray;->remove(I)V

    goto :goto_4

    .line 5076
    :cond_4
    iget-object v4, p0, Lcom/android/server/am/ActivityManagerService;->mValidateUids:Landroid/util/SparseArray;

    iget v6, v3, Lcom/android/server/am/UidRecord$ChangeItem;->uid:I

    invoke-virtual {v4, v6}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    move-result-object v4

    check-cast v4, Lcom/android/server/am/UidRecord;

    .line 5077
    if-nez v4, :cond_5

    .line 5078
    new-instance v4, Lcom/android/server/am/UidRecord;

    iget v6, v3, Lcom/android/server/am/UidRecord$ChangeItem;->uid:I

    invoke-direct {v4, v6}, Lcom/android/server/am/UidRecord;-><init>(I)V

    .line 5079
    iget-object v6, p0, Lcom/android/server/am/ActivityManagerService;->mValidateUids:Landroid/util/SparseArray;

    iget v7, v3, Lcom/android/server/am/UidRecord$ChangeItem;->uid:I

    invoke-virtual {v6, v7, v4}, Landroid/util/SparseArray;->put(ILjava/lang/Object;)V

    .line 5081
    :cond_5
    iget v6, v3, Lcom/android/server/am/UidRecord$ChangeItem;->change:I

    and-int/lit8 v6, v6, 0x2

    if-eqz v6, :cond_6

    .line 5082
    iput-boolean v5, v4, Lcom/android/server/am/UidRecord;->idle:Z

    goto :goto_3

    .line 5083
    :cond_6
    iget v5, v3, Lcom/android/server/am/UidRecord$ChangeItem;->change:I

    and-int/lit8 v5, v5, 0x4

    if-eqz v5, :cond_7

    .line 5084
    iput-boolean v1, v4, Lcom/android/server/am/UidRecord;->idle:Z

    .line 5086
    :cond_7
    :goto_3
    iget v5, v3, Lcom/android/server/am/UidRecord$ChangeItem;->processState:I

    iput v5, v4, Lcom/android/server/am/UidRecord;->setProcState:I

    iput v5, v4, Lcom/android/server/am/UidRecord;->curProcState:I

    .line 5087
    iget-wide v5, v3, Lcom/android/server/am/UidRecord$ChangeItem;->procStateSeq:J

    iput-wide v5, v4, Lcom/android/server/am/UidRecord;->lastDispatchedProcStateSeq:J

    .line 5071
    :goto_4
    add-int/lit8 v2, v2, 0x1

    goto :goto_2

    .line 5092
    :cond_8
    monitor-enter p0

    :try_start_1
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    .line 5093
    :goto_5
    if-ge v1, v0, :cond_9

    .line 5094
    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mAvailUidChanges:Ljava/util/ArrayList;

    iget-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mActiveUidChanges:[Lcom/android/server/am/UidRecord$ChangeItem;

    aget-object v3, v3, v1

    invoke-virtual {v2, v3}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    .line 5093
    add-int/lit8 v1, v1, 0x1

    goto :goto_5

    .line 5096
    :cond_9
    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    .line 5097
    return-void

    .line 5096
    :catchall_0
    move-exception v0

    :try_start_2
    monitor-exit p0
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw v0

    .line 5059
    :catchall_1
    move-exception v0

    :try_start_3
    monitor-exit p0
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_1

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw v0
.end method

.method final doLowMemReportIfNeededLocked(Lcom/android/server/am/ProcessRecord;)V
    .locals 17

    move-object/from16 v0, p0

    .line 6163
    nop

    .line 6164
    iget-object v1, v0, Lcom/android/server/am/ActivityManagerService;->mLruProcesses:Ljava/util/ArrayList;

    invoke-virtual {v1}, Ljava/util/ArrayList;->size()I

    move-result v1

    const/4 v2, 0x1

    sub-int/2addr v1, v2

    :goto_0
    const/4 v3, 0x0

    if-ltz v1, :cond_1

    .line 6165
    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mLruProcesses:Ljava/util/ArrayList;

    invoke-virtual {v4, v1}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v4

    check-cast v4, Lcom/android/server/am/ProcessRecord;

    .line 6166
    iget-object v5, v4, Lcom/android/server/am/ProcessRecord;->thread:Landroid/app/IApplicationThread;

    if-eqz v5, :cond_0

    iget v4, v4, Lcom/android/server/am/ProcessRecord;->setProcState:I

    const/16 v5, 0xf

    if-lt v4, v5, :cond_0

    .line 6168
    nop

    .line 6169
    nop

    .line 6173
    move v1, v2

    goto :goto_1

    .line 6164
    :cond_0
    add-int/lit8 v1, v1, -0x1

    goto :goto_0

    .line 6173
    :cond_1
    move v1, v3

    :goto_1
    if-nez v1, :cond_b

    .line 6174
    const-string v1, "1"

    const-string/jumbo v4, "ro.debuggable"

    const-string v5, "0"

    invoke-static {v4, v5}, Landroid/os/SystemProperties;->get(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;

    move-result-object v4

    invoke-virtual {v1, v4}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v1

    .line 6175
    if-eqz v1, :cond_3

    .line 6176
    invoke-static {}, Landroid/os/SystemClock;->uptimeMillis()J

    move-result-wide v4

    .line 6177
    iget-wide v6, v0, Lcom/android/server/am/ActivityManagerService;->mLastMemUsageReportTime:J

    const-wide/32 v8, 0x493e0

    add-long/2addr v6, v8

    cmp-long v6, v4, v6

    if-gez v6, :cond_2

    .line 6178
    nop

    .line 6184
    move v1, v3

    goto :goto_2

    .line 6180
    :cond_2
    iput-wide v4, v0, Lcom/android/server/am/ActivityManagerService;->mLastMemUsageReportTime:J

    .line 6184
    :cond_3
    :goto_2
    if-eqz v1, :cond_4

    new-instance v3, Ljava/util/ArrayList;

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mLruProcesses:Ljava/util/ArrayList;

    invoke-virtual {v4}, Ljava/util/ArrayList;->size()I

    move-result v4

    invoke-direct {v3, v4}, Ljava/util/ArrayList;-><init>(I)V

    goto :goto_3

    :cond_4
    const/4 v3, 0x0

    .line 6185
    :goto_3
    const/16 v4, 0x7541

    iget-object v5, v0, Lcom/android/server/am/ActivityManagerService;->mLruProcesses:Ljava/util/ArrayList;

    invoke-virtual {v5}, Ljava/util/ArrayList;->size()I

    move-result v5

    invoke-static {v4, v5}, Landroid/util/EventLog;->writeEvent(II)I

    .line 6186
    invoke-static {}, Landroid/os/SystemClock;->uptimeMillis()J

    move-result-wide v4

    .line 6187
    iget-object v6, v0, Lcom/android/server/am/ActivityManagerService;->mLruProcesses:Ljava/util/ArrayList;

    invoke-virtual {v6}, Ljava/util/ArrayList;->size()I

    move-result v6

    sub-int/2addr v6, v2

    :goto_4
    if-ltz v6, :cond_9

    .line 6188
    iget-object v7, v0, Lcom/android/server/am/ActivityManagerService;->mLruProcesses:Ljava/util/ArrayList;

    invoke-virtual {v7, v6}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v7

    check-cast v7, Lcom/android/server/am/ProcessRecord;

    .line 6189
    move-object/from16 v8, p1

    if-eq v7, v8, :cond_8

    iget-object v9, v7, Lcom/android/server/am/ProcessRecord;->thread:Landroid/app/IApplicationThread;

    if-nez v9, :cond_5

    .line 6190
    goto :goto_6

    .line 6192
    :cond_5
    if-eqz v1, :cond_6

    .line 6193
    new-instance v9, Lcom/android/server/am/ProcessMemInfo;

    iget-object v11, v7, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;

    iget v12, v7, Lcom/android/server/am/ProcessRecord;->pid:I

    iget v13, v7, Lcom/android/server/am/ProcessRecord;->setAdj:I

    iget v14, v7, Lcom/android/server/am/ProcessRecord;->setProcState:I

    iget-object v15, v7, Lcom/android/server/am/ProcessRecord;->adjType:Ljava/lang/String;

    .line 6194
    invoke-virtual {v7}, Lcom/android/server/am/ProcessRecord;->makeAdjReason()Ljava/lang/String;

    move-result-object v16

    move-object v10, v9

    invoke-direct/range {v10 .. v16}, Lcom/android/server/am/ProcessMemInfo;-><init>(Ljava/lang/String;IIILjava/lang/String;Ljava/lang/String;)V

    .line 6193
    invoke-virtual {v3, v9}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    .line 6196
    :cond_6
    iget-wide v9, v7, Lcom/android/server/am/ProcessRecord;->lastLowMemory:J

    iget-object v11, v0, Lcom/android/server/am/ActivityManagerService;->mConstants:Lcom/android/server/am/ActivityManagerConstants;

    iget-wide v11, v11, Lcom/android/server/am/ActivityManagerConstants;->GC_MIN_INTERVAL:J

    add-long/2addr v9, v11

    cmp-long v9, v9, v4

    if-gtz v9, :cond_8

    .line 6200
    iget v9, v7, Lcom/android/server/am/ProcessRecord;->setAdj:I

    const/16 v10, 0x190

    if-gt v9, v10, :cond_7

    .line 6201
    const-wide/16 v9, 0x0

    iput-wide v9, v7, Lcom/android/server/am/ProcessRecord;->lastRequestedGc:J

    goto :goto_5

    .line 6203
    :cond_7
    iget-wide v9, v7, Lcom/android/server/am/ProcessRecord;->lastLowMemory:J

    iput-wide v9, v7, Lcom/android/server/am/ProcessRecord;->lastRequestedGc:J

    .line 6205
    :goto_5
    iput-boolean v2, v7, Lcom/android/server/am/ProcessRecord;->reportLowMemory:Z

    .line 6206
    iput-wide v4, v7, Lcom/android/server/am/ProcessRecord;->lastLowMemory:J

    .line 6207
    iget-object v9, v0, Lcom/android/server/am/ActivityManagerService;->mProcessesToGc:Ljava/util/ArrayList;

    invoke-virtual {v9, v7}, Ljava/util/ArrayList;->remove(Ljava/lang/Object;)Z

    .line 6208
    invoke-virtual {v0, v7}, Lcom/android/server/am/ActivityManagerService;->addProcessToGcListLocked(Lcom/android/server/am/ProcessRecord;)V

    .line 6187
    :cond_8
    :goto_6
    add-int/lit8 v6, v6, -0x1

    goto :goto_4

    .line 6211
    :cond_9
    if-eqz v1, :cond_a

    .line 6212
    iget-object v1, v0, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    const/16 v2, 0x21

    invoke-virtual {v1, v2, v3}, Lcom/android/server/am/ActivityManagerService$MainHandler;->obtainMessage(ILjava/lang/Object;)Landroid/os/Message;

    move-result-object v1

    .line 6213
    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    invoke-virtual {v2, v1}, Lcom/android/server/am/ActivityManagerService$MainHandler;->sendMessage(Landroid/os/Message;)Z

    .line 6215
    :cond_a
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/am/ActivityManagerService;->scheduleAppGcsLocked()V

    .line 6217
    :cond_b
    return-void
.end method

.method doStopUidForIdleUidsLocked()V
    .locals 4

    .line 26079
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mActiveUids:Landroid/util/SparseArray;

    invoke-virtual {v0}, Landroid/util/SparseArray;->size()I

    move-result v0

    .line 26080
    const/4 v1, 0x0

    :goto_0
    if-ge v1, v0, :cond_2

    .line 26081
    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mActiveUids:Landroid/util/SparseArray;

    invoke-virtual {v2, v1}, Landroid/util/SparseArray;->keyAt(I)I

    move-result v2

    .line 26082
    invoke-static {v2}, Landroid/os/UserHandle;->isCore(I)Z

    move-result v2

    if-eqz v2, :cond_0

    .line 26083
    goto :goto_1

    .line 26085
    :cond_0
    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mActiveUids:Landroid/util/SparseArray;

    invoke-virtual {v2, v1}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Lcom/android/server/am/UidRecord;

    .line 26086
    iget-boolean v3, v2, Lcom/android/server/am/UidRecord;->idle:Z

    if-nez v3, :cond_1

    .line 26087
    goto :goto_1

    .line 26089
    :cond_1
    iget v3, v2, Lcom/android/server/am/UidRecord;->uid:I

    invoke-virtual {p0, v3, v2}, Lcom/android/server/am/ActivityManagerService;->doStopUidLocked(ILcom/android/server/am/UidRecord;)V

    .line 26080
    :goto_1
    add-int/lit8 v1, v1, 0x1

    goto :goto_0

    .line 26091
    :cond_2
    return-void
.end method

.method final doStopUidLocked(ILcom/android/server/am/UidRecord;)V
    .locals 1

    .line 26094
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mServices:Lcom/android/server/am/ActiveServices;

    invoke-virtual {v0, p1}, Lcom/android/server/am/ActiveServices;->stopInBackgroundLocked(I)V

    .line 26095
    const/4 v0, 0x2

    invoke-virtual {p0, p2, p1, v0}, Lcom/android/server/am/ActivityManagerService;->enqueueUidChangeLocked(Lcom/android/server/am/UidRecord;II)V

    .line 26096
    return-void
.end method

.method protected dump(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;[Ljava/lang/String;)V
    .locals 1

    .line 16326
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mPriorityDumper:Lcom/android/server/utils/PriorityDump$PriorityDumper;

    invoke-static {v0, p1, p2, p3}, Lcom/android/server/utils/PriorityDump;->dump(Lcom/android/server/utils/PriorityDump$PriorityDumper;Ljava/io/FileDescriptor;Ljava/io/PrintWriter;[Ljava/lang/String;)V

    .line 16327
    return-void
.end method

.method dumpActivitiesLocked(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;[Ljava/lang/String;IZZLjava/lang/String;)V
    .locals 9

    .line 16829
    const-string v8, "ACTIVITY MANAGER ACTIVITIES (dumpsys activity activities)"

    move-object v0, p0

    move-object v1, p1

    move-object v2, p2

    move-object v3, p3

    move v4, p4

    move v5, p5

    move v6, p6

    move-object/from16 v7, p7

    invoke-virtual/range {v0 .. v8}, Lcom/android/server/am/ActivityManagerService;->dumpActivitiesLocked(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;[Ljava/lang/String;IZZLjava/lang/String;Ljava/lang/String;)V

    .line 16831
    return-void
.end method

.method dumpActivitiesLocked(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;[Ljava/lang/String;IZZLjava/lang/String;Ljava/lang/String;)V
    .locals 6

    .line 16835
    invoke-virtual {p2, p8}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 16837
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mStackSupervisor:Lcom/android/server/am/ActivityStackSupervisor;

    move-object v1, p1

    move-object v2, p2

    move v3, p5

    move v4, p6

    move-object v5, p7

    invoke-virtual/range {v0 .. v5}, Lcom/android/server/am/ActivityStackSupervisor;->dumpActivitiesLocked(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;ZZLjava/lang/String;)Z

    move-result p1

    .line 16839
    nop

    .line 16841
    iget-object p3, p0, Lcom/android/server/am/ActivityManagerService;->mStackSupervisor:Lcom/android/server/am/ActivityStackSupervisor;

    .line 16842
    invoke-virtual {p3}, Lcom/android/server/am/ActivityStackSupervisor;->getResumedActivityLocked()Lcom/android/server/am/ActivityRecord;

    move-result-object p3

    const-string p4, "  ResumedActivity: "

    .line 16841
    invoke-static {p2, p3, p7, p1, p4}, Lcom/android/server/am/ActivityStackSupervisor;->printThisActivity(Ljava/io/PrintWriter;Lcom/android/server/am/ActivityRecord;Ljava/lang/String;ZLjava/lang/String;)Z

    move-result p3

    .line 16844
    const/4 p4, 0x1

    if-eqz p3, :cond_0

    .line 16845
    nop

    .line 16846
    const/4 p1, 0x0

    .line 16849
    move p3, p4

    goto :goto_0

    :cond_0
    move p3, p1

    :goto_0
    if-nez p7, :cond_2

    .line 16850
    if-eqz p1, :cond_1

    .line 16851
    invoke-virtual {p2}, Ljava/io/PrintWriter;->println()V

    .line 16853
    :cond_1
    nop

    .line 16854
    iget-object p1, p0, Lcom/android/server/am/ActivityManagerService;->mStackSupervisor:Lcom/android/server/am/ActivityStackSupervisor;

    const-string p3, "  "

    invoke-virtual {p1, p2, p3}, Lcom/android/server/am/ActivityStackSupervisor;->dump(Ljava/io/PrintWriter;Ljava/lang/String;)V

    .line 16857
    move p3, p4

    :cond_2
    if-nez p3, :cond_3

    .line 16858
    const-string p1, "  (nothing)"

    invoke-virtual {p2, p1}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 16860
    :cond_3
    return-void
.end method

.method protected dumpActivity(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;Ljava/lang/String;[Ljava/lang/String;IZZZ)Z
    .locals 14

    move-object v8, p0

    move-object/from16 v0, p2

    move-object/from16 v1, p4

    move/from16 v2, p5

    .line 18022
    monitor-enter p0

    :try_start_0
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    .line 18023
    iget-object v3, v8, Lcom/android/server/am/ActivityManagerService;->mStackSupervisor:Lcom/android/server/am/ActivityStackSupervisor;

    move-object/from16 v4, p3

    move/from16 v5, p7

    move/from16 v6, p8

    invoke-virtual {v3, v4, v5, v6}, Lcom/android/server/am/ActivityStackSupervisor;->getDumpActivitiesLocked(Ljava/lang/String;ZZ)Ljava/util/ArrayList;

    move-result-object v9

    .line 18025
    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_1

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    .line 18027
    invoke-virtual {v9}, Ljava/util/ArrayList;->size()I

    move-result v3

    const/4 v4, 0x0

    if-gtz v3, :cond_0

    .line 18028
    return v4

    .line 18031
    :cond_0
    array-length v3, v1

    sub-int/2addr v3, v2

    new-array v10, v3, [Ljava/lang/String;

    .line 18032
    array-length v3, v1

    sub-int/2addr v3, v2

    invoke-static {v1, v2, v10, v4, v3}, Ljava/lang/System;->arraycopy(Ljava/lang/Object;ILjava/lang/Object;II)V

    .line 18034
    const/4 v1, 0x0

    .line 18035
    nop

    .line 18036
    invoke-virtual {v9}, Ljava/util/ArrayList;->size()I

    move-result v2

    const/4 v11, 0x1

    sub-int/2addr v2, v11

    move v12, v2

    :goto_0
    if-ltz v12, :cond_4

    .line 18037
    invoke-virtual {v9, v12}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Lcom/android/server/am/ActivityRecord;

    .line 18038
    if-eqz v4, :cond_1

    .line 18039
    invoke-virtual/range {p2 .. p2}, Ljava/io/PrintWriter;->println()V

    .line 18041
    :cond_1
    nop

    .line 18042
    monitor-enter p0

    :try_start_1
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    .line 18043
    invoke-virtual {v2}, Lcom/android/server/am/ActivityRecord;->getTask()Lcom/android/server/am/TaskRecord;

    move-result-object v2

    .line 18044
    if-eq v1, v2, :cond_3

    .line 18045
    nop

    .line 18046
    const-string v1, "TASK "

    invoke-virtual {v0, v1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    iget-object v1, v2, Lcom/android/server/am/TaskRecord;->affinity:Ljava/lang/String;

    invoke-virtual {v0, v1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 18047
    const-string v1, " id="

    invoke-virtual {v0, v1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    iget v1, v2, Lcom/android/server/am/TaskRecord;->taskId:I

    invoke-virtual {v0, v1}, Ljava/io/PrintWriter;->print(I)V

    .line 18048
    const-string v1, " userId="

    invoke-virtual {v0, v1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    iget v1, v2, Lcom/android/server/am/TaskRecord;->userId:I

    invoke-virtual {v0, v1}, Ljava/io/PrintWriter;->println(I)V

    .line 18049
    if-eqz p6, :cond_2

    .line 18050
    const-string v1, "  "

    invoke-virtual {v2, v0, v1}, Lcom/android/server/am/TaskRecord;->dump(Ljava/io/PrintWriter;Ljava/lang/String;)V

    .line 18053
    :cond_2
    move-object v13, v2

    goto :goto_1

    :cond_3
    move-object v13, v1

    :goto_1
    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    .line 18054
    const-string v2, "  "

    invoke-virtual {v9, v12}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v1

    move-object v5, v1

    check-cast v5, Lcom/android/server/am/ActivityRecord;

    move-object v1, v8

    move-object v3, p1

    move-object v4, v0

    move-object v6, v10

    move/from16 v7, p6

    invoke-direct/range {v1 .. v7}, Lcom/android/server/am/ActivityManagerService;->dumpActivity(Ljava/lang/String;Ljava/io/FileDescriptor;Ljava/io/PrintWriter;Lcom/android/server/am/ActivityRecord;[Ljava/lang/String;Z)V

    .line 18036
    add-int/lit8 v12, v12, -0x1

    move v4, v11

    move-object v1, v13

    goto :goto_0

    .line 18053
    :catchall_0
    move-exception v0

    :try_start_2
    monitor-exit p0
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw v0

    .line 18056
    :cond_4
    return v11

    .line 18025
    :catchall_1
    move-exception v0

    :try_start_3
    monitor-exit p0
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_1

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw v0
.end method

.method final dumpApplicationMemoryUsage(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;Ljava/lang/String;[Ljava/lang/String;ZLjava/io/PrintWriter;Z)V
    .locals 9

    move-object v2, p2

    move-object v0, p4

    .line 19047
    new-instance v4, Lcom/android/server/am/ActivityManagerService$MemoryUsageDumpOptions;

    const/4 v1, 0x0

    invoke-direct {v4, v1}, Lcom/android/server/am/ActivityManagerService$MemoryUsageDumpOptions;-><init>(Lcom/android/server/am/ActivityManagerService$1;)V

    .line 19048
    const/4 v1, 0x0

    iput-boolean v1, v4, Lcom/android/server/am/ActivityManagerService$MemoryUsageDumpOptions;->dumpDetails:Z

    .line 19049
    iput-boolean v1, v4, Lcom/android/server/am/ActivityManagerService$MemoryUsageDumpOptions;->dumpFullDetails:Z

    .line 19050
    iput-boolean v1, v4, Lcom/android/server/am/ActivityManagerService$MemoryUsageDumpOptions;->dumpDalvik:Z

    .line 19051
    iput-boolean v1, v4, Lcom/android/server/am/ActivityManagerService$MemoryUsageDumpOptions;->dumpSummaryOnly:Z

    .line 19052
    iput-boolean v1, v4, Lcom/android/server/am/ActivityManagerService$MemoryUsageDumpOptions;->dumpUnreachable:Z

    .line 19053
    iput-boolean v1, v4, Lcom/android/server/am/ActivityManagerService$MemoryUsageDumpOptions;->oomOnly:Z

    .line 19054
    iput-boolean v1, v4, Lcom/android/server/am/ActivityManagerService$MemoryUsageDumpOptions;->isCompact:Z

    .line 19055
    iput-boolean v1, v4, Lcom/android/server/am/ActivityManagerService$MemoryUsageDumpOptions;->localOnly:Z

    .line 19056
    iput-boolean v1, v4, Lcom/android/server/am/ActivityManagerService$MemoryUsageDumpOptions;->packages:Z

    .line 19057
    iput-boolean v1, v4, Lcom/android/server/am/ActivityManagerService$MemoryUsageDumpOptions;->isCheckinRequest:Z

    .line 19058
    iput-boolean v1, v4, Lcom/android/server/am/ActivityManagerService$MemoryUsageDumpOptions;->dumpSwapPss:Z

    .line 19059
    move/from16 v3, p7

    iput-boolean v3, v4, Lcom/android/server/am/ActivityManagerService$MemoryUsageDumpOptions;->dumpProto:Z

    .line 19061
    nop

    .line 19062
    move v3, v1

    :goto_0
    array-length v5, v0

    if-ge v3, v5, :cond_d

    .line 19063
    aget-object v5, v0, v3

    .line 19064
    if-eqz v5, :cond_d

    invoke-virtual {v5}, Ljava/lang/String;->length()I

    move-result v6

    if-lez v6, :cond_d

    invoke-virtual {v5, v1}, Ljava/lang/String;->charAt(I)C

    move-result v6

    const/16 v7, 0x2d

    if-eq v6, v7, :cond_0

    .line 19065
    goto/16 :goto_2

    .line 19067
    :cond_0
    add-int/lit8 v3, v3, 0x1

    .line 19068
    const-string v6, "-a"

    invoke-virtual {v6, v5}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v6

    const/4 v7, 0x1

    if-eqz v6, :cond_1

    .line 19069
    iput-boolean v7, v4, Lcom/android/server/am/ActivityManagerService$MemoryUsageDumpOptions;->dumpDetails:Z

    .line 19070
    iput-boolean v7, v4, Lcom/android/server/am/ActivityManagerService$MemoryUsageDumpOptions;->dumpFullDetails:Z

    .line 19071
    iput-boolean v7, v4, Lcom/android/server/am/ActivityManagerService$MemoryUsageDumpOptions;->dumpDalvik:Z

    .line 19072
    iput-boolean v7, v4, Lcom/android/server/am/ActivityManagerService$MemoryUsageDumpOptions;->dumpSwapPss:Z

    goto/16 :goto_1

    .line 19073
    :cond_1
    const-string v6, "-d"

    invoke-virtual {v6, v5}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v6

    if-eqz v6, :cond_2

    .line 19074
    iput-boolean v7, v4, Lcom/android/server/am/ActivityManagerService$MemoryUsageDumpOptions;->dumpDalvik:Z

    goto/16 :goto_1

    .line 19075
    :cond_2
    const-string v6, "-c"

    invoke-virtual {v6, v5}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v6

    if-eqz v6, :cond_3

    .line 19076
    iput-boolean v7, v4, Lcom/android/server/am/ActivityManagerService$MemoryUsageDumpOptions;->isCompact:Z

    goto/16 :goto_1

    .line 19077
    :cond_3
    const-string v6, "-s"

    invoke-virtual {v6, v5}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v6

    if-eqz v6, :cond_4

    .line 19078
    iput-boolean v7, v4, Lcom/android/server/am/ActivityManagerService$MemoryUsageDumpOptions;->dumpDetails:Z

    .line 19079
    iput-boolean v7, v4, Lcom/android/server/am/ActivityManagerService$MemoryUsageDumpOptions;->dumpSummaryOnly:Z

    goto/16 :goto_1

    .line 19080
    :cond_4
    const-string v6, "-S"

    invoke-virtual {v6, v5}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v6

    if-eqz v6, :cond_5

    .line 19081
    iput-boolean v7, v4, Lcom/android/server/am/ActivityManagerService$MemoryUsageDumpOptions;->dumpSwapPss:Z

    goto/16 :goto_1

    .line 19082
    :cond_5
    const-string v6, "--unreachable"

    invoke-virtual {v6, v5}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v6

    if-eqz v6, :cond_6

    .line 19083
    iput-boolean v7, v4, Lcom/android/server/am/ActivityManagerService$MemoryUsageDumpOptions;->dumpUnreachable:Z

    goto/16 :goto_1

    .line 19084
    :cond_6
    const-string v6, "--oom"

    invoke-virtual {v6, v5}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v6

    if-eqz v6, :cond_7

    .line 19085
    iput-boolean v7, v4, Lcom/android/server/am/ActivityManagerService$MemoryUsageDumpOptions;->oomOnly:Z

    goto/16 :goto_1

    .line 19086
    :cond_7
    const-string v6, "--local"

    invoke-virtual {v6, v5}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v6

    if-eqz v6, :cond_8

    .line 19087
    iput-boolean v7, v4, Lcom/android/server/am/ActivityManagerService$MemoryUsageDumpOptions;->localOnly:Z

    goto/16 :goto_1

    .line 19088
    :cond_8
    const-string v6, "--package"

    invoke-virtual {v6, v5}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v6

    if-eqz v6, :cond_9

    .line 19089
    iput-boolean v7, v4, Lcom/android/server/am/ActivityManagerService$MemoryUsageDumpOptions;->packages:Z

    goto/16 :goto_1

    .line 19090
    :cond_9
    const-string v6, "--checkin"

    invoke-virtual {v6, v5}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v6

    if-eqz v6, :cond_a

    .line 19091
    iput-boolean v7, v4, Lcom/android/server/am/ActivityManagerService$MemoryUsageDumpOptions;->isCheckinRequest:Z

    goto :goto_1

    .line 19092
    :cond_a
    const-string v6, "--proto"

    invoke-virtual {v6, v5}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v6

    if-eqz v6, :cond_b

    .line 19093
    iput-boolean v7, v4, Lcom/android/server/am/ActivityManagerService$MemoryUsageDumpOptions;->dumpProto:Z

    goto :goto_1

    .line 19095
    :cond_b
    const-string v6, "-h"

    invoke-virtual {v6, v5}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v6

    if-eqz v6, :cond_c

    .line 19096
    const-string v0, "meminfo dump options: [-a] [-d] [-c] [-s] [--oom] [process]"

    invoke-virtual {v2, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 19097
    const-string v0, "  -a: include all available information for each process."

    invoke-virtual {v2, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 19098
    const-string v0, "  -d: include dalvik details."

    invoke-virtual {v2, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 19099
    const-string v0, "  -c: dump in a compact machine-parseable representation."

    invoke-virtual {v2, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 19100
    const-string v0, "  -s: dump only summary of application memory usage."

    invoke-virtual {v2, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 19101
    const-string v0, "  -S: dump also SwapPss."

    invoke-virtual {v2, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 19102
    const-string v0, "  --oom: only show processes organized by oom adj."

    invoke-virtual {v2, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 19103
    const-string v0, "  --local: only collect details locally, don\'t call process."

    invoke-virtual {v2, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 19104
    const-string v0, "  --package: interpret process arg as package, dumping all"

    invoke-virtual {v2, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 19105
    const-string v0, "             processes that have loaded that package."

    invoke-virtual {v2, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 19106
    const-string v0, "  --checkin: dump data for a checkin"

    invoke-virtual {v2, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 19107
    const-string v0, "  --proto: dump data to proto"

    invoke-virtual {v2, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 19108
    const-string v0, "If [process] is specified it can be the name or "

    invoke-virtual {v2, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 19109
    const-string/jumbo v0, "pid of a specific process to dump."

    invoke-virtual {v2, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 19110
    return-void

    .line 19112
    :cond_c
    new-instance v6, Ljava/lang/StringBuilder;

    invoke-direct {v6}, Ljava/lang/StringBuilder;-><init>()V

    const-string v7, "Unknown argument: "

    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v6, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v5, "; use -h for help"

    invoke-virtual {v6, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v6}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v5

    invoke-virtual {v2, v5}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 19114
    :goto_1
    goto/16 :goto_0

    .line 19116
    :cond_d
    :goto_2
    array-length v5, v0

    sub-int/2addr v5, v3

    new-array v5, v5, [Ljava/lang/String;

    .line 19117
    array-length v6, v0

    sub-int/2addr v6, v3

    invoke-static {v0, v3, v5, v1, v6}, Ljava/lang/System;->arraycopy(Ljava/lang/Object;ILjava/lang/Object;II)V

    .line 19119
    iget-boolean v1, v4, Lcom/android/server/am/ActivityManagerService$MemoryUsageDumpOptions;->packages:Z

    move-object v6, p0

    invoke-virtual {v6, v2, v3, v1, v0}, Lcom/android/server/am/ActivityManagerService;->collectProcesses(Ljava/io/PrintWriter;IZ[Ljava/lang/String;)Ljava/util/ArrayList;

    move-result-object v7

    .line 19120
    iget-boolean v0, v4, Lcom/android/server/am/ActivityManagerService$MemoryUsageDumpOptions;->dumpProto:Z

    if-eqz v0, :cond_e

    .line 19121
    move-object v0, v6

    move-object v1, p1

    move-object v2, v4

    move-object v3, v5

    move v4, p5

    move-object v5, v7

    invoke-direct/range {v0 .. v5}, Lcom/android/server/am/ActivityManagerService;->dumpApplicationMemoryUsage(Ljava/io/FileDescriptor;Lcom/android/server/am/ActivityManagerService$MemoryUsageDumpOptions;[Ljava/lang/String;ZLjava/util/ArrayList;)V

    goto :goto_3

    .line 19123
    :cond_e
    move-object v0, v6

    move-object v1, p1

    move-object v3, p3

    move v6, p5

    move-object v8, p6

    invoke-direct/range {v0 .. v8}, Lcom/android/server/am/ActivityManagerService;->dumpApplicationMemoryUsage(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;Ljava/lang/String;Lcom/android/server/am/ActivityManagerService$MemoryUsageDumpOptions;[Ljava/lang/String;ZLjava/util/ArrayList;Ljava/io/PrintWriter;)V

    .line 19125
    :goto_3
    return-void
.end method

.method dumpAssociationsLocked(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;[Ljava/lang/String;IZZLjava/lang/String;)V
    .locals 23

    move-object/from16 v1, p0

    move-object/from16 v2, p2

    .line 16864
    move-object/from16 v3, p7

    const-string v0, "ACTIVITY MANAGER ASSOCIATIONS (dumpsys activity associations)"

    invoke-virtual {v2, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 16866
    nop

    .line 16867
    const/4 v4, 0x0

    if-eqz v3, :cond_0

    .line 16868
    invoke-static {}, Landroid/app/AppGlobals;->getPackageManager()Landroid/content/pm/IPackageManager;

    move-result-object v0

    .line 16870
    const/high16 v5, 0x400000

    :try_start_0
    invoke-interface {v0, v3, v5, v4}, Landroid/content/pm/IPackageManager;->getPackageUid(Ljava/lang/String;II)I

    move-result v0
    :try_end_0
    .catch Landroid/os/RemoteException; {:try_start_0 .. :try_end_0} :catch_0

    .line 16872
    goto :goto_0

    .line 16871
    :catch_0
    move-exception v0

    .line 16875
    :cond_0
    move v0, v4

    .line 16877
    :goto_0
    invoke-static {}, Landroid/os/SystemClock;->uptimeMillis()J

    move-result-wide v5

    .line 16879
    iget-object v7, v1, Lcom/android/server/am/ActivityManagerService;->mAssociations:Landroid/util/SparseArray;

    invoke-virtual {v7}, Landroid/util/SparseArray;->size()I

    move-result v7

    move v8, v4

    move v9, v8

    :goto_1
    if-ge v8, v7, :cond_c

    .line 16880
    iget-object v10, v1, Lcom/android/server/am/ActivityManagerService;->mAssociations:Landroid/util/SparseArray;

    .line 16881
    invoke-virtual {v10, v8}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;

    move-result-object v10

    check-cast v10, Landroid/util/ArrayMap;

    .line 16882
    invoke-virtual {v10}, Landroid/util/ArrayMap;->size()I

    move-result v11

    move v12, v9

    move v9, v4

    :goto_2
    if-ge v9, v11, :cond_b

    .line 16883
    nop

    .line 16884
    invoke-virtual {v10, v9}, Landroid/util/ArrayMap;->valueAt(I)Ljava/lang/Object;

    move-result-object v13

    check-cast v13, Landroid/util/SparseArray;

    .line 16885
    invoke-virtual {v13}, Landroid/util/SparseArray;->size()I

    move-result v14

    move v15, v12

    move v12, v4

    :goto_3
    if-ge v12, v14, :cond_a

    .line 16886
    invoke-virtual {v13, v12}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;

    move-result-object v16

    move-object/from16 v4, v16

    check-cast v4, Landroid/util/ArrayMap;

    .line 16887
    invoke-virtual {v4}, Landroid/util/ArrayMap;->size()I

    move-result v1

    move/from16 v16, v15

    const/4 v15, 0x0

    :goto_4
    if-ge v15, v1, :cond_9

    .line 16888
    invoke-virtual {v4, v15}, Landroid/util/ArrayMap;->valueAt(I)Ljava/lang/Object;

    move-result-object v17

    move/from16 v18, v1

    move-object/from16 v1, v17

    check-cast v1, Lcom/android/server/am/ActivityManagerService$Association;

    .line 16889
    if-eqz v3, :cond_1

    .line 16890
    move-object/from16 v19, v4

    iget-object v4, v1, Lcom/android/server/am/ActivityManagerService$Association;->mTargetComponent:Landroid/content/ComponentName;

    invoke-virtual {v4}, Landroid/content/ComponentName;->getPackageName()Ljava/lang/String;

    move-result-object v4

    invoke-virtual {v4, v3}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v4

    if-nez v4, :cond_2

    iget v4, v1, Lcom/android/server/am/ActivityManagerService$Association;->mSourceUid:I

    .line 16891
    invoke-static {v4}, Landroid/os/UserHandle;->getAppId(I)I

    move-result v4

    if-eq v4, v0, :cond_2

    .line 16892
    nop

    .line 16887
    move/from16 v20, v0

    move-object/from16 v21, v10

    move/from16 v22, v11

    const/4 v4, 0x0

    goto/16 :goto_8

    .line 16895
    :cond_1
    move-object/from16 v19, v4

    .line 16896
    :cond_2
    const-string v4, "  "

    invoke-virtual {v2, v4}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 16897
    iget-object v4, v1, Lcom/android/server/am/ActivityManagerService$Association;->mTargetProcess:Ljava/lang/String;

    invoke-virtual {v2, v4}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 16898
    const-string v4, "/"

    invoke-virtual {v2, v4}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 16899
    iget v4, v1, Lcom/android/server/am/ActivityManagerService$Association;->mTargetUid:I

    invoke-static {v2, v4}, Landroid/os/UserHandle;->formatUid(Ljava/io/PrintWriter;I)V

    .line 16900
    const-string v4, " <- "

    invoke-virtual {v2, v4}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 16901
    iget-object v4, v1, Lcom/android/server/am/ActivityManagerService$Association;->mSourceProcess:Ljava/lang/String;

    invoke-virtual {v2, v4}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 16902
    const-string v4, "/"

    invoke-virtual {v2, v4}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 16903
    iget v4, v1, Lcom/android/server/am/ActivityManagerService$Association;->mSourceUid:I

    invoke-static {v2, v4}, Landroid/os/UserHandle;->formatUid(Ljava/io/PrintWriter;I)V

    .line 16904
    invoke-virtual/range {p2 .. p2}, Ljava/io/PrintWriter;->println()V

    .line 16905
    const-string v4, "    via "

    invoke-virtual {v2, v4}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 16906
    iget-object v4, v1, Lcom/android/server/am/ActivityManagerService$Association;->mTargetComponent:Landroid/content/ComponentName;

    invoke-virtual {v4}, Landroid/content/ComponentName;->flattenToShortString()Ljava/lang/String;

    move-result-object v4

    invoke-virtual {v2, v4}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 16907
    invoke-virtual/range {p2 .. p2}, Ljava/io/PrintWriter;->println()V

    .line 16908
    const-string v4, "    "

    invoke-virtual {v2, v4}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 16909
    iget-wide v3, v1, Lcom/android/server/am/ActivityManagerService$Association;->mTime:J

    .line 16910
    move/from16 v20, v0

    iget v0, v1, Lcom/android/server/am/ActivityManagerService$Association;->mNesting:I

    if-lez v0, :cond_3

    .line 16911
    move-object/from16 v21, v10

    move/from16 v22, v11

    iget-wide v10, v1, Lcom/android/server/am/ActivityManagerService$Association;->mStartTime:J

    sub-long v10, v5, v10

    add-long/2addr v3, v10

    goto :goto_5

    .line 16913
    :cond_3
    move-object/from16 v21, v10

    move/from16 v22, v11

    :goto_5
    invoke-static {v3, v4, v2}, Landroid/util/TimeUtils;->formatDuration(JLjava/io/PrintWriter;)V

    .line 16914
    const-string v0, " ("

    invoke-virtual {v2, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 16915
    iget v0, v1, Lcom/android/server/am/ActivityManagerService$Association;->mCount:I

    invoke-virtual {v2, v0}, Ljava/io/PrintWriter;->print(I)V

    .line 16916
    const-string v0, " times)"

    invoke-virtual {v2, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 16917
    const-string v0, "  "

    invoke-virtual {v2, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 16918
    const/4 v0, 0x0

    :goto_6
    iget-object v3, v1, Lcom/android/server/am/ActivityManagerService$Association;->mStateTimes:[J

    array-length v3, v3

    if-ge v0, v3, :cond_7

    .line 16919
    iget-object v3, v1, Lcom/android/server/am/ActivityManagerService$Association;->mStateTimes:[J

    aget-wide v3, v3, v0

    .line 16920
    iget v10, v1, Lcom/android/server/am/ActivityManagerService$Association;->mLastState:I

    const/4 v11, 0x0

    sub-int/2addr v10, v11

    if-ne v10, v0, :cond_4

    .line 16921
    iget-wide v10, v1, Lcom/android/server/am/ActivityManagerService$Association;->mLastStateUptime:J

    sub-long v10, v5, v10

    add-long/2addr v3, v10

    .line 16923
    :cond_4
    const-wide/16 v10, 0x0

    cmp-long v10, v3, v10

    if-eqz v10, :cond_5

    .line 16924
    const-string v10, " "

    invoke-virtual {v2, v10}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 16925
    add-int/lit8 v10, v0, 0x0

    invoke-static {v10}, Lcom/android/server/am/ProcessList;->makeProcStateString(I)Ljava/lang/String;

    move-result-object v10

    invoke-virtual {v2, v10}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 16927
    const-string v10, "="

    invoke-virtual {v2, v10}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 16928
    invoke-static {v3, v4, v2}, Landroid/util/TimeUtils;->formatDuration(JLjava/io/PrintWriter;)V

    .line 16929
    iget v3, v1, Lcom/android/server/am/ActivityManagerService$Association;->mLastState:I

    const/4 v4, 0x0

    sub-int/2addr v3, v4

    if-ne v3, v0, :cond_6

    .line 16930
    const-string v3, "*"

    invoke-virtual {v2, v3}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    goto :goto_7

    .line 16918
    :cond_5
    const/4 v4, 0x0

    :cond_6
    :goto_7
    add-int/lit8 v0, v0, 0x1

    goto :goto_6

    .line 16934
    :cond_7
    const/4 v4, 0x0

    invoke-virtual/range {p2 .. p2}, Ljava/io/PrintWriter;->println()V

    .line 16935
    iget v0, v1, Lcom/android/server/am/ActivityManagerService$Association;->mNesting:I

    if-lez v0, :cond_8

    .line 16936
    const-string v0, "    Currently active: "

    invoke-virtual {v2, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 16937
    iget-wide v0, v1, Lcom/android/server/am/ActivityManagerService$Association;->mStartTime:J

    sub-long v0, v5, v0

    invoke-static {v0, v1, v2}, Landroid/util/TimeUtils;->formatDuration(JLjava/io/PrintWriter;)V

    .line 16938
    invoke-virtual/range {p2 .. p2}, Ljava/io/PrintWriter;->println()V

    .line 16887
    :cond_8
    const/16 v16, 0x1

    :goto_8
    add-int/lit8 v15, v15, 0x1

    move/from16 v1, v18

    move-object/from16 v4, v19

    move/from16 v0, v20

    move-object/from16 v10, v21

    move/from16 v11, v22

    move-object/from16 v3, p7

    goto/16 :goto_4

    .line 16885
    :cond_9
    move/from16 v20, v0

    move-object/from16 v21, v10

    move/from16 v22, v11

    const/4 v4, 0x0

    add-int/lit8 v12, v12, 0x1

    move/from16 v15, v16

    move-object/from16 v1, p0

    move-object/from16 v3, p7

    goto/16 :goto_3

    .line 16882
    :cond_a
    move/from16 v20, v0

    move-object/from16 v21, v10

    move/from16 v22, v11

    add-int/lit8 v9, v9, 0x1

    move v12, v15

    move-object/from16 v1, p0

    move-object/from16 v3, p7

    goto/16 :goto_2

    .line 16879
    :cond_b
    move/from16 v20, v0

    add-int/lit8 v8, v8, 0x1

    move v9, v12

    move-object/from16 v1, p0

    move-object/from16 v3, p7

    goto/16 :goto_1

    .line 16946
    :cond_c
    if-nez v9, :cond_d

    .line 16947
    const-string v0, "  (nothing)"

    invoke-virtual {v2, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 16949
    :cond_d
    return-void
.end method

.method dumpBinderProxiesCounts(Ljava/io/PrintWriter;Landroid/util/SparseIntArray;Ljava/lang/String;)Z
    .locals 4

    .line 16988
    const/4 v0, 0x0

    if-eqz p2, :cond_3

    .line 16989
    invoke-virtual {p1, p3}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 16990
    move p3, v0

    :goto_0
    invoke-virtual {p2}, Landroid/util/SparseIntArray;->size()I

    move-result v1

    if-ge p3, v1, :cond_2

    .line 16991
    invoke-virtual {p2, p3}, Landroid/util/SparseIntArray;->keyAt(I)I

    move-result v1

    .line 16992
    invoke-virtual {p2, p3}, Landroid/util/SparseIntArray;->valueAt(I)I

    move-result v2

    .line 16993
    const-string v3, "    UID "

    invoke-virtual {p1, v3}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 16994
    invoke-virtual {p1, v1}, Ljava/io/PrintWriter;->print(I)V

    .line 16995
    const-string v3, ", binder count = "

    invoke-virtual {p1, v3}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 16996
    invoke-virtual {p1, v2}, Ljava/io/PrintWriter;->print(I)V

    .line 16997
    const-string v2, ", package(s)= "

    invoke-virtual {p1, v2}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 16998
    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mContext:Landroid/content/Context;

    invoke-virtual {v2}, Landroid/content/Context;->getPackageManager()Landroid/content/pm/PackageManager;

    move-result-object v2

    invoke-virtual {v2, v1}, Landroid/content/pm/PackageManager;->getPackagesForUid(I)[Ljava/lang/String;

    move-result-object v1

    .line 16999
    if-eqz v1, :cond_0

    .line 17000
    move v2, v0

    :goto_1
    array-length v3, v1

    if-ge v2, v3, :cond_1

    .line 17001
    aget-object v3, v1, v2

    invoke-virtual {p1, v3}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 17002
    const-string v3, "; "

    invoke-virtual {p1, v3}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 17000
    add-int/lit8 v2, v2, 0x1

    goto :goto_1

    .line 17005
    :cond_0
    const-string v1, "NO PACKAGE NAME FOUND"

    invoke-virtual {p1, v1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 17007
    :cond_1
    invoke-virtual {p1}, Ljava/io/PrintWriter;->println()V

    .line 16990
    add-int/lit8 p3, p3, 0x1

    goto :goto_0

    .line 17009
    :cond_2
    invoke-virtual {p1}, Ljava/io/PrintWriter;->println()V

    .line 17010
    const/4 p1, 0x1

    return p1

    .line 17012
    :cond_3
    return v0
.end method

.method dumpBroadcastStatsCheckinLocked(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;[Ljava/lang/String;IZLjava/lang/String;)V
    .locals 0

    .line 18270
    iget-object p1, p0, Lcom/android/server/am/ActivityManagerService;->mCurBroadcastStats:Lcom/android/server/am/BroadcastStats;

    if-nez p1, :cond_0

    .line 18271
    return-void

    .line 18274
    :cond_0
    iget-object p1, p0, Lcom/android/server/am/ActivityManagerService;->mLastBroadcastStats:Lcom/android/server/am/BroadcastStats;

    const/4 p3, 0x0

    if-eqz p1, :cond_1

    .line 18275
    iget-object p1, p0, Lcom/android/server/am/ActivityManagerService;->mLastBroadcastStats:Lcom/android/server/am/BroadcastStats;

    invoke-virtual {p1, p2, p6}, Lcom/android/server/am/BroadcastStats;->dumpCheckinStats(Ljava/io/PrintWriter;Ljava/lang/String;)V

    .line 18276
    if-eqz p5, :cond_1

    .line 18277
    iput-object p3, p0, Lcom/android/server/am/ActivityManagerService;->mLastBroadcastStats:Lcom/android/server/am/BroadcastStats;

    .line 18278
    return-void

    .line 18281
    :cond_1
    iget-object p1, p0, Lcom/android/server/am/ActivityManagerService;->mCurBroadcastStats:Lcom/android/server/am/BroadcastStats;

    invoke-virtual {p1, p2, p6}, Lcom/android/server/am/BroadcastStats;->dumpCheckinStats(Ljava/io/PrintWriter;Ljava/lang/String;)V

    .line 18282
    if-eqz p5, :cond_2

    .line 18283
    iput-object p3, p0, Lcom/android/server/am/ActivityManagerService;->mCurBroadcastStats:Lcom/android/server/am/BroadcastStats;

    .line 18285
    :cond_2
    return-void
.end method

.method dumpBroadcastStatsLocked(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;[Ljava/lang/String;IZLjava/lang/String;)V
    .locals 4

    .line 18237
    iget-object p1, p0, Lcom/android/server/am/ActivityManagerService;->mCurBroadcastStats:Lcom/android/server/am/BroadcastStats;

    if-nez p1, :cond_0

    .line 18238
    return-void

    .line 18241
    :cond_0
    const-string p1, "ACTIVITY MANAGER BROADCAST STATS STATE (dumpsys activity broadcast-stats)"

    invoke-virtual {p2, p1}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 18242
    invoke-static {}, Landroid/os/SystemClock;->elapsedRealtime()J

    move-result-wide p3

    .line 18243
    iget-object p1, p0, Lcom/android/server/am/ActivityManagerService;->mLastBroadcastStats:Lcom/android/server/am/BroadcastStats;

    if-eqz p1, :cond_2

    .line 18244
    const-string p1, "  Last stats (from "

    invoke-virtual {p2, p1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 18245
    iget-object p1, p0, Lcom/android/server/am/ActivityManagerService;->mLastBroadcastStats:Lcom/android/server/am/BroadcastStats;

    iget-wide v0, p1, Lcom/android/server/am/BroadcastStats;->mStartRealtime:J

    invoke-static {v0, v1, p3, p4, p2}, Landroid/util/TimeUtils;->formatDuration(JJLjava/io/PrintWriter;)V

    .line 18246
    const-string p1, " to "

    invoke-virtual {p2, p1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 18247
    iget-object p1, p0, Lcom/android/server/am/ActivityManagerService;->mLastBroadcastStats:Lcom/android/server/am/BroadcastStats;

    iget-wide v0, p1, Lcom/android/server/am/BroadcastStats;->mEndRealtime:J

    invoke-static {v0, v1, p3, p4, p2}, Landroid/util/TimeUtils;->formatDuration(JJLjava/io/PrintWriter;)V

    .line 18248
    const-string p1, ", "

    invoke-virtual {p2, p1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 18249
    iget-object p1, p0, Lcom/android/server/am/ActivityManagerService;->mLastBroadcastStats:Lcom/android/server/am/BroadcastStats;

    iget-wide v0, p1, Lcom/android/server/am/BroadcastStats;->mEndUptime:J

    iget-object p1, p0, Lcom/android/server/am/ActivityManagerService;->mLastBroadcastStats:Lcom/android/server/am/BroadcastStats;

    iget-wide v2, p1, Lcom/android/server/am/BroadcastStats;->mStartUptime:J

    sub-long/2addr v0, v2

    invoke-static {v0, v1, p2}, Landroid/util/TimeUtils;->formatDuration(JLjava/io/PrintWriter;)V

    .line 18251
    const-string p1, " uptime):"

    invoke-virtual {p2, p1}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 18252
    iget-object p1, p0, Lcom/android/server/am/ActivityManagerService;->mLastBroadcastStats:Lcom/android/server/am/BroadcastStats;

    const-string p5, "    "

    invoke-virtual {p1, p2, p5, p6}, Lcom/android/server/am/BroadcastStats;->dumpStats(Ljava/io/PrintWriter;Ljava/lang/String;Ljava/lang/String;)Z

    move-result p1

    if-nez p1, :cond_1

    .line 18253
    const-string p1, "    (nothing)"

    invoke-virtual {p2, p1}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 18255
    :cond_1
    invoke-virtual {p2}, Ljava/io/PrintWriter;->println()V

    .line 18257
    :cond_2
    const-string p1, "  Current stats (from "

    invoke-virtual {p2, p1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 18258
    iget-object p1, p0, Lcom/android/server/am/ActivityManagerService;->mCurBroadcastStats:Lcom/android/server/am/BroadcastStats;

    iget-wide v0, p1, Lcom/android/server/am/BroadcastStats;->mStartRealtime:J

    invoke-static {v0, v1, p3, p4, p2}, Landroid/util/TimeUtils;->formatDuration(JJLjava/io/PrintWriter;)V

    .line 18259
    const-string p1, " to now, "

    invoke-virtual {p2, p1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 18260
    invoke-static {}, Landroid/os/SystemClock;->uptimeMillis()J

    move-result-wide p3

    iget-object p1, p0, Lcom/android/server/am/ActivityManagerService;->mCurBroadcastStats:Lcom/android/server/am/BroadcastStats;

    iget-wide v0, p1, Lcom/android/server/am/BroadcastStats;->mStartUptime:J

    sub-long/2addr p3, v0

    invoke-static {p3, p4, p2}, Landroid/util/TimeUtils;->formatDuration(JLjava/io/PrintWriter;)V

    .line 18262
    const-string p1, " uptime):"

    invoke-virtual {p2, p1}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 18263
    iget-object p1, p0, Lcom/android/server/am/ActivityManagerService;->mCurBroadcastStats:Lcom/android/server/am/BroadcastStats;

    const-string p3, "    "

    invoke-virtual {p1, p2, p3, p6}, Lcom/android/server/am/BroadcastStats;->dumpStats(Ljava/io/PrintWriter;Ljava/lang/String;Ljava/lang/String;)Z

    move-result p1

    if-nez p1, :cond_3

    .line 18264
    const-string p1, "    (nothing)"

    invoke-virtual {p2, p1}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 18266
    :cond_3
    return-void
.end method

.method dumpBroadcastsLocked(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;[Ljava/lang/String;IZLjava/lang/String;)V
    .locals 23

    move-object/from16 v0, p0

    move-object/from16 v9, p2

    move-object/from16 v10, p3

    move/from16 v11, p4

    .line 18134
    nop

    .line 18135
    nop

    .line 18136
    nop

    .line 18138
    const-string v1, "history"

    move-object/from16 v2, p6

    invoke-virtual {v1, v2}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v1

    const/4 v12, 0x0

    const/4 v13, 0x1

    if-eqz v1, :cond_1

    .line 18139
    array-length v1, v10

    if-ge v11, v1, :cond_0

    const-string v1, "-s"

    aget-object v2, v10, v11

    invoke-virtual {v1, v2}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v1

    if-eqz v1, :cond_0

    .line 18140
    nop

    .line 18142
    move v1, v12

    goto :goto_0

    :cond_0
    move/from16 v1, p5

    .line 18143
    :goto_0
    const/4 v2, 0x0

    .line 18146
    move v15, v1

    move-object v8, v2

    move v14, v13

    goto :goto_1

    :cond_1
    move/from16 v15, p5

    move-object v8, v2

    move v14, v12

    :goto_1
    const-string v1, "ACTIVITY MANAGER BROADCAST STATE (dumpsys activity broadcasts)"

    invoke-virtual {v9, v1}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 18147
    if-nez v14, :cond_8

    if-eqz v15, :cond_8

    .line 18148
    iget-object v1, v0, Lcom/android/server/am/ActivityManagerService;->mRegisteredReceivers:Ljava/util/HashMap;

    invoke-virtual {v1}, Ljava/util/HashMap;->size()I

    move-result v1

    if-lez v1, :cond_6

    .line 18149
    nop

    .line 18150
    iget-object v1, v0, Lcom/android/server/am/ActivityManagerService;->mRegisteredReceivers:Ljava/util/HashMap;

    invoke-virtual {v1}, Ljava/util/HashMap;->values()Ljava/util/Collection;

    move-result-object v1

    invoke-interface {v1}, Ljava/util/Collection;->iterator()Ljava/util/Iterator;

    move-result-object v1

    .line 18151
    move v2, v12

    move v3, v2

    move v4, v3

    :cond_2
    :goto_2
    invoke-interface {v1}, Ljava/util/Iterator;->hasNext()Z

    move-result v5

    if-eqz v5, :cond_5

    .line 18152
    invoke-interface {v1}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v5

    check-cast v5, Lcom/android/server/am/ReceiverList;

    .line 18153
    if-eqz v8, :cond_3

    iget-object v6, v5, Lcom/android/server/am/ReceiverList;->app:Lcom/android/server/am/ProcessRecord;

    if-eqz v6, :cond_2

    iget-object v6, v5, Lcom/android/server/am/ReceiverList;->app:Lcom/android/server/am/ProcessRecord;

    iget-object v6, v6, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget-object v6, v6, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;

    .line 18154
    invoke-virtual {v8, v6}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v6

    if-nez v6, :cond_3

    .line 18155
    goto :goto_2

    .line 18157
    :cond_3
    if-nez v4, :cond_4

    .line 18158
    const-string v2, "  Registered Receivers:"

    invoke-virtual {v9, v2}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 18159
    nop

    .line 18160
    nop

    .line 18161
    nop

    .line 18163
    move v2, v13

    move v3, v2

    move v4, v3

    :cond_4
    const-string v6, "  * "

    invoke-virtual {v9, v6}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    invoke-virtual {v9, v5}, Ljava/io/PrintWriter;->println(Ljava/lang/Object;)V

    .line 18164
    const-string v6, "    "

    invoke-virtual {v5, v9, v6}, Lcom/android/server/am/ReceiverList;->dump(Ljava/io/PrintWriter;Ljava/lang/String;)V

    .line 18165
    goto :goto_2

    .line 18168
    :cond_5
    move/from16 v16, v2

    move/from16 v17, v3

    goto :goto_3

    :cond_6
    move/from16 v16, v12

    move/from16 v17, v16

    :goto_3
    iget-object v1, v0, Lcom/android/server/am/ActivityManagerService;->mReceiverResolver:Lcom/android/server/IntentResolver;

    if-eqz v16, :cond_7

    .line 18169
    const-string v2, "\n  Receiver Resolver Table:"

    :goto_4
    move-object v3, v2

    goto :goto_5

    :cond_7
    const-string v2, "  Receiver Resolver Table:"

    goto :goto_4

    :goto_5
    const-string v4, "    "

    const/4 v6, 0x0

    const/4 v7, 0x0

    .line 18168
    move-object v2, v9

    move-object v5, v8

    invoke-virtual/range {v1 .. v7}, Lcom/android/server/IntentResolver;->dump(Ljava/io/PrintWriter;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;ZZ)Z

    move-result v1

    if-eqz v1, :cond_9

    .line 18171
    nop

    .line 18172
    nop

    .line 18176
    move/from16 v16, v13

    goto :goto_6

    :cond_8
    move/from16 v16, v12

    :goto_6
    move/from16 v17, v16

    :cond_9
    iget-object v7, v0, Lcom/android/server/am/ActivityManagerService;->mBroadcastQueues:[Lcom/android/server/am/BroadcastQueue;

    array-length v6, v7

    move v5, v12

    :goto_7
    if-ge v5, v6, :cond_a

    aget-object v1, v7, v5

    .line 18177
    move-object/from16 v2, p1

    move-object v3, v9

    move-object v4, v10

    move/from16 v18, v5

    move v5, v11

    move/from16 v19, v6

    move v6, v15

    move-object/from16 v20, v7

    move-object v7, v8

    move-object/from16 v21, v8

    move/from16 v8, v16

    invoke-virtual/range {v1 .. v8}, Lcom/android/server/am/BroadcastQueue;->dumpLocked(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;[Ljava/lang/String;IZLjava/lang/String;Z)Z

    move-result v16

    .line 18178
    or-int v17, v17, v16

    .line 18176
    add-int/lit8 v5, v18, 0x1

    move/from16 v6, v19

    move-object/from16 v7, v20

    move-object/from16 v8, v21

    goto :goto_7

    .line 18181
    :cond_a
    move-object/from16 v21, v8

    .line 18183
    if-nez v14, :cond_f

    iget-object v1, v0, Lcom/android/server/am/ActivityManagerService;->mStickyBroadcasts:Landroid/util/SparseArray;

    if-eqz v1, :cond_f

    if-nez v21, :cond_f

    .line 18184
    move v1, v12

    :goto_8
    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mStickyBroadcasts:Landroid/util/SparseArray;

    invoke-virtual {v2}, Landroid/util/SparseArray;->size()I

    move-result v2

    if-ge v1, v2, :cond_f

    .line 18185
    nop

    .line 18186
    invoke-virtual/range {p2 .. p2}, Ljava/io/PrintWriter;->println()V

    .line 18188
    nop

    .line 18189
    nop

    .line 18190
    const-string v2, "  Sticky broadcasts for user "

    invoke-virtual {v9, v2}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 18191
    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mStickyBroadcasts:Landroid/util/SparseArray;

    invoke-virtual {v2, v1}, Landroid/util/SparseArray;->keyAt(I)I

    move-result v2

    invoke-virtual {v9, v2}, Ljava/io/PrintWriter;->print(I)V

    const-string v2, ":"

    invoke-virtual {v9, v2}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 18192
    new-instance v2, Ljava/lang/StringBuilder;

    const/16 v3, 0x80

    invoke-direct {v2, v3}, Ljava/lang/StringBuilder;-><init>(I)V

    .line 18194
    iget-object v3, v0, Lcom/android/server/am/ActivityManagerService;->mStickyBroadcasts:Landroid/util/SparseArray;

    invoke-virtual {v3, v1}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;

    move-result-object v3

    check-cast v3, Landroid/util/ArrayMap;

    invoke-virtual {v3}, Landroid/util/ArrayMap;->entrySet()Ljava/util/Set;

    move-result-object v3

    invoke-interface {v3}, Ljava/util/Set;->iterator()Ljava/util/Iterator;

    move-result-object v10

    :goto_9
    invoke-interface {v10}, Ljava/util/Iterator;->hasNext()Z

    move-result v3

    if-eqz v3, :cond_e

    invoke-interface {v10}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v3

    check-cast v3, Ljava/util/Map$Entry;

    .line 18195
    const-string v4, "  * Sticky action "

    invoke-virtual {v9, v4}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    invoke-interface {v3}, Ljava/util/Map$Entry;->getKey()Ljava/lang/Object;

    move-result-object v4

    check-cast v4, Ljava/lang/String;

    invoke-virtual {v9, v4}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 18196
    if-eqz v15, :cond_d

    .line 18197
    const-string v4, ":"

    invoke-virtual {v9, v4}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 18198
    invoke-interface {v3}, Ljava/util/Map$Entry;->getValue()Ljava/lang/Object;

    move-result-object v3

    move-object v11, v3

    check-cast v11, Ljava/util/ArrayList;

    .line 18199
    invoke-virtual {v11}, Ljava/util/ArrayList;->size()I

    move-result v8

    .line 18200
    move v7, v12

    :goto_a
    if-ge v7, v8, :cond_c

    .line 18201
    invoke-virtual {v2, v12}, Ljava/lang/StringBuilder;->setLength(I)V

    .line 18202
    const-string v3, "    Intent: "

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 18203
    invoke-virtual {v11, v7}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v3

    check-cast v3, Landroid/content/Intent;

    const/4 v5, 0x0

    const/4 v6, 0x1

    const/16 v16, 0x0

    const/16 v17, 0x0

    move-object v4, v2

    move v12, v7

    move/from16 v7, v16

    move/from16 v16, v8

    move/from16 v8, v17

    invoke-virtual/range {v3 .. v8}, Landroid/content/Intent;->toShortString(Ljava/lang/StringBuilder;ZZZZ)V

    .line 18204
    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v3

    invoke-virtual {v9, v3}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 18205
    invoke-virtual {v11, v12}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v3

    check-cast v3, Landroid/content/Intent;

    invoke-virtual {v3}, Landroid/content/Intent;->getExtras()Landroid/os/Bundle;

    move-result-object v3

    .line 18206
    if-eqz v3, :cond_b

    .line 18207
    const-string v4, "      "

    invoke-virtual {v9, v4}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 18208
    invoke-virtual {v3}, Landroid/os/Bundle;->toString()Ljava/lang/String;

    move-result-object v3

    invoke-virtual {v9, v3}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 18200
    :cond_b
    add-int/lit8 v7, v12, 0x1

    move/from16 v8, v16

    const/4 v12, 0x0

    goto :goto_a

    .line 18211
    :cond_c
    goto :goto_b

    .line 18212
    :cond_d
    const-string v3, ""

    invoke-virtual {v9, v3}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 18214
    :goto_b
    nop

    .line 18194
    const/4 v12, 0x0

    goto :goto_9

    .line 18184
    :cond_e
    add-int/lit8 v1, v1, 0x1

    move/from16 v17, v13

    const/4 v12, 0x0

    goto/16 :goto_8

    .line 18218
    :cond_f
    if-nez v14, :cond_11

    if-eqz v15, :cond_11

    .line 18219
    invoke-virtual/range {p2 .. p2}, Ljava/io/PrintWriter;->println()V

    .line 18220
    iget-object v1, v0, Lcom/android/server/am/ActivityManagerService;->mBroadcastQueues:[Lcom/android/server/am/BroadcastQueue;

    array-length v2, v1

    const/4 v3, 0x0

    :goto_c
    if-ge v3, v2, :cond_10

    aget-object v4, v1, v3

    .line 18221
    new-instance v5, Ljava/lang/StringBuilder;

    invoke-direct {v5}, Ljava/lang/StringBuilder;-><init>()V

    const-string v6, "  mBroadcastsScheduled ["

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget-object v6, v4, Lcom/android/server/am/BroadcastQueue;->mQueueName:Ljava/lang/String;

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v6, "]="

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget-boolean v4, v4, Lcom/android/server/am/BroadcastQueue;->mBroadcastsScheduled:Z

    invoke-virtual {v5, v4}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    invoke-virtual {v5}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v4

    invoke-virtual {v9, v4}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 18220
    add-int/lit8 v3, v3, 0x1

    goto :goto_c

    .line 18224
    :cond_10
    const-string v1, "  mHandler:"

    invoke-virtual {v9, v1}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 18225
    iget-object v0, v0, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    new-instance v1, Landroid/util/PrintWriterPrinter;

    invoke-direct {v1, v9}, Landroid/util/PrintWriterPrinter;-><init>(Ljava/io/PrintWriter;)V

    const-string v2, "    "

    invoke-virtual {v0, v1, v2}, Lcom/android/server/am/ActivityManagerService$MainHandler;->dump(Landroid/util/Printer;Ljava/lang/String;)V

    .line 18226
    nop

    .line 18227
    goto :goto_d

    .line 18230
    :cond_11
    move/from16 v13, v17

    :goto_d
    if-nez v13, :cond_12

    .line 18231
    const-string v0, "  (nothing)"

    invoke-virtual {v9, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 18233
    :cond_12
    return-void
.end method

.method final dumpDbInfo(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;[Ljava/lang/String;)V
    .locals 6

    .line 18774
    const/4 v0, 0x0

    invoke-virtual {p0, p2, v0, v0, p3}, Lcom/android/server/am/ActivityManagerService;->collectProcesses(Ljava/io/PrintWriter;IZ[Ljava/lang/String;)Ljava/util/ArrayList;

    move-result-object v1

    .line 18775
    if-nez v1, :cond_0

    .line 18776
    new-instance p1, Ljava/lang/StringBuilder;

    invoke-direct {p1}, Ljava/lang/StringBuilder;-><init>()V

    const-string v1, "No process found for: "

    invoke-virtual {p1, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    aget-object p3, p3, v0

    invoke-virtual {p1, p3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {p1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object p1

    invoke-virtual {p2, p1}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 18777
    return-void

    .line 18780
    :cond_0
    const-string v0, "Applications Database Info:"

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 18782
    invoke-virtual {v1}, Ljava/util/ArrayList;->size()I

    move-result v0

    add-int/lit8 v0, v0, -0x1

    :goto_0
    if-ltz v0, :cond_2

    .line 18783
    invoke-virtual {v1, v0}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Lcom/android/server/am/ProcessRecord;

    .line 18784
    iget-object v3, v2, Lcom/android/server/am/ProcessRecord;->thread:Landroid/app/IApplicationThread;

    if-eqz v3, :cond_1

    .line 18785
    new-instance v3, Ljava/lang/StringBuilder;

    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V

    const-string v4, "\n** Database info for pid "

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget v4, v2, Lcom/android/server/am/ProcessRecord;->pid:I

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v4, " ["

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget-object v4, v2, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v4, "] **"

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v3

    invoke-virtual {p2, v3}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 18786
    invoke-virtual {p2}, Ljava/io/PrintWriter;->flush()V

    .line 18788
    :try_start_0
    new-instance v3, Lcom/android/internal/os/TransferPipe;

    invoke-direct {v3}, Lcom/android/internal/os/TransferPipe;-><init>()V
    :try_end_0
    .catch Ljava/io/IOException; {:try_start_0 .. :try_end_0} :catch_1
    .catch Landroid/os/RemoteException; {:try_start_0 .. :try_end_0} :catch_0

    .line 18790
    :try_start_1
    iget-object v4, v2, Lcom/android/server/am/ProcessRecord;->thread:Landroid/app/IApplicationThread;

    invoke-virtual {v3}, Lcom/android/internal/os/TransferPipe;->getWriteFd()Landroid/os/ParcelFileDescriptor;

    move-result-object v5

    invoke-interface {v4, v5, p3}, Landroid/app/IApplicationThread;->dumpDbInfo(Landroid/os/ParcelFileDescriptor;[Ljava/lang/String;)V

    .line 18791
    invoke-virtual {v3, p1}, Lcom/android/internal/os/TransferPipe;->go(Ljava/io/FileDescriptor;)V
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 18793
    :try_start_2
    invoke-virtual {v3}, Lcom/android/internal/os/TransferPipe;->kill()V

    .line 18794
    goto :goto_1

    .line 18793
    :catchall_0
    move-exception v4

    invoke-virtual {v3}, Lcom/android/internal/os/TransferPipe;->kill()V

    throw v4
    :try_end_2
    .catch Ljava/io/IOException; {:try_start_2 .. :try_end_2} :catch_1
    .catch Landroid/os/RemoteException; {:try_start_2 .. :try_end_2} :catch_0

    .line 18798
    :catch_0
    move-exception v3

    .line 18799
    new-instance v3, Ljava/lang/StringBuilder;

    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V

    const-string v4, "Got a RemoteException while dumping the app "

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v3, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v2

    invoke-virtual {p2, v2}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 18800
    invoke-virtual {p2}, Ljava/io/PrintWriter;->flush()V

    goto :goto_2

    .line 18795
    :catch_1
    move-exception v3

    .line 18796
    new-instance v3, Ljava/lang/StringBuilder;

    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V

    const-string v4, "Failure while dumping the app: "

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v3, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v2

    invoke-virtual {p2, v2}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 18797
    invoke-virtual {p2}, Ljava/io/PrintWriter;->flush()V

    .line 18801
    :goto_1
    nop

    .line 18782
    :cond_1
    :goto_2
    add-int/lit8 v0, v0, -0x1

    goto/16 :goto_0

    .line 18804
    :cond_2
    return-void
.end method

.method final dumpGraphicsHardwareUsage(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;[Ljava/lang/String;)V
    .locals 7

    .line 18738
    const/4 v0, 0x0

    invoke-virtual {p0, p2, v0, v0, p3}, Lcom/android/server/am/ActivityManagerService;->collectProcesses(Ljava/io/PrintWriter;IZ[Ljava/lang/String;)Ljava/util/ArrayList;

    move-result-object v1

    .line 18739
    if-nez v1, :cond_0

    .line 18740
    new-instance p1, Ljava/lang/StringBuilder;

    invoke-direct {p1}, Ljava/lang/StringBuilder;-><init>()V

    const-string v1, "No process found for: "

    invoke-virtual {p1, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    aget-object p3, p3, v0

    invoke-virtual {p1, p3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {p1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object p1

    invoke-virtual {p2, p1}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 18741
    return-void

    .line 18744
    :cond_0
    invoke-static {}, Landroid/os/SystemClock;->uptimeMillis()J

    move-result-wide v2

    .line 18745
    invoke-static {}, Landroid/os/SystemClock;->elapsedRealtime()J

    move-result-wide v4

    .line 18746
    const-string v0, "Applications Graphics Acceleration Info:"

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 18747
    new-instance v0, Ljava/lang/StringBuilder;

    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V

    const-string v6, "Uptime: "

    invoke-virtual {v0, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0, v2, v3}, Ljava/lang/StringBuilder;->append(J)Ljava/lang/StringBuilder;

    const-string v2, " Realtime: "

    invoke-virtual {v0, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0, v4, v5}, Ljava/lang/StringBuilder;->append(J)Ljava/lang/StringBuilder;

    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 18749
    invoke-virtual {v1}, Ljava/util/ArrayList;->size()I

    move-result v0

    add-int/lit8 v0, v0, -0x1

    :goto_0
    if-ltz v0, :cond_2

    .line 18750
    invoke-virtual {v1, v0}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Lcom/android/server/am/ProcessRecord;

    .line 18751
    iget-object v3, v2, Lcom/android/server/am/ProcessRecord;->thread:Landroid/app/IApplicationThread;

    if-eqz v3, :cond_1

    .line 18752
    new-instance v3, Ljava/lang/StringBuilder;

    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V

    const-string v4, "\n** Graphics info for pid "

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget v4, v2, Lcom/android/server/am/ProcessRecord;->pid:I

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v4, " ["

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget-object v4, v2, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v4, "] **"

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v3

    invoke-virtual {p2, v3}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 18753
    invoke-virtual {p2}, Ljava/io/PrintWriter;->flush()V

    .line 18755
    :try_start_0
    new-instance v3, Lcom/android/internal/os/TransferPipe;

    invoke-direct {v3}, Lcom/android/internal/os/TransferPipe;-><init>()V
    :try_end_0
    .catch Ljava/io/IOException; {:try_start_0 .. :try_end_0} :catch_1
    .catch Landroid/os/RemoteException; {:try_start_0 .. :try_end_0} :catch_0

    .line 18757
    :try_start_1
    iget-object v4, v2, Lcom/android/server/am/ProcessRecord;->thread:Landroid/app/IApplicationThread;

    invoke-virtual {v3}, Lcom/android/internal/os/TransferPipe;->getWriteFd()Landroid/os/ParcelFileDescriptor;

    move-result-object v5

    invoke-interface {v4, v5, p3}, Landroid/app/IApplicationThread;->dumpGfxInfo(Landroid/os/ParcelFileDescriptor;[Ljava/lang/String;)V

    .line 18758
    invoke-virtual {v3, p1}, Lcom/android/internal/os/TransferPipe;->go(Ljava/io/FileDescriptor;)V
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 18760
    :try_start_2
    invoke-virtual {v3}, Lcom/android/internal/os/TransferPipe;->kill()V

    .line 18761
    goto :goto_1

    .line 18760
    :catchall_0
    move-exception v4

    invoke-virtual {v3}, Lcom/android/internal/os/TransferPipe;->kill()V

    throw v4
    :try_end_2
    .catch Ljava/io/IOException; {:try_start_2 .. :try_end_2} :catch_1
    .catch Landroid/os/RemoteException; {:try_start_2 .. :try_end_2} :catch_0

    .line 18765
    :catch_0
    move-exception v3

    .line 18766
    new-instance v3, Ljava/lang/StringBuilder;

    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V

    const-string v4, "Got a RemoteException while dumping the app "

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v3, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v2

    invoke-virtual {p2, v2}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 18767
    invoke-virtual {p2}, Ljava/io/PrintWriter;->flush()V

    goto :goto_2

    .line 18762
    :catch_1
    move-exception v3

    .line 18763
    new-instance v3, Ljava/lang/StringBuilder;

    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V

    const-string v4, "Failure while dumping the app: "

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v3, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v2

    invoke-virtual {p2, v2}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 18764
    invoke-virtual {p2}, Ljava/io/PrintWriter;->flush()V

    .line 18768
    :goto_1
    nop

    .line 18749
    :cond_1
    :goto_2
    add-int/lit8 v0, v0, -0x1

    goto/16 :goto_0

    .line 18771
    :cond_2
    return-void
.end method

.method public dumpHeap(Ljava/lang/String;IZZZLjava/lang/String;Landroid/os/ParcelFileDescriptor;)Z
    .locals 6
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Landroid/os/RemoteException;
        }
    .end annotation

    .line 26404
    :try_start_0
    monitor-enter p0
    :try_end_0
    .catch Landroid/os/RemoteException; {:try_start_0 .. :try_end_0} :catch_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_2

    :try_start_1
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    .line 26407
    const-string v0, "android.permission.SET_ACTIVITY_WATCHER"

    invoke-virtual {p0, v0}, Lcom/android/server/am/ActivityManagerService;->checkCallingPermission(Ljava/lang/String;)I

    move-result v0

    if-nez v0, :cond_4

    .line 26413
    if-eqz p7, :cond_3

    .line 26417
    const-string v0, "dumpHeap"

    invoke-direct {p0, p1, p2, v0}, Lcom/android/server/am/ActivityManagerService;->findProcessLocked(Ljava/lang/String;ILjava/lang/String;)Lcom/android/server/am/ProcessRecord;

    move-result-object p2

    .line 26418
    if-eqz p2, :cond_2

    iget-object v0, p2, Lcom/android/server/am/ProcessRecord;->thread:Landroid/app/IApplicationThread;

    if-eqz v0, :cond_2

    .line 26422
    const-string p1, "1"

    const-string/jumbo v0, "ro.debuggable"

    const-string v1, "0"

    invoke-static {v0, v1}, Landroid/os/SystemProperties;->get(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;

    move-result-object v0

    invoke-virtual {p1, v0}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result p1

    .line 26423
    if-nez p1, :cond_1

    .line 26424
    iget-object p1, p2, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget p1, p1, Landroid/content/pm/ApplicationInfo;->flags:I

    and-int/lit8 p1, p1, 0x2

    if-eqz p1, :cond_0

    goto :goto_0

    .line 26425
    :cond_0
    new-instance p1, Ljava/lang/SecurityException;

    new-instance p3, Ljava/lang/StringBuilder;

    invoke-direct {p3}, Ljava/lang/StringBuilder;-><init>()V

    const-string p4, "Process not debuggable: "

    invoke-virtual {p3, p4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {p3, p2}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    invoke-virtual {p3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object p2

    invoke-direct {p1, p2}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw p1

    .line 26429
    :cond_1
    :goto_0
    iget-object v0, p2, Lcom/android/server/am/ProcessRecord;->thread:Landroid/app/IApplicationThread;

    move v1, p3

    move v2, p4

    move v3, p5

    move-object v4, p6

    move-object v5, p7

    invoke-interface/range {v0 .. v5}, Landroid/app/IApplicationThread;->dumpHeap(ZZZLjava/lang/String;Landroid/os/ParcelFileDescriptor;)V
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_1

    .line 26430
    const/4 p1, 0x0

    .line 26431
    const/4 p2, 0x1

    :try_start_2
    monitor-exit p0
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    .line 26436
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    .line 26431
    return p2

    .line 26432
    :catchall_0
    move-exception p2

    move-object p7, p1

    move-object p1, p2

    goto :goto_1

    .line 26419
    :cond_2
    :try_start_3
    new-instance p2, Ljava/lang/IllegalArgumentException;

    new-instance p3, Ljava/lang/StringBuilder;

    invoke-direct {p3}, Ljava/lang/StringBuilder;-><init>()V

    const-string p4, "Unknown process: "

    invoke-virtual {p3, p4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {p3, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {p3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object p1

    invoke-direct {p2, p1}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw p2

    .line 26414
    :cond_3
    new-instance p1, Ljava/lang/IllegalArgumentException;

    const-string p2, "null fd"

    invoke-direct {p1, p2}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw p1

    .line 26409
    :cond_4
    new-instance p1, Ljava/lang/SecurityException;

    const-string p2, "Requires permission android.permission.SET_ACTIVITY_WATCHER"

    invoke-direct {p1, p2}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw p1

    .line 26432
    :catchall_1
    move-exception p1

    :goto_1
    monitor-exit p0
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_1

    :try_start_4
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw p1
    :try_end_4
    .catch Landroid/os/RemoteException; {:try_start_4 .. :try_end_4} :catch_0
    .catchall {:try_start_4 .. :try_end_4} :catchall_2

    .line 26436
    :catchall_2
    move-exception p1

    goto :goto_2

    .line 26433
    :catch_0
    move-exception p1

    .line 26434
    :try_start_5
    new-instance p1, Ljava/lang/IllegalStateException;

    const-string p2, "Process disappeared"

    invoke-direct {p1, p2}, Ljava/lang/IllegalStateException;-><init>(Ljava/lang/String;)V

    throw p1
    :try_end_5
    .catchall {:try_start_5 .. :try_end_5} :catchall_2

    .line 26436
    :goto_2
    if-eqz p7, :cond_5

    .line 26438
    :try_start_6
    invoke-virtual {p7}, Landroid/os/ParcelFileDescriptor;->close()V
    :try_end_6
    .catch Ljava/io/IOException; {:try_start_6 .. :try_end_6} :catch_1

    .line 26440
    goto :goto_3

    .line 26439
    :catch_1
    move-exception p2

    .line 26440
    :cond_5
    :goto_3
    throw p1
.end method

.method public dumpHeapFinished(Ljava/lang/String;)V
    .locals 3

    .line 26485
    monitor-enter p0

    :try_start_0
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    .line 26486
    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result v0

    iget v1, p0, Lcom/android/server/am/ActivityManagerService;->mMemWatchDumpPid:I

    if-eq v0, v1, :cond_0

    .line 26487
    const-string p1, "ActivityManager"

    new-instance v0, Ljava/lang/StringBuilder;

    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V

    const-string v1, "dumpHeapFinished: Calling pid "

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result v1

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v1, " does not match last pid "

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget v1, p0, Lcom/android/server/am/ActivityManagerService;->mMemWatchDumpPid:I

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    invoke-static {p1, v0}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 26489
    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    return-void

    .line 26491
    :cond_0
    :try_start_1
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mMemWatchDumpFile:Ljava/lang/String;

    if-eqz v0, :cond_2

    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mMemWatchDumpFile:Ljava/lang/String;

    invoke-virtual {v0, p1}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v0

    if-nez v0, :cond_1

    goto :goto_0

    .line 26497
    :cond_1
    iget-object p1, p0, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    const/16 v0, 0x32

    invoke-virtual {p1, v0}, Lcom/android/server/am/ActivityManagerService$MainHandler;->sendEmptyMessage(I)Z

    .line 26500
    invoke-static {}, Ljava/lang/Runtime;->getRuntime()Ljava/lang/Runtime;

    move-result-object p1

    invoke-virtual {p1}, Ljava/lang/Runtime;->gc()V

    .line 26501
    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    .line 26502
    return-void

    .line 26492
    :cond_2
    :goto_0
    :try_start_2
    const-string v0, "ActivityManager"

    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string v2, "dumpHeapFinished: Calling path "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v1, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string p1, " does not match last path "

    invoke-virtual {v1, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget-object p1, p0, Lcom/android/server/am/ActivityManagerService;->mMemWatchDumpFile:Ljava/lang/String;

    invoke-virtual {v1, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object p1

    invoke-static {v0, p1}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 26494
    monitor-exit p0
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    return-void

    .line 26501
    :catchall_0
    move-exception p1

    :try_start_3
    monitor-exit p0
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw p1
.end method

.method dumpOomLocked(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;[Ljava/lang/String;IZ)Z
    .locals 8

    .line 17862
    nop

    .line 17864
    iget-object p1, p0, Lcom/android/server/am/ActivityManagerService;->mLruProcesses:Ljava/util/ArrayList;

    invoke-virtual {p1}, Ljava/util/ArrayList;->size()I

    move-result p1

    const/4 p3, 0x1

    const/4 p4, 0x0

    if-lez p1, :cond_0

    .line 17865
    nop

    .line 17866
    nop

    .line 17867
    const-string p1, "  OOM levels:"

    invoke-virtual {p2, p1}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 17868
    const-string p1, "SYSTEM_ADJ"

    const/16 p5, -0x384

    invoke-virtual {p0, p2, p1, p5}, Lcom/android/server/am/ActivityManagerService;->printOomLevel(Ljava/io/PrintWriter;Ljava/lang/String;I)V

    .line 17869
    const-string p1, "PERSISTENT_PROC_ADJ"

    const/16 p5, -0x320

    invoke-virtual {p0, p2, p1, p5}, Lcom/android/server/am/ActivityManagerService;->printOomLevel(Ljava/io/PrintWriter;Ljava/lang/String;I)V

    .line 17870
    const-string p1, "PERSISTENT_SERVICE_ADJ"

    const/16 p5, -0x2bc

    invoke-virtual {p0, p2, p1, p5}, Lcom/android/server/am/ActivityManagerService;->printOomLevel(Ljava/io/PrintWriter;Ljava/lang/String;I)V

    .line 17871
    const-string p1, "FOREGROUND_APP_ADJ"

    invoke-virtual {p0, p2, p1, p4}, Lcom/android/server/am/ActivityManagerService;->printOomLevel(Ljava/io/PrintWriter;Ljava/lang/String;I)V

    .line 17872
    const-string p1, "VISIBLE_APP_ADJ"

    const/16 p4, 0x64

    invoke-virtual {p0, p2, p1, p4}, Lcom/android/server/am/ActivityManagerService;->printOomLevel(Ljava/io/PrintWriter;Ljava/lang/String;I)V

    .line 17873
    const-string p1, "PERCEPTIBLE_APP_ADJ"

    const/16 p4, 0xc8

    invoke-virtual {p0, p2, p1, p4}, Lcom/android/server/am/ActivityManagerService;->printOomLevel(Ljava/io/PrintWriter;Ljava/lang/String;I)V

    .line 17874
    const-string p1, "BACKUP_APP_ADJ"

    const/16 p4, 0x12c

    invoke-virtual {p0, p2, p1, p4}, Lcom/android/server/am/ActivityManagerService;->printOomLevel(Ljava/io/PrintWriter;Ljava/lang/String;I)V

    .line 17875
    const-string p1, "HEAVY_WEIGHT_APP_ADJ"

    const/16 p4, 0x190

    invoke-virtual {p0, p2, p1, p4}, Lcom/android/server/am/ActivityManagerService;->printOomLevel(Ljava/io/PrintWriter;Ljava/lang/String;I)V

    .line 17876
    const-string p1, "SERVICE_ADJ"

    const/16 p4, 0x1f4

    invoke-virtual {p0, p2, p1, p4}, Lcom/android/server/am/ActivityManagerService;->printOomLevel(Ljava/io/PrintWriter;Ljava/lang/String;I)V

    .line 17877
    const-string p1, "HOME_APP_ADJ"

    const/16 p4, 0x258

    invoke-virtual {p0, p2, p1, p4}, Lcom/android/server/am/ActivityManagerService;->printOomLevel(Ljava/io/PrintWriter;Ljava/lang/String;I)V

    .line 17878
    const-string p1, "PREVIOUS_APP_ADJ"

    const/16 p4, 0x2bc

    invoke-virtual {p0, p2, p1, p4}, Lcom/android/server/am/ActivityManagerService;->printOomLevel(Ljava/io/PrintWriter;Ljava/lang/String;I)V

    .line 17879
    const-string p1, "SERVICE_B_ADJ"

    const/16 p4, 0x320

    invoke-virtual {p0, p2, p1, p4}, Lcom/android/server/am/ActivityManagerService;->printOomLevel(Ljava/io/PrintWriter;Ljava/lang/String;I)V

    .line 17880
    const-string p1, "CACHED_APP_MIN_ADJ"

    const/16 p4, 0x384

    invoke-virtual {p0, p2, p1, p4}, Lcom/android/server/am/ActivityManagerService;->printOomLevel(Ljava/io/PrintWriter;Ljava/lang/String;I)V

    .line 17881
    const-string p1, "CACHED_APP_MAX_ADJ"

    const/16 p4, 0x38a

    invoke-virtual {p0, p2, p1, p4}, Lcom/android/server/am/ActivityManagerService;->printOomLevel(Ljava/io/PrintWriter;Ljava/lang/String;I)V

    .line 17883
    invoke-virtual {p2}, Ljava/io/PrintWriter;->println()V

    .line 17884
    const-string p1, "  Process OOM control ("

    invoke-virtual {p2, p1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    iget-object p1, p0, Lcom/android/server/am/ActivityManagerService;->mLruProcesses:Ljava/util/ArrayList;

    invoke-virtual {p1}, Ljava/util/ArrayList;->size()I

    move-result p1

    invoke-virtual {p2, p1}, Ljava/io/PrintWriter;->print(I)V

    .line 17885
    const-string p1, " total, non-act at "

    invoke-virtual {p2, p1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 17886
    iget-object p1, p0, Lcom/android/server/am/ActivityManagerService;->mLruProcesses:Ljava/util/ArrayList;

    invoke-virtual {p1}, Ljava/util/ArrayList;->size()I

    move-result p1

    iget p4, p0, Lcom/android/server/am/ActivityManagerService;->mLruProcessActivityStart:I

    sub-int/2addr p1, p4

    invoke-virtual {p2, p1}, Ljava/io/PrintWriter;->print(I)V

    .line 17887
    const-string p1, ", non-svc at "

    invoke-virtual {p2, p1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 17888
    iget-object p1, p0, Lcom/android/server/am/ActivityManagerService;->mLruProcesses:Ljava/util/ArrayList;

    invoke-virtual {p1}, Ljava/util/ArrayList;->size()I

    move-result p1

    iget p4, p0, Lcom/android/server/am/ActivityManagerService;->mLruProcessServiceStart:I

    sub-int/2addr p1, p4

    invoke-virtual {p2, p1}, Ljava/io/PrintWriter;->print(I)V

    .line 17889
    const-string p1, "):"

    invoke-virtual {p2, p1}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 17890
    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mLruProcesses:Ljava/util/ArrayList;

    const-string v3, "    "

    const-string v4, "Proc"

    const-string v5, "PERS"

    const/4 v6, 0x1

    const/4 v7, 0x0

    move-object v0, p2

    move-object v1, p0

    invoke-static/range {v0 .. v7}, Lcom/android/server/am/ActivityManagerService;->dumpProcessOomList(Ljava/io/PrintWriter;Lcom/android/server/am/ActivityManagerService;Ljava/util/List;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)Z

    .line 17891
    nop

    .line 17894
    move p4, p3

    :cond_0
    const/4 p1, 0x0

    invoke-virtual {p0, p2, p4, p1}, Lcom/android/server/am/ActivityManagerService;->dumpProcessesToGc(Ljava/io/PrintWriter;ZLjava/lang/String;)Z

    .line 17896
    invoke-virtual {p2}, Ljava/io/PrintWriter;->println()V

    .line 17897
    new-instance p1, Ljava/lang/StringBuilder;

    invoke-direct {p1}, Ljava/lang/StringBuilder;-><init>()V

    const-string p4, "  mHomeProcess: "

    invoke-virtual {p1, p4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget-object p4, p0, Lcom/android/server/am/ActivityManagerService;->mHomeProcess:Lcom/android/server/am/ProcessRecord;

    invoke-virtual {p1, p4}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    invoke-virtual {p1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object p1

    invoke-virtual {p2, p1}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 17898
    new-instance p1, Ljava/lang/StringBuilder;

    invoke-direct {p1}, Ljava/lang/StringBuilder;-><init>()V

    const-string p4, "  mPreviousProcess: "

    invoke-virtual {p1, p4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget-object p4, p0, Lcom/android/server/am/ActivityManagerService;->mPreviousProcess:Lcom/android/server/am/ProcessRecord;

    invoke-virtual {p1, p4}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    invoke-virtual {p1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object p1

    invoke-virtual {p2, p1}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 17899
    iget-object p1, p0, Lcom/android/server/am/ActivityManagerService;->mHeavyWeightProcess:Lcom/android/server/am/ProcessRecord;

    if-eqz p1, :cond_1

    .line 17900
    new-instance p1, Ljava/lang/StringBuilder;

    invoke-direct {p1}, Ljava/lang/StringBuilder;-><init>()V

    const-string p4, "  mHeavyWeightProcess: "

    invoke-virtual {p1, p4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget-object p4, p0, Lcom/android/server/am/ActivityManagerService;->mHeavyWeightProcess:Lcom/android/server/am/ProcessRecord;

    invoke-virtual {p1, p4}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    invoke-virtual {p1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object p1

    invoke-virtual {p2, p1}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 17903
    :cond_1
    return p3
.end method

.method dumpPendingIntentsLocked(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;[Ljava/lang/String;IZLjava/lang/String;)V
    .locals 5

    .line 18373
    nop

    .line 18375
    const-string p1, "ACTIVITY MANAGER PENDING INTENTS (dumpsys activity intents)"

    invoke-virtual {p2, p1}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 18377
    iget-object p1, p0, Lcom/android/server/am/ActivityManagerService;->mIntentSenderRecords:Ljava/util/HashMap;

    invoke-virtual {p1}, Ljava/util/HashMap;->size()I

    move-result p1

    const/4 p3, 0x0

    const/4 p4, 0x1

    if-lez p1, :cond_a

    .line 18379
    new-instance p1, Landroid/util/ArrayMap;

    invoke-direct {p1}, Landroid/util/ArrayMap;-><init>()V

    .line 18380
    new-instance v0, Ljava/util/ArrayList;

    invoke-direct {v0}, Ljava/util/ArrayList;-><init>()V

    .line 18381
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mIntentSenderRecords:Ljava/util/HashMap;

    .line 18382
    invoke-virtual {v1}, Ljava/util/HashMap;->values()Ljava/util/Collection;

    move-result-object v1

    invoke-interface {v1}, Ljava/util/Collection;->iterator()Ljava/util/Iterator;

    move-result-object v1

    .line 18383
    :goto_0
    invoke-interface {v1}, Ljava/util/Iterator;->hasNext()Z

    move-result v2

    if-eqz v2, :cond_4

    .line 18384
    invoke-interface {v1}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Ljava/lang/ref/WeakReference;

    .line 18385
    if-eqz v2, :cond_0

    invoke-virtual {v2}, Ljava/lang/ref/WeakReference;->get()Ljava/lang/Object;

    move-result-object v3

    check-cast v3, Lcom/android/server/am/PendingIntentRecord;

    goto :goto_1

    :cond_0
    const/4 v3, 0x0

    .line 18386
    :goto_1
    if-nez v3, :cond_1

    .line 18387
    invoke-virtual {v0, v2}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    .line 18388
    goto :goto_0

    .line 18390
    :cond_1
    if-eqz p6, :cond_2

    iget-object v2, v3, Lcom/android/server/am/PendingIntentRecord;->key:Lcom/android/server/am/PendingIntentRecord$Key;

    iget-object v2, v2, Lcom/android/server/am/PendingIntentRecord$Key;->packageName:Ljava/lang/String;

    invoke-virtual {p6, v2}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v2

    if-nez v2, :cond_2

    .line 18391
    goto :goto_0

    .line 18393
    :cond_2
    iget-object v2, v3, Lcom/android/server/am/PendingIntentRecord;->key:Lcom/android/server/am/PendingIntentRecord$Key;

    iget-object v2, v2, Lcom/android/server/am/PendingIntentRecord$Key;->packageName:Ljava/lang/String;

    invoke-virtual {p1, v2}, Landroid/util/ArrayMap;->get(Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Ljava/util/ArrayList;

    .line 18394
    if-nez v2, :cond_3

    .line 18395
    new-instance v2, Ljava/util/ArrayList;

    invoke-direct {v2}, Ljava/util/ArrayList;-><init>()V

    .line 18396
    iget-object v4, v3, Lcom/android/server/am/PendingIntentRecord;->key:Lcom/android/server/am/PendingIntentRecord$Key;

    iget-object v4, v4, Lcom/android/server/am/PendingIntentRecord$Key;->packageName:Ljava/lang/String;

    invoke-virtual {p1, v4, v2}, Landroid/util/ArrayMap;->put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    .line 18398
    :cond_3
    invoke-virtual {v2, v3}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    .line 18399
    goto :goto_0

    .line 18400
    :cond_4
    move p6, p3

    move v1, p6

    :goto_2
    invoke-virtual {p1}, Landroid/util/ArrayMap;->size()I

    move-result v2

    if-ge p6, v2, :cond_7

    .line 18401
    invoke-virtual {p1, p6}, Landroid/util/ArrayMap;->valueAt(I)Ljava/lang/Object;

    move-result-object v1

    check-cast v1, Ljava/util/ArrayList;

    .line 18402
    nop

    .line 18403
    const-string v2, "  * "

    invoke-virtual {p2, v2}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    invoke-virtual {p1, p6}, Landroid/util/ArrayMap;->keyAt(I)Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Ljava/lang/String;

    invoke-virtual {p2, v2}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 18404
    const-string v2, ": "

    invoke-virtual {p2, v2}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    invoke-virtual {v1}, Ljava/util/ArrayList;->size()I

    move-result v2

    invoke-virtual {p2, v2}, Ljava/io/PrintWriter;->print(I)V

    const-string v2, " items"

    invoke-virtual {p2, v2}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 18405
    move v2, p3

    :goto_3
    invoke-virtual {v1}, Ljava/util/ArrayList;->size()I

    move-result v3

    if-ge v2, v3, :cond_6

    .line 18406
    const-string v3, "    #"

    invoke-virtual {p2, v3}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    invoke-virtual {p2, v2}, Ljava/io/PrintWriter;->print(I)V

    const-string v3, ": "

    invoke-virtual {p2, v3}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    invoke-virtual {v1, v2}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v3

    invoke-virtual {p2, v3}, Ljava/io/PrintWriter;->println(Ljava/lang/Object;)V

    .line 18407
    if-eqz p5, :cond_5

    .line 18408
    invoke-virtual {v1, v2}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v3

    check-cast v3, Lcom/android/server/am/PendingIntentRecord;

    const-string v4, "      "

    invoke-virtual {v3, p2, v4}, Lcom/android/server/am/PendingIntentRecord;->dump(Ljava/io/PrintWriter;Ljava/lang/String;)V

    .line 18405
    :cond_5
    add-int/lit8 v2, v2, 0x1

    goto :goto_3

    .line 18400
    :cond_6
    add-int/lit8 p6, p6, 0x1

    move v1, p4

    goto :goto_2

    .line 18412
    :cond_7
    invoke-virtual {v0}, Ljava/util/ArrayList;->size()I

    move-result p1

    if-lez p1, :cond_9

    .line 18413
    nop

    .line 18414
    const-string p1, "  * WEAK REFS:"

    invoke-virtual {p2, p1}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 18415
    :goto_4
    invoke-virtual {v0}, Ljava/util/ArrayList;->size()I

    move-result p1

    if-ge p3, p1, :cond_8

    .line 18416
    const-string p1, "    #"

    invoke-virtual {p2, p1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    invoke-virtual {p2, p3}, Ljava/io/PrintWriter;->print(I)V

    const-string p1, ": "

    invoke-virtual {p2, p1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    invoke-virtual {v0, p3}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object p1

    invoke-virtual {p2, p1}, Ljava/io/PrintWriter;->println(Ljava/lang/Object;)V

    .line 18415
    add-int/lit8 p3, p3, 0x1

    goto :goto_4

    .line 18421
    :cond_8
    move p3, p4

    goto :goto_5

    :cond_9
    move p3, v1

    :cond_a
    :goto_5
    if-nez p3, :cond_b

    .line 18422
    const-string p1, "  (nothing)"

    invoke-virtual {p2, p1}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 18424
    :cond_b
    return-void
.end method

.method dumpPermissionsLocked(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;[Ljava/lang/String;IZLjava/lang/String;)V
    .locals 5
    .annotation build Lcom/android/internal/annotations/GuardedBy;
        value = "this"
    .end annotation

    .line 18327
    nop

    .line 18328
    nop

    .line 18330
    const-string p1, "ACTIVITY MANAGER URI PERMISSIONS (dumpsys activity permissions)"

    invoke-virtual {p2, p1}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 18332
    iget-object p1, p0, Lcom/android/server/am/ActivityManagerService;->mGrantedUriPermissions:Landroid/util/SparseArray;

    invoke-virtual {p1}, Landroid/util/SparseArray;->size()I

    move-result p1

    const/4 p3, 0x0

    if-lez p1, :cond_7

    .line 18333
    nop

    .line 18334
    const/4 p1, -0x2

    .line 18335
    const/4 p4, -0x1

    if-eqz p6, :cond_0

    .line 18337
    :try_start_0
    iget-object p1, p0, Lcom/android/server/am/ActivityManagerService;->mContext:Landroid/content/Context;

    invoke-virtual {p1}, Landroid/content/Context;->getPackageManager()Landroid/content/pm/PackageManager;

    move-result-object p1

    const/high16 v0, 0x400000

    invoke-virtual {p1, p6, v0, p3}, Landroid/content/pm/PackageManager;->getPackageUidAsUser(Ljava/lang/String;II)I

    move-result p1
    :try_end_0
    .catch Landroid/content/pm/PackageManager$NameNotFoundException; {:try_start_0 .. :try_end_0} :catch_0

    .line 18341
    goto :goto_0

    .line 18339
    :catch_0
    move-exception p1

    .line 18340
    nop

    .line 18343
    move p1, p4

    :cond_0
    :goto_0
    move p6, p3

    move v0, p6

    move v1, v0

    :goto_1
    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mGrantedUriPermissions:Landroid/util/SparseArray;

    invoke-virtual {v2}, Landroid/util/SparseArray;->size()I

    move-result v2

    if-ge p3, v2, :cond_6

    .line 18344
    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mGrantedUriPermissions:Landroid/util/SparseArray;

    invoke-virtual {v2, p3}, Landroid/util/SparseArray;->keyAt(I)I

    move-result v2

    .line 18345
    if-lt p1, p4, :cond_1

    invoke-static {v2}, Landroid/os/UserHandle;->getAppId(I)I

    move-result v3

    if-eq v3, p1, :cond_1

    .line 18346
    goto :goto_3

    .line 18348
    :cond_1
    iget-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mGrantedUriPermissions:Landroid/util/SparseArray;

    invoke-virtual {v3, p3}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;

    move-result-object v3

    check-cast v3, Landroid/util/ArrayMap;

    .line 18349
    const/4 v4, 0x1

    if-nez v0, :cond_3

    .line 18350
    if-eqz v1, :cond_2

    invoke-virtual {p2}, Ljava/io/PrintWriter;->println()V

    .line 18351
    :cond_2
    nop

    .line 18352
    const-string p6, "  Granted Uri Permissions:"

    invoke-virtual {p2, p6}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 18353
    nop

    .line 18354
    nop

    .line 18356
    move p6, v4

    move v0, p6

    move v1, v0

    :cond_3
    const-string v4, "  * UID "

    invoke-virtual {p2, v4}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    invoke-virtual {p2, v2}, Ljava/io/PrintWriter;->print(I)V

    const-string v2, " holds:"

    invoke-virtual {p2, v2}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 18357
    invoke-virtual {v3}, Landroid/util/ArrayMap;->values()Ljava/util/Collection;

    move-result-object v2

    invoke-interface {v2}, Ljava/util/Collection;->iterator()Ljava/util/Iterator;

    move-result-object v2

    :goto_2
    invoke-interface {v2}, Ljava/util/Iterator;->hasNext()Z

    move-result v3

    if-eqz v3, :cond_5

    invoke-interface {v2}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v3

    check-cast v3, Lcom/android/server/am/UriPermission;

    .line 18358
    const-string v4, "    "

    invoke-virtual {p2, v4}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    invoke-virtual {p2, v3}, Ljava/io/PrintWriter;->println(Ljava/lang/Object;)V

    .line 18359
    if-eqz p5, :cond_4

    .line 18360
    const-string v4, "      "

    invoke-virtual {v3, p2, v4}, Lcom/android/server/am/UriPermission;->dump(Ljava/io/PrintWriter;Ljava/lang/String;)V

    .line 18362
    :cond_4
    goto :goto_2

    .line 18343
    :cond_5
    :goto_3
    add-int/lit8 p3, p3, 0x1

    goto :goto_1

    .line 18366
    :cond_6
    move p3, p6

    :cond_7
    if-nez p3, :cond_8

    .line 18367
    const-string p1, "  (nothing)"

    invoke-virtual {p2, p1}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 18369
    :cond_8
    return-void
.end method

.method dumpProcessesLocked(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;[Ljava/lang/String;IZLjava/lang/String;I)V
    .locals 17
    .annotation build Lcom/android/internal/annotations/GuardedBy;
        value = "this"
    .end annotation

    move-object/from16 v0, p0

    move-object/from16 v9, p2

    move/from16 v10, p5

    move-object/from16 v11, p6

    .line 17018
    nop

    .line 17019
    nop

    .line 17021
    const-string v1, "ACTIVITY MANAGER RUNNING PROCESSES (dumpsys activity processes)"

    invoke-virtual {v9, v1}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 17023
    const/4 v13, 0x1

    if-eqz v10, :cond_6

    .line 17024
    iget-object v1, v0, Lcom/android/server/am/ActivityManagerService;->mProcessNames:Lcom/android/internal/app/ProcessMap;

    invoke-virtual {v1}, Lcom/android/internal/app/ProcessMap;->getMap()Landroid/util/ArrayMap;

    move-result-object v1

    invoke-virtual {v1}, Landroid/util/ArrayMap;->size()I

    move-result v1

    .line 17025
    const/4 v2, 0x0

    const/4 v3, 0x0

    const/4 v4, 0x0

    :goto_0
    if-ge v2, v1, :cond_5

    .line 17026
    iget-object v5, v0, Lcom/android/server/am/ActivityManagerService;->mProcessNames:Lcom/android/internal/app/ProcessMap;

    invoke-virtual {v5}, Lcom/android/internal/app/ProcessMap;->getMap()Landroid/util/ArrayMap;

    move-result-object v5

    invoke-virtual {v5, v2}, Landroid/util/ArrayMap;->valueAt(I)Ljava/lang/Object;

    move-result-object v5

    check-cast v5, Landroid/util/SparseArray;

    .line 17027
    invoke-virtual {v5}, Landroid/util/SparseArray;->size()I

    move-result v6

    .line 17028
    move v7, v4

    move v4, v3

    const/4 v3, 0x0

    :goto_1
    if-ge v3, v6, :cond_4

    .line 17029
    invoke-virtual {v5, v3}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;

    move-result-object v8

    check-cast v8, Lcom/android/server/am/ProcessRecord;

    .line 17030
    if-eqz v11, :cond_0

    iget-object v14, v8, Lcom/android/server/am/ProcessRecord;->pkgList:Landroid/util/ArrayMap;

    invoke-virtual {v14, v11}, Landroid/util/ArrayMap;->containsKey(Ljava/lang/Object;)Z

    move-result v14

    if-nez v14, :cond_0

    .line 17031
    goto :goto_3

    .line 17033
    :cond_0
    if-nez v4, :cond_1

    .line 17034
    const-string v4, "  All known processes:"

    invoke-virtual {v9, v4}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 17035
    nop

    .line 17037
    move v4, v13

    :cond_1
    iget-boolean v14, v8, Lcom/android/server/am/ProcessRecord;->persistent:Z

    if-eqz v14, :cond_2

    const-string v14, "  *PERS*"

    goto :goto_2

    :cond_2
    const-string v14, "  *APP*"

    :goto_2
    invoke-virtual {v9, v14}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 17038
    const-string v14, " UID "

    invoke-virtual {v9, v14}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    invoke-virtual {v5, v3}, Landroid/util/SparseArray;->keyAt(I)I

    move-result v14

    invoke-virtual {v9, v14}, Ljava/io/PrintWriter;->print(I)V

    .line 17039
    const-string v14, " "

    invoke-virtual {v9, v14}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    invoke-virtual {v9, v8}, Ljava/io/PrintWriter;->println(Ljava/lang/Object;)V

    .line 17040
    const-string v14, "    "

    invoke-virtual {v8, v9, v14}, Lcom/android/server/am/ProcessRecord;->dump(Ljava/io/PrintWriter;Ljava/lang/String;)V

    .line 17041
    iget-boolean v8, v8, Lcom/android/server/am/ProcessRecord;->persistent:Z

    if-eqz v8, :cond_3

    .line 17042
    add-int/lit8 v7, v7, 0x1

    .line 17028
    :cond_3
    :goto_3
    add-int/lit8 v3, v3, 0x1

    goto :goto_1

    .line 17025
    :cond_4
    add-int/lit8 v2, v2, 0x1

    move v3, v4

    move v4, v7

    goto :goto_0

    .line 17048
    :cond_5
    move v14, v4

    goto :goto_4

    :cond_6
    const/4 v3, 0x0

    const/4 v14, 0x0

    :goto_4
    iget-object v1, v0, Lcom/android/server/am/ActivityManagerService;->mIsolatedProcesses:Landroid/util/SparseArray;

    invoke-virtual {v1}, Landroid/util/SparseArray;->size()I

    move-result v1

    if-lez v1, :cond_a

    .line 17049
    nop

    .line 17050
    const/4 v1, 0x0

    const/4 v2, 0x0

    :goto_5
    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mIsolatedProcesses:Landroid/util/SparseArray;

    invoke-virtual {v4}, Landroid/util/SparseArray;->size()I

    move-result v4

    if-ge v1, v4, :cond_a

    .line 17051
    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mIsolatedProcesses:Landroid/util/SparseArray;

    invoke-virtual {v4, v1}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;

    move-result-object v4

    check-cast v4, Lcom/android/server/am/ProcessRecord;

    .line 17052
    if-eqz v11, :cond_7

    iget-object v5, v4, Lcom/android/server/am/ProcessRecord;->pkgList:Landroid/util/ArrayMap;

    invoke-virtual {v5, v11}, Landroid/util/ArrayMap;->containsKey(Ljava/lang/Object;)Z

    move-result v5

    if-nez v5, :cond_7

    .line 17053
    goto :goto_6

    .line 17055
    :cond_7
    if-nez v2, :cond_9

    .line 17056
    if-eqz v3, :cond_8

    .line 17057
    invoke-virtual/range {p2 .. p2}, Ljava/io/PrintWriter;->println()V

    .line 17059
    :cond_8
    const-string v2, "  Isolated process list (sorted by uid):"

    invoke-virtual {v9, v2}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 17060
    nop

    .line 17061
    nop

    .line 17063
    move v2, v13

    move v3, v2

    :cond_9
    const-string v5, "    Isolated #"

    invoke-virtual {v9, v5}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    invoke-virtual {v9, v1}, Ljava/io/PrintWriter;->print(I)V

    const-string v5, ": "

    invoke-virtual {v9, v5}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 17064
    invoke-virtual {v9, v4}, Ljava/io/PrintWriter;->println(Ljava/lang/Object;)V

    .line 17050
    :goto_6
    add-int/lit8 v1, v1, 0x1

    goto :goto_5

    .line 17068
    :cond_a
    iget-object v1, v0, Lcom/android/server/am/ActivityManagerService;->mActiveInstrumentation:Ljava/util/ArrayList;

    invoke-virtual {v1}, Ljava/util/ArrayList;->size()I

    move-result v1

    if-lez v1, :cond_e

    .line 17069
    nop

    .line 17070
    const/4 v1, 0x0

    const/4 v2, 0x0

    :goto_7
    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mActiveInstrumentation:Ljava/util/ArrayList;

    invoke-virtual {v4}, Ljava/util/ArrayList;->size()I

    move-result v4

    if-ge v1, v4, :cond_e

    .line 17071
    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mActiveInstrumentation:Ljava/util/ArrayList;

    invoke-virtual {v4, v1}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v4

    check-cast v4, Lcom/android/server/am/ActiveInstrumentation;

    .line 17072
    if-eqz v11, :cond_b

    iget-object v5, v4, Lcom/android/server/am/ActiveInstrumentation;->mClass:Landroid/content/ComponentName;

    invoke-virtual {v5}, Landroid/content/ComponentName;->getPackageName()Ljava/lang/String;

    move-result-object v5

    invoke-virtual {v5, v11}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v5

    if-nez v5, :cond_b

    iget-object v5, v4, Lcom/android/server/am/ActiveInstrumentation;->mTargetInfo:Landroid/content/pm/ApplicationInfo;

    iget-object v5, v5, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;

    .line 17073
    invoke-virtual {v5, v11}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v5

    if-nez v5, :cond_b

    .line 17074
    goto :goto_8

    .line 17076
    :cond_b
    if-nez v2, :cond_d

    .line 17077
    if-eqz v3, :cond_c

    .line 17078
    invoke-virtual/range {p2 .. p2}, Ljava/io/PrintWriter;->println()V

    .line 17080
    :cond_c
    const-string v2, "  Active instrumentation:"

    invoke-virtual {v9, v2}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 17081
    nop

    .line 17082
    nop

    .line 17084
    move v2, v13

    move v3, v2

    :cond_d
    const-string v5, "    Instrumentation #"

    invoke-virtual {v9, v5}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    invoke-virtual {v9, v1}, Ljava/io/PrintWriter;->print(I)V

    const-string v5, ": "

    invoke-virtual {v9, v5}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 17085
    invoke-virtual {v9, v4}, Ljava/io/PrintWriter;->println(Ljava/lang/Object;)V

    .line 17086
    const-string v5, "      "

    invoke-virtual {v4, v9, v5}, Lcom/android/server/am/ActiveInstrumentation;->dump(Ljava/io/PrintWriter;Ljava/lang/String;)V

    .line 17070
    :goto_8
    add-int/lit8 v1, v1, 0x1

    goto :goto_7

    .line 17090
    :cond_e
    move v8, v3

    iget-object v1, v0, Lcom/android/server/am/ActivityManagerService;->mActiveUids:Landroid/util/SparseArray;

    invoke-virtual {v1}, Landroid/util/SparseArray;->size()I

    move-result v1

    if-lez v1, :cond_f

    .line 17091
    iget-object v5, v0, Lcom/android/server/am/ActivityManagerService;->mActiveUids:Landroid/util/SparseArray;

    const-string v6, "UID states:"

    move-object v1, v0

    move-object v2, v9

    move-object v3, v11

    move/from16 v4, p7

    move v7, v8

    invoke-virtual/range {v1 .. v7}, Lcom/android/server/am/ActivityManagerService;->dumpUids(Ljava/io/PrintWriter;Ljava/lang/String;ILandroid/util/SparseArray;Ljava/lang/String;Z)Z

    move-result v1

    if-eqz v1, :cond_f

    .line 17092
    nop

    .line 17095
    move v8, v13

    :cond_f
    if-eqz v10, :cond_10

    .line 17096
    iget-object v1, v0, Lcom/android/server/am/ActivityManagerService;->mValidateUids:Landroid/util/SparseArray;

    invoke-virtual {v1}, Landroid/util/SparseArray;->size()I

    move-result v1

    if-lez v1, :cond_10

    .line 17097
    iget-object v5, v0, Lcom/android/server/am/ActivityManagerService;->mValidateUids:Landroid/util/SparseArray;

    const-string v6, "UID validation:"

    move-object v1, v0

    move-object v2, v9

    move-object v3, v11

    move/from16 v4, p7

    move v7, v8

    invoke-virtual/range {v1 .. v7}, Lcom/android/server/am/ActivityManagerService;->dumpUids(Ljava/io/PrintWriter;Ljava/lang/String;ILandroid/util/SparseArray;Ljava/lang/String;Z)Z

    move-result v1

    if-eqz v1, :cond_10

    .line 17099
    nop

    .line 17104
    move v8, v13

    :cond_10
    iget-object v1, v0, Lcom/android/server/am/ActivityManagerService;->mLruProcesses:Ljava/util/ArrayList;

    invoke-virtual {v1}, Ljava/util/ArrayList;->size()I

    move-result v1

    if-lez v1, :cond_12

    .line 17105
    if-eqz v8, :cond_11

    .line 17106
    invoke-virtual/range {p2 .. p2}, Ljava/io/PrintWriter;->println()V

    .line 17108
    :cond_11
    const-string v1, "  Process LRU list (sorted by oom_adj, "

    invoke-virtual {v9, v1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    iget-object v1, v0, Lcom/android/server/am/ActivityManagerService;->mLruProcesses:Ljava/util/ArrayList;

    invoke-virtual {v1}, Ljava/util/ArrayList;->size()I

    move-result v1

    invoke-virtual {v9, v1}, Ljava/io/PrintWriter;->print(I)V

    .line 17109
    const-string v1, " total, non-act at "

    invoke-virtual {v9, v1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 17110
    iget-object v1, v0, Lcom/android/server/am/ActivityManagerService;->mLruProcesses:Ljava/util/ArrayList;

    invoke-virtual {v1}, Ljava/util/ArrayList;->size()I

    move-result v1

    iget v2, v0, Lcom/android/server/am/ActivityManagerService;->mLruProcessActivityStart:I

    sub-int/2addr v1, v2

    invoke-virtual {v9, v1}, Ljava/io/PrintWriter;->print(I)V

    .line 17111
    const-string v1, ", non-svc at "

    invoke-virtual {v9, v1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 17112
    iget-object v1, v0, Lcom/android/server/am/ActivityManagerService;->mLruProcesses:Ljava/util/ArrayList;

    invoke-virtual {v1}, Ljava/util/ArrayList;->size()I

    move-result v1

    iget v2, v0, Lcom/android/server/am/ActivityManagerService;->mLruProcessServiceStart:I

    sub-int/2addr v1, v2

    invoke-virtual {v9, v1}, Ljava/io/PrintWriter;->print(I)V

    .line 17113
    const-string v1, "):"

    invoke-virtual {v9, v1}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 17114
    iget-object v3, v0, Lcom/android/server/am/ActivityManagerService;->mLruProcesses:Ljava/util/ArrayList;

    const-string v4, "    "

    const-string v5, "Proc"

    const-string v6, "PERS"

    const/4 v7, 0x0

    move-object v1, v9

    move-object v2, v0

    move-object v8, v11

    invoke-static/range {v1 .. v8}, Lcom/android/server/am/ActivityManagerService;->dumpProcessOomList(Ljava/io/PrintWriter;Lcom/android/server/am/ActivityManagerService;Ljava/util/List;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)Z

    .line 17115
    nop

    .line 17118
    move v8, v13

    :cond_12
    if-nez v10, :cond_13

    if-eqz v11, :cond_18

    .line 17119
    :cond_13
    iget-object v1, v0, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Landroid/util/SparseArray;

    monitor-enter v1

    .line 17120
    nop

    .line 17121
    const/4 v2, 0x0

    const/4 v3, 0x0

    :goto_9
    :try_start_0
    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Landroid/util/SparseArray;

    invoke-virtual {v4}, Landroid/util/SparseArray;->size()I

    move-result v4

    if-ge v2, v4, :cond_17

    .line 17122
    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Landroid/util/SparseArray;

    invoke-virtual {v4, v2}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;

    move-result-object v4

    check-cast v4, Lcom/android/server/am/ProcessRecord;

    .line 17123
    if-eqz v11, :cond_14

    iget-object v4, v4, Lcom/android/server/am/ProcessRecord;->pkgList:Landroid/util/ArrayMap;

    invoke-virtual {v4, v11}, Landroid/util/ArrayMap;->containsKey(Ljava/lang/Object;)Z

    move-result v4

    if-nez v4, :cond_14

    .line 17124
    goto :goto_a

    .line 17126
    :cond_14
    if-nez v3, :cond_16

    .line 17127
    if-eqz v8, :cond_15

    invoke-virtual/range {p2 .. p2}, Ljava/io/PrintWriter;->println()V

    .line 17128
    :cond_15
    nop

    .line 17129
    const-string v3, "  PID mappings:"

    invoke-virtual {v9, v3}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 17130
    nop

    .line 17132
    move v3, v13

    move v8, v3

    :cond_16
    const-string v4, "    PID #"

    invoke-virtual {v9, v4}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Landroid/util/SparseArray;

    invoke-virtual {v4, v2}, Landroid/util/SparseArray;->keyAt(I)I

    move-result v4

    invoke-virtual {v9, v4}, Ljava/io/PrintWriter;->print(I)V

    .line 17133
    const-string v4, ": "

    invoke-virtual {v9, v4}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Landroid/util/SparseArray;

    invoke-virtual {v4, v2}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;

    move-result-object v4

    invoke-virtual {v9, v4}, Ljava/io/PrintWriter;->println(Ljava/lang/Object;)V

    .line 17121
    :goto_a
    add-int/lit8 v2, v2, 0x1

    goto :goto_9

    .line 17135
    :cond_17
    monitor-exit v1
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_1

    .line 17138
    :cond_18
    iget-object v1, v0, Lcom/android/server/am/ActivityManagerService;->mImportantProcesses:Landroid/util/SparseArray;

    invoke-virtual {v1}, Landroid/util/SparseArray;->size()I

    move-result v1

    if-lez v1, :cond_1e

    .line 17139
    iget-object v1, v0, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Landroid/util/SparseArray;

    monitor-enter v1

    .line 17140
    nop

    .line 17141
    const/4 v2, 0x0

    const/4 v3, 0x0

    :goto_b
    :try_start_1
    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mImportantProcesses:Landroid/util/SparseArray;

    invoke-virtual {v4}, Landroid/util/SparseArray;->size()I

    move-result v4

    if-ge v2, v4, :cond_1d

    .line 17142
    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Landroid/util/SparseArray;

    iget-object v5, v0, Lcom/android/server/am/ActivityManagerService;->mImportantProcesses:Landroid/util/SparseArray;

    .line 17143
    invoke-virtual {v5, v2}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;

    move-result-object v5

    check-cast v5, Lcom/android/server/am/ActivityManagerService$ImportanceToken;

    iget v5, v5, Lcom/android/server/am/ActivityManagerService$ImportanceToken;->pid:I

    .line 17142
    invoke-virtual {v4, v5}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    move-result-object v4

    check-cast v4, Lcom/android/server/am/ProcessRecord;

    .line 17144
    if-eqz v11, :cond_19

    if-eqz v4, :cond_1c

    iget-object v4, v4, Lcom/android/server/am/ProcessRecord;->pkgList:Landroid/util/ArrayMap;

    .line 17145
    invoke-virtual {v4, v11}, Landroid/util/ArrayMap;->containsKey(Ljava/lang/Object;)Z

    move-result v4

    if-nez v4, :cond_19

    .line 17146
    goto :goto_c

    .line 17148
    :cond_19
    if-nez v3, :cond_1b

    .line 17149
    if-eqz v8, :cond_1a

    invoke-virtual/range {p2 .. p2}, Ljava/io/PrintWriter;->println()V

    .line 17150
    :cond_1a
    nop

    .line 17151
    const-string v3, "  Foreground Processes:"

    invoke-virtual {v9, v3}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 17152
    nop

    .line 17154
    move v3, v13

    move v8, v3

    :cond_1b
    const-string v4, "    PID #"

    invoke-virtual {v9, v4}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mImportantProcesses:Landroid/util/SparseArray;

    invoke-virtual {v4, v2}, Landroid/util/SparseArray;->keyAt(I)I

    move-result v4

    invoke-virtual {v9, v4}, Ljava/io/PrintWriter;->print(I)V

    .line 17155
    const-string v4, ": "

    invoke-virtual {v9, v4}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mImportantProcesses:Landroid/util/SparseArray;

    invoke-virtual {v4, v2}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;

    move-result-object v4

    invoke-virtual {v9, v4}, Ljava/io/PrintWriter;->println(Ljava/lang/Object;)V

    .line 17141
    :cond_1c
    :goto_c
    add-int/lit8 v2, v2, 0x1

    goto :goto_b

    .line 17157
    :cond_1d
    monitor-exit v1

    goto :goto_d

    :catchall_0
    move-exception v0

    monitor-exit v1
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    throw v0

    .line 17160
    :cond_1e
    :goto_d
    iget-object v1, v0, Lcom/android/server/am/ActivityManagerService;->mPersistentStartingProcesses:Ljava/util/ArrayList;

    invoke-virtual {v1}, Ljava/util/ArrayList;->size()I

    move-result v1

    if-lez v1, :cond_20

    .line 17161
    if-eqz v8, :cond_1f

    invoke-virtual/range {p2 .. p2}, Ljava/io/PrintWriter;->println()V

    .line 17162
    :cond_1f
    nop

    .line 17163
    const-string v1, "  Persisent processes that are starting:"

    invoke-virtual {v9, v1}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 17164
    iget-object v3, v0, Lcom/android/server/am/ActivityManagerService;->mPersistentStartingProcesses:Ljava/util/ArrayList;

    const-string v4, "    "

    const-string v5, "Starting Norm"

    const-string v6, "Restarting PERS"

    move-object v1, v9

    move-object v2, v0

    move-object v7, v11

    invoke-static/range {v1 .. v7}, Lcom/android/server/am/ActivityManagerService;->dumpProcessList(Ljava/io/PrintWriter;Lcom/android/server/am/ActivityManagerService;Ljava/util/List;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)I

    .line 17168
    move v8, v13

    :cond_20
    iget-object v1, v0, Lcom/android/server/am/ActivityManagerService;->mRemovedProcesses:Ljava/util/ArrayList;

    invoke-virtual {v1}, Ljava/util/ArrayList;->size()I

    move-result v1

    if-lez v1, :cond_22

    .line 17169
    if-eqz v8, :cond_21

    invoke-virtual/range {p2 .. p2}, Ljava/io/PrintWriter;->println()V

    .line 17170
    :cond_21
    nop

    .line 17171
    const-string v1, "  Processes that are being removed:"

    invoke-virtual {v9, v1}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 17172
    iget-object v3, v0, Lcom/android/server/am/ActivityManagerService;->mRemovedProcesses:Ljava/util/ArrayList;

    const-string v4, "    "

    const-string v5, "Removed Norm"

    const-string v6, "Removed PERS"

    move-object v1, v9

    move-object v2, v0

    move-object v7, v11

    invoke-static/range {v1 .. v7}, Lcom/android/server/am/ActivityManagerService;->dumpProcessList(Ljava/io/PrintWriter;Lcom/android/server/am/ActivityManagerService;Ljava/util/List;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)I

    .line 17176
    move v8, v13

    :cond_22
    iget-object v1, v0, Lcom/android/server/am/ActivityManagerService;->mProcessesOnHold:Ljava/util/ArrayList;

    invoke-virtual {v1}, Ljava/util/ArrayList;->size()I

    move-result v1

    if-lez v1, :cond_24

    .line 17177
    if-eqz v8, :cond_23

    invoke-virtual/range {p2 .. p2}, Ljava/io/PrintWriter;->println()V

    .line 17178
    :cond_23
    nop

    .line 17179
    const-string v1, "  Processes that are on old until the system is ready:"

    invoke-virtual {v9, v1}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 17180
    iget-object v3, v0, Lcom/android/server/am/ActivityManagerService;->mProcessesOnHold:Ljava/util/ArrayList;

    const-string v4, "    "

    const-string v5, "OnHold Norm"

    const-string v6, "OnHold PERS"

    move-object v1, v9

    move-object v2, v0

    move-object v7, v11

    invoke-static/range {v1 .. v7}, Lcom/android/server/am/ActivityManagerService;->dumpProcessList(Ljava/io/PrintWriter;Lcom/android/server/am/ActivityManagerService;Ljava/util/List;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)I

    .line 17184
    move v8, v13

    :cond_24
    invoke-virtual {v0, v9, v8, v11}, Lcom/android/server/am/ActivityManagerService;->dumpProcessesToGc(Ljava/io/PrintWriter;ZLjava/lang/String;)Z

    move-result v1

    .line 17186
    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mAppErrors:Lcom/android/server/am/AppErrors;

    move-object/from16 v3, p1

    invoke-virtual {v2, v3, v9, v1, v11}, Lcom/android/server/am/AppErrors;->dumpLocked(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;ZLjava/lang/String;)Z

    move-result v1

    .line 17188
    if-nez v11, :cond_25

    .line 17189
    invoke-virtual/range {p2 .. p2}, Ljava/io/PrintWriter;->println()V

    .line 17190
    nop

    .line 17191
    iget-object v1, v0, Lcom/android/server/am/ActivityManagerService;->mUserController:Lcom/android/server/am/UserController;

    invoke-virtual {v1, v9, v10}, Lcom/android/server/am/UserController;->dump(Ljava/io/PrintWriter;Z)V

    .line 17193
    const/4 v1, 0x0

    :cond_25
    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mHomeProcess:Lcom/android/server/am/ProcessRecord;

    if-eqz v2, :cond_28

    if-eqz v11, :cond_26

    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mHomeProcess:Lcom/android/server/am/ProcessRecord;

    iget-object v2, v2, Lcom/android/server/am/ProcessRecord;->pkgList:Landroid/util/ArrayMap;

    .line 17194
    invoke-virtual {v2, v11}, Landroid/util/ArrayMap;->containsKey(Ljava/lang/Object;)Z

    move-result v2

    if-eqz v2, :cond_28

    .line 17195
    :cond_26
    if-eqz v1, :cond_27

    .line 17196
    invoke-virtual/range {p2 .. p2}, Ljava/io/PrintWriter;->println()V

    .line 17197
    nop

    .line 17199
    const/4 v1, 0x0

    :cond_27
    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    const-string v3, "  mHomeProcess: "

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget-object v3, v0, Lcom/android/server/am/ActivityManagerService;->mHomeProcess:Lcom/android/server/am/ProcessRecord;

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v2

    invoke-virtual {v9, v2}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 17201
    :cond_28
    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mPreviousProcess:Lcom/android/server/am/ProcessRecord;

    if-eqz v2, :cond_2b

    if-eqz v11, :cond_29

    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mPreviousProcess:Lcom/android/server/am/ProcessRecord;

    iget-object v2, v2, Lcom/android/server/am/ProcessRecord;->pkgList:Landroid/util/ArrayMap;

    .line 17202
    invoke-virtual {v2, v11}, Landroid/util/ArrayMap;->containsKey(Ljava/lang/Object;)Z

    move-result v2

    if-eqz v2, :cond_2b

    .line 17203
    :cond_29
    if-eqz v1, :cond_2a

    .line 17204
    invoke-virtual/range {p2 .. p2}, Ljava/io/PrintWriter;->println()V

    .line 17205
    nop

    .line 17207
    const/4 v1, 0x0

    :cond_2a
    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    const-string v3, "  mPreviousProcess: "

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget-object v3, v0, Lcom/android/server/am/ActivityManagerService;->mPreviousProcess:Lcom/android/server/am/ProcessRecord;

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v2

    invoke-virtual {v9, v2}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 17209
    :cond_2b
    if-eqz v10, :cond_2d

    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mPreviousProcess:Lcom/android/server/am/ProcessRecord;

    if-eqz v2, :cond_2c

    if-eqz v11, :cond_2c

    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mPreviousProcess:Lcom/android/server/am/ProcessRecord;

    iget-object v2, v2, Lcom/android/server/am/ProcessRecord;->pkgList:Landroid/util/ArrayMap;

    .line 17210
    invoke-virtual {v2, v11}, Landroid/util/ArrayMap;->containsKey(Ljava/lang/Object;)Z

    move-result v2

    if-eqz v2, :cond_2d

    .line 17211
    :cond_2c
    new-instance v2, Ljava/lang/StringBuilder;

    const/16 v3, 0x80

    invoke-direct {v2, v3}, Ljava/lang/StringBuilder;-><init>(I)V

    .line 17212
    const-string v3, "  mPreviousProcessVisibleTime: "

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 17213
    iget-wide v3, v0, Lcom/android/server/am/ActivityManagerService;->mPreviousProcessVisibleTime:J

    invoke-static {v3, v4, v2}, Landroid/util/TimeUtils;->formatDuration(JLjava/lang/StringBuilder;)V

    .line 17214
    invoke-virtual {v9, v2}, Ljava/io/PrintWriter;->println(Ljava/lang/Object;)V

    .line 17216
    :cond_2d
    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mHeavyWeightProcess:Lcom/android/server/am/ProcessRecord;

    if-eqz v2, :cond_30

    if-eqz v11, :cond_2e

    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mHeavyWeightProcess:Lcom/android/server/am/ProcessRecord;

    iget-object v2, v2, Lcom/android/server/am/ProcessRecord;->pkgList:Landroid/util/ArrayMap;

    .line 17217
    invoke-virtual {v2, v11}, Landroid/util/ArrayMap;->containsKey(Ljava/lang/Object;)Z

    move-result v2

    if-eqz v2, :cond_30

    .line 17218
    :cond_2e
    if-eqz v1, :cond_2f

    .line 17219
    invoke-virtual/range {p2 .. p2}, Ljava/io/PrintWriter;->println()V

    .line 17220
    nop

    .line 17222
    const/4 v1, 0x0

    :cond_2f
    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    const-string v3, "  mHeavyWeightProcess: "

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget-object v3, v0, Lcom/android/server/am/ActivityManagerService;->mHeavyWeightProcess:Lcom/android/server/am/ProcessRecord;

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v2

    invoke-virtual {v9, v2}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 17224
    :cond_30
    if-eqz v10, :cond_33

    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mPendingStarts:Landroid/util/LongSparseArray;

    invoke-virtual {v2}, Landroid/util/LongSparseArray;->size()I

    move-result v2

    if-lez v2, :cond_33

    .line 17225
    if-eqz v1, :cond_31

    invoke-virtual/range {p2 .. p2}, Ljava/io/PrintWriter;->println()V

    .line 17226
    :cond_31
    nop

    .line 17227
    const-string v1, "  mPendingStarts: "

    invoke-virtual {v9, v1}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 17228
    iget-object v1, v0, Lcom/android/server/am/ActivityManagerService;->mPendingStarts:Landroid/util/LongSparseArray;

    invoke-virtual {v1}, Landroid/util/LongSparseArray;->size()I

    move-result v1

    const/4 v2, 0x0

    :goto_e
    if-ge v2, v1, :cond_32

    .line 17229
    new-instance v3, Ljava/lang/StringBuilder;

    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V

    const-string v4, "    "

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mPendingStarts:Landroid/util/LongSparseArray;

    invoke-virtual {v4, v2}, Landroid/util/LongSparseArray;->keyAt(I)J

    move-result-wide v4

    invoke-virtual {v3, v4, v5}, Ljava/lang/StringBuilder;->append(J)Ljava/lang/StringBuilder;

    const-string v4, ": "

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mPendingStarts:Landroid/util/LongSparseArray;

    invoke-virtual {v4, v2}, Landroid/util/LongSparseArray;->valueAt(I)Ljava/lang/Object;

    move-result-object v4

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v3

    invoke-virtual {v9, v3}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 17228
    add-int/lit8 v2, v2, 0x1

    goto :goto_e

    .line 17232
    :cond_32
    move v1, v13

    :cond_33
    if-nez v11, :cond_34

    .line 17233
    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    const-string v3, "  mGlobalConfiguration: "

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual/range {p0 .. p0}, Lcom/android/server/am/ActivityManagerService;->getGlobalConfiguration()Landroid/content/res/Configuration;

    move-result-object v3

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v2

    invoke-virtual {v9, v2}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 17234
    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mStackSupervisor:Lcom/android/server/am/ActivityStackSupervisor;

    const-string v3, "  "

    invoke-virtual {v2, v9, v3}, Lcom/android/server/am/ActivityStackSupervisor;->dumpDisplayConfigs(Ljava/io/PrintWriter;Ljava/lang/String;)V

    .line 17236
    :cond_34
    if-eqz v10, :cond_41

    .line 17237
    if-nez v11, :cond_35

    .line 17238
    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    const-string v3, "  mConfigWillChange: "

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual/range {p0 .. p0}, Lcom/android/server/am/ActivityManagerService;->getFocusedStack()Lcom/android/server/am/ActivityStack;

    move-result-object v3

    iget-boolean v3, v3, Lcom/android/server/am/ActivityStack;->mConfigWillChange:Z

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v2

    invoke-virtual {v9, v2}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 17240
    :cond_35
    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mCompatModePackages:Lcom/android/server/am/CompatModePackages;

    invoke-virtual {v2}, Lcom/android/server/am/CompatModePackages;->getPackages()Ljava/util/HashMap;

    move-result-object v2

    invoke-virtual {v2}, Ljava/util/HashMap;->size()I

    move-result v2

    if-lez v2, :cond_38

    .line 17241
    nop

    .line 17243
    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mCompatModePackages:Lcom/android/server/am/CompatModePackages;

    invoke-virtual {v2}, Lcom/android/server/am/CompatModePackages;->getPackages()Ljava/util/HashMap;

    move-result-object v2

    invoke-virtual {v2}, Ljava/util/HashMap;->entrySet()Ljava/util/Set;

    move-result-object v2

    invoke-interface {v2}, Ljava/util/Set;->iterator()Ljava/util/Iterator;

    move-result-object v2

    const/4 v3, 0x0

    :goto_f
    invoke-interface {v2}, Ljava/util/Iterator;->hasNext()Z

    move-result v4

    if-eqz v4, :cond_38

    invoke-interface {v2}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v4

    check-cast v4, Ljava/util/Map$Entry;

    .line 17244
    invoke-interface {v4}, Ljava/util/Map$Entry;->getKey()Ljava/lang/Object;

    move-result-object v5

    check-cast v5, Ljava/lang/String;

    .line 17245
    invoke-interface {v4}, Ljava/util/Map$Entry;->getValue()Ljava/lang/Object;

    move-result-object v4

    check-cast v4, Ljava/lang/Integer;

    invoke-virtual {v4}, Ljava/lang/Integer;->intValue()I

    move-result v4

    .line 17246
    if-eqz v11, :cond_36

    invoke-virtual {v11, v5}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v6

    if-nez v6, :cond_36

    .line 17247
    goto :goto_f

    .line 17249
    :cond_36
    if-nez v3, :cond_37

    .line 17250
    const-string v3, "  mScreenCompatPackages:"

    invoke-virtual {v9, v3}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 17251
    nop

    .line 17253
    move v3, v13

    :cond_37
    const-string v6, "    "

    invoke-virtual {v9, v6}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    invoke-virtual {v9, v5}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    const-string v5, ": "

    invoke-virtual {v9, v5}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 17254
    invoke-virtual {v9, v4}, Ljava/io/PrintWriter;->print(I)V

    invoke-virtual/range {p2 .. p2}, Ljava/io/PrintWriter;->println()V

    .line 17255
    goto :goto_f

    .line 17257
    :cond_38
    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mUidObservers:Landroid/os/RemoteCallbackList;

    invoke-virtual {v2}, Landroid/os/RemoteCallbackList;->getRegisteredCallbackCount()I

    move-result v2

    .line 17258
    nop

    .line 17259
    const/4 v3, 0x0

    const/4 v4, 0x0

    :goto_10
    if-ge v3, v2, :cond_40

    .line 17260
    iget-object v5, v0, Lcom/android/server/am/ActivityManagerService;->mUidObservers:Landroid/os/RemoteCallbackList;

    .line 17261
    invoke-virtual {v5, v3}, Landroid/os/RemoteCallbackList;->getRegisteredCallbackCookie(I)Ljava/lang/Object;

    move-result-object v5

    check-cast v5, Lcom/android/server/am/ActivityManagerService$UidObserverRegistration;

    .line 17262
    if-eqz v11, :cond_39

    iget-object v6, v5, Lcom/android/server/am/ActivityManagerService$UidObserverRegistration;->pkg:Ljava/lang/String;

    invoke-virtual {v11, v6}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v6

    if-eqz v6, :cond_3f

    .line 17263
    :cond_39
    if-nez v4, :cond_3a

    .line 17264
    const-string v4, "  mUidObservers:"

    invoke-virtual {v9, v4}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 17265
    nop

    .line 17267
    move v4, v13

    :cond_3a
    const-string v6, "    "

    invoke-virtual {v9, v6}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    iget v6, v5, Lcom/android/server/am/ActivityManagerService$UidObserverRegistration;->uid:I

    invoke-static {v9, v6}, Landroid/os/UserHandle;->formatUid(Ljava/io/PrintWriter;I)V

    .line 17268
    const-string v6, " "

    invoke-virtual {v9, v6}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    iget-object v6, v5, Lcom/android/server/am/ActivityManagerService$UidObserverRegistration;->pkg:Ljava/lang/String;

    invoke-virtual {v9, v6}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    const-string v6, ":"

    invoke-virtual {v9, v6}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 17269
    iget v6, v5, Lcom/android/server/am/ActivityManagerService$UidObserverRegistration;->which:I

    and-int/lit8 v6, v6, 0x4

    if-eqz v6, :cond_3b

    .line 17270
    const-string v6, " IDLE"

    invoke-virtual {v9, v6}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 17272
    :cond_3b
    iget v6, v5, Lcom/android/server/am/ActivityManagerService$UidObserverRegistration;->which:I

    and-int/lit8 v6, v6, 0x8

    if-eqz v6, :cond_3c

    .line 17273
    const-string v6, " ACT"

    invoke-virtual {v9, v6}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 17275
    :cond_3c
    iget v6, v5, Lcom/android/server/am/ActivityManagerService$UidObserverRegistration;->which:I

    and-int/lit8 v6, v6, 0x2

    if-eqz v6, :cond_3d

    .line 17276
    const-string v6, " GONE"

    invoke-virtual {v9, v6}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 17278
    :cond_3d
    iget v6, v5, Lcom/android/server/am/ActivityManagerService$UidObserverRegistration;->which:I

    and-int/2addr v6, v13

    if-eqz v6, :cond_3e

    .line 17279
    const-string v6, " STATE"

    invoke-virtual {v9, v6}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 17280
    const-string v6, " (cut="

    invoke-virtual {v9, v6}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    iget v6, v5, Lcom/android/server/am/ActivityManagerService$UidObserverRegistration;->cutpoint:I

    invoke-virtual {v9, v6}, Ljava/io/PrintWriter;->print(I)V

    .line 17281
    const-string v6, ")"

    invoke-virtual {v9, v6}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 17283
    :cond_3e
    invoke-virtual/range {p2 .. p2}, Ljava/io/PrintWriter;->println()V

    .line 17284
    iget-object v6, v5, Lcom/android/server/am/ActivityManagerService$UidObserverRegistration;->lastProcStates:Landroid/util/SparseIntArray;

    if-eqz v6, :cond_3f

    .line 17285
    iget-object v6, v5, Lcom/android/server/am/ActivityManagerService$UidObserverRegistration;->lastProcStates:Landroid/util/SparseIntArray;

    invoke-virtual {v6}, Landroid/util/SparseIntArray;->size()I

    move-result v6

    .line 17286
    const/4 v7, 0x0

    :goto_11
    if-ge v7, v6, :cond_3f

    .line 17287
    const-string v8, "      Last "

    invoke-virtual {v9, v8}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 17288
    iget-object v8, v5, Lcom/android/server/am/ActivityManagerService$UidObserverRegistration;->lastProcStates:Landroid/util/SparseIntArray;

    invoke-virtual {v8, v7}, Landroid/util/SparseIntArray;->keyAt(I)I

    move-result v8

    invoke-static {v9, v8}, Landroid/os/UserHandle;->formatUid(Ljava/io/PrintWriter;I)V

    .line 17289
    const-string v8, ": "

    invoke-virtual {v9, v8}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    iget-object v8, v5, Lcom/android/server/am/ActivityManagerService$UidObserverRegistration;->lastProcStates:Landroid/util/SparseIntArray;

    invoke-virtual {v8, v7}, Landroid/util/SparseIntArray;->valueAt(I)I

    move-result v8

    invoke-virtual {v9, v8}, Ljava/io/PrintWriter;->println(I)V

    .line 17286
    add-int/lit8 v7, v7, 0x1

    goto :goto_11

    .line 17259
    :cond_3f
    add-int/lit8 v3, v3, 0x1

    goto/16 :goto_10

    .line 17294
    :cond_40
    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    const-string v3, "  mDeviceIdleWhitelist="

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget-object v3, v0, Lcom/android/server/am/ActivityManagerService;->mDeviceIdleWhitelist:[I

    invoke-static {v3}, Ljava/util/Arrays;->toString([I)Ljava/lang/String;

    move-result-object v3

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v2

    invoke-virtual {v9, v2}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 17295
    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    const-string v3, "  mDeviceIdleExceptIdleWhitelist="

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget-object v3, v0, Lcom/android/server/am/ActivityManagerService;->mDeviceIdleExceptIdleWhitelist:[I

    .line 17296
    invoke-static {v3}, Ljava/util/Arrays;->toString([I)Ljava/lang/String;

    move-result-object v3

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v2

    .line 17295
    invoke-virtual {v9, v2}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 17297
    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    const-string v3, "  mDeviceIdleTempWhitelist="

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget-object v3, v0, Lcom/android/server/am/ActivityManagerService;->mDeviceIdleTempWhitelist:[I

    invoke-static {v3}, Ljava/util/Arrays;->toString([I)Ljava/lang/String;

    move-result-object v3

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v2

    invoke-virtual {v9, v2}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 17298
    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mPendingTempWhitelist:Landroid/util/SparseArray;

    invoke-virtual {v2}, Landroid/util/SparseArray;->size()I

    move-result v2

    if-lez v2, :cond_41

    .line 17299
    const-string v2, "  mPendingTempWhitelist:"

    invoke-virtual {v9, v2}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 17300
    const/4 v2, 0x0

    :goto_12
    iget-object v3, v0, Lcom/android/server/am/ActivityManagerService;->mPendingTempWhitelist:Landroid/util/SparseArray;

    invoke-virtual {v3}, Landroid/util/SparseArray;->size()I

    move-result v3

    if-ge v2, v3, :cond_41

    .line 17301
    iget-object v3, v0, Lcom/android/server/am/ActivityManagerService;->mPendingTempWhitelist:Landroid/util/SparseArray;

    invoke-virtual {v3, v2}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;

    move-result-object v3

    check-cast v3, Lcom/android/server/am/ActivityManagerService$PendingTempWhitelist;

    .line 17302
    const-string v4, "    "

    invoke-virtual {v9, v4}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 17303
    iget v4, v3, Lcom/android/server/am/ActivityManagerService$PendingTempWhitelist;->targetUid:I

    invoke-static {v9, v4}, Landroid/os/UserHandle;->formatUid(Ljava/io/PrintWriter;I)V

    .line 17304
    const-string v4, ": "

    invoke-virtual {v9, v4}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 17305
    iget-wide v4, v3, Lcom/android/server/am/ActivityManagerService$PendingTempWhitelist;->duration:J

    invoke-static {v4, v5, v9}, Landroid/util/TimeUtils;->formatDuration(JLjava/io/PrintWriter;)V

    .line 17306
    const-string v4, " "

    invoke-virtual {v9, v4}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 17307
    iget-object v3, v3, Lcom/android/server/am/ActivityManagerService$PendingTempWhitelist;->tag:Ljava/lang/String;

    invoke-virtual {v9, v3}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 17300
    add-int/lit8 v2, v2, 0x1

    goto :goto_12

    .line 17311
    :cond_41
    if-nez v11, :cond_43

    .line 17312
    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    const-string v3, "  mWakefulness="

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget v3, v0, Lcom/android/server/am/ActivityManagerService;->mWakefulness:I

    .line 17313
    invoke-static {v3}, Landroid/os/PowerManagerInternal;->wakefulnessToString(I)Ljava/lang/String;

    move-result-object v3

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v2

    .line 17312
    invoke-virtual {v9, v2}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 17314
    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    const-string v3, "  mSleepTokens="

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget-object v3, v0, Lcom/android/server/am/ActivityManagerService;->mStackSupervisor:Lcom/android/server/am/ActivityStackSupervisor;

    iget-object v3, v3, Lcom/android/server/am/ActivityStackSupervisor;->mSleepTokens:Ljava/util/ArrayList;

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v2

    invoke-virtual {v9, v2}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 17315
    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    const-string v3, "  mSleeping="

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget-boolean v3, v0, Lcom/android/server/am/ActivityManagerService;->mSleeping:Z

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v2

    invoke-virtual {v9, v2}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 17316
    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    const-string v3, "  mShuttingDown="

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget-boolean v3, v0, Lcom/android/server/am/ActivityManagerService;->mShuttingDown:Z

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    const-string v3, " mTestPssMode="

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget-boolean v3, v0, Lcom/android/server/am/ActivityManagerService;->mTestPssMode:Z

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v2

    invoke-virtual {v9, v2}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 17317
    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mRunningVoice:Landroid/service/voice/IVoiceInteractionSession;

    if-eqz v2, :cond_42

    .line 17318
    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    const-string v3, "  mRunningVoice="

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget-object v3, v0, Lcom/android/server/am/ActivityManagerService;->mRunningVoice:Landroid/service/voice/IVoiceInteractionSession;

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v2

    invoke-virtual {v9, v2}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 17319
    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    const-string v3, "  mVoiceWakeLock"

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget-object v3, v0, Lcom/android/server/am/ActivityManagerService;->mVoiceWakeLock:Landroid/os/PowerManager$WakeLock;

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v2

    invoke-virtual {v9, v2}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 17321
    :cond_42
    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    const-string v3, "  mVrController="

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget-object v3, v0, Lcom/android/server/am/ActivityManagerService;->mVrController:Lcom/android/server/am/VrController;

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v2

    invoke-virtual {v9, v2}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 17323
    :cond_43
    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mDebugApp:Ljava/lang/String;

    if-nez v2, :cond_44

    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mOrigDebugApp:Ljava/lang/String;

    if-nez v2, :cond_44

    iget-boolean v2, v0, Lcom/android/server/am/ActivityManagerService;->mDebugTransient:Z

    if-nez v2, :cond_44

    iget-boolean v2, v0, Lcom/android/server/am/ActivityManagerService;->mOrigWaitForDebugger:Z

    if-eqz v2, :cond_47

    .line 17325
    :cond_44
    if-eqz v11, :cond_45

    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mDebugApp:Ljava/lang/String;

    invoke-virtual {v11, v2}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v2

    if-nez v2, :cond_45

    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mOrigDebugApp:Ljava/lang/String;

    .line 17326
    invoke-virtual {v11, v2}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v2

    if-eqz v2, :cond_47

    .line 17327
    :cond_45
    if-eqz v1, :cond_46

    .line 17328
    invoke-virtual/range {p2 .. p2}, Ljava/io/PrintWriter;->println()V

    .line 17329
    nop

    .line 17331
    const/4 v1, 0x0

    :cond_46
    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    const-string v3, "  mDebugApp="

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget-object v3, v0, Lcom/android/server/am/ActivityManagerService;->mDebugApp:Ljava/lang/String;

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v3, "/orig="

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget-object v3, v0, Lcom/android/server/am/ActivityManagerService;->mOrigDebugApp:Ljava/lang/String;

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v3, " mDebugTransient="

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget-boolean v3, v0, Lcom/android/server/am/ActivityManagerService;->mDebugTransient:Z

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    const-string v3, " mOrigWaitForDebugger="

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget-boolean v3, v0, Lcom/android/server/am/ActivityManagerService;->mOrigWaitForDebugger:Z

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v2

    invoke-virtual {v9, v2}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 17336
    :cond_47
    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mCurAppTimeTracker:Lcom/android/server/am/AppTimeTracker;

    if-eqz v2, :cond_48

    .line 17337
    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mCurAppTimeTracker:Lcom/android/server/am/AppTimeTracker;

    const-string v3, "  "

    invoke-virtual {v2, v9, v3, v13}, Lcom/android/server/am/AppTimeTracker;->dumpWithHeader(Ljava/io/PrintWriter;Ljava/lang/String;Z)V

    .line 17339
    :cond_48
    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mMemWatchProcesses:Lcom/android/internal/app/ProcessMap;

    invoke-virtual {v2}, Lcom/android/internal/app/ProcessMap;->getMap()Landroid/util/ArrayMap;

    move-result-object v2

    invoke-virtual {v2}, Landroid/util/ArrayMap;->size()I

    move-result v2

    if-lez v2, :cond_4d

    .line 17340
    const-string v2, "  Mem watch processes:"

    invoke-virtual {v9, v2}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 17341
    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mMemWatchProcesses:Lcom/android/internal/app/ProcessMap;

    .line 17342
    invoke-virtual {v2}, Lcom/android/internal/app/ProcessMap;->getMap()Landroid/util/ArrayMap;

    move-result-object v2

    .line 17343
    move v3, v1

    const/4 v1, 0x0

    :goto_13
    invoke-virtual {v2}, Landroid/util/ArrayMap;->size()I

    move-result v4

    if-ge v1, v4, :cond_4c

    .line 17344
    invoke-virtual {v2, v1}, Landroid/util/ArrayMap;->keyAt(I)Ljava/lang/Object;

    move-result-object v4

    check-cast v4, Ljava/lang/String;

    .line 17345
    invoke-virtual {v2, v1}, Landroid/util/ArrayMap;->valueAt(I)Ljava/lang/Object;

    move-result-object v5

    check-cast v5, Landroid/util/SparseArray;

    .line 17346
    move v6, v3

    const/4 v3, 0x0

    :goto_14
    invoke-virtual {v5}, Landroid/util/SparseArray;->size()I

    move-result v7

    if-ge v3, v7, :cond_4b

    .line 17347
    if-eqz v6, :cond_49

    .line 17348
    invoke-virtual/range {p2 .. p2}, Ljava/io/PrintWriter;->println()V

    .line 17349
    nop

    .line 17351
    const/4 v6, 0x0

    :cond_49
    new-instance v7, Ljava/lang/StringBuilder;

    invoke-direct {v7}, Ljava/lang/StringBuilder;-><init>()V

    .line 17352
    const-string v8, "    "

    invoke-virtual {v7, v8}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v7, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const/16 v8, 0x2f

    invoke-virtual {v7, v8}, Ljava/lang/StringBuilder;->append(C)Ljava/lang/StringBuilder;

    .line 17353
    invoke-virtual {v5, v3}, Landroid/util/SparseArray;->keyAt(I)I

    move-result v8

    invoke-static {v7, v8}, Landroid/os/UserHandle;->formatUid(Ljava/lang/StringBuilder;I)V

    .line 17354
    invoke-virtual {v5, v3}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;

    move-result-object v8

    check-cast v8, Landroid/util/Pair;

    .line 17355
    const-string v15, ": "

    invoke-virtual {v7, v15}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget-object v15, v8, Landroid/util/Pair;->first:Ljava/lang/Object;

    check-cast v15, Ljava/lang/Long;

    invoke-virtual {v15}, Ljava/lang/Long;->longValue()J

    move-result-wide v12

    invoke-static {v12, v13, v7}, Landroid/util/DebugUtils;->sizeValueToString(JLjava/lang/StringBuilder;)Ljava/lang/String;

    .line 17356
    iget-object v12, v8, Landroid/util/Pair;->second:Ljava/lang/Object;

    if-eqz v12, :cond_4a

    .line 17357
    const-string v12, ", report to "

    invoke-virtual {v7, v12}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget-object v8, v8, Landroid/util/Pair;->second:Ljava/lang/Object;

    check-cast v8, Ljava/lang/String;

    invoke-virtual {v7, v8}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 17359
    :cond_4a
    invoke-virtual {v7}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v7

    invoke-virtual {v9, v7}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 17346
    add-int/lit8 v3, v3, 0x1

    const/4 v13, 0x1

    goto :goto_14

    .line 17343
    :cond_4b
    add-int/lit8 v1, v1, 0x1

    move v3, v6

    const/4 v13, 0x1

    goto :goto_13

    .line 17362
    :cond_4c
    const-string v1, "  mMemWatchDumpProcName="

    invoke-virtual {v9, v1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    iget-object v1, v0, Lcom/android/server/am/ActivityManagerService;->mMemWatchDumpProcName:Ljava/lang/String;

    invoke-virtual {v9, v1}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 17363
    const-string v1, "  mMemWatchDumpFile="

    invoke-virtual {v9, v1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    iget-object v1, v0, Lcom/android/server/am/ActivityManagerService;->mMemWatchDumpFile:Ljava/lang/String;

    invoke-virtual {v9, v1}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 17364
    const-string v1, "  mMemWatchDumpPid="

    invoke-virtual {v9, v1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    iget v1, v0, Lcom/android/server/am/ActivityManagerService;->mMemWatchDumpPid:I

    invoke-virtual {v9, v1}, Ljava/io/PrintWriter;->print(I)V

    .line 17365
    const-string v1, " mMemWatchDumpUid="

    invoke-virtual {v9, v1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    iget v1, v0, Lcom/android/server/am/ActivityManagerService;->mMemWatchDumpUid:I

    invoke-virtual {v9, v1}, Ljava/io/PrintWriter;->println(I)V

    .line 17367
    move v12, v3

    goto :goto_15

    :cond_4d
    move v12, v1

    :goto_15
    iget-object v1, v0, Lcom/android/server/am/ActivityManagerService;->mTrackAllocationApp:Ljava/lang/String;

    if-eqz v1, :cond_50

    .line 17368
    if-eqz v11, :cond_4e

    iget-object v1, v0, Lcom/android/server/am/ActivityManagerService;->mTrackAllocationApp:Ljava/lang/String;

    invoke-virtual {v11, v1}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v1

    if-eqz v1, :cond_50

    .line 17369
    :cond_4e
    if-eqz v12, :cond_4f

    .line 17370
    invoke-virtual/range {p2 .. p2}, Ljava/io/PrintWriter;->println()V

    .line 17371
    nop

    .line 17373
    const/4 v12, 0x0

    :cond_4f
    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string v2, "  mTrackAllocationApp="

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mTrackAllocationApp:Ljava/lang/String;

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-virtual {v9, v1}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 17376
    :cond_50
    iget-object v1, v0, Lcom/android/server/am/ActivityManagerService;->mProfileApp:Ljava/lang/String;

    if-nez v1, :cond_51

    iget-object v1, v0, Lcom/android/server/am/ActivityManagerService;->mProfileProc:Lcom/android/server/am/ProcessRecord;

    if-nez v1, :cond_51

    iget-object v1, v0, Lcom/android/server/am/ActivityManagerService;->mProfilerInfo:Landroid/app/ProfilerInfo;

    if-eqz v1, :cond_54

    iget-object v1, v0, Lcom/android/server/am/ActivityManagerService;->mProfilerInfo:Landroid/app/ProfilerInfo;

    iget-object v1, v1, Landroid/app/ProfilerInfo;->profileFile:Ljava/lang/String;

    if-nez v1, :cond_51

    iget-object v1, v0, Lcom/android/server/am/ActivityManagerService;->mProfilerInfo:Landroid/app/ProfilerInfo;

    iget-object v1, v1, Landroid/app/ProfilerInfo;->profileFd:Landroid/os/ParcelFileDescriptor;

    if-eqz v1, :cond_54

    .line 17378
    :cond_51
    if-eqz v11, :cond_52

    iget-object v1, v0, Lcom/android/server/am/ActivityManagerService;->mProfileApp:Ljava/lang/String;

    invoke-virtual {v11, v1}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v1

    if-eqz v1, :cond_54

    .line 17379
    :cond_52
    if-eqz v12, :cond_53

    .line 17380
    invoke-virtual/range {p2 .. p2}, Ljava/io/PrintWriter;->println()V

    .line 17381
    nop

    .line 17383
    const/4 v12, 0x0

    :cond_53
    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string v2, "  mProfileApp="

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mProfileApp:Ljava/lang/String;

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v2, " mProfileProc="

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mProfileProc:Lcom/android/server/am/ProcessRecord;

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-virtual {v9, v1}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 17384
    iget-object v1, v0, Lcom/android/server/am/ActivityManagerService;->mProfilerInfo:Landroid/app/ProfilerInfo;

    if-eqz v1, :cond_54

    .line 17385
    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string v2, "  mProfileFile="

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mProfilerInfo:Landroid/app/ProfilerInfo;

    iget-object v2, v2, Landroid/app/ProfilerInfo;->profileFile:Ljava/lang/String;

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v2, " mProfileFd="

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mProfilerInfo:Landroid/app/ProfilerInfo;

    iget-object v2, v2, Landroid/app/ProfilerInfo;->profileFd:Landroid/os/ParcelFileDescriptor;

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-virtual {v9, v1}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 17387
    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string v2, "  mSamplingInterval="

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mProfilerInfo:Landroid/app/ProfilerInfo;

    iget v2, v2, Landroid/app/ProfilerInfo;->samplingInterval:I

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v2, " mAutoStopProfiler="

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mProfilerInfo:Landroid/app/ProfilerInfo;

    iget-boolean v2, v2, Landroid/app/ProfilerInfo;->autoStopProfiler:Z

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    const-string v2, " mStreamingOutput="

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mProfilerInfo:Landroid/app/ProfilerInfo;

    iget-boolean v2, v2, Landroid/app/ProfilerInfo;->streamingOutput:Z

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-virtual {v9, v1}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 17390
    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string v2, "  mProfileType="

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget v2, v0, Lcom/android/server/am/ActivityManagerService;->mProfileType:I

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-virtual {v9, v1}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 17394
    :cond_54
    iget-object v1, v0, Lcom/android/server/am/ActivityManagerService;->mNativeDebuggingApp:Ljava/lang/String;

    if-eqz v1, :cond_57

    .line 17395
    if-eqz v11, :cond_55

    iget-object v1, v0, Lcom/android/server/am/ActivityManagerService;->mNativeDebuggingApp:Ljava/lang/String;

    invoke-virtual {v11, v1}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v1

    if-eqz v1, :cond_57

    .line 17396
    :cond_55
    if-eqz v12, :cond_56

    .line 17397
    invoke-virtual/range {p2 .. p2}, Ljava/io/PrintWriter;->println()V

    .line 17398
    nop

    .line 17400
    const/4 v12, 0x0

    :cond_56
    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string v2, "  mNativeDebuggingApp="

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mNativeDebuggingApp:Ljava/lang/String;

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-virtual {v9, v1}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 17403
    :cond_57
    iget-object v1, v0, Lcom/android/server/am/ActivityManagerService;->mAllowAppSwitchUids:Landroid/util/SparseArray;

    invoke-virtual {v1}, Landroid/util/SparseArray;->size()I

    move-result v1

    if-lez v1, :cond_5d

    .line 17404
    nop

    .line 17405
    const/4 v1, 0x0

    const/4 v2, 0x0

    :goto_16
    iget-object v3, v0, Lcom/android/server/am/ActivityManagerService;->mAllowAppSwitchUids:Landroid/util/SparseArray;

    invoke-virtual {v3}, Landroid/util/SparseArray;->size()I

    move-result v3

    if-ge v1, v3, :cond_5d

    .line 17406
    iget-object v3, v0, Lcom/android/server/am/ActivityManagerService;->mAllowAppSwitchUids:Landroid/util/SparseArray;

    invoke-virtual {v3, v1}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;

    move-result-object v3

    check-cast v3, Landroid/util/ArrayMap;

    .line 17407
    move v4, v2

    const/4 v2, 0x0

    :goto_17
    invoke-virtual {v3}, Landroid/util/ArrayMap;->size()I

    move-result v5

    if-ge v2, v5, :cond_5c

    .line 17408
    if-eqz v11, :cond_58

    .line 17409
    invoke-virtual {v3, v2}, Landroid/util/ArrayMap;->valueAt(I)Ljava/lang/Object;

    move-result-object v5

    check-cast v5, Ljava/lang/Integer;

    invoke-virtual {v5}, Ljava/lang/Integer;->intValue()I

    move-result v5

    invoke-static {v5}, Landroid/os/UserHandle;->getAppId(I)I

    move-result v5

    move/from16 v6, p7

    if-ne v5, v6, :cond_5b

    goto :goto_18

    .line 17410
    :cond_58
    move/from16 v6, p7

    :goto_18
    if-eqz v12, :cond_59

    .line 17411
    invoke-virtual/range {p2 .. p2}, Ljava/io/PrintWriter;->println()V

    .line 17412
    nop

    .line 17414
    const/4 v12, 0x0

    :cond_59
    if-nez v4, :cond_5a

    .line 17415
    const-string v4, "  mAllowAppSwitchUids:"

    invoke-virtual {v9, v4}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 17416
    nop

    .line 17418
    const/4 v4, 0x1

    :cond_5a
    const-string v5, "    User "

    invoke-virtual {v9, v5}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 17419
    iget-object v5, v0, Lcom/android/server/am/ActivityManagerService;->mAllowAppSwitchUids:Landroid/util/SparseArray;

    invoke-virtual {v5, v1}, Landroid/util/SparseArray;->keyAt(I)I

    move-result v5

    invoke-virtual {v9, v5}, Ljava/io/PrintWriter;->print(I)V

    .line 17420
    const-string v5, ": Type "

    invoke-virtual {v9, v5}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 17421
    invoke-virtual {v3, v2}, Landroid/util/ArrayMap;->keyAt(I)Ljava/lang/Object;

    move-result-object v5

    check-cast v5, Ljava/lang/String;

    invoke-virtual {v9, v5}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 17422
    const-string v5, " = "

    invoke-virtual {v9, v5}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 17423
    invoke-virtual {v3, v2}, Landroid/util/ArrayMap;->valueAt(I)Ljava/lang/Object;

    move-result-object v5

    check-cast v5, Ljava/lang/Integer;

    invoke-virtual {v5}, Ljava/lang/Integer;->intValue()I

    move-result v5

    invoke-static {v9, v5}, Landroid/os/UserHandle;->formatUid(Ljava/io/PrintWriter;I)V

    .line 17424
    invoke-virtual/range {p2 .. p2}, Ljava/io/PrintWriter;->println()V

    .line 17407
    :cond_5b
    add-int/lit8 v2, v2, 0x1

    goto :goto_17

    .line 17405
    :cond_5c
    move/from16 v6, p7

    add-int/lit8 v1, v1, 0x1

    move v2, v4

    goto :goto_16

    .line 17429
    :cond_5d
    if-nez v11, :cond_61

    .line 17430
    iget-boolean v1, v0, Lcom/android/server/am/ActivityManagerService;->mAlwaysFinishActivities:Z

    if-eqz v1, :cond_5e

    .line 17431
    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string v2, "  mAlwaysFinishActivities="

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget-boolean v2, v0, Lcom/android/server/am/ActivityManagerService;->mAlwaysFinishActivities:Z

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-virtual {v9, v1}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 17433
    :cond_5e
    iget-object v1, v0, Lcom/android/server/am/ActivityManagerService;->mController:Landroid/app/IActivityController;

    if-eqz v1, :cond_5f

    .line 17434
    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string v2, "  mController="

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mController:Landroid/app/IActivityController;

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    const-string v2, " mControllerIsAMonkey="

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget-boolean v2, v0, Lcom/android/server/am/ActivityManagerService;->mControllerIsAMonkey:Z

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-virtual {v9, v1}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 17437
    :cond_5f
    if-eqz v10, :cond_61

    .line 17438
    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string v2, "  Total persistent processes: "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v1, v14}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-virtual {v9, v1}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 17439
    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string v2, "  mProcessesReady="

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget-boolean v2, v0, Lcom/android/server/am/ActivityManagerService;->mProcessesReady:Z

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    const-string v2, " mSystemReady="

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget-boolean v2, v0, Lcom/android/server/am/ActivityManagerService;->mSystemReady:Z

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    const-string v2, " mBooted="

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget-boolean v2, v0, Lcom/android/server/am/ActivityManagerService;->mBooted:Z

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    const-string v2, " mFactoryTest="

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget v2, v0, Lcom/android/server/am/ActivityManagerService;->mFactoryTest:I

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-virtual {v9, v1}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 17443
    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string v2, "  mBooting="

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget-boolean v2, v0, Lcom/android/server/am/ActivityManagerService;->mBooting:Z

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    const-string v2, " mCallFinishBooting="

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget-boolean v2, v0, Lcom/android/server/am/ActivityManagerService;->mCallFinishBooting:Z

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    const-string v2, " mBootAnimationComplete="

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget-boolean v2, v0, Lcom/android/server/am/ActivityManagerService;->mBootAnimationComplete:Z

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-virtual {v9, v1}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 17446
    const-string v1, "  mLastPowerCheckUptime="

    invoke-virtual {v9, v1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 17447
    iget-wide v1, v0, Lcom/android/server/am/ActivityManagerService;->mLastPowerCheckUptime:J

    invoke-static {v1, v2, v9}, Landroid/util/TimeUtils;->formatDuration(JLjava/io/PrintWriter;)V

    .line 17448
    const-string v1, ""

    invoke-virtual {v9, v1}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 17449
    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string v2, "  mGoingToSleep="

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mStackSupervisor:Lcom/android/server/am/ActivityStackSupervisor;

    iget-object v2, v2, Lcom/android/server/am/ActivityStackSupervisor;->mGoingToSleep:Landroid/os/PowerManager$WakeLock;

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-virtual {v9, v1}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 17450
    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string v2, "  mLaunchingActivity="

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mStackSupervisor:Lcom/android/server/am/ActivityStackSupervisor;

    iget-object v2, v2, Lcom/android/server/am/ActivityStackSupervisor;->mLaunchingActivity:Landroid/os/PowerManager$WakeLock;

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-virtual {v9, v1}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 17451
    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string v2, "  mAdjSeq="

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget v2, v0, Lcom/android/server/am/ActivityManagerService;->mAdjSeq:I

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v2, " mLruSeq="

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget v2, v0, Lcom/android/server/am/ActivityManagerService;->mLruSeq:I

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-virtual {v9, v1}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 17452
    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string v2, "  mNumNonCachedProcs="

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget v2, v0, Lcom/android/server/am/ActivityManagerService;->mNumNonCachedProcs:I

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v2, " ("

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mLruProcesses:Ljava/util/ArrayList;

    .line 17453
    invoke-virtual {v2}, Ljava/util/ArrayList;->size()I

    move-result v2

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v2, " total) mNumCachedHiddenProcs="

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget v2, v0, Lcom/android/server/am/ActivityManagerService;->mNumCachedHiddenProcs:I

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v2, " mNumServiceProcs="

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget v2, v0, Lcom/android/server/am/ActivityManagerService;->mNumServiceProcs:I

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v2, " mNewNumServiceProcs="

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget v2, v0, Lcom/android/server/am/ActivityManagerService;->mNewNumServiceProcs:I

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    .line 17452
    invoke-virtual {v9, v1}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 17457
    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string v2, "  mAllowLowerMemLevel="

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget-boolean v2, v0, Lcom/android/server/am/ActivityManagerService;->mAllowLowerMemLevel:Z

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    const-string v2, " mLastMemoryLevel="

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget v2, v0, Lcom/android/server/am/ActivityManagerService;->mLastMemoryLevel:I

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v2, " mLastNumProcesses="

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget v2, v0, Lcom/android/server/am/ActivityManagerService;->mLastNumProcesses:I

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-virtual {v9, v1}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 17460
    invoke-static {}, Landroid/os/SystemClock;->uptimeMillis()J

    move-result-wide v1

    .line 17461
    const-string v3, "  mLastIdleTime="

    invoke-virtual {v9, v3}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 17462
    iget-wide v3, v0, Lcom/android/server/am/ActivityManagerService;->mLastIdleTime:J

    invoke-static {v1, v2, v3, v4, v9}, Landroid/util/TimeUtils;->formatDuration(JJLjava/io/PrintWriter;)V

    .line 17463
    const-string v3, " mLowRamSinceLastIdle="

    invoke-virtual {v9, v3}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 17464
    invoke-direct {v0, v1, v2}, Lcom/android/server/am/ActivityManagerService;->getLowRamTimeSinceIdle(J)J

    move-result-wide v1

    invoke-static {v1, v2, v9}, Landroid/util/TimeUtils;->formatDuration(JLjava/io/PrintWriter;)V

    .line 17465
    invoke-virtual/range {p2 .. p2}, Ljava/io/PrintWriter;->println()V

    .line 17466
    invoke-virtual/range {p2 .. p2}, Ljava/io/PrintWriter;->println()V

    .line 17467
    const-string v1, "  mUidChangeDispatchCount="

    invoke-virtual {v9, v1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 17468
    iget v1, v0, Lcom/android/server/am/ActivityManagerService;->mUidChangeDispatchCount:I

    invoke-virtual {v9, v1}, Ljava/io/PrintWriter;->print(I)V

    .line 17469
    invoke-virtual/range {p2 .. p2}, Ljava/io/PrintWriter;->println()V

    .line 17471
    const-string v1, "  Slow UID dispatches:"

    invoke-virtual {v9, v1}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 17472
    iget-object v1, v0, Lcom/android/server/am/ActivityManagerService;->mUidObservers:Landroid/os/RemoteCallbackList;

    invoke-virtual {v1}, Landroid/os/RemoteCallbackList;->beginBroadcast()I

    move-result v1

    .line 17473
    const/4 v2, 0x0

    :goto_19
    if-ge v2, v1, :cond_60

    .line 17474
    iget-object v3, v0, Lcom/android/server/am/ActivityManagerService;->mUidObservers:Landroid/os/RemoteCallbackList;

    .line 17475
    invoke-virtual {v3, v2}, Landroid/os/RemoteCallbackList;->getBroadcastCookie(I)Ljava/lang/Object;

    move-result-object v3

    check-cast v3, Lcom/android/server/am/ActivityManagerService$UidObserverRegistration;

    .line 17476
    const-string v4, "    "

    invoke-virtual {v9, v4}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 17477
    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mUidObservers:Landroid/os/RemoteCallbackList;

    invoke-virtual {v4, v2}, Landroid/os/RemoteCallbackList;->getBroadcastItem(I)Landroid/os/IInterface;

    move-result-object v4

    check-cast v4, Landroid/app/IUidObserver;

    invoke-virtual {v4}, Ljava/lang/Object;->getClass()Ljava/lang/Class;

    move-result-object v4

    invoke-virtual {v4}, Ljava/lang/Class;->getTypeName()Ljava/lang/String;

    move-result-object v4

    invoke-virtual {v9, v4}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 17478
    const-string v4, ": "

    invoke-virtual {v9, v4}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 17479
    iget v4, v3, Lcom/android/server/am/ActivityManagerService$UidObserverRegistration;->mSlowDispatchCount:I

    invoke-virtual {v9, v4}, Ljava/io/PrintWriter;->print(I)V

    .line 17480
    const-string v4, " / Max "

    invoke-virtual {v9, v4}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 17481
    iget v3, v3, Lcom/android/server/am/ActivityManagerService$UidObserverRegistration;->mMaxDispatchTime:I

    invoke-virtual {v9, v3}, Ljava/io/PrintWriter;->print(I)V

    .line 17482
    const-string v3, "ms"

    invoke-virtual {v9, v3}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 17473
    add-int/lit8 v2, v2, 0x1

    goto :goto_19

    .line 17484
    :cond_60
    iget-object v1, v0, Lcom/android/server/am/ActivityManagerService;->mUidObservers:Landroid/os/RemoteCallbackList;

    invoke-virtual {v1}, Landroid/os/RemoteCallbackList;->finishBroadcast()V

    .line 17486
    invoke-virtual/range {p2 .. p2}, Ljava/io/PrintWriter;->println()V

    .line 17487
    const-string v1, "  ServiceManager statistics:"

    invoke-virtual {v9, v1}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 17488
    sget-object v1, Landroid/os/ServiceManager;->sStatLogger:Lcom/android/internal/util/StatLogger;

    const-string v2, "    "

    invoke-virtual {v1, v9, v2}, Lcom/android/internal/util/StatLogger;->dump(Ljava/io/PrintWriter;Ljava/lang/String;)V

    .line 17489
    invoke-virtual/range {p2 .. p2}, Ljava/io/PrintWriter;->println()V

    .line 17492
    :cond_61
    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string v2, "  mForceBackgroundCheck="

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget-boolean v0, v0, Lcom/android/server/am/ActivityManagerService;->mForceBackgroundCheck:Z

    invoke-virtual {v1, v0}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    invoke-virtual {v9, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 17493
    return-void

    .line 17135
    :catchall_1
    move-exception v0

    :try_start_2
    monitor-exit v1
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_1

    throw v0
.end method

.method dumpProcessesToGc(Ljava/io/PrintWriter;ZLjava/lang/String;)Z
    .locals 7

    .line 17817
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mProcessesToGc:Ljava/util/ArrayList;

    invoke-virtual {v0}, Ljava/util/ArrayList;->size()I

    move-result v0

    if-lez v0, :cond_3

    .line 17818
    nop

    .line 17819
    invoke-static {}, Landroid/os/SystemClock;->uptimeMillis()J

    move-result-wide v0

    .line 17820
    const/4 v2, 0x0

    move v3, v2

    :goto_0
    iget-object v4, p0, Lcom/android/server/am/ActivityManagerService;->mProcessesToGc:Ljava/util/ArrayList;

    invoke-virtual {v4}, Ljava/util/ArrayList;->size()I

    move-result v4

    if-ge v2, v4, :cond_3

    .line 17821
    iget-object v4, p0, Lcom/android/server/am/ActivityManagerService;->mProcessesToGc:Ljava/util/ArrayList;

    invoke-virtual {v4, v2}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v4

    check-cast v4, Lcom/android/server/am/ProcessRecord;

    .line 17822
    if-eqz p3, :cond_0

    iget-object v5, v4, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget-object v5, v5, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;

    invoke-virtual {p3, v5}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v5

    if-nez v5, :cond_0

    .line 17823
    goto :goto_1

    .line 17825
    :cond_0
    const/4 v5, 0x1

    if-nez v3, :cond_2

    .line 17826
    if-eqz p2, :cond_1

    invoke-virtual {p1}, Ljava/io/PrintWriter;->println()V

    .line 17827
    :cond_1
    nop

    .line 17828
    const-string p2, "  Processes that are waiting to GC:"

    invoke-virtual {p1, p2}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 17829
    nop

    .line 17831
    move p2, v5

    move v3, p2

    :cond_2
    const-string v5, "    Process "

    invoke-virtual {p1, v5}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    invoke-virtual {p1, v4}, Ljava/io/PrintWriter;->println(Ljava/lang/Object;)V

    .line 17832
    const-string v5, "      lowMem="

    invoke-virtual {p1, v5}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    iget-boolean v5, v4, Lcom/android/server/am/ProcessRecord;->reportLowMemory:Z

    invoke-virtual {p1, v5}, Ljava/io/PrintWriter;->print(Z)V

    .line 17833
    const-string v5, ", last gced="

    invoke-virtual {p1, v5}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 17834
    iget-wide v5, v4, Lcom/android/server/am/ProcessRecord;->lastRequestedGc:J

    sub-long v5, v0, v5

    invoke-virtual {p1, v5, v6}, Ljava/io/PrintWriter;->print(J)V

    .line 17835
    const-string v5, " ms ago, last lowMem="

    invoke-virtual {p1, v5}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 17836
    iget-wide v4, v4, Lcom/android/server/am/ProcessRecord;->lastLowMemory:J

    sub-long v4, v0, v4

    invoke-virtual {p1, v4, v5}, Ljava/io/PrintWriter;->print(J)V

    .line 17837
    const-string v4, " ms ago"

    invoke-virtual {p1, v4}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 17820
    :goto_1
    add-int/lit8 v2, v2, 0x1

    goto :goto_0

    .line 17841
    :cond_3
    return p2
.end method

.method protected dumpProvider(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;Ljava/lang/String;[Ljava/lang/String;IZ)Z
    .locals 7

    .line 17916
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mProviderMap:Lcom/android/server/am/ProviderMap;

    move-object v1, p1

    move-object v2, p2

    move-object v3, p3

    move-object v4, p4

    move v5, p5

    move v6, p6

    invoke-virtual/range {v0 .. v6}, Lcom/android/server/am/ProviderMap;->dumpProvider(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;Ljava/lang/String;[Ljava/lang/String;IZ)Z

    move-result p1

    return p1
.end method

.method protected dumpProviderProto(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;Ljava/lang/String;[Ljava/lang/String;)Z
    .locals 1

    .line 17925
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mProviderMap:Lcom/android/server/am/ProviderMap;

    invoke-virtual {v0, p1, p2, p3, p4}, Lcom/android/server/am/ProviderMap;->dumpProviderProto(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;Ljava/lang/String;[Ljava/lang/String;)Z

    move-result p1

    return p1
.end method

.method dumpProvidersLocked(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;[Ljava/lang/String;IZLjava/lang/String;)V
    .locals 3

    .line 18290
    nop

    .line 18292
    new-instance p1, Lcom/android/server/am/ActivityManagerService$ItemMatcher;

    invoke-direct {p1}, Lcom/android/server/am/ActivityManagerService$ItemMatcher;-><init>()V

    .line 18293
    invoke-virtual {p1, p3, p4}, Lcom/android/server/am/ActivityManagerService$ItemMatcher;->build([Ljava/lang/String;I)I

    .line 18295
    const-string p1, "ACTIVITY MANAGER CONTENT PROVIDERS (dumpsys activity providers)"

    invoke-virtual {p2, p1}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 18297
    iget-object p1, p0, Lcom/android/server/am/ActivityManagerService;->mProviderMap:Lcom/android/server/am/ProviderMap;

    invoke-virtual {p1, p2, p5, p6}, Lcom/android/server/am/ProviderMap;->dumpProvidersLocked(Ljava/io/PrintWriter;ZLjava/lang/String;)Z

    move-result p1

    .line 18298
    const/4 p3, 0x0

    or-int p4, p3, p1

    .line 18300
    iget-object p5, p0, Lcom/android/server/am/ActivityManagerService;->mLaunchingProviders:Ljava/util/ArrayList;

    invoke-virtual {p5}, Ljava/util/ArrayList;->size()I

    move-result p5

    if-lez p5, :cond_3

    .line 18301
    nop

    .line 18302
    iget-object p5, p0, Lcom/android/server/am/ActivityManagerService;->mLaunchingProviders:Ljava/util/ArrayList;

    invoke-virtual {p5}, Ljava/util/ArrayList;->size()I

    move-result p5

    const/4 v0, 0x1

    sub-int/2addr p5, v0

    :goto_0
    if-ltz p5, :cond_3

    .line 18303
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mLaunchingProviders:Ljava/util/ArrayList;

    invoke-virtual {v1, p5}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v1

    check-cast v1, Lcom/android/server/am/ContentProviderRecord;

    .line 18304
    if-eqz p6, :cond_0

    iget-object v2, v1, Lcom/android/server/am/ContentProviderRecord;->name:Landroid/content/ComponentName;

    invoke-virtual {v2}, Landroid/content/ComponentName;->getPackageName()Ljava/lang/String;

    move-result-object v2

    invoke-virtual {p6, v2}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v2

    if-nez v2, :cond_0

    .line 18305
    goto :goto_1

    .line 18307
    :cond_0
    if-nez p3, :cond_2

    .line 18308
    if-eqz p1, :cond_1

    invoke-virtual {p2}, Ljava/io/PrintWriter;->println()V

    .line 18309
    :cond_1
    nop

    .line 18310
    const-string p1, "  Launching content providers:"

    invoke-virtual {p2, p1}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 18311
    nop

    .line 18312
    nop

    .line 18314
    move p1, v0

    move p3, p1

    move p4, p3

    :cond_2
    const-string v2, "  Launching #"

    invoke-virtual {p2, v2}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    invoke-virtual {p2, p5}, Ljava/io/PrintWriter;->print(I)V

    const-string v2, ": "

    invoke-virtual {p2, v2}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 18315
    invoke-virtual {p2, v1}, Ljava/io/PrintWriter;->println(Ljava/lang/Object;)V

    .line 18302
    :goto_1
    add-int/lit8 p5, p5, -0x1

    goto :goto_0

    .line 18319
    :cond_3
    if-nez p4, :cond_4

    .line 18320
    const-string p1, "  (nothing)"

    invoke-virtual {p2, p1}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 18322
    :cond_4
    return-void
.end method

.method dumpUids(Ljava/io/PrintWriter;Ljava/lang/String;ILandroid/util/SparseArray;Ljava/lang/String;Z)Z
    .locals 4
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "(",
            "Ljava/io/PrintWriter;",
            "Ljava/lang/String;",
            "I",
            "Landroid/util/SparseArray<",
            "Lcom/android/server/am/UidRecord;",
            ">;",
            "Ljava/lang/String;",
            "Z)Z"
        }
    .end annotation

    .line 16966
    nop

    .line 16967
    const/4 v0, 0x0

    move v1, p6

    move p6, v0

    :goto_0
    invoke-virtual {p4}, Landroid/util/SparseArray;->size()I

    move-result v2

    if-ge v0, v2, :cond_3

    .line 16968
    invoke-virtual {p4, v0}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Lcom/android/server/am/UidRecord;

    .line 16969
    if-eqz p2, :cond_0

    iget v3, v2, Lcom/android/server/am/UidRecord;->uid:I

    invoke-static {v3}, Landroid/os/UserHandle;->getAppId(I)I

    move-result v3

    if-eq v3, p3, :cond_0

    .line 16970
    goto :goto_1

    .line 16972
    :cond_0
    const/4 v3, 0x1

    if-nez p6, :cond_2

    .line 16973
    nop

    .line 16974
    if-eqz v1, :cond_1

    .line 16975
    invoke-virtual {p1}, Ljava/io/PrintWriter;->println()V

    .line 16977
    :cond_1
    const-string p6, "  "

    invoke-virtual {p1, p6}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 16978
    invoke-virtual {p1, p5}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 16979
    nop

    .line 16981
    move p6, v3

    move v1, p6

    :cond_2
    const-string v3, "    UID "

    invoke-virtual {p1, v3}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    iget v3, v2, Lcom/android/server/am/UidRecord;->uid:I

    invoke-static {p1, v3}, Landroid/os/UserHandle;->formatUid(Ljava/io/PrintWriter;I)V

    .line 16982
    const-string v3, ": "

    invoke-virtual {p1, v3}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    invoke-virtual {p1, v2}, Ljava/io/PrintWriter;->println(Ljava/lang/Object;)V

    .line 16967
    :goto_1
    add-int/lit8 v0, v0, 0x1

    goto :goto_0

    .line 16984
    :cond_3
    return p6
.end method

.method enableScreenAfterBoot()V
    .locals 3

    .line 8181
    nop

    .line 8182
    invoke-static {}, Landroid/os/SystemClock;->uptimeMillis()J

    move-result-wide v0

    .line 8181
    const/16 v2, 0xbea

    invoke-static {v2, v0, v1}, Landroid/util/EventLog;->writeEvent(IJ)I

    .line 8183
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mWindowManager:Lcom/android/server/wm/WindowManagerService;

    invoke-virtual {v0}, Lcom/android/server/wm/WindowManagerService;->enableScreenAfterBoot()V

    .line 8185
    monitor-enter p0

    :try_start_0
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    .line 8186
    invoke-direct {p0}, Lcom/android/server/am/ActivityManagerService;->updateEventDispatchingLocked()V

    .line 8187
    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    .line 8188
    return-void

    .line 8187
    :catchall_0
    move-exception v0

    :try_start_1
    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw v0
.end method

.method enforceCallerIsRecentsOrHasPermission(Ljava/lang/String;Ljava/lang/String;)V
    .locals 2

    .line 9417
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mRecentTasks:Lcom/android/server/am/RecentTasks;

    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v1

    invoke-virtual {v0, v1}, Lcom/android/server/am/RecentTasks;->isCallerRecents(I)Z

    move-result v0

    if-nez v0, :cond_0

    .line 9418
    invoke-virtual {p0, p1, p2}, Lcom/android/server/am/ActivityManagerService;->enforceCallingPermission(Ljava/lang/String;Ljava/lang/String;)V

    .line 9420
    :cond_0
    return-void
.end method

.method enforceCallingPermission(Ljava/lang/String;Ljava/lang/String;)V
    .locals 2

    .line 9386
    invoke-virtual {p0, p1}, Lcom/android/server/am/ActivityManagerService;->checkCallingPermission(Ljava/lang/String;)I

    move-result v0

    if-nez v0, :cond_0

    .line 9388
    return-void

    .line 9391
    :cond_0
    new-instance v0, Ljava/lang/StringBuilder;

    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V

    const-string v1, "Permission Denial: "

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0, p2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string p2, " from pid="

    invoke-virtual {v0, p2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 9392
    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result p2

    invoke-virtual {v0, p2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string p2, ", uid="

    invoke-virtual {v0, p2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 9393
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result p2

    invoke-virtual {v0, p2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string p2, " requires "

    invoke-virtual {v0, p2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object p1

    .line 9395
    const-string p2, "ActivityManager"

    invoke-static {p2, p1}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 9396
    new-instance p2, Ljava/lang/SecurityException;

    invoke-direct {p2, p1}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw p2
.end method

.method enforceNotIsolatedCaller(Ljava/lang/String;)V
    .locals 3

    .line 4869
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v0

    invoke-static {v0}, Landroid/os/UserHandle;->isIsolated(I)Z

    move-result v0

    if-nez v0, :cond_0

    .line 4872
    return-void

    .line 4870
    :cond_0
    new-instance v0, Ljava/lang/SecurityException;

    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string v2, "Isolated process not allowed to call "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v1, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object p1

    invoke-direct {v0, p1}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v0
.end method

.method enforcePermission(Ljava/lang/String;IILjava/lang/String;)V
    .locals 2

    .line 9403
    invoke-virtual {p0, p1, p2, p3}, Lcom/android/server/am/ActivityManagerService;->checkPermission(Ljava/lang/String;II)I

    move-result v0

    if-nez v0, :cond_0

    .line 9404
    return-void

    .line 9407
    :cond_0
    new-instance v0, Ljava/lang/StringBuilder;

    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V

    const-string v1, "Permission Denial: "

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0, p4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string p4, " from pid="

    invoke-virtual {v0, p4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0, p2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string p2, ", uid="

    invoke-virtual {v0, p2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0, p3}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string p2, " requires "

    invoke-virtual {v0, p2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object p1

    .line 9409
    const-string p2, "ActivityManager"

    invoke-static {p2, p1}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 9410
    new-instance p2, Ljava/lang/SecurityException;

    invoke-direct {p2, p1}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw p2
.end method

.method final enqueueUidChangeLocked(Lcom/android/server/am/UidRecord;II)V
    .locals 3
    .annotation build Lcom/android/internal/annotations/VisibleForTesting;
    .end annotation

    .line 25016
    if-eqz p1, :cond_3

    iget-object v0, p1, Lcom/android/server/am/UidRecord;->pendingChange:Lcom/android/server/am/UidRecord$ChangeItem;

    if-nez v0, :cond_0

    goto :goto_0

    .line 25046
    :cond_0
    iget-object v0, p1, Lcom/android/server/am/UidRecord;->pendingChange:Lcom/android/server/am/UidRecord$ChangeItem;

    .line 25048
    and-int/lit8 v1, p3, 0x6

    if-nez v1, :cond_1

    .line 25049
    iget v1, v0, Lcom/android/server/am/UidRecord$ChangeItem;->change:I

    and-int/lit8 v1, v1, 0x6

    or-int/2addr p3, v1

    .line 25053
    :cond_1
    and-int/lit8 v1, p3, 0x18

    if-nez v1, :cond_2

    .line 25054
    iget v1, v0, Lcom/android/server/am/UidRecord$ChangeItem;->change:I

    and-int/lit8 v1, v1, 0x18

    or-int/2addr p3, v1

    .line 25060
    :cond_2
    and-int/lit8 v1, p3, 0x1

    if-eqz v1, :cond_9

    .line 25061
    and-int/lit8 p3, p3, -0xd

    .line 25062
    iget-boolean v1, p1, Lcom/android/server/am/UidRecord;->idle:Z

    if-nez v1, :cond_9

    .line 25065
    or-int/lit8 p3, p3, 0x2

    goto :goto_4

    .line 25017
    :cond_3
    :goto_0
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mPendingUidChanges:Ljava/util/ArrayList;

    invoke-virtual {v0}, Ljava/util/ArrayList;->size()I

    move-result v0

    if-nez v0, :cond_4

    .line 25020
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mUiHandler:Landroid/os/Handler;

    const/16 v1, 0x35

    invoke-virtual {v0, v1}, Landroid/os/Handler;->obtainMessage(I)Landroid/os/Message;

    move-result-object v0

    invoke-virtual {v0}, Landroid/os/Message;->sendToTarget()V

    .line 25022
    :cond_4
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mAvailUidChanges:Ljava/util/ArrayList;

    invoke-virtual {v0}, Ljava/util/ArrayList;->size()I

    move-result v0

    .line 25023
    if-lez v0, :cond_5

    .line 25024
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mAvailUidChanges:Ljava/util/ArrayList;

    add-int/lit8 v0, v0, -0x1

    invoke-virtual {v1, v0}, Ljava/util/ArrayList;->remove(I)Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Lcom/android/server/am/UidRecord$ChangeItem;

    goto :goto_1

    .line 25028
    :cond_5
    new-instance v0, Lcom/android/server/am/UidRecord$ChangeItem;

    invoke-direct {v0}, Lcom/android/server/am/UidRecord$ChangeItem;-><init>()V

    .line 25032
    :goto_1
    if-eqz p1, :cond_6

    .line 25033
    iput-object v0, p1, Lcom/android/server/am/UidRecord;->pendingChange:Lcom/android/server/am/UidRecord$ChangeItem;

    .line 25034
    and-int/lit8 v1, p3, 0x1

    if-eqz v1, :cond_7

    iget-boolean v1, p1, Lcom/android/server/am/UidRecord;->idle:Z

    if-nez v1, :cond_7

    .line 25037
    or-int/lit8 p3, p3, 0x2

    goto :goto_2

    .line 25039
    :cond_6
    if-ltz p2, :cond_12

    .line 25042
    :cond_7
    :goto_2
    iput-object p1, v0, Lcom/android/server/am/UidRecord$ChangeItem;->uidRecord:Lcom/android/server/am/UidRecord;

    .line 25043
    if-eqz p1, :cond_8

    iget v1, p1, Lcom/android/server/am/UidRecord;->uid:I

    goto :goto_3

    :cond_8
    move v1, p2

    :goto_3
    iput v1, v0, Lcom/android/server/am/UidRecord$ChangeItem;->uid:I

    .line 25044
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mPendingUidChanges:Ljava/util/ArrayList;

    invoke-virtual {v1, v0}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    .line 25045
    nop

    .line 25069
    :cond_9
    :goto_4
    iput p3, v0, Lcom/android/server/am/UidRecord$ChangeItem;->change:I

    .line 25070
    if-eqz p1, :cond_a

    .line 25071
    iget v1, p1, Lcom/android/server/am/UidRecord;->setProcState:I

    goto :goto_5

    :cond_a
    const/16 v1, 0x13

    :goto_5
    iput v1, v0, Lcom/android/server/am/UidRecord$ChangeItem;->processState:I

    .line 25072
    if-eqz p1, :cond_b

    iget-boolean p2, p1, Lcom/android/server/am/UidRecord;->ephemeral:Z

    goto :goto_6

    :cond_b
    invoke-direct {p0, p2}, Lcom/android/server/am/ActivityManagerService;->isEphemeralLocked(I)Z

    move-result p2

    :goto_6
    iput-boolean p2, v0, Lcom/android/server/am/UidRecord$ChangeItem;->ephemeral:Z

    .line 25073
    if-eqz p1, :cond_c

    iget-wide v1, p1, Lcom/android/server/am/UidRecord;->curProcStateSeq:J

    goto :goto_7

    :cond_c
    const-wide/16 v1, 0x0

    :goto_7
    iput-wide v1, v0, Lcom/android/server/am/UidRecord$ChangeItem;->procStateSeq:J

    .line 25074
    if-eqz p1, :cond_d

    .line 25075
    iput p3, p1, Lcom/android/server/am/UidRecord;->lastReportedChange:I

    .line 25076
    invoke-virtual {p1, p3}, Lcom/android/server/am/UidRecord;->updateLastDispatchedProcStateSeq(I)V

    .line 25081
    :cond_d
    iget-object p1, p0, Lcom/android/server/am/ActivityManagerService;->mLocalPowerManager:Landroid/os/PowerManagerInternal;

    if-eqz p1, :cond_11

    .line 25084
    and-int/lit8 p1, p3, 0x4

    if-eqz p1, :cond_e

    .line 25085
    iget-object p1, p0, Lcom/android/server/am/ActivityManagerService;->mLocalPowerManager:Landroid/os/PowerManagerInternal;

    iget p2, v0, Lcom/android/server/am/UidRecord$ChangeItem;->uid:I

    invoke-virtual {p1, p2}, Landroid/os/PowerManagerInternal;->uidActive(I)V

    .line 25087
    :cond_e
    and-int/lit8 p1, p3, 0x2

    if-eqz p1, :cond_f

    .line 25088
    iget-object p1, p0, Lcom/android/server/am/ActivityManagerService;->mLocalPowerManager:Landroid/os/PowerManagerInternal;

    iget p2, v0, Lcom/android/server/am/UidRecord$ChangeItem;->uid:I

    invoke-virtual {p1, p2}, Landroid/os/PowerManagerInternal;->uidIdle(I)V

    .line 25090
    :cond_f
    and-int/lit8 p1, p3, 0x1

    if-eqz p1, :cond_10

    .line 25091
    iget-object p1, p0, Lcom/android/server/am/ActivityManagerService;->mLocalPowerManager:Landroid/os/PowerManagerInternal;

    iget p2, v0, Lcom/android/server/am/UidRecord$ChangeItem;->uid:I

    invoke-virtual {p1, p2}, Landroid/os/PowerManagerInternal;->uidGone(I)V

    goto :goto_8

    .line 25093
    :cond_10
    iget-object p1, p0, Lcom/android/server/am/ActivityManagerService;->mLocalPowerManager:Landroid/os/PowerManagerInternal;

    iget p2, v0, Lcom/android/server/am/UidRecord$ChangeItem;->uid:I

    iget p3, v0, Lcom/android/server/am/UidRecord$ChangeItem;->processState:I

    invoke-virtual {p1, p2, p3}, Landroid/os/PowerManagerInternal;->updateUidProcState(II)V

    .line 25097
    :cond_11
    :goto_8
    return-void

    .line 25040
    :cond_12
    new-instance p1, Ljava/lang/IllegalArgumentException;

    const-string p2, "No UidRecord or uid"

    invoke-direct {p1, p2}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw p1
.end method

.method final ensureBootCompleted()V
    .locals 4

    .line 8338
    monitor-enter p0

    :try_start_0
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    .line 8339
    iget-boolean v0, p0, Lcom/android/server/am/ActivityManagerService;->mBooting:Z

    .line 8340
    const/4 v1, 0x0

    iput-boolean v1, p0, Lcom/android/server/am/ActivityManagerService;->mBooting:Z

    .line 8341
    iget-boolean v1, p0, Lcom/android/server/am/ActivityManagerService;->mBooted:Z

    .line 8342
    const/4 v2, 0x1

    xor-int/2addr v1, v2

    iput-boolean v2, p0, Lcom/android/server/am/ActivityManagerService;->mBooted:Z

    .line 8343
    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    .line 8345
    if-eqz v0, :cond_0

    .line 8346
    const-string v0, "FinishBooting"

    const-wide/16 v2, 0x40

    invoke-static {v2, v3, v0}, Landroid/os/Trace;->traceBegin(JLjava/lang/String;)V

    .line 8347
    invoke-virtual {p0}, Lcom/android/server/am/ActivityManagerService;->finishBooting()V

    .line 8348
    invoke-static {v2, v3}, Landroid/os/Trace;->traceEnd(J)V

    .line 8351
    :cond_0
    if-eqz v1, :cond_1

    .line 8352
    invoke-virtual {p0}, Lcom/android/server/am/ActivityManagerService;->enableScreenAfterBoot()V

    .line 8354
    :cond_1
    return-void

    .line 8343
    :catchall_0
    move-exception v0

    :try_start_1
    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw v0
.end method

.method public enterPictureInPictureMode(Landroid/os/IBinder;Landroid/app/PictureInPictureParams;)Z
    .locals 6

    .line 9050
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v0

    .line 9052
    :try_start_0
    monitor-enter p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_1

    :try_start_1
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    .line 9053
    const-string v2, "enterPictureInPictureMode"

    invoke-direct {p0, v2, p1, p2}, Lcom/android/server/am/ActivityManagerService;->ensureValidPictureInPictureActivityParamsLocked(Ljava/lang/String;Landroid/os/IBinder;Landroid/app/PictureInPictureParams;)Lcom/android/server/am/ActivityRecord;

    move-result-object v2

    .line 9057
    invoke-direct {p0, v2}, Lcom/android/server/am/ActivityManagerService;->isInPictureInPictureMode(Lcom/android/server/am/ActivityRecord;)Z

    move-result v3

    const/4 v4, 0x1

    if-eqz v3, :cond_0

    .line 9058
    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 9107
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 9058
    return v4

    .line 9063
    :cond_0
    :try_start_2
    const-string v3, "enterPictureInPictureMode"

    const/4 v5, 0x0

    invoke-virtual {v2, v3, v5}, Lcom/android/server/am/ActivityRecord;->checkEnterPictureInPictureState(Ljava/lang/String;Z)Z

    move-result v3

    if-nez v3, :cond_1

    .line 9065
    monitor-exit p0
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    .line 9107
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 9065
    return v5

    .line 9068
    :cond_1
    :try_start_3
    new-instance v3, Lcom/android/server/am/-$$Lambda$ActivityManagerService$nLON5M4YCRoJpSNB1Y_UERhbBKo;

    invoke-direct {v3, p0, v2, p2}, Lcom/android/server/am/-$$Lambda$ActivityManagerService$nLON5M4YCRoJpSNB1Y_UERhbBKo;-><init>(Lcom/android/server/am/ActivityManagerService;Lcom/android/server/am/ActivityRecord;Landroid/app/PictureInPictureParams;)V

    .line 9086
    invoke-virtual {p0}, Lcom/android/server/am/ActivityManagerService;->isKeyguardLocked()Z

    move-result p2
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_0

    if-eqz p2, :cond_2

    .line 9091
    :try_start_4
    new-instance p2, Lcom/android/server/am/ActivityManagerService$13;

    invoke-direct {p2, p0, v3}, Lcom/android/server/am/ActivityManagerService$13;-><init>(Lcom/android/server/am/ActivityManagerService;Ljava/lang/Runnable;)V

    const/4 v2, 0x0

    invoke-virtual {p0, p1, p2, v2}, Lcom/android/server/am/ActivityManagerService;->dismissKeyguard(Landroid/os/IBinder;Lcom/android/internal/policy/IKeyguardDismissCallback;Ljava/lang/CharSequence;)V
    :try_end_4
    .catch Landroid/os/RemoteException; {:try_start_4 .. :try_end_4} :catch_0
    .catchall {:try_start_4 .. :try_end_4} :catchall_0

    goto :goto_0

    .line 9097
    :catch_0
    move-exception p1

    .line 9099
    :goto_0
    goto :goto_1

    .line 9102
    :cond_2
    :try_start_5
    invoke-interface {v3}, Ljava/lang/Runnable;->run()V

    .line 9104
    :goto_1
    monitor-exit p0
    :try_end_5
    .catchall {:try_start_5 .. :try_end_5} :catchall_0

    .line 9107
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 9104
    return v4

    .line 9105
    :catchall_0
    move-exception p1

    :try_start_6
    monitor-exit p0
    :try_end_6
    .catchall {:try_start_6 .. :try_end_6} :catchall_0

    :try_start_7
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw p1
    :try_end_7
    .catchall {:try_start_7 .. :try_end_7} :catchall_1

    .line 9107
    :catchall_1
    move-exception p1

    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    throw p1
.end method

.method public final enterSafeMode()V
    .locals 1

    .line 14927
    monitor-enter p0

    :try_start_0
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    .line 14930
    iget-boolean v0, p0, Lcom/android/server/am/ActivityManagerService;->mSystemReady:Z
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    if-nez v0, :cond_0

    .line 14932
    :try_start_1
    invoke-static {}, Landroid/app/AppGlobals;->getPackageManager()Landroid/content/pm/IPackageManager;

    move-result-object v0

    invoke-interface {v0}, Landroid/content/pm/IPackageManager;->enterSafeMode()V
    :try_end_1
    .catch Landroid/os/RemoteException; {:try_start_1 .. :try_end_1} :catch_0
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 14934
    goto :goto_0

    .line 14933
    :catch_0
    move-exception v0

    .line 14937
    :cond_0
    :goto_0
    const/4 v0, 0x1

    :try_start_2
    iput-boolean v0, p0, Lcom/android/server/am/ActivityManagerService;->mSafeMode:Z

    .line 14938
    monitor-exit p0
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    .line 14939
    return-void

    .line 14938
    :catchall_0
    move-exception v0

    :try_start_3
    monitor-exit p0
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw v0
.end method

.method public exitFreeformMode(Landroid/os/IBinder;)V
    .locals 5
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Landroid/os/RemoteException;
        }
    .end annotation

    .line 11473
    monitor-enter p0

    :try_start_0
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    .line 11474
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_1

    .line 11476
    :try_start_1
    invoke-static {p1}, Lcom/android/server/am/ActivityRecord;->forTokenLocked(Landroid/os/IBinder;)Lcom/android/server/am/ActivityRecord;

    move-result-object v2

    .line 11477
    if-eqz v2, :cond_1

    .line 11482
    invoke-virtual {v2}, Lcom/android/server/am/ActivityRecord;->getStack()Lcom/android/server/am/ActivityStack;

    move-result-object p1

    .line 11483
    if-eqz p1, :cond_0

    invoke-virtual {p1}, Lcom/android/server/am/ActivityStack;->inFreeformWindowingMode()Z

    move-result v2

    if-eqz v2, :cond_0

    .line 11488
    const/4 v2, 0x1

    invoke-virtual {p1, v2}, Lcom/android/server/am/ActivityStack;->setWindowingMode(I)V
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 11490
    :try_start_2
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 11491
    nop

    .line 11492
    monitor-exit p0
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_1

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    .line 11493
    return-void

    .line 11484
    :cond_0
    :try_start_3
    new-instance p1, Ljava/lang/IllegalStateException;

    const-string v2, "exitFreeformMode: You can only go fullscreen from freeform."

    invoke-direct {p1, v2}, Ljava/lang/IllegalStateException;-><init>(Ljava/lang/String;)V

    throw p1

    .line 11478
    :cond_1
    new-instance v2, Ljava/lang/IllegalArgumentException;

    new-instance v3, Ljava/lang/StringBuilder;

    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V

    const-string v4, "exitFreeformMode: No activity record matching token="

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v3, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object p1

    invoke-direct {v2, p1}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v2
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_0

    .line 11490
    :catchall_0
    move-exception p1

    :try_start_4
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    throw p1

    .line 11492
    :catchall_1
    move-exception p1

    monitor-exit p0
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_1

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw p1
.end method

.method public final finishActivity(Landroid/os/IBinder;ILandroid/content/Intent;I)Z
    .locals 12

    move-object v1, p0

    .line 5832
    move/from16 v2, p4

    const/4 v3, 0x1

    if-eqz p3, :cond_1

    invoke-virtual {p3}, Landroid/content/Intent;->hasFileDescriptors()Z

    move-result v0

    if-eq v0, v3, :cond_0

    goto :goto_0

    .line 5833
    :cond_0
    new-instance v0, Ljava/lang/IllegalArgumentException;

    const-string v1, "File descriptors passed in Intent"

    invoke-direct {v0, v1}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v0

    .line 5836
    :cond_1
    :goto_0
    monitor-enter p0

    :try_start_0
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    .line 5837
    invoke-static {p1}, Lcom/android/server/am/ActivityRecord;->isInStackLocked(Landroid/os/IBinder;)Lcom/android/server/am/ActivityRecord;

    move-result-object v4

    .line 5838
    if-nez v4, :cond_2

    .line 5839
    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_1

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    return v3

    .line 5842
    :cond_2
    :try_start_1
    invoke-virtual {v4}, Lcom/android/server/am/ActivityRecord;->getTask()Lcom/android/server/am/TaskRecord;

    move-result-object v5

    .line 5843
    invoke-virtual {v5}, Lcom/android/server/am/TaskRecord;->getRootActivity()Lcom/android/server/am/ActivityRecord;

    move-result-object v6

    .line 5844
    if-nez v6, :cond_3

    .line 5845
    const-string v0, "ActivityManager"

    const-string v8, "Finishing task with all activities already finished"

    invoke-static {v0, v8}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 5849
    :cond_3
    iget-object v0, v1, Lcom/android/server/am/ActivityManagerService;->mLockTaskController:Lcom/android/server/am/LockTaskController;

    invoke-virtual {v0, v4}, Lcom/android/server/am/LockTaskController;->activityBlockedFromFinish(Lcom/android/server/am/ActivityRecord;)Z

    move-result v0

    const/4 v8, 0x0

    if-eqz v0, :cond_4

    .line 5850
    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_1

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    return v8

    .line 5853
    :cond_4
    :try_start_2
    iget-object v0, v1, Lcom/android/server/am/ActivityManagerService;->mController:Landroid/app/IActivityController;

    if-eqz v0, :cond_5

    .line 5855
    invoke-virtual {v4}, Lcom/android/server/am/ActivityRecord;->getStack()Lcom/android/server/am/ActivityStack;

    move-result-object v0

    move-object v9, p1

    invoke-virtual {v0, v9, v8}, Lcom/android/server/am/ActivityStack;->topRunningActivityLocked(Landroid/os/IBinder;I)Lcom/android/server/am/ActivityRecord;

    move-result-object v0
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_1

    .line 5856
    if-eqz v0, :cond_6

    .line 5858
    nop

    .line 5860
    :try_start_3
    iget-object v10, v1, Lcom/android/server/am/ActivityManagerService;->mController:Landroid/app/IActivityController;

    iget-object v0, v0, Lcom/android/server/am/ActivityRecord;->packageName:Ljava/lang/String;

    invoke-interface {v10, v0}, Landroid/app/IActivityController;->activityResuming(Ljava/lang/String;)Z

    move-result v0
    :try_end_3
    .catch Landroid/os/RemoteException; {:try_start_3 .. :try_end_3} :catch_0
    .catchall {:try_start_3 .. :try_end_3} :catchall_1

    .line 5864
    goto :goto_1

    .line 5861
    :catch_0
    move-exception v0

    .line 5862
    const/4 v0, 0x0

    :try_start_4
    iput-object v0, v1, Lcom/android/server/am/ActivityManagerService;->mController:Landroid/app/IActivityController;

    .line 5863
    invoke-static {}, Lcom/android/server/Watchdog;->getInstance()Lcom/android/server/Watchdog;

    move-result-object v10

    invoke-virtual {v10, v0}, Lcom/android/server/Watchdog;->setActivityController(Landroid/app/IActivityController;)V

    .line 5866
    move v0, v3

    :goto_1
    if-nez v0, :cond_6

    .line 5867
    const-string v0, "ActivityManager"

    const-string v2, "Not finishing activity because controller resumed"

    invoke-static {v0, v2}, Landroid/util/Slog;->i(Ljava/lang/String;Ljava/lang/String;)I

    .line 5868
    monitor-exit p0
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_1

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    return v8

    .line 5872
    :cond_5
    move-object v9, p1

    :cond_6
    :try_start_5
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v10
    :try_end_5
    .catchall {:try_start_5 .. :try_end_5} :catchall_1

    .line 5875
    if-ne v2, v3, :cond_7

    goto :goto_2

    .line 5877
    :cond_7
    move v3, v8

    :goto_2
    const/4 v0, 0x2

    if-eq v2, v0, :cond_9

    if-eqz v3, :cond_8

    if-ne v4, v6, :cond_8

    goto :goto_3

    .line 5890
    :cond_8
    :try_start_6
    invoke-virtual {v5}, Lcom/android/server/am/TaskRecord;->getStack()Lcom/android/server/am/ActivityStack;

    move-result-object v4

    const-string v8, "app-request"

    const/4 v0, 0x1

    move-object v5, v9

    move v6, p2

    move-object v7, p3

    move v9, v0

    invoke-virtual/range {v4 .. v9}, Lcom/android/server/am/ActivityStack;->requestFinishActivityLocked(Landroid/os/IBinder;ILandroid/content/Intent;Ljava/lang/String;Z)Z

    move-result v0

    .line 5892
    if-nez v0, :cond_a

    .line 5893
    const-string v2, "ActivityManager"

    const-string v3, "Failed to finish by app-request"

    invoke-static {v2, v3}, Landroid/util/Slog;->i(Ljava/lang/String;Ljava/lang/String;)I

    goto :goto_4

    .line 5884
    :cond_9
    :goto_3
    iget-object v0, v1, Lcom/android/server/am/ActivityManagerService;->mStackSupervisor:Lcom/android/server/am/ActivityStackSupervisor;

    iget v2, v5, Lcom/android/server/am/TaskRecord;->taskId:I

    const-string v4, "finish-activity"

    invoke-virtual {v0, v2, v8, v3, v4}, Lcom/android/server/am/ActivityStackSupervisor;->removeTaskByIdLocked(IZZLjava/lang/String;)Z

    move-result v0

    .line 5886
    if-nez v0, :cond_a

    .line 5887
    const-string v2, "ActivityManager"

    const-string v3, "Removing task failed to finish activity"

    invoke-static {v2, v3}, Landroid/util/Slog;->i(Ljava/lang/String;Ljava/lang/String;)I
    :try_end_6
    .catchall {:try_start_6 .. :try_end_6} :catchall_0

    .line 5896
    :cond_a
    :goto_4
    nop

    .line 5898
    :try_start_7
    invoke-static {v10, v11}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    monitor-exit p0
    :try_end_7
    .catchall {:try_start_7 .. :try_end_7} :catchall_1

    .line 5896
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    return v0

    .line 5898
    :catchall_0
    move-exception v0

    :try_start_8
    invoke-static {v10, v11}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    throw v0

    .line 5900
    :catchall_1
    move-exception v0

    monitor-exit p0
    :try_end_8
    .catchall {:try_start_8 .. :try_end_8} :catchall_1

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw v0
.end method

.method public finishActivityAffinity(Landroid/os/IBinder;)Z
    .locals 5

    .line 5969
    monitor-enter p0

    :try_start_0
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    .line 5970
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_1

    .line 5972
    :try_start_1
    invoke-static {p1}, Lcom/android/server/am/ActivityRecord;->isInStackLocked(Landroid/os/IBinder;)Lcom/android/server/am/ActivityRecord;

    move-result-object p1
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 5973
    const/4 v2, 0x0

    if-nez p1, :cond_0

    .line 5974
    nop

    .line 5985
    :try_start_2
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    monitor-exit p0
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_1

    .line 5974
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    return v2

    .line 5979
    :cond_0
    :try_start_3
    invoke-virtual {p1}, Lcom/android/server/am/ActivityRecord;->getTask()Lcom/android/server/am/TaskRecord;

    move-result-object v3

    .line 5980
    iget-object v4, p0, Lcom/android/server/am/ActivityManagerService;->mLockTaskController:Lcom/android/server/am/LockTaskController;

    invoke-virtual {v4, p1}, Lcom/android/server/am/LockTaskController;->activityBlockedFromFinish(Lcom/android/server/am/ActivityRecord;)Z

    move-result v4
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_0

    if-eqz v4, :cond_1

    .line 5981
    nop

    .line 5985
    :try_start_4
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    monitor-exit p0
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_1

    .line 5981
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    return v2

    .line 5983
    :cond_1
    :try_start_5
    invoke-virtual {v3}, Lcom/android/server/am/TaskRecord;->getStack()Lcom/android/server/am/ActivityStack;

    move-result-object v2

    invoke-virtual {v2, p1}, Lcom/android/server/am/ActivityStack;->finishActivityAffinityLocked(Lcom/android/server/am/ActivityRecord;)Z

    move-result p1
    :try_end_5
    .catchall {:try_start_5 .. :try_end_5} :catchall_0

    .line 5985
    :try_start_6
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    monitor-exit p0
    :try_end_6
    .catchall {:try_start_6 .. :try_end_6} :catchall_1

    .line 5983
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    return p1

    .line 5985
    :catchall_0
    move-exception p1

    :try_start_7
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    throw p1

    .line 5987
    :catchall_1
    move-exception p1

    monitor-exit p0
    :try_end_7
    .catchall {:try_start_7 .. :try_end_7} :catchall_1

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw p1
.end method

.method final finishBooting()V
    .locals 12

    .line 8219
    monitor-enter p0

    :try_start_0
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    .line 8220
    iget-boolean v0, p0, Lcom/android/server/am/ActivityManagerService;->mBootAnimationComplete:Z

    const/4 v1, 0x1

    if-nez v0, :cond_0

    .line 8221
    iput-boolean v1, p0, Lcom/android/server/am/ActivityManagerService;->mCallFinishBooting:Z

    .line 8222
    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_1

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    return-void

    .line 8224
    :cond_0
    const/4 v0, 0x0

    :try_start_1
    iput-boolean v0, p0, Lcom/android/server/am/ActivityManagerService;->mCallFinishBooting:Z

    .line 8225
    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_1

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    .line 8227
    new-instance v2, Landroid/util/ArraySet;

    invoke-direct {v2}, Landroid/util/ArraySet;-><init>()V

    .line 8228
    sget-object v3, Landroid/os/Build;->SUPPORTED_ABIS:[Ljava/lang/String;

    array-length v4, v3

    move v5, v0

    :goto_0
    if-ge v5, v4, :cond_2

    aget-object v6, v3, v5

    .line 8229
    sget-object v7, Landroid/os/Process;->zygoteProcess:Landroid/os/ZygoteProcess;

    invoke-virtual {v7, v6}, Landroid/os/ZygoteProcess;->establishZygoteConnectionForAbi(Ljava/lang/String;)V

    .line 8230
    invoke-static {v6}, Ldalvik/system/VMRuntime;->getInstructionSet(Ljava/lang/String;)Ljava/lang/String;

    move-result-object v7

    .line 8231
    invoke-virtual {v2, v7}, Landroid/util/ArraySet;->contains(Ljava/lang/Object;)Z

    move-result v8

    if-nez v8, :cond_1

    .line 8233
    :try_start_2
    iget-object v8, p0, Lcom/android/server/am/ActivityManagerService;->mInstaller:Lcom/android/server/pm/Installer;

    invoke-static {v6}, Ldalvik/system/VMRuntime;->getInstructionSet(Ljava/lang/String;)Ljava/lang/String;

    move-result-object v9

    invoke-virtual {v8, v9}, Lcom/android/server/pm/Installer;->markBootComplete(Ljava/lang/String;)V
    :try_end_2
    .catch Lcom/android/server/pm/Installer$InstallerException; {:try_start_2 .. :try_end_2} :catch_0

    .line 8237
    goto :goto_1

    .line 8234
    :catch_0
    move-exception v8

    .line 8235
    const-string v9, "ActivityManager"

    new-instance v10, Ljava/lang/StringBuilder;

    invoke-direct {v10}, Ljava/lang/StringBuilder;-><init>()V

    const-string v11, "Unable to mark boot complete for abi: "

    invoke-virtual {v10, v11}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v10, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v6, " ("

    invoke-virtual {v10, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 8236
    invoke-virtual {v8}, Lcom/android/server/pm/Installer$InstallerException;->getMessage()Ljava/lang/String;

    move-result-object v6

    invoke-virtual {v10, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v6, ")"

    invoke-virtual {v10, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v10}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v6

    .line 8235
    invoke-static {v9, v6}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 8238
    :goto_1
    invoke-virtual {v2, v7}, Landroid/util/ArraySet;->add(Ljava/lang/Object;)Z

    .line 8228
    :cond_1
    add-int/lit8 v5, v5, 0x1

    goto :goto_0

    .line 8242
    :cond_2
    new-instance v2, Landroid/content/IntentFilter;

    invoke-direct {v2}, Landroid/content/IntentFilter;-><init>()V

    .line 8243
    const-string v3, "android.intent.action.QUERY_PACKAGE_RESTART"

    invoke-virtual {v2, v3}, Landroid/content/IntentFilter;->addAction(Ljava/lang/String;)V

    .line 8244
    const-string/jumbo v3, "package"

    invoke-virtual {v2, v3}, Landroid/content/IntentFilter;->addDataScheme(Ljava/lang/String;)V

    .line 8245
    iget-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mContext:Landroid/content/Context;

    new-instance v4, Lcom/android/server/am/ActivityManagerService$9;

    invoke-direct {v4, p0}, Lcom/android/server/am/ActivityManagerService$9;-><init>(Lcom/android/server/am/ActivityManagerService;)V

    invoke-virtual {v3, v4, v2}, Landroid/content/Context;->registerReceiver(Landroid/content/BroadcastReceiver;Landroid/content/IntentFilter;)Landroid/content/Intent;

    .line 8263
    new-instance v2, Landroid/content/IntentFilter;

    invoke-direct {v2}, Landroid/content/IntentFilter;-><init>()V

    .line 8264
    const-string v3, "com.android.server.am.DELETE_DUMPHEAP"

    invoke-virtual {v2, v3}, Landroid/content/IntentFilter;->addAction(Ljava/lang/String;)V

    .line 8265
    iget-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mContext:Landroid/content/Context;

    new-instance v4, Lcom/android/server/am/ActivityManagerService$10;

    invoke-direct {v4, p0}, Lcom/android/server/am/ActivityManagerService$10;-><init>(Lcom/android/server/am/ActivityManagerService;)V

    invoke-virtual {v3, v4, v2}, Landroid/content/Context;->registerReceiver(Landroid/content/BroadcastReceiver;Landroid/content/IntentFilter;)Landroid/content/Intent;

    .line 8277
    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mSystemServiceManager:Lcom/android/server/SystemServiceManager;

    const/16 v3, 0x3e8

    invoke-virtual {v2, v3}, Lcom/android/server/SystemServiceManager;->startBootPhase(I)V

    .line 8279
    monitor-enter p0

    :try_start_3
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    .line 8282
    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mProcessesOnHold:Ljava/util/ArrayList;

    invoke-virtual {v2}, Ljava/util/ArrayList;->size()I

    move-result v2

    .line 8283
    if-lez v2, :cond_3

    .line 8284
    new-instance v3, Ljava/util/ArrayList;

    iget-object v4, p0, Lcom/android/server/am/ActivityManagerService;->mProcessesOnHold:Ljava/util/ArrayList;

    invoke-direct {v3, v4}, Ljava/util/ArrayList;-><init>(Ljava/util/Collection;)V

    .line 8286
    :goto_2
    if-ge v0, v2, :cond_3

    .line 8289
    invoke-virtual {v3, v0}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v4

    check-cast v4, Lcom/android/server/am/ProcessRecord;

    const-string v5, "on-hold"

    const/4 v6, 0x0

    invoke-direct {p0, v4, v5, v6}, Lcom/android/server/am/ActivityManagerService;->startProcessLocked(Lcom/android/server/am/ProcessRecord;Ljava/lang/String;Ljava/lang/String;)V

    .line 8286
    add-int/lit8 v0, v0, 0x1

    goto :goto_2

    .line 8292
    :cond_3
    iget v0, p0, Lcom/android/server/am/ActivityManagerService;->mFactoryTest:I

    if-ne v0, v1, :cond_4

    .line 8293
    monitor-exit p0
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    return-void

    .line 8296
    :cond_4
    :try_start_4
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    const/16 v1, 0x1b

    invoke-virtual {v0, v1}, Lcom/android/server/am/ActivityManagerService$MainHandler;->obtainMessage(I)Landroid/os/Message;

    move-result-object v0

    .line 8297
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mConstants:Lcom/android/server/am/ActivityManagerConstants;

    iget-wide v2, v2, Lcom/android/server/am/ActivityManagerConstants;->POWER_CHECK_INTERVAL:J

    invoke-virtual {v1, v0, v2, v3}, Lcom/android/server/am/ActivityManagerService$MainHandler;->sendMessageDelayed(Landroid/os/Message;J)Z

    .line 8299
    const-string/jumbo v0, "sys.boot_completed"

    const-string v1, "1"

    invoke-static {v0, v1}, Landroid/os/SystemProperties;->set(Ljava/lang/String;Ljava/lang/String;)V

    .line 8302
    const-string/jumbo v0, "trigger_restart_min_framework"

    const-string/jumbo v1, "vold.decrypt"

    invoke-static {v1}, Landroid/os/SystemProperties;->get(Ljava/lang/String;)Ljava/lang/String;

    move-result-object v1

    invoke-virtual {v0, v1}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v0

    if-eqz v0, :cond_5

    const-string v0, ""

    const-string/jumbo v1, "vold.encrypt_progress"

    .line 8303
    invoke-static {v1}, Landroid/os/SystemProperties;->get(Ljava/lang/String;)Ljava/lang/String;

    move-result-object v1

    invoke-virtual {v0, v1}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v0

    if-eqz v0, :cond_6

    .line 8304
    :cond_5
    const-string v0, "dev.bootcomplete"

    const-string v1, "1"

    invoke-static {v0, v1}, Landroid/os/SystemProperties;->set(Ljava/lang/String;Ljava/lang/String;)V

    .line 8306
    :cond_6
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mUserController:Lcom/android/server/am/UserController;

    new-instance v1, Lcom/android/server/am/ActivityManagerService$11;

    invoke-direct {v1, p0}, Lcom/android/server/am/ActivityManagerService$11;-><init>(Lcom/android/server/am/ActivityManagerService;)V

    invoke-virtual {v0, v1}, Lcom/android/server/am/UserController;->sendBootCompleted(Landroid/content/IIntentReceiver;)V

    .line 8317
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mUserController:Lcom/android/server/am/UserController;

    invoke-virtual {v0}, Lcom/android/server/am/UserController;->scheduleStartProfiles()V

    .line 8318
    monitor-exit p0
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    .line 8319
    return-void

    .line 8318
    :catchall_0
    move-exception v0

    :try_start_5
    monitor-exit p0
    :try_end_5
    .catchall {:try_start_5 .. :try_end_5} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw v0

    .line 8225
    :catchall_1
    move-exception v0

    :try_start_6
    monitor-exit p0
    :try_end_6
    .catchall {:try_start_6 .. :try_end_6} :catchall_1

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw v0
.end method

.method public final finishHeavyWeightApp()V
    .locals 11

    .line 5905
    const-string v0, "android.permission.FORCE_STOP_PACKAGES"

    invoke-virtual {p0, v0}, Lcom/android/server/am/ActivityManagerService;->checkCallingPermission(Ljava/lang/String;)I

    move-result v0

    if-nez v0, :cond_3

    .line 5915
    monitor-enter p0

    :try_start_0
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    .line 5916
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mHeavyWeightProcess:Lcom/android/server/am/ProcessRecord;

    .line 5917
    if-nez v0, :cond_0

    .line 5918
    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    return-void

    .line 5921
    :cond_0
    :try_start_1
    new-instance v1, Ljava/util/ArrayList;

    iget-object v2, v0, Lcom/android/server/am/ProcessRecord;->activities:Ljava/util/ArrayList;

    invoke-direct {v1, v2}, Ljava/util/ArrayList;-><init>(Ljava/util/Collection;)V

    .line 5922
    const/4 v2, 0x0

    move v3, v2

    :goto_0
    invoke-virtual {v1}, Ljava/util/ArrayList;->size()I

    move-result v4

    if-ge v3, v4, :cond_2

    .line 5923
    invoke-virtual {v1, v3}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v4

    move-object v6, v4

    check-cast v6, Lcom/android/server/am/ActivityRecord;

    .line 5924
    iget-boolean v4, v6, Lcom/android/server/am/ActivityRecord;->finishing:Z

    if-nez v4, :cond_1

    invoke-virtual {v6}, Lcom/android/server/am/ActivityRecord;->isInStackLocked()Z

    move-result v4

    if-eqz v4, :cond_1

    .line 5925
    invoke-virtual {v6}, Lcom/android/server/am/ActivityRecord;->getStack()Lcom/android/server/am/ActivityStack;

    move-result-object v5

    const/4 v7, 0x0

    const/4 v8, 0x0

    const-string v9, "finish-heavy"

    const/4 v10, 0x1

    invoke-virtual/range {v5 .. v10}, Lcom/android/server/am/ActivityStack;->finishActivityLocked(Lcom/android/server/am/ActivityRecord;ILandroid/content/Intent;Ljava/lang/String;Z)Z

    .line 5922
    :cond_1
    add-int/lit8 v3, v3, 0x1

    goto :goto_0

    .line 5930
    :cond_2
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    iget-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    const/16 v4, 0x19

    iget v0, v0, Lcom/android/server/am/ProcessRecord;->userId:I

    invoke-virtual {v3, v4, v0, v2}, Lcom/android/server/am/ActivityManagerService$MainHandler;->obtainMessage(III)Landroid/os/Message;

    move-result-object v0

    invoke-virtual {v1, v0}, Lcom/android/server/am/ActivityManagerService$MainHandler;->sendMessage(Landroid/os/Message;)Z

    .line 5932
    const/4 v0, 0x0

    iput-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mHeavyWeightProcess:Lcom/android/server/am/ProcessRecord;

    .line 5933
    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    .line 5934
    return-void

    .line 5933
    :catchall_0
    move-exception v0

    :try_start_2
    monitor-exit p0
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw v0

    .line 5907
    :cond_3
    new-instance v0, Ljava/lang/StringBuilder;

    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V

    const-string v1, "Permission Denial: finishHeavyWeightApp() from pid="

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 5908
    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result v1

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v1, ", uid="

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 5909
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v1

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v1, " requires "

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v1, "android.permission.FORCE_STOP_PACKAGES"

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    .line 5911
    const-string v1, "ActivityManager"

    invoke-static {v1, v0}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 5912
    new-instance v1, Ljava/lang/SecurityException;

    invoke-direct {v1, v0}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v1
.end method

.method public finishInstrumentation(Landroid/app/IApplicationThread;ILandroid/os/Bundle;)V
    .locals 3

    .line 22566
    invoke-static {}, Landroid/os/UserHandle;->getCallingUserId()I

    .line 22568
    if-eqz p3, :cond_1

    invoke-virtual {p3}, Landroid/os/Bundle;->hasFileDescriptors()Z

    move-result v0

    if-nez v0, :cond_0

    goto :goto_0

    .line 22569
    :cond_0
    new-instance p1, Ljava/lang/IllegalArgumentException;

    const-string p2, "File descriptors passed in Intent"

    invoke-direct {p1, p2}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw p1

    .line 22572
    :cond_1
    :goto_0
    monitor-enter p0

    :try_start_0
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    .line 22573
    invoke-virtual {p0, p1}, Lcom/android/server/am/ActivityManagerService;->getRecordForAppLocked(Landroid/app/IApplicationThread;)Lcom/android/server/am/ProcessRecord;

    move-result-object v0

    .line 22574
    if-nez v0, :cond_2

    .line 22575
    const-string p2, "ActivityManager"

    new-instance p3, Ljava/lang/StringBuilder;

    invoke-direct {p3}, Ljava/lang/StringBuilder;-><init>()V

    const-string v0, "finishInstrumentation: no app for "

    invoke-virtual {p3, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {p3, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    invoke-virtual {p3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object p1

    invoke-static {p2, p1}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 22576
    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    return-void

    .line 22578
    :cond_2
    :try_start_1
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v1

    .line 22579
    invoke-virtual {p0, v0, p2, p3}, Lcom/android/server/am/ActivityManagerService;->finishInstrumentationLocked(Lcom/android/server/am/ProcessRecord;ILandroid/os/Bundle;)V

    .line 22580
    invoke-static {v1, v2}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 22581
    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    .line 22582
    return-void

    .line 22581
    :catchall_0
    move-exception p1

    :try_start_2
    monitor-exit p0
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw p1
.end method

.method finishInstrumentationLocked(Lcom/android/server/am/ProcessRecord;ILandroid/os/Bundle;)V
    .locals 10
    .annotation build Lcom/android/internal/annotations/GuardedBy;
        value = "this"
    .end annotation

    .line 22530
    iget-object v0, p1, Lcom/android/server/am/ProcessRecord;->instr:Lcom/android/server/am/ActiveInstrumentation;

    if-nez v0, :cond_0

    .line 22531
    const-string p2, "ActivityManager"

    new-instance p3, Ljava/lang/StringBuilder;

    invoke-direct {p3}, Ljava/lang/StringBuilder;-><init>()V

    const-string v0, "finishInstrumentation called on non-instrumented: "

    invoke-virtual {p3, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {p3, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    invoke-virtual {p3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object p1

    invoke-static {p2, p1}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 22532
    return-void

    .line 22535
    :cond_0
    iget-object v0, p1, Lcom/android/server/am/ProcessRecord;->instr:Lcom/android/server/am/ActiveInstrumentation;

    iget-boolean v0, v0, Lcom/android/server/am/ActiveInstrumentation;->mFinished:Z

    if-nez v0, :cond_5

    .line 22536
    iget-object v0, p1, Lcom/android/server/am/ProcessRecord;->instr:Lcom/android/server/am/ActiveInstrumentation;

    iget-object v0, v0, Lcom/android/server/am/ActiveInstrumentation;->mWatcher:Landroid/app/IInstrumentationWatcher;

    if-eqz v0, :cond_3

    .line 22537
    iget-object v0, p1, Lcom/android/server/am/ProcessRecord;->instr:Lcom/android/server/am/ActiveInstrumentation;

    iget-object v0, v0, Lcom/android/server/am/ActiveInstrumentation;->mCurResults:Landroid/os/Bundle;

    .line 22538
    if-eqz v0, :cond_2

    .line 22539
    iget-object v1, p1, Lcom/android/server/am/ProcessRecord;->instr:Lcom/android/server/am/ActiveInstrumentation;

    iget-object v1, v1, Lcom/android/server/am/ActiveInstrumentation;->mCurResults:Landroid/os/Bundle;

    if-eqz v1, :cond_1

    if-eqz p3, :cond_1

    .line 22540
    invoke-virtual {v0, p3}, Landroid/os/Bundle;->putAll(Landroid/os/Bundle;)V

    .line 22545
    :cond_1
    move-object p3, v0

    goto :goto_0

    .line 22543
    :cond_2
    nop

    .line 22545
    :goto_0
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mInstrumentationReporter:Lcom/android/server/am/InstrumentationReporter;

    iget-object v1, p1, Lcom/android/server/am/ProcessRecord;->instr:Lcom/android/server/am/ActiveInstrumentation;

    iget-object v1, v1, Lcom/android/server/am/ActiveInstrumentation;->mWatcher:Landroid/app/IInstrumentationWatcher;

    iget-object v2, p1, Lcom/android/server/am/ProcessRecord;->instr:Lcom/android/server/am/ActiveInstrumentation;

    iget-object v2, v2, Lcom/android/server/am/ActiveInstrumentation;->mClass:Landroid/content/ComponentName;

    invoke-virtual {v0, v1, v2, p2, p3}, Lcom/android/server/am/InstrumentationReporter;->reportFinished(Landroid/app/IInstrumentationWatcher;Landroid/content/ComponentName;ILandroid/os/Bundle;)V

    .line 22550
    :cond_3
    iget-object p2, p1, Lcom/android/server/am/ProcessRecord;->instr:Lcom/android/server/am/ActiveInstrumentation;

    iget-object p2, p2, Lcom/android/server/am/ActiveInstrumentation;->mUiAutomationConnection:Landroid/app/IUiAutomationConnection;

    if-eqz p2, :cond_4

    .line 22551
    iget-object p2, p0, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    const/16 p3, 0x38

    iget-object v0, p1, Lcom/android/server/am/ProcessRecord;->instr:Lcom/android/server/am/ActiveInstrumentation;

    iget-object v0, v0, Lcom/android/server/am/ActiveInstrumentation;->mUiAutomationConnection:Landroid/app/IUiAutomationConnection;

    invoke-virtual {p2, p3, v0}, Lcom/android/server/am/ActivityManagerService$MainHandler;->obtainMessage(ILjava/lang/Object;)Landroid/os/Message;

    move-result-object p2

    .line 22552
    invoke-virtual {p2}, Landroid/os/Message;->sendToTarget()V

    .line 22554
    :cond_4
    iget-object p2, p1, Lcom/android/server/am/ProcessRecord;->instr:Lcom/android/server/am/ActiveInstrumentation;

    const/4 p3, 0x1

    iput-boolean p3, p2, Lcom/android/server/am/ActiveInstrumentation;->mFinished:Z

    .line 22557
    :cond_5
    iget-object p2, p1, Lcom/android/server/am/ProcessRecord;->instr:Lcom/android/server/am/ActiveInstrumentation;

    invoke-virtual {p2, p1}, Lcom/android/server/am/ActiveInstrumentation;->removeProcess(Lcom/android/server/am/ProcessRecord;)V

    .line 22558
    const/4 p2, 0x0

    iput-object p2, p1, Lcom/android/server/am/ProcessRecord;->instr:Lcom/android/server/am/ActiveInstrumentation;

    .line 22560
    iget-object p2, p1, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget-object v1, p2, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;

    const/4 v2, -0x1

    const/4 v3, 0x0

    const/4 v4, 0x0

    const/4 v5, 0x1

    const/4 v6, 0x1

    const/4 v7, 0x0

    iget v8, p1, Lcom/android/server/am/ProcessRecord;->userId:I

    const-string v9, "finished inst"

    move-object v0, p0

    invoke-virtual/range {v0 .. v9}, Lcom/android/server/am/ActivityManagerService;->forceStopPackageLocked(Ljava/lang/String;IZZZZZILjava/lang/String;)Z

    .line 22562
    return-void
.end method

.method public finishReceiver(Landroid/os/IBinder;ILjava/lang/String;Landroid/os/Bundle;ZI)V
    .locals 9

    .line 22339
    if-eqz p4, :cond_1

    invoke-virtual {p4}, Landroid/os/Bundle;->hasFileDescriptors()Z

    move-result v0

    if-nez v0, :cond_0

    goto :goto_0

    .line 22340
    :cond_0
    new-instance p1, Ljava/lang/IllegalArgumentException;

    const-string p2, "File descriptors passed in Bundle"

    invoke-direct {p1, p2}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw p1

    .line 22343
    :cond_1
    :goto_0
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v0

    .line 22345
    nop

    .line 22348
    :try_start_0
    monitor-enter p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_1

    :try_start_1
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    .line 22349
    const/high16 v2, 0x10000000

    and-int/2addr p6, v2

    if-eqz p6, :cond_2

    .line 22350
    iget-object p6, p0, Lcom/android/server/am/ActivityManagerService;->mFgBroadcastQueue:Lcom/android/server/am/BroadcastQueue;

    goto :goto_1

    :cond_2
    iget-object p6, p0, Lcom/android/server/am/ActivityManagerService;->mBgBroadcastQueue:Lcom/android/server/am/BroadcastQueue;

    .line 22351
    :goto_1
    invoke-virtual {p6, p1}, Lcom/android/server/am/BroadcastQueue;->getMatchingOrderedReceiver(Landroid/os/IBinder;)Lcom/android/server/am/BroadcastRecord;

    move-result-object p1

    .line 22352
    const/4 p6, 0x0

    if-eqz p1, :cond_3

    .line 22353
    iget-object v2, p1, Lcom/android/server/am/BroadcastRecord;->queue:Lcom/android/server/am/BroadcastQueue;

    const/4 v8, 0x1

    move-object v3, p1

    move v4, p2

    move-object v5, p3

    move-object v6, p4

    move v7, p5

    invoke-virtual/range {v2 .. v8}, Lcom/android/server/am/BroadcastQueue;->finishReceiverLocked(Lcom/android/server/am/BroadcastRecord;ILjava/lang/String;Landroid/os/Bundle;ZZ)Z

    move-result p2

    goto :goto_2

    .line 22356
    :cond_3
    move p2, p6

    :goto_2
    if-eqz p2, :cond_4

    .line 22357
    iget-object p1, p1, Lcom/android/server/am/BroadcastRecord;->queue:Lcom/android/server/am/BroadcastQueue;

    const/4 p2, 0x1

    invoke-virtual {p1, p6, p2}, Lcom/android/server/am/BroadcastQueue;->processNextBroadcastLocked(ZZ)V

    .line 22360
    :cond_4
    invoke-virtual {p0}, Lcom/android/server/am/ActivityManagerService;->trimApplicationsLocked()V

    .line 22361
    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    :try_start_2
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_1

    .line 22364
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 22365
    nop

    .line 22366
    return-void

    .line 22361
    :catchall_0
    move-exception p1

    :try_start_3
    monitor-exit p0
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_0

    :try_start_4
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw p1
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_1

    .line 22364
    :catchall_1
    move-exception p1

    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    throw p1
.end method

.method finishRunningVoiceLocked()V
    .locals 1
    .annotation build Lcom/android/internal/annotations/GuardedBy;
        value = "this"
    .end annotation

    .line 13576
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mRunningVoice:Landroid/service/voice/IVoiceInteractionSession;

    if-eqz v0, :cond_0

    .line 13577
    const/4 v0, 0x0

    iput-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mRunningVoice:Landroid/service/voice/IVoiceInteractionSession;

    .line 13578
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mVoiceWakeLock:Landroid/os/PowerManager$WakeLock;

    invoke-virtual {v0}, Landroid/os/PowerManager$WakeLock;->release()V

    .line 13579
    invoke-virtual {p0}, Lcom/android/server/am/ActivityManagerService;->updateSleepIfNeededLocked()V

    .line 13581
    :cond_0
    return-void
.end method

.method public final finishSubActivity(Landroid/os/IBinder;Ljava/lang/String;I)V
    .locals 3

    .line 5957
    monitor-enter p0

    :try_start_0
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    .line 5958
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v0

    .line 5959
    invoke-static {p1}, Lcom/android/server/am/ActivityRecord;->isInStackLocked(Landroid/os/IBinder;)Lcom/android/server/am/ActivityRecord;

    move-result-object p1

    .line 5960
    if-eqz p1, :cond_0

    .line 5961
    invoke-virtual {p1}, Lcom/android/server/am/ActivityRecord;->getStack()Lcom/android/server/am/ActivityStack;

    move-result-object v2

    invoke-virtual {v2, p1, p2, p3}, Lcom/android/server/am/ActivityStack;->finishSubActivityLocked(Lcom/android/server/am/ActivityRecord;Ljava/lang/String;I)V

    .line 5963
    :cond_0
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 5964
    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    .line 5965
    return-void

    .line 5964
    :catchall_0
    move-exception p1

    :try_start_1
    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw p1
.end method

.method public finishVoiceTask(Landroid/service/voice/IVoiceInteractionSession;)V
    .locals 3

    .line 5992
    monitor-enter p0

    :try_start_0
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    .line 5993
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_1

    .line 5997
    :try_start_1
    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mStackSupervisor:Lcom/android/server/am/ActivityStackSupervisor;

    invoke-virtual {v2, p1}, Lcom/android/server/am/ActivityStackSupervisor;->finishVoiceTask(Landroid/service/voice/IVoiceInteractionSession;)V
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 5999
    :try_start_2
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 6000
    nop

    .line 6001
    monitor-exit p0
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_1

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    .line 6003
    return-void

    .line 5999
    :catchall_0
    move-exception p1

    :try_start_3
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    throw p1

    .line 6001
    :catchall_1
    move-exception p1

    monitor-exit p0
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_1

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw p1
.end method

.method public forceStopPackage(Ljava/lang/String;I)V
    .locals 17

    move-object/from16 v1, p0

    move-object/from16 v2, p1

    .line 6997
    const-string v0, "android.permission.FORCE_STOP_PACKAGES"

    invoke-virtual {v1, v0}, Lcom/android/server/am/ActivityManagerService;->checkCallingPermission(Ljava/lang/String;)I

    move-result v0

    if-nez v0, :cond_5

    .line 7006
    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result v11

    .line 7007
    iget-object v3, v1, Lcom/android/server/am/ActivityManagerService;->mUserController:Lcom/android/server/am/UserController;

    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v5

    const/4 v7, 0x1

    const/4 v8, 0x2

    const-string v9, "forceStopPackage"

    const/4 v10, 0x0

    move v4, v11

    move/from16 v6, p2

    invoke-virtual/range {v3 .. v10}, Lcom/android/server/am/UserController;->handleIncomingUser(IIIZILjava/lang/String;Ljava/lang/String;)I

    move-result v0

    .line 7009
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v3

    .line 7011
    :try_start_0
    invoke-static {}, Landroid/app/AppGlobals;->getPackageManager()Landroid/content/pm/IPackageManager;

    move-result-object v5

    .line 7012
    monitor-enter p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_1

    :try_start_1
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    .line 7013
    const/4 v6, 0x0

    const/4 v7, 0x1

    const/4 v8, -0x1

    if-ne v0, v8, :cond_0

    .line 7014
    iget-object v0, v1, Lcom/android/server/am/ActivityManagerService;->mUserController:Lcom/android/server/am/UserController;

    invoke-virtual {v0}, Lcom/android/server/am/UserController;->getUsers()[I

    move-result-object v0

    .line 7015
    move-object v9, v0

    goto :goto_0

    .line 7014
    :cond_0
    new-array v9, v7, [I

    aput v0, v9, v6

    .line 7015
    :goto_0
    array-length v10, v9

    move v12, v6

    :goto_1
    if-ge v12, v10, :cond_4

    aget v13, v9, v12

    .line 7016
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/am/ActivityManagerService;->getPackageManagerInternalLocked()Landroid/content/pm/PackageManagerInternal;

    move-result-object v0

    invoke-virtual {v0, v2, v13}, Landroid/content/pm/PackageManagerInternal;->isPackageStateProtected(Ljava/lang/String;I)Z

    move-result v0

    if-eqz v0, :cond_1

    .line 7018
    const-string v0, "ActivityManager"

    new-instance v5, Ljava/lang/StringBuilder;

    invoke-direct {v5}, Ljava/lang/StringBuilder;-><init>()V

    const-string v6, "Ignoring request to force stop protected package "

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v5, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v2, " u"

    invoke-virtual {v5, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v5, v13}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v5}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v2

    invoke-static {v0, v2}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 7020
    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 7047
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    invoke-static {v3, v4}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 7020
    return-void

    .line 7023
    :cond_1
    nop

    .line 7025
    const/high16 v0, 0x10000000

    :try_start_2
    invoke-interface {v5, v2, v0, v13}, Landroid/content/pm/IPackageManager;->getPackageUid(Ljava/lang/String;II)I

    move-result v0
    :try_end_2
    .catch Landroid/os/RemoteException; {:try_start_2 .. :try_end_2} :catch_0
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    .line 7028
    nop

    .line 7029
    move v14, v0

    goto :goto_2

    .line 7027
    :catch_0
    move-exception v0

    .line 7029
    move v14, v8

    :goto_2
    if-ne v14, v8, :cond_2

    .line 7030
    :try_start_3
    const-string v0, "ActivityManager"

    new-instance v13, Ljava/lang/StringBuilder;

    invoke-direct {v13}, Ljava/lang/StringBuilder;-><init>()V

    const-string v14, "Invalid packageName: "

    invoke-virtual {v13, v14}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v13, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v13}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v13

    invoke-static {v0, v13}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_0

    .line 7031
    goto :goto_5

    .line 7034
    :cond_2
    :try_start_4
    invoke-interface {v5, v2, v7, v13}, Landroid/content/pm/IPackageManager;->setPackageStoppedState(Ljava/lang/String;ZI)V
    :try_end_4
    .catch Landroid/os/RemoteException; {:try_start_4 .. :try_end_4} :catch_2
    .catch Ljava/lang/IllegalArgumentException; {:try_start_4 .. :try_end_4} :catch_1
    .catchall {:try_start_4 .. :try_end_4} :catchall_0

    .line 7039
    :goto_3
    goto :goto_4

    .line 7036
    :catch_1
    move-exception v0

    .line 7037
    :try_start_5
    const-string v15, "ActivityManager"

    new-instance v7, Ljava/lang/StringBuilder;

    invoke-direct {v7}, Ljava/lang/StringBuilder;-><init>()V

    const-string v8, "Failed trying to unstop package "

    invoke-virtual {v7, v8}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v7, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v8, ": "

    invoke-virtual {v7, v8}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-object v8, v0

    invoke-virtual {v7, v8}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    invoke-virtual {v7}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    invoke-static {v15, v0}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    goto :goto_4

    .line 7035
    :catch_2
    move-exception v0

    goto :goto_3

    .line 7040
    :goto_4
    iget-object v0, v1, Lcom/android/server/am/ActivityManagerService;->mUserController:Lcom/android/server/am/UserController;

    invoke-virtual {v0, v13, v6}, Lcom/android/server/am/UserController;->isUserRunning(II)Z

    move-result v0

    if-eqz v0, :cond_3

    .line 7041
    new-instance v0, Ljava/lang/StringBuilder;

    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V

    const-string v7, "from pid "

    invoke-virtual {v0, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0, v11}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    invoke-direct {v1, v2, v14, v0}, Lcom/android/server/am/ActivityManagerService;->forceStopPackageLocked(Ljava/lang/String;ILjava/lang/String;)V

    .line 7042
    invoke-direct {v1, v2, v14}, Lcom/android/server/am/ActivityManagerService;->finishForceStopPackageLocked(Ljava/lang/String;I)V

    .line 7015
    :cond_3
    :goto_5
    add-int/lit8 v12, v12, 0x1

    const/4 v7, 0x1

    const/4 v8, -0x1

    goto/16 :goto_1

    .line 7045
    :cond_4
    monitor-exit p0
    :try_end_5
    .catchall {:try_start_5 .. :try_end_5} :catchall_0

    :try_start_6
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V
    :try_end_6
    .catchall {:try_start_6 .. :try_end_6} :catchall_1

    .line 7047
    invoke-static {v3, v4}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 7048
    nop

    .line 7049
    return-void

    .line 7045
    :catchall_0
    move-exception v0

    :try_start_7
    monitor-exit p0
    :try_end_7
    .catchall {:try_start_7 .. :try_end_7} :catchall_0

    :try_start_8
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw v0
    :try_end_8
    .catchall {:try_start_8 .. :try_end_8} :catchall_1

    .line 7047
    :catchall_1
    move-exception v0

    invoke-static {v3, v4}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    throw v0

    .line 6999
    :cond_5
    new-instance v0, Ljava/lang/StringBuilder;

    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V

    const-string v1, "Permission Denial: forceStopPackage() from pid="

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 7000
    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result v1

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v1, ", uid="

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 7001
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v1

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v1, " requires "

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v1, "android.permission.FORCE_STOP_PACKAGES"

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    .line 7003
    const-string v1, "ActivityManager"

    invoke-static {v1, v0}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 7004
    new-instance v1, Ljava/lang/SecurityException;

    invoke-direct {v1, v0}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v1
.end method

.method final forceStopPackageLocked(Ljava/lang/String;IZZZZZILjava/lang/String;)Z
    .locals 18
    .annotation build Lcom/android/internal/annotations/GuardedBy;
        value = "this"
    .end annotation

    move-object/from16 v11, p0

    move-object/from16 v12, p1

    move/from16 v13, p5

    move/from16 v14, p8

    .line 7439
    move-object/from16 v1, p9

    const/4 v15, -0x1

    if-ne v14, v15, :cond_0

    if-nez v12, :cond_0

    .line 7440
    const-string v0, "ActivityManager"

    const-string v2, "Can\'t force stop all processes of all users, that is insane!"

    invoke-static {v0, v2}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 7443
    :cond_0
    const/4 v10, 0x0

    if-gez p2, :cond_1

    if-eqz v12, :cond_1

    .line 7445
    :try_start_0
    invoke-static {}, Landroid/app/AppGlobals;->getPackageManager()Landroid/content/pm/IPackageManager;

    move-result-object v0

    const/high16 v3, 0x10000000

    .line 7446
    invoke-interface {v0, v12, v3, v10}, Landroid/content/pm/IPackageManager;->getPackageUid(Ljava/lang/String;II)I

    move-result v0

    .line 7445
    invoke-static {v0}, Landroid/os/UserHandle;->getAppId(I)I

    move-result v0
    :try_end_0
    .catch Landroid/os/RemoteException; {:try_start_0 .. :try_end_0} :catch_0

    .line 7448
    goto :goto_0

    .line 7447
    :catch_0
    move-exception v0

    .line 7451
    :cond_1
    move/from16 v0, p2

    :goto_0
    const/4 v9, 0x1

    if-eqz v13, :cond_5

    .line 7452
    if-eqz v12, :cond_2

    .line 7453
    const-string v2, "ActivityManager"

    new-instance v3, Ljava/lang/StringBuilder;

    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V

    const-string v4, "Force stopping "

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v3, v12}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v4, " appid="

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v3, v0}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v4, " user="

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v3, v14}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v4, ": "

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v3, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-static {v2, v1}, Landroid/util/Slog;->i(Ljava/lang/String;Ljava/lang/String;)I

    goto :goto_1

    .line 7456
    :cond_2
    const-string v2, "ActivityManager"

    new-instance v3, Ljava/lang/StringBuilder;

    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V

    const-string v4, "Force stopping u"

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v3, v14}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v4, ": "

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v3, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-static {v2, v1}, Landroid/util/Slog;->i(Ljava/lang/String;Ljava/lang/String;)I

    .line 7458
    :goto_1
    sget-object v1, Lcom/android/server/am/ActivityManagerService;->mUxPerf:Landroid/util/BoostFramework;

    if-eqz v1, :cond_3

    .line 7459
    sget-object v1, Lcom/android/server/am/ActivityManagerService;->mUxPerf:Landroid/util/BoostFramework;

    const/4 v2, 0x4

    invoke-virtual {v1, v2, v10, v12, v10}, Landroid/util/BoostFramework;->perfUXEngine_events(IILjava/lang/String;I)I

    .line 7460
    sget-object v1, Lcom/android/server/am/ActivityManagerService;->mUxPerf:Landroid/util/BoostFramework;

    const/16 v2, 0x1091

    invoke-virtual {v1, v2, v12, v0, v10}, Landroid/util/BoostFramework;->perfHint(ILjava/lang/String;II)I

    .line 7463
    :cond_3
    iget-object v1, v11, Lcom/android/server/am/ActivityManagerService;->mAppErrors:Lcom/android/server/am/AppErrors;

    if-nez v12, :cond_4

    move v2, v9

    goto :goto_2

    :cond_4
    move v2, v10

    :goto_2
    invoke-virtual {v1, v2, v0, v14}, Lcom/android/server/am/AppErrors;->resetProcessCrashTimeLocked(ZII)V

    .line 7466
    :cond_5
    const/16 v5, -0x2710

    const/4 v7, 0x1

    .line 7468
    if-nez v12, :cond_6

    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v2, "stop user "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v1, v14}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    :goto_3
    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    .line 7466
    move-object/from16 v16, v1

    goto :goto_4

    .line 7468
    :cond_6
    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v2, "stop "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v1, v12}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    goto :goto_3

    .line 7466
    :goto_4
    move-object v1, v11

    move-object v2, v12

    move v3, v0

    move v4, v14

    move/from16 v6, p3

    move v8, v13

    move v15, v9

    move/from16 v9, p6

    move-object/from16 v10, v16

    invoke-direct/range {v1 .. v10}, Lcom/android/server/am/ActivityManagerService;->killPackageProcessesLocked(Ljava/lang/String;IIIZZZZLjava/lang/String;)Z

    move-result v1

    .line 7470
    iget-object v2, v11, Lcom/android/server/am/ActivityManagerService;->mActivityStartController:Lcom/android/server/am/ActivityStartController;

    invoke-virtual {v2, v12}, Lcom/android/server/am/ActivityStartController;->clearPendingActivityLaunches(Ljava/lang/String;)Z

    move-result v2

    or-int v9, v1, v2

    .line 7472
    iget-object v1, v11, Lcom/android/server/am/ActivityManagerService;->mStackSupervisor:Lcom/android/server/am/ActivityStackSupervisor;

    const/4 v3, 0x0

    move-object v2, v12

    move v4, v13

    move/from16 v5, p6

    move v6, v14

    invoke-virtual/range {v1 .. v6}, Lcom/android/server/am/ActivityStackSupervisor;->finishDisabledPackageActivitiesLocked(Ljava/lang/String;Ljava/util/Set;ZZI)Z

    move-result v1

    if-eqz v1, :cond_8

    .line 7474
    if-nez v13, :cond_7

    .line 7475
    return v15

    .line 7477
    :cond_7
    nop

    .line 7480
    move v9, v15

    :cond_8
    iget-object v1, v11, Lcom/android/server/am/ActivityManagerService;->mServices:Lcom/android/server/am/ActiveServices;

    const/4 v3, 0x0

    const/4 v6, 0x1

    move-object v2, v12

    move v4, v14

    move/from16 v5, p6

    move v7, v13

    invoke-virtual/range {v1 .. v7}, Lcom/android/server/am/ActiveServices;->bringDownDisabledPackageServicesLocked(Ljava/lang/String;Ljava/util/Set;IZZZ)Z

    move-result v1

    if-eqz v1, :cond_a

    .line 7482
    if-nez v13, :cond_9

    .line 7483
    return v15

    .line 7485
    :cond_9
    nop

    .line 7488
    move v9, v15

    :cond_a
    if-nez v12, :cond_b

    .line 7490
    iget-object v1, v11, Lcom/android/server/am/ActivityManagerService;->mStickyBroadcasts:Landroid/util/SparseArray;

    invoke-virtual {v1, v14}, Landroid/util/SparseArray;->remove(I)V

    .line 7493
    :cond_b
    new-instance v8, Ljava/util/ArrayList;

    invoke-direct {v8}, Ljava/util/ArrayList;-><init>()V

    .line 7494
    iget-object v1, v11, Lcom/android/server/am/ActivityManagerService;->mProviderMap:Lcom/android/server/am/ProviderMap;

    const/4 v3, 0x0

    move-object v2, v12

    move v4, v13

    move/from16 v5, p6

    move v6, v14

    move-object v7, v8

    invoke-virtual/range {v1 .. v7}, Lcom/android/server/am/ProviderMap;->collectPackageProvidersLocked(Ljava/lang/String;Ljava/util/Set;ZZILjava/util/ArrayList;)Z

    move-result v1

    if-eqz v1, :cond_d

    .line 7496
    if-nez v13, :cond_c

    .line 7497
    return v15

    .line 7499
    :cond_c
    nop

    .line 7501
    move v9, v15

    :cond_d
    invoke-virtual {v8}, Ljava/util/ArrayList;->size()I

    move-result v1

    sub-int/2addr v1, v15

    :goto_5
    const/4 v2, 0x0

    if-ltz v1, :cond_e

    .line 7502
    invoke-virtual {v8, v1}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v3

    check-cast v3, Lcom/android/server/am/ContentProviderRecord;

    invoke-direct {v11, v2, v3, v15}, Lcom/android/server/am/ActivityManagerService;->removeDyingProviderLocked(Lcom/android/server/am/ProcessRecord;Lcom/android/server/am/ContentProviderRecord;Z)Z

    .line 7501
    add-int/lit8 v1, v1, -0x1

    goto :goto_5

    .line 7506
    :cond_e
    const/4 v1, 0x0

    invoke-direct {v11, v12, v14, v1, v1}, Lcom/android/server/am/ActivityManagerService;->removeUriPermissionsForPackageLocked(Ljava/lang/String;IZZ)V

    .line 7508
    if-eqz v13, :cond_f

    .line 7509
    iget-object v1, v11, Lcom/android/server/am/ActivityManagerService;->mBroadcastQueues:[Lcom/android/server/am/BroadcastQueue;

    array-length v1, v1

    sub-int/2addr v1, v15

    :goto_6
    if-ltz v1, :cond_f

    .line 7510
    iget-object v3, v11, Lcom/android/server/am/ActivityManagerService;->mBroadcastQueues:[Lcom/android/server/am/BroadcastQueue;

    aget-object v3, v3, v1

    invoke-virtual {v3, v12, v2, v14, v13}, Lcom/android/server/am/BroadcastQueue;->cleanupDisabledPackageReceiversLocked(Ljava/lang/String;Ljava/util/Set;IZ)Z

    move-result v3

    or-int/2addr v9, v3

    .line 7509
    add-int/lit8 v1, v1, -0x1

    goto :goto_6

    .line 7515
    :cond_f
    if-eqz v12, :cond_10

    if-eqz p7, :cond_1a

    .line 7520
    :cond_10
    iget-object v1, v11, Lcom/android/server/am/ActivityManagerService;->mIntentSenderRecords:Ljava/util/HashMap;

    invoke-virtual {v1}, Ljava/util/HashMap;->size()I

    move-result v1

    if-lez v1, :cond_1a

    .line 7521
    iget-object v1, v11, Lcom/android/server/am/ActivityManagerService;->mIntentSenderRecords:Ljava/util/HashMap;

    .line 7522
    invoke-virtual {v1}, Ljava/util/HashMap;->values()Ljava/util/Collection;

    move-result-object v1

    invoke-interface {v1}, Ljava/util/Collection;->iterator()Ljava/util/Iterator;

    move-result-object v1

    .line 7523
    :goto_7
    invoke-interface {v1}, Ljava/util/Iterator;->hasNext()Z

    move-result v2

    if-eqz v2, :cond_1a

    .line 7524
    invoke-interface {v1}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Ljava/lang/ref/WeakReference;

    .line 7525
    if-nez v2, :cond_11

    .line 7526
    invoke-interface {v1}, Ljava/util/Iterator;->remove()V

    .line 7527
    nop

    .line 7523
    :goto_8
    const/4 v3, -0x1

    goto :goto_7

    .line 7529
    :cond_11
    invoke-virtual {v2}, Ljava/lang/ref/WeakReference;->get()Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Lcom/android/server/am/PendingIntentRecord;

    .line 7530
    if-nez v2, :cond_12

    .line 7531
    invoke-interface {v1}, Ljava/util/Iterator;->remove()V

    .line 7532
    goto :goto_8

    .line 7534
    :cond_12
    if-nez v12, :cond_14

    .line 7536
    iget-object v3, v2, Lcom/android/server/am/PendingIntentRecord;->key:Lcom/android/server/am/PendingIntentRecord$Key;

    iget v3, v3, Lcom/android/server/am/PendingIntentRecord$Key;->userId:I

    if-eq v3, v14, :cond_13

    .line 7538
    goto :goto_8

    .line 7554
    :cond_13
    const/4 v3, -0x1

    goto :goto_9

    .line 7541
    :cond_14
    iget v3, v2, Lcom/android/server/am/PendingIntentRecord;->uid:I

    invoke-static {v3}, Landroid/os/UserHandle;->getAppId(I)I

    move-result v3

    if-eq v3, v0, :cond_15

    .line 7543
    goto :goto_8

    .line 7545
    :cond_15
    const/4 v3, -0x1

    if-eq v14, v3, :cond_16

    iget-object v4, v2, Lcom/android/server/am/PendingIntentRecord;->key:Lcom/android/server/am/PendingIntentRecord$Key;

    iget v4, v4, Lcom/android/server/am/PendingIntentRecord$Key;->userId:I

    if-eq v4, v14, :cond_16

    .line 7547
    goto :goto_7

    .line 7549
    :cond_16
    iget-object v4, v2, Lcom/android/server/am/PendingIntentRecord;->key:Lcom/android/server/am/PendingIntentRecord$Key;

    iget-object v4, v4, Lcom/android/server/am/PendingIntentRecord$Key;->packageName:Ljava/lang/String;

    invoke-virtual {v4, v12}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v4

    if-nez v4, :cond_17

    .line 7551
    goto :goto_7

    .line 7554
    :cond_17
    :goto_9
    if-nez v13, :cond_18

    .line 7555
    return v15

    .line 7557
    :cond_18
    nop

    .line 7558
    invoke-interface {v1}, Ljava/util/Iterator;->remove()V

    .line 7559
    invoke-virtual {v11, v2}, Lcom/android/server/am/ActivityManagerService;->makeIntentSenderCanceledLocked(Lcom/android/server/am/PendingIntentRecord;)V

    .line 7560
    iget-object v4, v2, Lcom/android/server/am/PendingIntentRecord;->key:Lcom/android/server/am/PendingIntentRecord$Key;

    iget-object v4, v4, Lcom/android/server/am/PendingIntentRecord$Key;->activity:Lcom/android/server/am/ActivityRecord;

    if-eqz v4, :cond_19

    iget-object v4, v2, Lcom/android/server/am/PendingIntentRecord;->key:Lcom/android/server/am/PendingIntentRecord$Key;

    iget-object v4, v4, Lcom/android/server/am/PendingIntentRecord$Key;->activity:Lcom/android/server/am/ActivityRecord;

    iget-object v4, v4, Lcom/android/server/am/ActivityRecord;->pendingResults:Ljava/util/HashSet;

    if-eqz v4, :cond_19

    .line 7561
    iget-object v4, v2, Lcom/android/server/am/PendingIntentRecord;->key:Lcom/android/server/am/PendingIntentRecord$Key;

    iget-object v4, v4, Lcom/android/server/am/PendingIntentRecord$Key;->activity:Lcom/android/server/am/ActivityRecord;

    iget-object v4, v4, Lcom/android/server/am/ActivityRecord;->pendingResults:Ljava/util/HashSet;

    iget-object v2, v2, Lcom/android/server/am/PendingIntentRecord;->ref:Ljava/lang/ref/WeakReference;

    invoke-virtual {v4, v2}, Ljava/util/HashSet;->remove(Ljava/lang/Object;)Z

    .line 7563
    :cond_19
    nop

    .line 7523
    move v9, v15

    goto :goto_7

    .line 7567
    :cond_1a
    if-eqz v13, :cond_1c

    .line 7568
    if-eqz p4, :cond_1b

    if-eqz v12, :cond_1b

    .line 7569
    invoke-static {}, Lcom/android/server/AttributeCache;->instance()Lcom/android/server/AttributeCache;

    move-result-object v0

    .line 7570
    if-eqz v0, :cond_1b

    .line 7571
    invoke-virtual {v0, v12}, Lcom/android/server/AttributeCache;->removePackage(Ljava/lang/String;)V

    .line 7574
    :cond_1b
    iget-boolean v0, v11, Lcom/android/server/am/ActivityManagerService;->mBooted:Z

    if-eqz v0, :cond_1c

    .line 7575
    iget-object v0, v11, Lcom/android/server/am/ActivityManagerService;->mStackSupervisor:Lcom/android/server/am/ActivityStackSupervisor;

    invoke-virtual {v0}, Lcom/android/server/am/ActivityStackSupervisor;->resumeFocusedStackTopActivityLocked()Z

    .line 7576
    iget-object v0, v11, Lcom/android/server/am/ActivityManagerService;->mStackSupervisor:Lcom/android/server/am/ActivityStackSupervisor;

    invoke-virtual {v0}, Lcom/android/server/am/ActivityStackSupervisor;->scheduleIdleLocked()V

    .line 7580
    :cond_1c
    return v9
.end method

.method public getActivityClassForToken(Landroid/os/IBinder;)Landroid/content/ComponentName;
    .locals 0

    .line 8474
    monitor-enter p0

    :try_start_0
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    .line 8475
    invoke-static {p1}, Lcom/android/server/am/ActivityRecord;->isInStackLocked(Landroid/os/IBinder;)Lcom/android/server/am/ActivityRecord;

    move-result-object p1

    .line 8476
    if-nez p1, :cond_0

    .line 8477
    const/4 p1, 0x0

    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    return-object p1

    .line 8479
    :cond_0
    :try_start_1
    iget-object p1, p1, Lcom/android/server/am/ActivityRecord;->intent:Landroid/content/Intent;

    invoke-virtual {p1}, Landroid/content/Intent;->getComponent()Landroid/content/ComponentName;

    move-result-object p1

    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    return-object p1

    .line 8480
    :catchall_0
    move-exception p1

    :try_start_2
    monitor-exit p0
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw p1
.end method

.method public getActivityDisplayId(Landroid/os/IBinder;)I
    .locals 2
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Landroid/os/RemoteException;
        }
    .end annotation

    .line 11462
    monitor-enter p0

    :try_start_0
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    .line 11463
    invoke-static {p1}, Lcom/android/server/am/ActivityRecord;->getStackLocked(Landroid/os/IBinder;)Lcom/android/server/am/ActivityStack;

    move-result-object p1

    .line 11464
    if-eqz p1, :cond_0

    iget v0, p1, Lcom/android/server/am/ActivityStack;->mDisplayId:I

    const/4 v1, -0x1

    if-eq v0, v1, :cond_0

    .line 11465
    iget p1, p1, Lcom/android/server/am/ActivityStack;->mDisplayId:I

    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    return p1

    .line 11467
    :cond_0
    const/4 p1, 0x0

    :try_start_1
    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    return p1

    .line 11468
    :catchall_0
    move-exception p1

    :try_start_2
    monitor-exit p0
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw p1
.end method

.method getActivityInfoForUser(Landroid/content/pm/ActivityInfo;I)Landroid/content/pm/ActivityInfo;
    .locals 2

    .line 26614
    if-eqz p1, :cond_1

    const/4 v0, 0x1

    if-ge p2, v0, :cond_0

    iget-object v0, p1, Landroid/content/pm/ActivityInfo;->applicationInfo:Landroid/content/pm/ApplicationInfo;

    iget v0, v0, Landroid/content/pm/ApplicationInfo;->uid:I

    const v1, 0x186a0

    if-ge v0, v1, :cond_0

    goto :goto_0

    .line 26619
    :cond_0
    new-instance v0, Landroid/content/pm/ActivityInfo;

    invoke-direct {v0, p1}, Landroid/content/pm/ActivityInfo;-><init>(Landroid/content/pm/ActivityInfo;)V

    .line 26620
    iget-object p1, v0, Landroid/content/pm/ActivityInfo;->applicationInfo:Landroid/content/pm/ApplicationInfo;

    invoke-virtual {p0, p1, p2}, Lcom/android/server/am/ActivityManagerService;->getAppInfoForUser(Landroid/content/pm/ApplicationInfo;I)Landroid/content/pm/ApplicationInfo;

    move-result-object p1

    iput-object p1, v0, Landroid/content/pm/ActivityInfo;->applicationInfo:Landroid/content/pm/ApplicationInfo;

    .line 26621
    return-object v0

    .line 26616
    :cond_1
    :goto_0
    return-object p1
.end method

.method public getActivityOptions(Landroid/os/IBinder;)Landroid/os/Bundle;
    .locals 3

    .line 14601
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v0

    .line 14603
    :try_start_0
    monitor-enter p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_1

    :try_start_1
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    .line 14604
    invoke-static {p1}, Lcom/android/server/am/ActivityRecord;->isInStackLocked(Landroid/os/IBinder;)Lcom/android/server/am/ActivityRecord;

    move-result-object p1

    .line 14605
    const/4 v2, 0x0

    if-eqz p1, :cond_1

    .line 14606
    invoke-virtual {p1}, Lcom/android/server/am/ActivityRecord;->takeOptionsLocked()Landroid/app/ActivityOptions;

    move-result-object p1

    .line 14607
    if-nez p1, :cond_0

    goto :goto_0

    :cond_0
    invoke-virtual {p1}, Landroid/app/ActivityOptions;->toBundle()Landroid/os/Bundle;

    move-result-object v2

    :goto_0
    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 14612
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 14607
    return-object v2

    .line 14609
    :cond_1
    :try_start_2
    monitor-exit p0
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    .line 14612
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 14609
    return-object v2

    .line 14610
    :catchall_0
    move-exception p1

    :try_start_3
    monitor-exit p0
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_0

    :try_start_4
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw p1
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_1

    .line 14612
    :catchall_1
    move-exception p1

    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    throw p1
.end method

.method getActivityStartController()Lcom/android/server/am/ActivityStartController;
    .locals 1

    .line 12827
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mActivityStartController:Lcom/android/server/am/ActivityStartController;

    return-object v0
.end method

.method public getAllStackInfos()Ljava/util/List;
    .locals 3
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "()",
            "Ljava/util/List<",
            "Landroid/app/ActivityManager$StackInfo;",
            ">;"
        }
    .end annotation

    .line 11847
    const-string v0, "android.permission.MANAGE_ACTIVITY_STACKS"

    const-string v1, "getAllStackInfos()"

    invoke-virtual {p0, v0, v1}, Lcom/android/server/am/ActivityManagerService;->enforceCallerIsRecentsOrHasPermission(Ljava/lang/String;Ljava/lang/String;)V

    .line 11848
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v0

    .line 11850
    :try_start_0
    monitor-enter p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_1

    :try_start_1
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    .line 11851
    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mStackSupervisor:Lcom/android/server/am/ActivityStackSupervisor;

    invoke-virtual {v2}, Lcom/android/server/am/ActivityStackSupervisor;->getAllStackInfosLocked()Ljava/util/ArrayList;

    move-result-object v2

    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 11854
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 11851
    return-object v2

    .line 11852
    :catchall_0
    move-exception v2

    :try_start_2
    monitor-exit p0
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    :try_start_3
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw v2
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_1

    .line 11854
    :catchall_1
    move-exception v2

    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    throw v2
.end method

.method getAppInfoForUser(Landroid/content/pm/ApplicationInfo;I)Landroid/content/pm/ApplicationInfo;
    .locals 1

    .line 26603
    if-nez p1, :cond_0

    const/4 p1, 0x0

    return-object p1

    .line 26604
    :cond_0
    new-instance v0, Landroid/content/pm/ApplicationInfo;

    invoke-direct {v0, p1}, Landroid/content/pm/ApplicationInfo;-><init>(Landroid/content/pm/ApplicationInfo;)V

    .line 26605
    invoke-virtual {v0, p2}, Landroid/content/pm/ApplicationInfo;->initForUser(I)V

    .line 26606
    return-object v0
.end method

.method public getAppOpsService()Lcom/android/internal/app/IAppOpsService;
    .locals 1

    .line 2903
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mAppOpsService:Lcom/android/server/AppOpsService;

    return-object v0
.end method

.method getAppStartModeLocked(ILjava/lang/String;IIZZZ)I
    .locals 2

    .line 9600
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mActiveUids:Landroid/util/SparseArray;

    invoke-virtual {v0, p1}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Lcom/android/server/am/UidRecord;

    .line 9604
    const/4 v1, 0x0

    if-eqz v0, :cond_1

    if-nez p5, :cond_1

    if-nez p7, :cond_1

    iget-boolean p7, v0, Lcom/android/server/am/UidRecord;->idle:Z

    if-eqz p7, :cond_0

    goto :goto_0

    .line 9654
    :cond_0
    return v1

    .line 9606
    :cond_1
    :goto_0
    if-nez v0, :cond_2

    .line 9607
    invoke-virtual {p0}, Lcom/android/server/am/ActivityManagerService;->getPackageManagerInternalLocked()Landroid/content/pm/PackageManagerInternal;

    move-result-object p7

    .line 9608
    invoke-static {p1}, Landroid/os/UserHandle;->getUserId(I)I

    move-result v0

    .line 9607
    invoke-virtual {p7, v0, p2}, Landroid/content/pm/PackageManagerInternal;->isPackageEphemeral(ILjava/lang/String;)Z

    move-result p7

    goto :goto_1

    .line 9610
    :cond_2
    iget-boolean p7, v0, Lcom/android/server/am/UidRecord;->ephemeral:Z

    .line 9613
    :goto_1
    if-eqz p7, :cond_3

    .line 9615
    const/4 p1, 0x3

    return p1

    .line 9617
    :cond_3
    if-eqz p6, :cond_4

    .line 9622
    return v1

    .line 9624
    :cond_4
    if-eqz p5, :cond_5

    .line 9625
    invoke-virtual {p0, p1, p2, p3}, Lcom/android/server/am/ActivityManagerService;->appRestrictedInBackgroundLocked(ILjava/lang/String;I)I

    move-result p1

    goto :goto_2

    .line 9626
    :cond_5
    invoke-virtual {p0, p1, p2, p3}, Lcom/android/server/am/ActivityManagerService;->appServicesRestrictedInBackgroundLocked(ILjava/lang/String;I)I

    move-result p1

    .line 9634
    :goto_2
    const/4 p2, 0x1

    if-ne p1, p2, :cond_6

    .line 9638
    if-ltz p4, :cond_6

    .line 9640
    iget-object p2, p0, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Landroid/util/SparseArray;

    monitor-enter p2

    .line 9641
    :try_start_0
    iget-object p3, p0, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Landroid/util/SparseArray;

    invoke-virtual {p3, p4}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    move-result-object p3

    check-cast p3, Lcom/android/server/am/ProcessRecord;

    .line 9642
    monitor-exit p2
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 9643
    if-eqz p3, :cond_6

    iget p2, p3, Lcom/android/server/am/ProcessRecord;->curProcState:I

    .line 9644
    invoke-static {p2}, Landroid/app/ActivityManager;->isProcStateBackground(I)Z

    move-result p2

    if-nez p2, :cond_6

    .line 9647
    return v1

    .line 9642
    :catchall_0
    move-exception p1

    :try_start_1
    monitor-exit p2
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    throw p1

    .line 9651
    :cond_6
    return p1
.end method

.method public getAppTaskThumbnailSize()Landroid/graphics/Point;
    .locals 3

    .line 11047
    monitor-enter p0

    :try_start_0
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    .line 11048
    new-instance v0, Landroid/graphics/Point;

    iget v1, p0, Lcom/android/server/am/ActivityManagerService;->mThumbnailWidth:I

    iget v2, p0, Lcom/android/server/am/ActivityManagerService;->mThumbnailHeight:I

    invoke-direct {v0, v1, v2}, Landroid/graphics/Point;-><init>(II)V

    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    return-object v0

    .line 11049
    :catchall_0
    move-exception v0

    :try_start_1
    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw v0
.end method

.method public getAppTasks(Ljava/lang/String;)Ljava/util/List;
    .locals 4
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "(",
            "Ljava/lang/String;",
            ")",
            "Ljava/util/List<",
            "Landroid/os/IBinder;",
            ">;"
        }
    .end annotation

    .line 10883
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v0

    .line 10884
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v1

    .line 10886
    :try_start_0
    monitor-enter p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_1

    :try_start_1
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    .line 10887
    iget-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mRecentTasks:Lcom/android/server/am/RecentTasks;

    invoke-virtual {v3, v0, p1}, Lcom/android/server/am/RecentTasks;->getAppTasksList(ILjava/lang/String;)Ljava/util/ArrayList;

    move-result-object p1

    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 10890
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    invoke-static {v1, v2}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 10887
    return-object p1

    .line 10888
    :catchall_0
    move-exception p1

    :try_start_2
    monitor-exit p0
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    :try_start_3
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw p1
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_1

    .line 10890
    :catchall_1
    move-exception p1

    invoke-static {v1, v2}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    throw p1
.end method

.method final getAppWarningsLocked()Lcom/android/server/am/AppWarnings;
    .locals 1

    .line 3813
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mAppWarnings:Lcom/android/server/am/AppWarnings;

    return-object v0
.end method

.method public getAssistContextExtras(I)Landroid/os/Bundle;
    .locals 14

    .line 14227
    nop

    .line 14229
    invoke-static {}, Landroid/os/UserHandle;->getCallingUserId()I

    move-result v9

    .line 14227
    const/4 v2, 0x0

    const/4 v3, 0x0

    const/4 v4, 0x0

    const/4 v5, 0x0

    const/4 v6, 0x0

    const/4 v7, 0x1

    const/4 v8, 0x1

    const/4 v10, 0x0

    const-wide/16 v11, 0x1f4

    const/4 v13, 0x0

    move-object v0, p0

    move v1, p1

    invoke-direct/range {v0 .. v13}, Lcom/android/server/am/ActivityManagerService;->enqueueAssistContext(ILandroid/content/Intent;Ljava/lang/String;Landroid/app/IAssistDataReceiver;Landroid/os/Bundle;Landroid/os/IBinder;ZZILandroid/os/Bundle;JI)Lcom/android/server/am/ActivityManagerService$PendingAssistExtras;

    move-result-object p1

    .line 14230
    if-nez p1, :cond_0

    .line 14231
    const/4 p1, 0x0

    return-object p1

    .line 14233
    :cond_0
    monitor-enter p1

    .line 14234
    :goto_0
    :try_start_0
    iget-boolean v0, p1, Lcom/android/server/am/ActivityManagerService$PendingAssistExtras;->haveResult:Z
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_1

    if-nez v0, :cond_1

    .line 14236
    :try_start_1
    invoke-virtual {p1}, Ljava/lang/Object;->wait()V
    :try_end_1
    .catch Ljava/lang/InterruptedException; {:try_start_1 .. :try_end_1} :catch_0
    .catchall {:try_start_1 .. :try_end_1} :catchall_1

    .line 14238
    :goto_1
    goto :goto_0

    .line 14237
    :catch_0
    move-exception v0

    goto :goto_1

    .line 14240
    :cond_1
    :try_start_2
    monitor-exit p1
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_1

    .line 14241
    monitor-enter p0

    :try_start_3
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    .line 14242
    iget-object v0, p1, Lcom/android/server/am/ActivityManagerService$PendingAssistExtras;->result:Landroid/os/Bundle;

    invoke-direct {p0, p1, v0}, Lcom/android/server/am/ActivityManagerService;->buildAssistBundleLocked(Lcom/android/server/am/ActivityManagerService$PendingAssistExtras;Landroid/os/Bundle;)V

    .line 14243
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mPendingAssistExtras:Ljava/util/ArrayList;

    invoke-virtual {v0, p1}, Ljava/util/ArrayList;->remove(Ljava/lang/Object;)Z

    .line 14244
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mUiHandler:Landroid/os/Handler;

    invoke-virtual {v0, p1}, Landroid/os/Handler;->removeCallbacks(Ljava/lang/Runnable;)V

    .line 14245
    monitor-exit p0
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    .line 14246
    iget-object p1, p1, Lcom/android/server/am/ActivityManagerService$PendingAssistExtras;->extras:Landroid/os/Bundle;

    return-object p1

    .line 14245
    :catchall_0
    move-exception p1

    :try_start_4
    monitor-exit p0
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw p1

    .line 14240
    :catchall_1
    move-exception v0

    :try_start_5
    monitor-exit p1
    :try_end_5
    .catchall {:try_start_5 .. :try_end_5} :catchall_1

    throw v0
.end method

.method getBlockStateForUid(Lcom/android/server/am/UidRecord;)I
    .locals 4
    .annotation build Lcom/android/internal/annotations/VisibleForTesting;
    .end annotation

    .line 26041
    iget v0, p1, Lcom/android/server/am/UidRecord;->curProcState:I

    invoke-static {v0}, Landroid/net/NetworkPolicyManager;->isProcStateAllowedWhileIdleOrPowerSaveMode(I)Z

    move-result v0

    const/4 v1, 0x1

    const/4 v2, 0x0

    if-nez v0, :cond_1

    iget v0, p1, Lcom/android/server/am/UidRecord;->curProcState:I

    .line 26042
    invoke-static {v0}, Landroid/net/NetworkPolicyManager;->isProcStateAllowedWhileOnRestrictBackground(I)Z

    move-result v0

    if-eqz v0, :cond_0

    goto :goto_0

    .line 26044
    :cond_0
    move v0, v2

    goto :goto_1

    .line 26042
    :cond_1
    :goto_0
    nop

    .line 26044
    move v0, v1

    :goto_1
    iget v3, p1, Lcom/android/server/am/UidRecord;->setProcState:I

    invoke-static {v3}, Landroid/net/NetworkPolicyManager;->isProcStateAllowedWhileIdleOrPowerSaveMode(I)Z

    move-result v3

    if-nez v3, :cond_3

    iget p1, p1, Lcom/android/server/am/UidRecord;->setProcState:I

    .line 26045
    invoke-static {p1}, Landroid/net/NetworkPolicyManager;->isProcStateAllowedWhileOnRestrictBackground(I)Z

    move-result p1

    if-eqz p1, :cond_2

    goto :goto_2

    .line 26049
    :cond_2
    move p1, v2

    goto :goto_3

    .line 26045
    :cond_3
    :goto_2
    nop

    .line 26049
    move p1, v1

    :goto_3
    if-nez p1, :cond_4

    if-eqz v0, :cond_4

    .line 26050
    return v1

    .line 26054
    :cond_4
    if-eqz p1, :cond_5

    if-nez v0, :cond_5

    .line 26055
    const/4 p1, 0x2

    return p1

    .line 26057
    :cond_5
    return v2
.end method

.method public getCallingActivity(Landroid/os/IBinder;)Landroid/content/ComponentName;
    .locals 0

    .line 8458
    monitor-enter p0

    :try_start_0
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    .line 8459
    invoke-direct {p0, p1}, Lcom/android/server/am/ActivityManagerService;->getCallingRecordLocked(Landroid/os/IBinder;)Lcom/android/server/am/ActivityRecord;

    move-result-object p1

    .line 8460
    if-eqz p1, :cond_0

    iget-object p1, p1, Lcom/android/server/am/ActivityRecord;->intent:Landroid/content/Intent;

    invoke-virtual {p1}, Landroid/content/Intent;->getComponent()Landroid/content/ComponentName;

    move-result-object p1

    goto :goto_0

    :cond_0
    const/4 p1, 0x0

    :goto_0
    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    return-object p1

    .line 8461
    :catchall_0
    move-exception p1

    :try_start_1
    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw p1
.end method

.method public getCallingPackage(Landroid/os/IBinder;)Ljava/lang/String;
    .locals 0

    .line 8450
    monitor-enter p0

    :try_start_0
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    .line 8451
    invoke-direct {p0, p1}, Lcom/android/server/am/ActivityManagerService;->getCallingRecordLocked(Landroid/os/IBinder;)Lcom/android/server/am/ActivityRecord;

    move-result-object p1

    .line 8452
    if-eqz p1, :cond_0

    iget-object p1, p1, Lcom/android/server/am/ActivityRecord;->info:Landroid/content/pm/ActivityInfo;

    iget-object p1, p1, Landroid/content/pm/ActivityInfo;->packageName:Ljava/lang/String;

    goto :goto_0

    :cond_0
    const/4 p1, 0x0

    :goto_0
    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    return-object p1

    .line 8453
    :catchall_0
    move-exception p1

    :try_start_1
    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw p1
.end method

.method getCheckedForSetup()Z
    .locals 1

    .line 4857
    iget-boolean v0, p0, Lcom/android/server/am/ActivityManagerService;->mCheckedForSetup:Z

    return v0
.end method

.method public getConfiguration()Landroid/content/res/Configuration;
    .locals 2

    .line 22631
    monitor-enter p0

    :try_start_0
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    .line 22632
    new-instance v0, Landroid/content/res/Configuration;

    invoke-virtual {p0}, Lcom/android/server/am/ActivityManagerService;->getGlobalConfiguration()Landroid/content/res/Configuration;

    move-result-object v1

    invoke-direct {v0, v1}, Landroid/content/res/Configuration;-><init>(Landroid/content/res/Configuration;)V

    .line 22633
    const/4 v1, 0x0

    iput-boolean v1, v0, Landroid/content/res/Configuration;->userSetLocale:Z

    .line 22634
    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    .line 22635
    return-object v0

    .line 22634
    :catchall_0
    move-exception v0

    :try_start_1
    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw v0
.end method

.method public final getContentProvider(Landroid/app/IApplicationThread;Ljava/lang/String;IZ)Landroid/app/ContentProviderHolder;
    .locals 7

    .line 12848
    const-string v0, "getContentProvider"

    invoke-virtual {p0, v0}, Lcom/android/server/am/ActivityManagerService;->enforceNotIsolatedCaller(Ljava/lang/String;)V

    .line 12849
    if-eqz p1, :cond_0

    .line 12857
    const/4 v4, 0x0

    move-object v1, p0

    move-object v2, p1

    move-object v3, p2

    move v5, p4

    move v6, p3

    invoke-direct/range {v1 .. v6}, Lcom/android/server/am/ActivityManagerService;->getContentProviderImpl(Landroid/app/IApplicationThread;Ljava/lang/String;Landroid/os/IBinder;ZI)Landroid/app/ContentProviderHolder;

    move-result-object p1

    return-object p1

    .line 12850
    :cond_0
    new-instance p1, Ljava/lang/StringBuilder;

    invoke-direct {p1}, Ljava/lang/StringBuilder;-><init>()V

    const-string p3, "null IApplicationThread when getting content provider "

    invoke-virtual {p1, p3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {p1, p2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {p1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object p1

    .line 12852
    const-string p2, "ActivityManager"

    invoke-static {p2, p1}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 12853
    new-instance p2, Ljava/lang/SecurityException;

    invoke-direct {p2, p1}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw p2
.end method

.method public getContentProviderExternal(Ljava/lang/String;ILandroid/os/IBinder;)Landroid/app/ContentProviderHolder;
    .locals 10

    .line 12862
    const-string v0, "android.permission.ACCESS_CONTENT_PROVIDERS_EXTERNALLY"

    const-string v1, "Do not have permission in call getContentProviderExternal()"

    invoke-virtual {p0, v0, v1}, Lcom/android/server/am/ActivityManagerService;->enforceCallingPermission(Ljava/lang/String;Ljava/lang/String;)V

    .line 12864
    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mUserController:Lcom/android/server/am/UserController;

    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result v3

    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v4

    const-string v8, "getContentProvider"

    const/4 v6, 0x0

    const/4 v7, 0x2

    const/4 v9, 0x0

    move v5, p2

    invoke-virtual/range {v2 .. v9}, Lcom/android/server/am/UserController;->handleIncomingUser(IIIZILjava/lang/String;Ljava/lang/String;)I

    move-result p2

    .line 12866
    invoke-direct {p0, p1, p3, p2}, Lcom/android/server/am/ActivityManagerService;->getContentProviderExternalUnchecked(Ljava/lang/String;Landroid/os/IBinder;I)Landroid/app/ContentProviderHolder;

    move-result-object p1

    return-object p1
.end method

.method getContext()Landroid/content/Context;
    .locals 1

    .line 27634
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mContext:Landroid/content/Context;

    return-object v0
.end method

.method public getCurrentUser()Landroid/content/pm/UserInfo;
    .locals 1

    .line 26555
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mUserController:Lcom/android/server/am/UserController;

    invoke-virtual {v0}, Lcom/android/server/am/UserController;->getCurrentUser()Landroid/content/pm/UserInfo;

    move-result-object v0

    return-object v0
.end method

.method public getDeviceConfigurationInfo()Landroid/content/pm/ConfigurationInfo;
    .locals 5

    .line 22589
    new-instance v0, Landroid/content/pm/ConfigurationInfo;

    invoke-direct {v0}, Landroid/content/pm/ConfigurationInfo;-><init>()V

    .line 22590
    monitor-enter p0

    :try_start_0
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    .line 22591
    invoke-virtual {p0}, Lcom/android/server/am/ActivityManagerService;->getGlobalConfiguration()Landroid/content/res/Configuration;

    move-result-object v1

    .line 22592
    iget v2, v1, Landroid/content/res/Configuration;->touchscreen:I

    iput v2, v0, Landroid/content/pm/ConfigurationInfo;->reqTouchScreen:I

    .line 22593
    iget v2, v1, Landroid/content/res/Configuration;->keyboard:I

    iput v2, v0, Landroid/content/pm/ConfigurationInfo;->reqKeyboardType:I

    .line 22594
    iget v2, v1, Landroid/content/res/Configuration;->navigation:I

    iput v2, v0, Landroid/content/pm/ConfigurationInfo;->reqNavigation:I

    .line 22595
    iget v2, v1, Landroid/content/res/Configuration;->navigation:I

    const/4 v3, 0x2

    if-eq v2, v3, :cond_0

    iget v2, v1, Landroid/content/res/Configuration;->navigation:I

    const/4 v4, 0x3

    if-ne v2, v4, :cond_1

    .line 22597
    :cond_0
    iget v2, v0, Landroid/content/pm/ConfigurationInfo;->reqInputFeatures:I

    or-int/2addr v2, v3

    iput v2, v0, Landroid/content/pm/ConfigurationInfo;->reqInputFeatures:I

    .line 22599
    :cond_1
    iget v2, v1, Landroid/content/res/Configuration;->keyboard:I

    if-eqz v2, :cond_2

    iget v1, v1, Landroid/content/res/Configuration;->keyboard:I

    const/4 v2, 0x1

    if-eq v1, v2, :cond_2

    .line 22601
    iget v1, v0, Landroid/content/pm/ConfigurationInfo;->reqInputFeatures:I

    or-int/2addr v1, v2

    iput v1, v0, Landroid/content/pm/ConfigurationInfo;->reqInputFeatures:I

    .line 22603
    :cond_2
    iget v1, p0, Lcom/android/server/am/ActivityManagerService;->GL_ES_VERSION:I

    iput v1, v0, Landroid/content/pm/ConfigurationInfo;->reqGlEsVersion:I

    .line 22604
    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    .line 22605
    return-object v0

    .line 22604
    :catchall_0
    move-exception v0

    :try_start_1
    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw v0
.end method

.method public getFilteredTasks(III)Ljava/util/List;
    .locals 8
    .param p2    # I
        .annotation build Landroid/app/WindowConfiguration$ActivityType;
        .end annotation
    .end param
    .param p3    # I
        .annotation build Landroid/app/WindowConfiguration$WindowingMode;
        .end annotation
    .end param
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "(III)",
            "Ljava/util/List<",
            "Landroid/app/ActivityManager$RunningTaskInfo;",
            ">;"
        }
    .end annotation

    .line 10902
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v5

    .line 10903
    new-instance v7, Ljava/util/ArrayList;

    invoke-direct {v7}, Ljava/util/ArrayList;-><init>()V

    .line 10905
    monitor-enter p0

    :try_start_0
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    .line 10908
    const-string v0, "getTasks"

    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result v1

    invoke-direct {p0, v0, v1, v5}, Lcom/android/server/am/ActivityManagerService;->isGetTasksAllowed(Ljava/lang/String;II)Z

    move-result v6

    .line 10910
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mStackSupervisor:Lcom/android/server/am/ActivityStackSupervisor;

    move v1, p1

    move-object v2, v7

    move v3, p2

    move v4, p3

    invoke-virtual/range {v0 .. v6}, Lcom/android/server/am/ActivityStackSupervisor;->getRunningTasks(ILjava/util/List;IIIZ)V

    .line 10912
    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    .line 10914
    return-object v7

    .line 10912
    :catchall_0
    move-exception p1

    :try_start_1
    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw p1
.end method

.method getFocusedStack()Lcom/android/server/am/ActivityStack;
    .locals 1

    .line 22609
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mStackSupervisor:Lcom/android/server/am/ActivityStackSupervisor;

    invoke-virtual {v0}, Lcom/android/server/am/ActivityStackSupervisor;->getFocusedStack()Lcom/android/server/am/ActivityStack;

    move-result-object v0

    return-object v0
.end method

.method public getFocusedStackInfo()Landroid/app/ActivityManager$StackInfo;
    .locals 4
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Landroid/os/RemoteException;
        }
    .end annotation

    .line 22614
    const-string v0, "android.permission.MANAGE_ACTIVITY_STACKS"

    const-string v1, "getStackInfo()"

    invoke-virtual {p0, v0, v1}, Lcom/android/server/am/ActivityManagerService;->enforceCallerIsRecentsOrHasPermission(Ljava/lang/String;Ljava/lang/String;)V

    .line 22615
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v0

    .line 22617
    :try_start_0
    monitor-enter p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_1

    :try_start_1
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    .line 22618
    invoke-virtual {p0}, Lcom/android/server/am/ActivityManagerService;->getFocusedStack()Lcom/android/server/am/ActivityStack;

    move-result-object v2

    .line 22619
    if-eqz v2, :cond_0

    .line 22620
    iget-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mStackSupervisor:Lcom/android/server/am/ActivityStackSupervisor;

    iget v2, v2, Lcom/android/server/am/ActivityStack;->mStackId:I

    invoke-virtual {v3, v2}, Lcom/android/server/am/ActivityStackSupervisor;->getStackInfo(I)Landroid/app/ActivityManager$StackInfo;

    move-result-object v2

    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 22625
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 22620
    return-object v2

    .line 22622
    :cond_0
    const/4 v2, 0x0

    :try_start_2
    monitor-exit p0
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    .line 22625
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 22622
    return-object v2

    .line 22623
    :catchall_0
    move-exception v2

    :try_start_3
    monitor-exit p0
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_0

    :try_start_4
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw v2
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_1

    .line 22625
    :catchall_1
    move-exception v2

    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    throw v2
.end method

.method public getFrontActivityScreenCompatMode()I
    .locals 1

    .line 4876
    const-string v0, "getFrontActivityScreenCompatMode"

    invoke-virtual {p0, v0}, Lcom/android/server/am/ActivityManagerService;->enforceNotIsolatedCaller(Ljava/lang/String;)V

    .line 4877
    monitor-enter p0

    :try_start_0
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    .line 4878
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mCompatModePackages:Lcom/android/server/am/CompatModePackages;

    invoke-virtual {v0}, Lcom/android/server/am/CompatModePackages;->getFrontActivityScreenCompatModeLocked()I

    move-result v0

    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    return v0

    .line 4879
    :catchall_0
    move-exception v0

    :try_start_1
    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw v0
.end method

.method getGlobalConfiguration()Landroid/content/res/Configuration;
    .locals 1

    .line 2046
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mStackSupervisor:Lcom/android/server/am/ActivityStackSupervisor;

    invoke-virtual {v0}, Lcom/android/server/am/ActivityStackSupervisor;->getConfiguration()Landroid/content/res/Configuration;

    move-result-object v0

    return-object v0
.end method

.method public getGrantedUriPermissions(Ljava/lang/String;I)Landroid/content/pm/ParceledListSlice;
    .locals 8
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "(",
            "Ljava/lang/String;",
            "I)",
            "Landroid/content/pm/ParceledListSlice<",
            "Landroid/app/GrantedUriPermission;",
            ">;"
        }
    .end annotation

    .line 10815
    const-string v0, "android.permission.GET_APP_GRANTED_URI_PERMISSIONS"

    const-string v1, "getGrantedUriPermissions"

    invoke-virtual {p0, v0, v1}, Lcom/android/server/am/ActivityManagerService;->enforceCallingPermission(Ljava/lang/String;Ljava/lang/String;)V

    .line 10818
    new-instance v0, Ljava/util/ArrayList;

    invoke-direct {v0}, Ljava/util/ArrayList;-><init>()V

    .line 10819
    monitor-enter p0

    :try_start_0
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    .line 10820
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mGrantedUriPermissions:Landroid/util/SparseArray;

    invoke-virtual {v1}, Landroid/util/SparseArray;->size()I

    move-result v1

    .line 10821
    const/4 v2, 0x0

    move v3, v2

    :goto_0
    if-ge v3, v1, :cond_3

    .line 10822
    iget-object v4, p0, Lcom/android/server/am/ActivityManagerService;->mGrantedUriPermissions:Landroid/util/SparseArray;

    invoke-virtual {v4, v3}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;

    move-result-object v4

    check-cast v4, Landroid/util/ArrayMap;

    .line 10823
    move v5, v2

    :goto_1
    invoke-virtual {v4}, Landroid/util/ArrayMap;->size()I

    move-result v6

    if-ge v5, v6, :cond_2

    .line 10824
    invoke-virtual {v4, v5}, Landroid/util/ArrayMap;->valueAt(I)Ljava/lang/Object;

    move-result-object v6

    check-cast v6, Lcom/android/server/am/UriPermission;

    .line 10825
    if-eqz p1, :cond_0

    iget-object v7, v6, Lcom/android/server/am/UriPermission;->targetPkg:Ljava/lang/String;

    invoke-virtual {p1, v7}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v7

    if-eqz v7, :cond_1

    :cond_0
    iget v7, v6, Lcom/android/server/am/UriPermission;->targetUserId:I

    if-ne v7, p2, :cond_1

    iget v7, v6, Lcom/android/server/am/UriPermission;->persistedModeFlags:I

    if-eqz v7, :cond_1

    .line 10828
    invoke-virtual {v6}, Lcom/android/server/am/UriPermission;->buildGrantedUriPermission()Landroid/app/GrantedUriPermission;

    move-result-object v6

    invoke-interface {v0, v6}, Ljava/util/List;->add(Ljava/lang/Object;)Z

    .line 10823
    :cond_1
    add-int/lit8 v5, v5, 0x1

    goto :goto_1

    .line 10821
    :cond_2
    add-int/lit8 v3, v3, 0x1

    goto :goto_0

    .line 10832
    :cond_3
    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    .line 10833
    new-instance p1, Landroid/content/pm/ParceledListSlice;

    invoke-direct {p1, v0}, Landroid/content/pm/ParceledListSlice;-><init>(Ljava/util/List;)V

    return-object p1

    .line 10832
    :catchall_0
    move-exception p1

    :try_start_1
    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw p1
.end method

.method getHomeIntent()Landroid/content/Intent;
    .locals 3

    .line 4790
    new-instance v0, Landroid/content/Intent;

    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mTopAction:Ljava/lang/String;

    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mTopData:Ljava/lang/String;

    if-eqz v2, :cond_0

    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mTopData:Ljava/lang/String;

    invoke-static {v2}, Landroid/net/Uri;->parse(Ljava/lang/String;)Landroid/net/Uri;

    move-result-object v2

    goto :goto_0

    :cond_0
    const/4 v2, 0x0

    :goto_0
    invoke-direct {v0, v1, v2}, Landroid/content/Intent;-><init>(Ljava/lang/String;Landroid/net/Uri;)V

    .line 4791
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mTopComponent:Landroid/content/ComponentName;

    invoke-virtual {v0, v1}, Landroid/content/Intent;->setComponent(Landroid/content/ComponentName;)Landroid/content/Intent;

    .line 4792
    const/16 v1, 0x100

    invoke-virtual {v0, v1}, Landroid/content/Intent;->addFlags(I)Landroid/content/Intent;

    .line 4793
    iget v1, p0, Lcom/android/server/am/ActivityManagerService;->mFactoryTest:I

    const/4 v2, 0x1

    if-eq v1, v2, :cond_1

    .line 4794
    const-string v1, "android.intent.category.HOME"

    invoke-virtual {v0, v1}, Landroid/content/Intent;->addCategory(Ljava/lang/String;)Landroid/content/Intent;

    .line 4796
    :cond_1
    return-object v0
.end method

.method public getIntentForIntentSender(Landroid/content/IIntentSender;)Landroid/content/Intent;
    .locals 2

    .line 8837
    const-string v0, "android.permission.GET_INTENT_SENDER_INTENT"

    const-string v1, "getIntentForIntentSender()"

    invoke-virtual {p0, v0, v1}, Lcom/android/server/am/ActivityManagerService;->enforceCallingPermission(Ljava/lang/String;Ljava/lang/String;)V

    .line 8839
    instance-of v0, p1, Lcom/android/server/am/PendingIntentRecord;

    const/4 v1, 0x0

    if-nez v0, :cond_0

    .line 8840
    return-object v1

    .line 8843
    :cond_0
    :try_start_0
    check-cast p1, Lcom/android/server/am/PendingIntentRecord;

    .line 8844
    iget-object v0, p1, Lcom/android/server/am/PendingIntentRecord;->key:Lcom/android/server/am/PendingIntentRecord$Key;

    iget-object v0, v0, Lcom/android/server/am/PendingIntentRecord$Key;->requestIntent:Landroid/content/Intent;

    if-eqz v0, :cond_1

    new-instance v0, Landroid/content/Intent;

    iget-object p1, p1, Lcom/android/server/am/PendingIntentRecord;->key:Lcom/android/server/am/PendingIntentRecord$Key;

    iget-object p1, p1, Lcom/android/server/am/PendingIntentRecord$Key;->requestIntent:Landroid/content/Intent;

    invoke-direct {v0, p1}, Landroid/content/Intent;-><init>(Landroid/content/Intent;)V
    :try_end_0
    .catch Ljava/lang/ClassCastException; {:try_start_0 .. :try_end_0} :catch_0

    goto :goto_0

    :cond_1
    move-object v0, v1

    :goto_0
    return-object v0

    .line 8845
    :catch_0
    move-exception p1

    .line 8847
    return-object v1
.end method

.method public getIntentSender(ILjava/lang/String;Landroid/os/IBinder;Ljava/lang/String;I[Landroid/content/Intent;[Ljava/lang/String;ILandroid/os/Bundle;I)Landroid/content/IIntentSender;
    .locals 22

    move-object/from16 v13, p0

    move/from16 v0, p1

    move-object/from16 v3, p2

    move-object/from16 v9, p6

    move-object/from16 v10, p7

    .line 8510
    const-string v1, "getIntentSender"

    invoke-virtual {v13, v1}, Lcom/android/server/am/ActivityManagerService;->enforceNotIsolatedCaller(Ljava/lang/String;)V

    .line 8512
    const/4 v1, 0x0

    const/4 v2, 0x1

    if-eqz v9, :cond_7

    .line 8513
    array-length v4, v9

    if-lt v4, v2, :cond_6

    .line 8516
    move v4, v1

    :goto_0
    array-length v5, v9

    if-ge v4, v5, :cond_4

    .line 8517
    aget-object v5, v9, v4

    .line 8518
    if-eqz v5, :cond_3

    .line 8519
    invoke-virtual {v5}, Landroid/content/Intent;->hasFileDescriptors()Z

    move-result v6

    if-nez v6, :cond_2

    .line 8522
    if-ne v0, v2, :cond_1

    .line 8523
    invoke-virtual {v5}, Landroid/content/Intent;->getFlags()I

    move-result v6

    const/high16 v7, 0x2000000

    and-int/2addr v6, v7

    if-nez v6, :cond_0

    goto :goto_1

    .line 8524
    :cond_0
    new-instance v0, Ljava/lang/IllegalArgumentException;

    const-string v1, "Can\'t use FLAG_RECEIVER_BOOT_UPGRADE here"

    invoke-direct {v0, v1}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v0

    .line 8527
    :cond_1
    :goto_1
    new-instance v6, Landroid/content/Intent;

    invoke-direct {v6, v5}, Landroid/content/Intent;-><init>(Landroid/content/Intent;)V

    aput-object v6, v9, v4

    goto :goto_2

    .line 8520
    :cond_2
    new-instance v0, Ljava/lang/IllegalArgumentException;

    const-string v1, "File descriptors passed in Intent"

    invoke-direct {v0, v1}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v0

    .line 8516
    :cond_3
    :goto_2
    add-int/lit8 v4, v4, 0x1

    goto :goto_0

    .line 8530
    :cond_4
    if-eqz v10, :cond_7

    array-length v4, v10

    array-length v5, v9

    if-ne v4, v5, :cond_5

    goto :goto_3

    .line 8531
    :cond_5
    new-instance v0, Ljava/lang/IllegalArgumentException;

    const-string v1, "Intent array length does not match resolvedTypes length"

    invoke-direct {v0, v1}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v0

    .line 8514
    :cond_6
    new-instance v0, Ljava/lang/IllegalArgumentException;

    const-string v1, "Intents array length must be >= 1"

    invoke-direct {v0, v1}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v0

    .line 8535
    :cond_7
    :goto_3
    if-eqz p9, :cond_9

    .line 8536
    invoke-virtual/range {p9 .. p9}, Landroid/os/Bundle;->hasFileDescriptors()Z

    move-result v4

    if-nez v4, :cond_8

    goto :goto_4

    .line 8537
    :cond_8
    new-instance v0, Ljava/lang/IllegalArgumentException;

    const-string v1, "File descriptors passed in options"

    invoke-direct {v0, v1}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v0

    .line 8541
    :cond_9
    :goto_4
    monitor-enter p0

    :try_start_0
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    .line 8542
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v4

    .line 8543
    nop

    .line 8544
    iget-object v14, v13, Lcom/android/server/am/ActivityManagerService;->mUserController:Lcom/android/server/am/UserController;

    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result v15

    if-ne v0, v2, :cond_a

    move/from16 v18, v2

    goto :goto_5

    :cond_a
    move/from16 v18, v1

    :goto_5
    const/16 v19, 0x0

    const-string v20, "getIntentSender"

    const/16 v21, 0x0

    move/from16 v16, v4

    move/from16 v17, p10

    invoke-virtual/range {v14 .. v21}, Lcom/android/server/am/UserController;->handleIncomingUser(IIIZILjava/lang/String;Ljava/lang/String;)I

    move-result v1
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 8547
    const/4 v2, -0x2

    move/from16 v5, p10

    if-ne v5, v2, :cond_b

    .line 8551
    nop

    .line 8554
    move v5, v2

    goto :goto_6

    :cond_b
    move v5, v1

    :goto_6
    if-eqz v4, :cond_d

    const/16 v1, 0x3e8

    if-eq v4, v1, :cond_d

    .line 8555
    :try_start_1
    invoke-static {}, Landroid/app/AppGlobals;->getPackageManager()Landroid/content/pm/IPackageManager;

    move-result-object v1

    const/high16 v2, 0x10000000

    .line 8556
    invoke-static {v4}, Landroid/os/UserHandle;->getUserId(I)I

    move-result v6

    .line 8555
    invoke-interface {v1, v3, v2, v6}, Landroid/content/pm/IPackageManager;->getPackageUid(Ljava/lang/String;II)I

    move-result v1

    .line 8557
    invoke-static {v4, v1}, Landroid/os/UserHandle;->isSameApp(II)Z

    move-result v2

    if-eqz v2, :cond_c

    goto :goto_7

    .line 8558
    :cond_c
    new-instance v0, Ljava/lang/StringBuilder;

    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V

    const-string v2, "Permission Denial: getIntentSender() from pid="

    invoke-virtual {v0, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 8559
    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result v2

    invoke-virtual {v0, v2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v2, ", uid="

    invoke-virtual {v0, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 8560
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v2

    invoke-virtual {v0, v2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v2, ", (need uid="

    invoke-virtual {v0, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v1, ") is not allowed to send as package "

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    .line 8563
    const-string v1, "ActivityManager"

    invoke-static {v1, v0}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 8564
    new-instance v1, Ljava/lang/SecurityException;

    invoke-direct {v1, v0}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v1

    .line 8568
    :cond_d
    :goto_7
    move-object v1, v13

    move v2, v0

    move-object/from16 v6, p3

    move-object/from16 v7, p4

    move/from16 v8, p5

    move/from16 v11, p8

    move-object/from16 v12, p9

    invoke-virtual/range {v1 .. v12}, Lcom/android/server/am/ActivityManagerService;->getIntentSenderLocked(ILjava/lang/String;IILandroid/os/IBinder;Ljava/lang/String;I[Landroid/content/Intent;[Ljava/lang/String;ILandroid/os/Bundle;)Landroid/content/IIntentSender;

    move-result-object v0
    :try_end_1
    .catch Landroid/os/RemoteException; {:try_start_1 .. :try_end_1} :catch_0
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    :try_start_2
    monitor-exit p0
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    return-object v0

    .line 8571
    :catch_0
    move-exception v0

    .line 8572
    :try_start_3
    new-instance v1, Ljava/lang/SecurityException;

    invoke-direct {v1, v0}, Ljava/lang/SecurityException;-><init>(Ljava/lang/Throwable;)V

    throw v1

    .line 8574
    :catchall_0
    move-exception v0

    monitor-exit p0
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw v0
.end method

.method getIntentSenderLocked(ILjava/lang/String;IILandroid/os/IBinder;Ljava/lang/String;I[Landroid/content/Intent;[Ljava/lang/String;ILandroid/os/Bundle;)Landroid/content/IIntentSender;
    .locals 22

    move-object/from16 v0, p0

    move/from16 v12, p1

    move-object/from16 v13, p8

    .line 8582
    nop

    .line 8583
    const/4 v14, 0x3

    const/4 v15, 0x0

    if-ne v12, v14, :cond_2

    .line 8584
    invoke-static/range {p5 .. p5}, Lcom/android/server/am/ActivityRecord;->isInStackLocked(Landroid/os/IBinder;)Lcom/android/server/am/ActivityRecord;

    move-result-object v2

    .line 8585
    if-nez v2, :cond_0

    .line 8586
    const-string v0, "ActivityManager"

    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string v2, "Failed createPendingResult: activity "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-object/from16 v2, p5

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    const-string v2, " not in any stack"

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-static {v0, v1}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 8587
    return-object v15

    .line 8589
    :cond_0
    iget-boolean v3, v2, Lcom/android/server/am/ActivityRecord;->finishing:Z

    if-eqz v3, :cond_1

    .line 8590
    const-string v0, "ActivityManager"

    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string v3, "Failed createPendingResult: activity "

    invoke-virtual {v1, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    const-string v2, " is finishing"

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-static {v0, v1}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 8591
    return-object v15

    .line 8597
    :cond_1
    move-object v11, v2

    goto :goto_0

    :cond_2
    move-object v11, v15

    :goto_0
    const/4 v2, 0x0

    const/4 v10, 0x1

    if-eqz v13, :cond_3

    .line 8598
    move v3, v2

    :goto_1
    array-length v4, v13

    if-ge v3, v4, :cond_3

    .line 8599
    aget-object v4, v13, v3

    invoke-virtual {v4, v10}, Landroid/content/Intent;->setDefusable(Z)V

    .line 8598
    add-int/lit8 v3, v3, 0x1

    goto :goto_1

    .line 8602
    :cond_3
    move-object/from16 v3, p11

    invoke-static {v3, v10}, Landroid/os/Bundle;->setDefusable(Landroid/os/Bundle;Z)Landroid/os/Bundle;

    .line 8604
    const/high16 v4, 0x20000000

    and-int v4, p10, v4

    if-eqz v4, :cond_4

    .line 8605
    move/from16 v16, v10

    goto :goto_2

    .line 8604
    :cond_4
    nop

    .line 8605
    move/from16 v16, v2

    :goto_2
    const/high16 v4, 0x10000000

    and-int v4, p10, v4

    if-eqz v4, :cond_5

    .line 8606
    move/from16 v17, v10

    goto :goto_3

    .line 8605
    :cond_5
    nop

    .line 8606
    move/from16 v17, v2

    :goto_3
    const/high16 v4, 0x8000000

    and-int v4, p10, v4

    if-eqz v4, :cond_6

    .line 8607
    move/from16 v18, v10

    goto :goto_4

    .line 8606
    :cond_6
    nop

    .line 8607
    move/from16 v18, v2

    :goto_4
    const v2, -0x38000001

    and-int v9, p10, v2

    .line 8610
    new-instance v8, Lcom/android/server/am/PendingIntentRecord$Key;

    .line 8612
    invoke-static/range {p11 .. p11}, Lcom/android/server/am/SafeActivityOptions;->fromBundle(Landroid/os/Bundle;)Lcom/android/server/am/SafeActivityOptions;

    move-result-object v19

    move-object v1, v8

    move v2, v12

    move-object/from16 v3, p2

    move-object v4, v11

    move-object/from16 v5, p6

    move/from16 v6, p7

    move-object v7, v13

    move-object v14, v8

    move-object/from16 v8, p9

    move/from16 v20, v10

    move-object/from16 v10, v19

    move-object/from16 v21, v11

    move/from16 v11, p4

    invoke-direct/range {v1 .. v11}, Lcom/android/server/am/PendingIntentRecord$Key;-><init>(ILjava/lang/String;Lcom/android/server/am/ActivityRecord;Ljava/lang/String;I[Landroid/content/Intent;[Ljava/lang/String;ILcom/android/server/am/SafeActivityOptions;I)V

    .line 8614
    iget-object v1, v0, Lcom/android/server/am/ActivityManagerService;->mIntentSenderRecords:Ljava/util/HashMap;

    invoke-virtual {v1, v14}, Ljava/util/HashMap;->get(Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object v1

    check-cast v1, Ljava/lang/ref/WeakReference;

    .line 8615
    if-eqz v1, :cond_7

    invoke-virtual {v1}, Ljava/lang/ref/WeakReference;->get()Ljava/lang/Object;

    move-result-object v1

    check-cast v1, Lcom/android/server/am/PendingIntentRecord;

    goto :goto_5

    .line 8616
    :cond_7
    move-object v1, v15

    :goto_5
    if-eqz v1, :cond_d

    .line 8617
    if-nez v17, :cond_c

    .line 8618
    if-eqz v18, :cond_b

    .line 8619
    iget-object v0, v1, Lcom/android/server/am/PendingIntentRecord;->key:Lcom/android/server/am/PendingIntentRecord$Key;

    iget-object v0, v0, Lcom/android/server/am/PendingIntentRecord$Key;->requestIntent:Landroid/content/Intent;

    if-eqz v0, :cond_9

    .line 8620
    iget-object v0, v1, Lcom/android/server/am/PendingIntentRecord;->key:Lcom/android/server/am/PendingIntentRecord$Key;

    iget-object v0, v0, Lcom/android/server/am/PendingIntentRecord$Key;->requestIntent:Landroid/content/Intent;

    if-eqz v13, :cond_8

    .line 8621
    array-length v2, v13

    add-int/lit8 v2, v2, -0x1

    aget-object v2, v13, v2

    goto :goto_6

    .line 8620
    :cond_8
    move-object v2, v15

    :goto_6
    invoke-virtual {v0, v2}, Landroid/content/Intent;->replaceExtras(Landroid/content/Intent;)Landroid/content/Intent;

    .line 8623
    :cond_9
    if-eqz v13, :cond_a

    .line 8624
    array-length v0, v13

    add-int/lit8 v0, v0, -0x1

    iget-object v2, v1, Lcom/android/server/am/PendingIntentRecord;->key:Lcom/android/server/am/PendingIntentRecord$Key;

    iget-object v2, v2, Lcom/android/server/am/PendingIntentRecord$Key;->requestIntent:Landroid/content/Intent;

    aput-object v2, v13, v0

    .line 8625
    iget-object v0, v1, Lcom/android/server/am/PendingIntentRecord;->key:Lcom/android/server/am/PendingIntentRecord$Key;

    iput-object v13, v0, Lcom/android/server/am/PendingIntentRecord$Key;->allIntents:[Landroid/content/Intent;

    .line 8626
    iget-object v0, v1, Lcom/android/server/am/PendingIntentRecord;->key:Lcom/android/server/am/PendingIntentRecord$Key;

    move-object/from16 v2, p9

    iput-object v2, v0, Lcom/android/server/am/PendingIntentRecord$Key;->allResolvedTypes:[Ljava/lang/String;

    goto :goto_7

    .line 8628
    :cond_a
    iget-object v0, v1, Lcom/android/server/am/PendingIntentRecord;->key:Lcom/android/server/am/PendingIntentRecord$Key;

    iput-object v15, v0, Lcom/android/server/am/PendingIntentRecord$Key;->allIntents:[Landroid/content/Intent;

    .line 8629
    iget-object v0, v1, Lcom/android/server/am/PendingIntentRecord;->key:Lcom/android/server/am/PendingIntentRecord$Key;

    iput-object v15, v0, Lcom/android/server/am/PendingIntentRecord$Key;->allResolvedTypes:[Ljava/lang/String;

    .line 8632
    :cond_b
    :goto_7
    return-object v1

    .line 8634
    :cond_c
    invoke-virtual {v0, v1}, Lcom/android/server/am/ActivityManagerService;->makeIntentSenderCanceledLocked(Lcom/android/server/am/PendingIntentRecord;)V

    .line 8635
    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mIntentSenderRecords:Ljava/util/HashMap;

    invoke-virtual {v2, v14}, Ljava/util/HashMap;->remove(Ljava/lang/Object;)Ljava/lang/Object;

    .line 8637
    :cond_d
    if-eqz v16, :cond_e

    .line 8638
    return-object v1

    .line 8640
    :cond_e
    new-instance v1, Lcom/android/server/am/PendingIntentRecord;

    move/from16 v2, p3

    invoke-direct {v1, v0, v14, v2}, Lcom/android/server/am/PendingIntentRecord;-><init>(Lcom/android/server/am/ActivityManagerService;Lcom/android/server/am/PendingIntentRecord$Key;I)V

    .line 8641
    iget-object v0, v0, Lcom/android/server/am/ActivityManagerService;->mIntentSenderRecords:Ljava/util/HashMap;

    iget-object v2, v1, Lcom/android/server/am/PendingIntentRecord;->ref:Ljava/lang/ref/WeakReference;

    invoke-virtual {v0, v14, v2}, Ljava/util/HashMap;->put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    .line 8642
    const/4 v0, 0x3

    if-ne v12, v0, :cond_10

    .line 8643
    move-object/from16 v2, v21

    iget-object v0, v2, Lcom/android/server/am/ActivityRecord;->pendingResults:Ljava/util/HashSet;

    if-nez v0, :cond_f

    .line 8644
    new-instance v0, Ljava/util/HashSet;

    invoke-direct {v0}, Ljava/util/HashSet;-><init>()V

    iput-object v0, v2, Lcom/android/server/am/ActivityRecord;->pendingResults:Ljava/util/HashSet;

    .line 8647
    :cond_f
    iget-object v0, v2, Lcom/android/server/am/ActivityRecord;->pendingResults:Ljava/util/HashSet;

    iget-object v2, v1, Lcom/android/server/am/PendingIntentRecord;->ref:Ljava/lang/ref/WeakReference;

    invoke-virtual {v0, v2}, Ljava/util/HashSet;->add(Ljava/lang/Object;)Z

    .line 8649
    :cond_10
    return-object v1
.end method

.method public getLastResumedActivityUserId()I
    .locals 2

    .line 27371
    const-string v0, "android.permission.INTERACT_ACROSS_USERS_FULL"

    const-string v1, "getLastResumedActivityUserId()"

    invoke-virtual {p0, v0, v1}, Lcom/android/server/am/ActivityManagerService;->enforceCallingPermission(Ljava/lang/String;Ljava/lang/String;)V

    .line 27373
    monitor-enter p0

    :try_start_0
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    .line 27374
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mLastResumedActivity:Lcom/android/server/am/ActivityRecord;

    if-nez v0, :cond_0

    .line 27375
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mUserController:Lcom/android/server/am/UserController;

    invoke-virtual {v0}, Lcom/android/server/am/UserController;->getCurrentUserId()I

    move-result v0

    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    return v0

    .line 27377
    :cond_0
    :try_start_1
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mLastResumedActivity:Lcom/android/server/am/ActivityRecord;

    iget v0, v0, Lcom/android/server/am/ActivityRecord;->userId:I

    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    return v0

    .line 27378
    :catchall_0
    move-exception v0

    :try_start_2
    monitor-exit p0
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw v0
.end method

.method public getLaunchedFromPackage(Landroid/os/IBinder;)Ljava/lang/String;
    .locals 0

    .line 23210
    monitor-enter p0

    :try_start_0
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    .line 23211
    invoke-static {p1}, Lcom/android/server/am/ActivityRecord;->forTokenLocked(Landroid/os/IBinder;)Lcom/android/server/am/ActivityRecord;

    move-result-object p1

    .line 23212
    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    .line 23213
    if-nez p1, :cond_0

    .line 23214
    const/4 p1, 0x0

    return-object p1

    .line 23216
    :cond_0
    iget-object p1, p1, Lcom/android/server/am/ActivityRecord;->launchedFromPackage:Ljava/lang/String;

    return-object p1

    .line 23212
    :catchall_0
    move-exception p1

    :try_start_1
    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw p1
.end method

.method public getLaunchedFromUid(Landroid/os/IBinder;)I
    .locals 0

    .line 23199
    monitor-enter p0

    :try_start_0
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    .line 23200
    invoke-static {p1}, Lcom/android/server/am/ActivityRecord;->forTokenLocked(Landroid/os/IBinder;)Lcom/android/server/am/ActivityRecord;

    move-result-object p1

    .line 23201
    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    .line 23202
    if-nez p1, :cond_0

    .line 23203
    const/4 p1, -0x1

    return p1

    .line 23205
    :cond_0
    iget p1, p1, Lcom/android/server/am/ActivityRecord;->launchedFromUid:I

    return p1

    .line 23201
    :catchall_0
    move-exception p1

    :try_start_1
    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw p1
.end method

.method getLifecycleManager()Lcom/android/server/am/ClientLifecycleManager;
    .locals 1

    .line 12835
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mLifecycleManager:Lcom/android/server/am/ClientLifecycleManager;

    return-object v0
.end method

.method getLockTaskController()Lcom/android/server/am/LockTaskController;
    .locals 1

    .line 12831
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mLockTaskController:Lcom/android/server/am/LockTaskController;

    return-object v0
.end method

.method public getLockTaskModeState()I
    .locals 1

    .line 12021
    monitor-enter p0

    :try_start_0
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    .line 12022
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mLockTaskController:Lcom/android/server/am/LockTaskController;

    invoke-virtual {v0}, Lcom/android/server/am/LockTaskController;->getLockTaskModeState()I

    move-result v0

    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    return v0

    .line 12023
    :catchall_0
    move-exception v0

    :try_start_1
    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw v0
.end method

.method public getMaxNumPictureInPictureActions(Landroid/os/IBinder;)I
    .locals 0

    .line 9143
    const/4 p1, 0x3

    return p1
.end method

.method public getMemoryInfo(Landroid/app/ActivityManager$MemoryInfo;)V
    .locals 10

    .line 10862
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mProcessList:Lcom/android/server/am/ProcessList;

    const/16 v1, 0x258

    invoke-virtual {v0, v1}, Lcom/android/server/am/ProcessList;->getMemLevel(I)J

    move-result-wide v0

    .line 10863
    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mProcessList:Lcom/android/server/am/ProcessList;

    const/16 v3, 0x384

    invoke-virtual {v2, v3}, Lcom/android/server/am/ProcessList;->getMemLevel(I)J

    move-result-wide v2

    .line 10864
    invoke-static {}, Landroid/os/Process;->getFreeMemory()J

    move-result-wide v4

    iput-wide v4, p1, Landroid/app/ActivityManager$MemoryInfo;->availMem:J

    .line 10865
    invoke-static {}, Landroid/os/Process;->getTotalMemory()J

    move-result-wide v4

    iput-wide v4, p1, Landroid/app/ActivityManager$MemoryInfo;->totalMem:J

    .line 10866
    iput-wide v0, p1, Landroid/app/ActivityManager$MemoryInfo;->threshold:J

    .line 10867
    iget-wide v4, p1, Landroid/app/ActivityManager$MemoryInfo;->availMem:J

    sub-long v6, v2, v0

    const-wide/16 v8, 0x2

    div-long/2addr v6, v8

    add-long/2addr v0, v6

    cmp-long v0, v4, v0

    const/4 v1, 0x0

    if-gez v0, :cond_0

    const/4 v0, 0x1

    goto :goto_0

    :cond_0
    move v0, v1

    :goto_0
    iput-boolean v0, p1, Landroid/app/ActivityManager$MemoryInfo;->lowMemory:Z

    .line 10868
    iput-wide v2, p1, Landroid/app/ActivityManager$MemoryInfo;->hiddenAppThreshold:J

    .line 10869
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mProcessList:Lcom/android/server/am/ProcessList;

    const/16 v2, 0x1f4

    invoke-virtual {v0, v2}, Lcom/android/server/am/ProcessList;->getMemLevel(I)J

    move-result-wide v2

    iput-wide v2, p1, Landroid/app/ActivityManager$MemoryInfo;->secondaryServerThreshold:J

    .line 10871
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mProcessList:Lcom/android/server/am/ProcessList;

    const/16 v2, 0x64

    invoke-virtual {v0, v2}, Lcom/android/server/am/ProcessList;->getMemLevel(I)J

    move-result-wide v2

    iput-wide v2, p1, Landroid/app/ActivityManager$MemoryInfo;->visibleAppThreshold:J

    .line 10873
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mProcessList:Lcom/android/server/am/ProcessList;

    invoke-virtual {v0, v1}, Lcom/android/server/am/ProcessList;->getMemLevel(I)J

    move-result-wide v0

    iput-wide v0, p1, Landroid/app/ActivityManager$MemoryInfo;->foregroundAppThreshold:J

    .line 10875
    return-void
.end method

.method public getMemoryTrimLevel()I
    .locals 1

    .line 16302
    const-string v0, "getMyMemoryState"

    invoke-virtual {p0, v0}, Lcom/android/server/am/ActivityManagerService;->enforceNotIsolatedCaller(Ljava/lang/String;)V

    .line 16303
    monitor-enter p0

    :try_start_0
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    .line 16304
    iget v0, p0, Lcom/android/server/am/ActivityManagerService;->mLastMemoryLevel:I

    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    return v0

    .line 16305
    :catchall_0
    move-exception v0

    :try_start_1
    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw v0
.end method

.method public getMyMemoryState(Landroid/app/ActivityManager$RunningAppProcessInfo;)V
    .locals 4

    .line 16281
    if-eqz p1, :cond_1

    .line 16284
    const-string v0, "getMyMemoryState"

    invoke-virtual {p0, v0}, Lcom/android/server/am/ActivityManagerService;->enforceNotIsolatedCaller(Ljava/lang/String;)V

    .line 16286
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v0

    .line 16287
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mPackageManagerInt:Landroid/content/pm/PackageManagerInternal;

    invoke-virtual {v1, v0}, Landroid/content/pm/PackageManagerInternal;->getUidTargetSdkVersion(I)I

    move-result v0

    .line 16289
    monitor-enter p0

    :try_start_0
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    .line 16291
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Landroid/util/SparseArray;

    monitor-enter v1
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_1

    .line 16292
    :try_start_1
    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Landroid/util/SparseArray;

    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result v3

    invoke-virtual {v2, v3}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Lcom/android/server/am/ProcessRecord;

    .line 16293
    monitor-exit v1
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 16294
    if-eqz v2, :cond_0

    .line 16295
    :try_start_2
    invoke-direct {p0, v2, p1, v0}, Lcom/android/server/am/ActivityManagerService;->fillInProcMemInfo(Lcom/android/server/am/ProcessRecord;Landroid/app/ActivityManager$RunningAppProcessInfo;I)V

    .line 16297
    :cond_0
    monitor-exit p0
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_1

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    .line 16298
    return-void

    .line 16293
    :catchall_0
    move-exception p1

    :try_start_3
    monitor-exit v1
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_0

    :try_start_4
    throw p1

    .line 16297
    :catchall_1
    move-exception p1

    monitor-exit p0
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_1

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw p1

    .line 16282
    :cond_1
    new-instance p1, Ljava/lang/IllegalArgumentException;

    const-string/jumbo v0, "outState is null"

    invoke-direct {p1, v0}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw p1
.end method

.method public getPackageAskScreenCompat(Ljava/lang/String;)Z
    .locals 1

    .line 4910
    const-string v0, "getPackageAskScreenCompat"

    invoke-virtual {p0, v0}, Lcom/android/server/am/ActivityManagerService;->enforceNotIsolatedCaller(Ljava/lang/String;)V

    .line 4911
    monitor-enter p0

    :try_start_0
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    .line 4912
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mCompatModePackages:Lcom/android/server/am/CompatModePackages;

    invoke-virtual {v0, p1}, Lcom/android/server/am/CompatModePackages;->getPackageAskCompatModeLocked(Ljava/lang/String;)Z

    move-result p1

    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    return p1

    .line 4913
    :catchall_0
    move-exception p1

    :try_start_1
    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw p1
.end method

.method public getPackageForIntentSender(Landroid/content/IIntentSender;)Ljava/lang/String;
    .locals 2

    .line 8733
    instance-of v0, p1, Lcom/android/server/am/PendingIntentRecord;

    const/4 v1, 0x0

    if-nez v0, :cond_0

    .line 8734
    return-object v1

    .line 8737
    :cond_0
    :try_start_0
    check-cast p1, Lcom/android/server/am/PendingIntentRecord;

    .line 8738
    iget-object p1, p1, Lcom/android/server/am/PendingIntentRecord;->key:Lcom/android/server/am/PendingIntentRecord$Key;

    iget-object p1, p1, Lcom/android/server/am/PendingIntentRecord$Key;->packageName:Ljava/lang/String;
    :try_end_0
    .catch Ljava/lang/ClassCastException; {:try_start_0 .. :try_end_0} :catch_0

    return-object p1

    .line 8739
    :catch_0
    move-exception p1

    .line 8741
    return-object v1
.end method

.method public getPackageForToken(Landroid/os/IBinder;)Ljava/lang/String;
    .locals 0

    .line 8485
    monitor-enter p0

    :try_start_0
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    .line 8486
    invoke-static {p1}, Lcom/android/server/am/ActivityRecord;->isInStackLocked(Landroid/os/IBinder;)Lcom/android/server/am/ActivityRecord;

    move-result-object p1

    .line 8487
    if-nez p1, :cond_0

    .line 8488
    const/4 p1, 0x0

    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    return-object p1

    .line 8490
    :cond_0
    :try_start_1
    iget-object p1, p1, Lcom/android/server/am/ActivityRecord;->packageName:Ljava/lang/String;

    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    return-object p1

    .line 8491
    :catchall_0
    move-exception p1

    :try_start_2
    monitor-exit p0
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw p1
.end method

.method getPackageManager()Landroid/content/pm/IPackageManager;
    .locals 1

    .line 12823
    invoke-static {}, Landroid/app/AppGlobals;->getPackageManager()Landroid/content/pm/IPackageManager;

    move-result-object v0

    return-object v0
.end method

.method getPackageManagerInternalLocked()Landroid/content/pm/PackageManagerInternal;
    .locals 1

    .line 12839
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mPackageManagerInt:Landroid/content/pm/PackageManagerInternal;

    if-nez v0, :cond_0

    .line 12840
    const-class v0, Landroid/content/pm/PackageManagerInternal;

    invoke-static {v0}, Lcom/android/server/LocalServices;->getService(Ljava/lang/Class;)Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Landroid/content/pm/PackageManagerInternal;

    iput-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mPackageManagerInt:Landroid/content/pm/PackageManagerInternal;

    .line 12842
    :cond_0
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mPackageManagerInt:Landroid/content/pm/PackageManagerInternal;

    return-object v0
.end method

.method public getPackageProcessState(Ljava/lang/String;Ljava/lang/String;)I
    .locals 3

    .line 4937
    invoke-direct {p0, p2}, Lcom/android/server/am/ActivityManagerService;->hasUsageStatsPermission(Ljava/lang/String;)Z

    move-result p2

    if-nez p2, :cond_0

    .line 4938
    const-string p2, "android.permission.PACKAGE_USAGE_STATS"

    const-string v0, "getPackageProcessState"

    invoke-virtual {p0, p2, v0}, Lcom/android/server/am/ActivityManagerService;->enforceCallingPermission(Ljava/lang/String;Ljava/lang/String;)V

    .line 4942
    :cond_0
    const/16 p2, 0x13

    .line 4943
    monitor-enter p0

    :try_start_0
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    .line 4944
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mLruProcesses:Ljava/util/ArrayList;

    invoke-virtual {v0}, Ljava/util/ArrayList;->size()I

    move-result v0

    add-int/lit8 v0, v0, -0x1

    :goto_0
    if-ltz v0, :cond_3

    .line 4945
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mLruProcesses:Ljava/util/ArrayList;

    invoke-virtual {v1, v0}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v1

    check-cast v1, Lcom/android/server/am/ProcessRecord;

    .line 4946
    iget v2, v1, Lcom/android/server/am/ProcessRecord;->setProcState:I

    if-le p2, v2, :cond_2

    .line 4947
    iget-object v2, v1, Lcom/android/server/am/ProcessRecord;->pkgList:Landroid/util/ArrayMap;

    invoke-virtual {v2, p1}, Landroid/util/ArrayMap;->containsKey(Ljava/lang/Object;)Z

    move-result v2

    if-nez v2, :cond_1

    iget-object v2, v1, Lcom/android/server/am/ProcessRecord;->pkgDeps:Landroid/util/ArraySet;

    if-eqz v2, :cond_2

    iget-object v2, v1, Lcom/android/server/am/ProcessRecord;->pkgDeps:Landroid/util/ArraySet;

    .line 4948
    invoke-virtual {v2, p1}, Landroid/util/ArraySet;->contains(Ljava/lang/Object;)Z

    move-result v2

    if-eqz v2, :cond_2

    .line 4949
    :cond_1
    iget p2, v1, Lcom/android/server/am/ProcessRecord;->setProcState:I

    .line 4944
    :cond_2
    add-int/lit8 v0, v0, -0x1

    goto :goto_0

    .line 4953
    :cond_3
    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    .line 4954
    return p2

    .line 4953
    :catchall_0
    move-exception p1

    :try_start_1
    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw p1
.end method

.method public getPackageScreenCompatMode(Ljava/lang/String;)I
    .locals 1

    .line 4893
    const-string v0, "getPackageScreenCompatMode"

    invoke-virtual {p0, v0}, Lcom/android/server/am/ActivityManagerService;->enforceNotIsolatedCaller(Ljava/lang/String;)V

    .line 4894
    monitor-enter p0

    :try_start_0
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    .line 4895
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mCompatModePackages:Lcom/android/server/am/CompatModePackages;

    invoke-virtual {v0, p1}, Lcom/android/server/am/CompatModePackages;->getPackageScreenCompatModeLocked(Ljava/lang/String;)I

    move-result p1

    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    return p1

    .line 4896
    :catchall_0
    move-exception p1

    :try_start_1
    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw p1
.end method

.method getPendingTempWhitelistTagForUidLocked(I)Ljava/lang/String;
    .locals 1

    .line 11294
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mPendingTempWhitelist:Landroid/util/SparseArray;

    invoke-virtual {v0, p1}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    move-result-object p1

    check-cast p1, Lcom/android/server/am/ActivityManagerService$PendingTempWhitelist;

    .line 11295
    if-eqz p1, :cond_0

    iget-object p1, p1, Lcom/android/server/am/ActivityManagerService$PendingTempWhitelist;->tag:Ljava/lang/String;

    goto :goto_0

    :cond_0
    const/4 p1, 0x0

    :goto_0
    return-object p1
.end method

.method public getPersistedUriPermissions(Ljava/lang/String;Z)Landroid/content/pm/ParceledListSlice;
    .locals 7
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "(",
            "Ljava/lang/String;",
            "Z)",
            "Landroid/content/pm/ParceledListSlice<",
            "Landroid/content/UriPermission;",
            ">;"
        }
    .end annotation

    .line 10763
    const-string v0, "getPersistedUriPermissions"

    invoke-virtual {p0, v0}, Lcom/android/server/am/ActivityManagerService;->enforceNotIsolatedCaller(Ljava/lang/String;)V

    .line 10764
    const-string/jumbo v0, "packageName"

    invoke-static {p1, v0}, Lcom/android/internal/util/Preconditions;->checkNotNull(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    .line 10766
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v0

    .line 10767
    invoke-static {v0}, Landroid/os/UserHandle;->getUserId(I)I

    move-result v1

    .line 10768
    invoke-static {}, Landroid/app/AppGlobals;->getPackageManager()Landroid/content/pm/IPackageManager;

    move-result-object v2

    .line 10770
    const/high16 v3, 0xc0000

    :try_start_0
    invoke-interface {v2, p1, v3, v1}, Landroid/content/pm/IPackageManager;->getPackageUid(Ljava/lang/String;II)I

    move-result v1
    :try_end_0
    .catch Landroid/os/RemoteException; {:try_start_0 .. :try_end_0} :catch_0

    .line 10772
    if-ne v1, v0, :cond_7

    .line 10778
    nop

    .line 10780
    invoke-static {}, Lcom/google/android/collect/Lists;->newArrayList()Ljava/util/ArrayList;

    move-result-object v1

    .line 10781
    monitor-enter p0

    :try_start_1
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    .line 10782
    const/4 v2, 0x0

    if-eqz p2, :cond_3

    .line 10783
    iget-object p2, p0, Lcom/android/server/am/ActivityManagerService;->mGrantedUriPermissions:Landroid/util/SparseArray;

    invoke-virtual {p2, v0}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    move-result-object p2

    check-cast p2, Landroid/util/ArrayMap;

    .line 10785
    if-nez p2, :cond_0

    .line 10786
    const-string p2, "ActivityManager"

    new-instance v0, Ljava/lang/StringBuilder;

    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V

    const-string v2, "No permission grants found for "

    invoke-virtual {v0, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object p1

    invoke-static {p2, p1}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    goto :goto_1

    .line 10788
    :cond_0
    :goto_0
    invoke-virtual {p2}, Landroid/util/ArrayMap;->size()I

    move-result v0

    if-ge v2, v0, :cond_2

    .line 10789
    invoke-virtual {p2, v2}, Landroid/util/ArrayMap;->valueAt(I)Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Lcom/android/server/am/UriPermission;

    .line 10790
    iget-object v3, v0, Lcom/android/server/am/UriPermission;->targetPkg:Ljava/lang/String;

    invoke-virtual {p1, v3}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v3

    if-eqz v3, :cond_1

    iget v3, v0, Lcom/android/server/am/UriPermission;->persistedModeFlags:I

    if-eqz v3, :cond_1

    .line 10791
    invoke-virtual {v0}, Lcom/android/server/am/UriPermission;->buildPersistedPublicApiObject()Landroid/content/UriPermission;

    move-result-object v0

    invoke-virtual {v1, v0}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    .line 10788
    :cond_1
    add-int/lit8 v2, v2, 0x1

    goto :goto_0

    .line 10795
    :cond_2
    :goto_1
    goto :goto_4

    .line 10796
    :cond_3
    iget-object p2, p0, Lcom/android/server/am/ActivityManagerService;->mGrantedUriPermissions:Landroid/util/SparseArray;

    invoke-virtual {p2}, Landroid/util/SparseArray;->size()I

    move-result p2

    .line 10797
    move v0, v2

    :goto_2
    if-ge v0, p2, :cond_6

    .line 10798
    iget-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mGrantedUriPermissions:Landroid/util/SparseArray;

    .line 10799
    invoke-virtual {v3, v0}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;

    move-result-object v3

    check-cast v3, Landroid/util/ArrayMap;

    .line 10800
    move v4, v2

    :goto_3
    invoke-virtual {v3}, Landroid/util/ArrayMap;->size()I

    move-result v5

    if-ge v4, v5, :cond_5

    .line 10801
    invoke-virtual {v3, v4}, Landroid/util/ArrayMap;->valueAt(I)Ljava/lang/Object;

    move-result-object v5

    check-cast v5, Lcom/android/server/am/UriPermission;

    .line 10802
    iget-object v6, v5, Lcom/android/server/am/UriPermission;->sourcePkg:Ljava/lang/String;

    invoke-virtual {p1, v6}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v6

    if-eqz v6, :cond_4

    iget v6, v5, Lcom/android/server/am/UriPermission;->persistedModeFlags:I

    if-eqz v6, :cond_4

    .line 10803
    invoke-virtual {v5}, Lcom/android/server/am/UriPermission;->buildPersistedPublicApiObject()Landroid/content/UriPermission;

    move-result-object v5

    invoke-virtual {v1, v5}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    .line 10800
    :cond_4
    add-int/lit8 v4, v4, 0x1

    goto :goto_3

    .line 10797
    :cond_5
    add-int/lit8 v0, v0, 0x1

    goto :goto_2

    .line 10808
    :cond_6
    :goto_4
    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    .line 10809
    new-instance p1, Landroid/content/pm/ParceledListSlice;

    invoke-direct {p1, v1}, Landroid/content/pm/ParceledListSlice;-><init>(Ljava/util/List;)V

    return-object p1

    .line 10808
    :catchall_0
    move-exception p1

    :try_start_2
    monitor-exit p0
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw p1

    .line 10773
    :cond_7
    :try_start_3
    new-instance p2, Ljava/lang/SecurityException;

    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string v2, "Package "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v1, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string p1, " does not belong to calling UID "

    invoke-virtual {v1, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v1, v0}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object p1

    invoke-direct {p2, p1}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw p2
    :try_end_3
    .catch Landroid/os/RemoteException; {:try_start_3 .. :try_end_3} :catch_0

    .line 10776
    :catch_0
    move-exception p1

    .line 10777
    new-instance p1, Ljava/lang/SecurityException;

    const-string p2, "Failed to verify package name ownership"

    invoke-direct {p1, p2}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw p1
.end method

.method public getProcessLimit()I
    .locals 1

    .line 8901
    monitor-enter p0

    :try_start_0
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    .line 8902
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mConstants:Lcom/android/server/am/ActivityManagerConstants;

    invoke-virtual {v0}, Lcom/android/server/am/ActivityManagerConstants;->getOverrideMaxCachedProcesses()I

    move-result v0

    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    return v0

    .line 8903
    :catchall_0
    move-exception v0

    :try_start_1
    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw v0
.end method

.method public getProcessMemoryInfo([I)[Landroid/os/Debug$MemoryInfo;
    .locals 25

    move-object/from16 v1, p0

    .line 7151
    move-object/from16 v0, p1

    const-string v2, "getProcessMemoryInfo"

    invoke-virtual {v1, v2}, Lcom/android/server/am/ActivityManagerService;->enforceNotIsolatedCaller(Ljava/lang/String;)V

    .line 7152
    array-length v2, v0

    new-array v2, v2, [Landroid/os/Debug$MemoryInfo;

    .line 7153
    array-length v3, v0

    add-int/lit8 v3, v3, -0x1

    :goto_0
    if-ltz v3, :cond_3

    .line 7156
    monitor-enter p0

    :try_start_0
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    .line 7157
    iget-object v4, v1, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Landroid/util/SparseArray;

    monitor-enter v4
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_2

    .line 7158
    :try_start_1
    iget-object v5, v1, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Landroid/util/SparseArray;

    aget v6, v0, v3

    invoke-virtual {v5, v6}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    move-result-object v5

    check-cast v5, Lcom/android/server/am/ProcessRecord;

    .line 7159
    if-eqz v5, :cond_0

    iget v6, v5, Lcom/android/server/am/ProcessRecord;->setAdj:I

    goto :goto_1

    :cond_0
    const/4 v6, 0x0

    .line 7160
    :goto_1
    monitor-exit v4
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_1

    .line 7161
    :try_start_2
    monitor-exit p0
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_2

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    .line 7162
    new-instance v4, Landroid/os/Debug$MemoryInfo;

    invoke-direct {v4}, Landroid/os/Debug$MemoryInfo;-><init>()V

    aput-object v4, v2, v3

    .line 7163
    invoke-static {}, Landroid/os/SystemClock;->currentThreadTimeMillis()J

    move-result-wide v7

    .line 7164
    aget v4, v0, v3

    aget-object v9, v2, v3

    invoke-static {v4, v9}, Landroid/os/Debug;->getMemoryInfo(ILandroid/os/Debug$MemoryInfo;)V

    .line 7165
    invoke-static {}, Landroid/os/SystemClock;->currentThreadTimeMillis()J

    move-result-wide v9

    .line 7166
    if-eqz v5, :cond_2

    .line 7167
    monitor-enter p0

    :try_start_3
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    .line 7168
    iget-object v4, v5, Lcom/android/server/am/ProcessRecord;->thread:Landroid/app/IApplicationThread;

    if-eqz v4, :cond_1

    iget v4, v5, Lcom/android/server/am/ProcessRecord;->setAdj:I

    if-ne v4, v6, :cond_1

    .line 7170
    iget-object v11, v5, Lcom/android/server/am/ProcessRecord;->baseProcessTracker:Lcom/android/internal/app/procstats/ProcessState;

    aget-object v4, v2, v3

    invoke-virtual {v4}, Landroid/os/Debug$MemoryInfo;->getTotalPss()I

    move-result v4

    int-to-long v12, v4

    aget-object v4, v2, v3

    .line 7171
    invoke-virtual {v4}, Landroid/os/Debug$MemoryInfo;->getTotalUss()I

    move-result v4

    int-to-long v14, v4

    aget-object v4, v2, v3

    invoke-virtual {v4}, Landroid/os/Debug$MemoryInfo;->getTotalRss()I

    move-result v4

    move-object/from16 v23, v2

    move/from16 v24, v3

    int-to-long v2, v4

    const/16 v18, 0x0

    const/16 v19, 0x4

    sub-long v20, v9, v7

    iget-object v4, v5, Lcom/android/server/am/ProcessRecord;->pkgList:Landroid/util/ArrayMap;

    .line 7170
    move-wide/from16 v16, v2

    move-object/from16 v22, v4

    invoke-virtual/range {v11 .. v22}, Lcom/android/internal/app/procstats/ProcessState;->addPss(JJJZIJLandroid/util/ArrayMap;)V

    goto :goto_2

    .line 7175
    :cond_1
    move-object/from16 v23, v2

    move/from16 v24, v3

    :goto_2
    monitor-exit p0
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    goto :goto_3

    :catchall_0
    move-exception v0

    :try_start_4
    monitor-exit p0
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw v0

    .line 7153
    :cond_2
    move-object/from16 v23, v2

    move/from16 v24, v3

    :goto_3
    add-int/lit8 v3, v24, -0x1

    move-object/from16 v2, v23

    goto/16 :goto_0

    .line 7160
    :catchall_1
    move-exception v0

    :try_start_5
    monitor-exit v4
    :try_end_5
    .catchall {:try_start_5 .. :try_end_5} :catchall_1

    :try_start_6
    throw v0

    .line 7161
    :catchall_2
    move-exception v0

    monitor-exit p0
    :try_end_6
    .catchall {:try_start_6 .. :try_end_6} :catchall_2

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw v0

    .line 7178
    :cond_3
    move-object/from16 v23, v2

    return-object v23
.end method

.method public getProcessPss([I)[J
    .locals 25

    move-object/from16 v1, p0

    .line 7183
    move-object/from16 v0, p1

    const-string v2, "getProcessPss"

    invoke-virtual {v1, v2}, Lcom/android/server/am/ActivityManagerService;->enforceNotIsolatedCaller(Ljava/lang/String;)V

    .line 7184
    array-length v2, v0

    new-array v2, v2, [J

    .line 7185
    array-length v3, v0

    add-int/lit8 v3, v3, -0x1

    :goto_0
    if-ltz v3, :cond_3

    .line 7188
    monitor-enter p0

    :try_start_0
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    .line 7189
    iget-object v4, v1, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Landroid/util/SparseArray;

    monitor-enter v4
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_2

    .line 7190
    :try_start_1
    iget-object v5, v1, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Landroid/util/SparseArray;

    aget v6, v0, v3

    invoke-virtual {v5, v6}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    move-result-object v5

    check-cast v5, Lcom/android/server/am/ProcessRecord;

    .line 7191
    const/4 v6, 0x0

    if-eqz v5, :cond_0

    iget v7, v5, Lcom/android/server/am/ProcessRecord;->setAdj:I

    goto :goto_1

    .line 7192
    :cond_0
    move v7, v6

    :goto_1
    monitor-exit v4
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_1

    .line 7193
    :try_start_2
    monitor-exit p0
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_2

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    .line 7194
    const/4 v4, 0x3

    new-array v4, v4, [J

    .line 7195
    invoke-static {}, Landroid/os/SystemClock;->currentThreadTimeMillis()J

    move-result-wide v8

    .line 7196
    aget v10, v0, v3

    const/4 v11, 0x0

    invoke-static {v10, v4, v11}, Landroid/os/Debug;->getPss(I[J[J)J

    move-result-wide v10

    aput-wide v10, v2, v3

    .line 7197
    invoke-static {}, Landroid/os/SystemClock;->currentThreadTimeMillis()J

    move-result-wide v10

    .line 7198
    if-eqz v5, :cond_2

    .line 7199
    monitor-enter p0

    :try_start_3
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    .line 7200
    iget-object v12, v5, Lcom/android/server/am/ProcessRecord;->thread:Landroid/app/IApplicationThread;

    if-eqz v12, :cond_1

    iget v12, v5, Lcom/android/server/am/ProcessRecord;->setAdj:I

    if-ne v12, v7, :cond_1

    .line 7202
    iget-object v13, v5, Lcom/android/server/am/ProcessRecord;->baseProcessTracker:Lcom/android/internal/app/procstats/ProcessState;

    aget-wide v14, v2, v3

    aget-wide v16, v4, v6

    const/4 v6, 0x2

    aget-wide v18, v4, v6

    const/16 v20, 0x0

    const/16 v21, 0x3

    sub-long v22, v10, v8

    iget-object v4, v5, Lcom/android/server/am/ProcessRecord;->pkgList:Landroid/util/ArrayMap;

    move-object/from16 v24, v4

    invoke-virtual/range {v13 .. v24}, Lcom/android/internal/app/procstats/ProcessState;->addPss(JJJZIJLandroid/util/ArrayMap;)V

    .line 7205
    :cond_1
    monitor-exit p0
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    goto :goto_2

    :catchall_0
    move-exception v0

    :try_start_4
    monitor-exit p0
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw v0

    .line 7185
    :cond_2
    :goto_2
    add-int/lit8 v3, v3, -0x1

    goto :goto_0

    .line 7192
    :catchall_1
    move-exception v0

    :try_start_5
    monitor-exit v4
    :try_end_5
    .catchall {:try_start_5 .. :try_end_5} :catchall_1

    :try_start_6
    throw v0

    .line 7193
    :catchall_2
    move-exception v0

    monitor-exit p0
    :try_end_6
    .catchall {:try_start_6 .. :try_end_6} :catchall_2

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw v0

    .line 7208
    :cond_3
    return-object v2
.end method

.method final getProcessRecordLocked(Ljava/lang/String;IZ)Lcom/android/server/am/ProcessRecord;
    .locals 5

    .line 4097
    const/16 v0, 0x3e8

    if-ne p2, v0, :cond_3

    .line 4101
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mProcessNames:Lcom/android/internal/app/ProcessMap;

    invoke-virtual {v0}, Lcom/android/internal/app/ProcessMap;->getMap()Landroid/util/ArrayMap;

    move-result-object v0

    invoke-virtual {v0, p1}, Landroid/util/ArrayMap;->get(Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Landroid/util/SparseArray;

    .line 4102
    if-nez v0, :cond_0

    const/4 p1, 0x0

    return-object p1

    .line 4103
    :cond_0
    invoke-virtual {v0}, Landroid/util/SparseArray;->size()I

    move-result v1

    .line 4104
    const/4 v2, 0x0

    :goto_0
    if-ge v2, v1, :cond_3

    .line 4105
    invoke-virtual {v0, v2}, Landroid/util/SparseArray;->keyAt(I)I

    move-result v3

    .line 4106
    invoke-static {v3}, Landroid/os/UserHandle;->isApp(I)Z

    move-result v4

    if-nez v4, :cond_2

    invoke-static {v3, p2}, Landroid/os/UserHandle;->isSameUser(II)Z

    move-result v3

    if-nez v3, :cond_1

    .line 4108
    goto :goto_1

    .line 4110
    :cond_1
    invoke-virtual {v0, v2}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;

    move-result-object p1

    check-cast p1, Lcom/android/server/am/ProcessRecord;

    return-object p1

    .line 4104
    :cond_2
    :goto_1
    add-int/lit8 v2, v2, 0x1

    goto :goto_0

    .line 4113
    :cond_3
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mProcessNames:Lcom/android/internal/app/ProcessMap;

    invoke-virtual {v0, p1, p2}, Lcom/android/internal/app/ProcessMap;->get(Ljava/lang/String;I)Ljava/lang/Object;

    move-result-object p1

    check-cast p1, Lcom/android/server/am/ProcessRecord;

    .line 4122
    if-eqz p1, :cond_5

    if-nez p3, :cond_5

    iget p2, p0, Lcom/android/server/am/ActivityManagerService;->mLastMemoryLevel:I

    if-lez p2, :cond_5

    iget p2, p1, Lcom/android/server/am/ProcessRecord;->setProcState:I

    const/16 p3, 0x12

    if-lt p2, p3, :cond_5

    .line 4126
    iget-wide p2, p1, Lcom/android/server/am/ProcessRecord;->lastCachedPss:J

    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mProcessList:Lcom/android/server/am/ProcessList;

    invoke-virtual {v0}, Lcom/android/server/am/ProcessList;->getCachedRestoreThresholdKb()J

    move-result-wide v0

    cmp-long p2, p2, v0

    if-ltz p2, :cond_5

    .line 4127
    iget-object p2, p1, Lcom/android/server/am/ProcessRecord;->baseProcessTracker:Lcom/android/internal/app/procstats/ProcessState;

    if-eqz p2, :cond_4

    .line 4128
    iget-object p2, p1, Lcom/android/server/am/ProcessRecord;->baseProcessTracker:Lcom/android/internal/app/procstats/ProcessState;

    iget-object p3, p1, Lcom/android/server/am/ProcessRecord;->pkgList:Landroid/util/ArrayMap;

    iget-wide v0, p1, Lcom/android/server/am/ProcessRecord;->lastCachedPss:J

    invoke-virtual {p2, p3, v0, v1}, Lcom/android/internal/app/procstats/ProcessState;->reportCachedKill(Landroid/util/ArrayMap;J)V

    .line 4130
    :cond_4
    new-instance p2, Ljava/lang/StringBuilder;

    invoke-direct {p2}, Ljava/lang/StringBuilder;-><init>()V

    iget-wide v0, p1, Lcom/android/server/am/ProcessRecord;->lastCachedPss:J

    invoke-static {v0, v1}, Ljava/lang/Long;->toString(J)Ljava/lang/String;

    move-result-object p3

    invoke-virtual {p2, p3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string p3, "k from cached"

    invoke-virtual {p2, p3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {p2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object p2

    const/4 p3, 0x1

    invoke-virtual {p1, p2, p3}, Lcom/android/server/am/ProcessRecord;->kill(Ljava/lang/String;Z)V

    .line 4133
    :cond_5
    return-object p1
.end method

.method public getProcessStatesAndOomScoresForPIDs([I[I[I)V
    .locals 4

    .line 9233
    if-eqz p3, :cond_0

    .line 9234
    const-string v0, "android.permission.GET_PROCESS_STATE_AND_OOM_SCORE"

    const-string v1, "getProcessStatesAndOomScoresForPIDs()"

    invoke-virtual {p0, v0, v1}, Lcom/android/server/am/ActivityManagerService;->enforceCallingPermission(Ljava/lang/String;Ljava/lang/String;)V

    .line 9238
    :cond_0
    if-eqz p1, :cond_9

    .line 9240
    if-eqz p2, :cond_8

    .line 9242
    array-length v0, p1

    array-length v1, p2

    if-ne v0, v1, :cond_7

    .line 9244
    if-eqz p3, :cond_2

    array-length v0, p1

    array-length v1, p3

    if-ne v0, v1, :cond_1

    goto :goto_0

    .line 9245
    :cond_1
    new-instance p1, Ljava/lang/IllegalArgumentException;

    const-string/jumbo p2, "pids and scores arrays have different lengths!"

    invoke-direct {p1, p2}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw p1

    .line 9248
    :cond_2
    :goto_0
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Landroid/util/SparseArray;

    monitor-enter v0

    .line 9249
    const/4 v1, 0x0

    :goto_1
    :try_start_0
    array-length v2, p1

    if-ge v1, v2, :cond_6

    .line 9250
    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Landroid/util/SparseArray;

    aget v3, p1, v1

    invoke-virtual {v2, v3}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Lcom/android/server/am/ProcessRecord;

    .line 9251
    if-nez v2, :cond_3

    const/16 v3, 0x13

    goto :goto_2

    .line 9252
    :cond_3
    iget v3, v2, Lcom/android/server/am/ProcessRecord;->curProcState:I

    :goto_2
    aput v3, p2, v1

    .line 9253
    if-eqz p3, :cond_5

    .line 9254
    if-nez v2, :cond_4

    const/16 v2, -0x2710

    goto :goto_3

    :cond_4
    iget v2, v2, Lcom/android/server/am/ProcessRecord;->curAdj:I

    :goto_3
    aput v2, p3, v1

    .line 9249
    :cond_5
    add-int/lit8 v1, v1, 0x1

    goto :goto_1

    .line 9257
    :cond_6
    monitor-exit v0

    .line 9258
    return-void

    .line 9257
    :catchall_0
    move-exception p1

    monitor-exit v0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    throw p1

    .line 9243
    :cond_7
    new-instance p1, Ljava/lang/IllegalArgumentException;

    const-string/jumbo p2, "pids and states arrays have different lengths!"

    invoke-direct {p1, p2}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw p1

    .line 9241
    :cond_8
    new-instance p1, Ljava/lang/NullPointerException;

    const-string/jumbo p2, "states"

    invoke-direct {p1, p2}, Ljava/lang/NullPointerException;-><init>(Ljava/lang/String;)V

    throw p1

    .line 9239
    :cond_9
    new-instance p1, Ljava/lang/NullPointerException;

    const-string/jumbo p2, "pids"

    invoke-direct {p1, p2}, Ljava/lang/NullPointerException;-><init>(Ljava/lang/String;)V

    throw p1
.end method

.method public getProcessesInErrorState()Ljava/util/List;
    .locals 10
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "()",
            "Ljava/util/List<",
            "Landroid/app/ActivityManager$ProcessErrorStateInfo;",
            ">;"
        }
    .end annotation

    .line 16120
    const-string v0, "getProcessesInErrorState"

    invoke-virtual {p0, v0}, Lcom/android/server/am/ActivityManagerService;->enforceNotIsolatedCaller(Ljava/lang/String;)V

    .line 16122
    nop

    .line 16124
    const-string v0, "android.permission.INTERACT_ACROSS_USERS_FULL"

    .line 16125
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v1

    .line 16124
    invoke-static {v0, v1}, Landroid/app/ActivityManager;->checkUidPermission(Ljava/lang/String;I)I

    move-result v0

    const/4 v1, 0x1

    if-nez v0, :cond_0

    .line 16126
    move v0, v1

    goto :goto_0

    .line 16124
    :cond_0
    const/4 v0, 0x0

    .line 16126
    :goto_0
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v2

    invoke-static {v2}, Landroid/os/UserHandle;->getUserId(I)I

    move-result v2

    .line 16128
    monitor-enter p0

    :try_start_0
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    .line 16131
    iget-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mLruProcesses:Ljava/util/ArrayList;

    invoke-virtual {v3}, Ljava/util/ArrayList;->size()I

    move-result v3

    sub-int/2addr v3, v1

    const/4 v4, 0x0

    move-object v5, v4

    :goto_1
    if-ltz v3, :cond_8

    .line 16132
    iget-object v6, p0, Lcom/android/server/am/ActivityManagerService;->mLruProcesses:Ljava/util/ArrayList;

    invoke-virtual {v6, v3}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v6

    check-cast v6, Lcom/android/server/am/ProcessRecord;

    .line 16133
    if-nez v0, :cond_1

    iget v7, v6, Lcom/android/server/am/ProcessRecord;->userId:I

    if-eq v7, v2, :cond_1

    .line 16134
    goto :goto_3

    .line 16136
    :cond_1
    iget-object v7, v6, Lcom/android/server/am/ProcessRecord;->thread:Landroid/app/IApplicationThread;

    if-eqz v7, :cond_7

    iget-boolean v7, v6, Lcom/android/server/am/ProcessRecord;->crashing:Z

    if-nez v7, :cond_2

    iget-boolean v7, v6, Lcom/android/server/am/ProcessRecord;->notResponding:Z

    if-eqz v7, :cond_7

    .line 16139
    :cond_2
    nop

    .line 16140
    iget-boolean v7, v6, Lcom/android/server/am/ProcessRecord;->crashing:Z

    if-eqz v7, :cond_3

    .line 16141
    iget-object v7, v6, Lcom/android/server/am/ProcessRecord;->crashingReport:Landroid/app/ActivityManager$ProcessErrorStateInfo;

    goto :goto_2

    .line 16142
    :cond_3
    iget-boolean v7, v6, Lcom/android/server/am/ProcessRecord;->notResponding:Z

    if-eqz v7, :cond_4

    .line 16143
    iget-object v7, v6, Lcom/android/server/am/ProcessRecord;->notRespondingReport:Landroid/app/ActivityManager$ProcessErrorStateInfo;

    goto :goto_2

    .line 16146
    :cond_4
    move-object v7, v4

    :goto_2
    if-eqz v7, :cond_6

    .line 16147
    if-nez v5, :cond_5

    .line 16148
    new-instance v5, Ljava/util/ArrayList;

    invoke-direct {v5, v1}, Ljava/util/ArrayList;-><init>(I)V

    .line 16150
    :cond_5
    invoke-interface {v5, v7}, Ljava/util/List;->add(Ljava/lang/Object;)Z

    goto :goto_3

    .line 16152
    :cond_6
    const-string v7, "ActivityManager"

    new-instance v8, Ljava/lang/StringBuilder;

    invoke-direct {v8}, Ljava/lang/StringBuilder;-><init>()V

    const-string v9, "Missing app error report, app = "

    invoke-virtual {v8, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget-object v9, v6, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;

    invoke-virtual {v8, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v9, " crashing = "

    invoke-virtual {v8, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget-boolean v9, v6, Lcom/android/server/am/ProcessRecord;->crashing:Z

    invoke-virtual {v8, v9}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    const-string v9, " notResponding = "

    invoke-virtual {v8, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget-boolean v6, v6, Lcom/android/server/am/ProcessRecord;->notResponding:Z

    invoke-virtual {v8, v6}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    invoke-virtual {v8}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v6

    invoke-static {v7, v6}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 16131
    :cond_7
    :goto_3
    add-int/lit8 v3, v3, -0x1

    goto :goto_1

    .line 16158
    :cond_8
    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    .line 16160
    return-object v5

    .line 16158
    :catchall_0
    move-exception v0

    :try_start_1
    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw v0
.end method

.method public getProviderMimeType(Landroid/net/Uri;I)Ljava/lang/String;
    .locals 10

    .line 13256
    const-string v0, "getProviderMimeType"

    invoke-virtual {p0, v0}, Lcom/android/server/am/ActivityManagerService;->enforceNotIsolatedCaller(Ljava/lang/String;)V

    .line 13257
    invoke-virtual {p1}, Landroid/net/Uri;->getAuthority()Ljava/lang/String;

    move-result-object v0

    .line 13258
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v1

    .line 13259
    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result v2

    .line 13260
    nop

    .line 13261
    nop

    .line 13262
    iget-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mUserController:Lcom/android/server/am/UserController;

    invoke-virtual {v3, p2}, Lcom/android/server/am/UserController;->unsafeConvertIncomingUser(I)I

    move-result p2

    .line 13263
    invoke-direct {p0, v2, v1, p2}, Lcom/android/server/am/ActivityManagerService;->canClearIdentity(III)Z

    move-result v1

    if-eqz v1, :cond_0

    .line 13264
    const/4 v1, 0x1

    .line 13265
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v2

    goto :goto_0

    .line 13267
    :cond_0
    const-wide/16 v2, 0x0

    const/4 v1, 0x0

    .line 13269
    :goto_0
    const/4 v4, 0x0

    :try_start_0
    invoke-direct {p0, v0, v4, p2}, Lcom/android/server/am/ActivityManagerService;->getContentProviderExternalUnchecked(Ljava/lang/String;Landroid/os/IBinder;I)Landroid/app/ContentProviderHolder;

    move-result-object v5
    :try_end_0
    .catch Landroid/os/RemoteException; {:try_start_0 .. :try_end_0} :catch_3
    .catch Ljava/lang/Exception; {:try_start_0 .. :try_end_0} :catch_2
    .catchall {:try_start_0 .. :try_end_0} :catchall_2

    .line 13270
    if-eqz v5, :cond_3

    .line 13271
    :try_start_1
    iget-object v6, v5, Landroid/app/ContentProviderHolder;->provider:Landroid/content/IContentProvider;

    invoke-interface {v6, p1}, Landroid/content/IContentProvider;->getType(Landroid/net/Uri;)Ljava/lang/String;

    move-result-object v6
    :try_end_1
    .catch Landroid/os/RemoteException; {:try_start_1 .. :try_end_1} :catch_1
    .catch Ljava/lang/Exception; {:try_start_1 .. :try_end_1} :catch_0
    .catchall {:try_start_1 .. :try_end_1} :catchall_5

    .line 13281
    if-nez v1, :cond_1

    .line 13282
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v2

    .line 13285
    :cond_1
    if-eqz v5, :cond_2

    .line 13286
    :try_start_2
    invoke-direct {p0, v0, v4, p2}, Lcom/android/server/am/ActivityManagerService;->removeContentProviderExternalUnchecked(Ljava/lang/String;Landroid/os/IBinder;I)V
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    goto :goto_1

    .line 13289
    :catchall_0
    move-exception p1

    invoke-static {v2, v3}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    throw p1

    :cond_2
    :goto_1
    invoke-static {v2, v3}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 13290
    nop

    .line 13271
    return-object v6

    .line 13276
    :catch_0
    move-exception v6

    goto :goto_3

    .line 13273
    :catch_1
    move-exception v6

    goto :goto_5

    .line 13281
    :cond_3
    if-nez v1, :cond_4

    .line 13282
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v2

    .line 13285
    :cond_4
    if-eqz v5, :cond_5

    .line 13286
    :try_start_3
    invoke-direct {p0, v0, v4, p2}, Lcom/android/server/am/ActivityManagerService;->removeContentProviderExternalUnchecked(Ljava/lang/String;Landroid/os/IBinder;I)V
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_1

    goto :goto_2

    .line 13289
    :catchall_1
    move-exception p1

    invoke-static {v2, v3}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    throw p1

    :cond_5
    :goto_2
    invoke-static {v2, v3}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 13290
    nop

    .line 13291
    nop

    .line 13293
    return-object v4

    .line 13281
    :catchall_2
    move-exception p1

    move-object v5, v4

    goto :goto_7

    .line 13276
    :catch_2
    move-exception v6

    move-object v5, v4

    .line 13277
    :goto_3
    :try_start_4
    const-string v7, "ActivityManager"

    new-instance v8, Ljava/lang/StringBuilder;

    invoke-direct {v8}, Ljava/lang/StringBuilder;-><init>()V

    const-string v9, "Exception while determining type of "

    invoke-virtual {v8, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v8, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    invoke-virtual {v8}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object p1

    invoke-static {v7, p1, v6}, Landroid/util/Log;->w(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_5

    .line 13278
    nop

    .line 13281
    if-nez v1, :cond_6

    .line 13282
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v2

    .line 13285
    :cond_6
    if-eqz v5, :cond_7

    .line 13286
    :try_start_5
    invoke-direct {p0, v0, v4, p2}, Lcom/android/server/am/ActivityManagerService;->removeContentProviderExternalUnchecked(Ljava/lang/String;Landroid/os/IBinder;I)V
    :try_end_5
    .catchall {:try_start_5 .. :try_end_5} :catchall_3

    goto :goto_4

    .line 13289
    :catchall_3
    move-exception p1

    invoke-static {v2, v3}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    throw p1

    :cond_7
    :goto_4
    invoke-static {v2, v3}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 13290
    nop

    .line 13278
    return-object v4

    .line 13273
    :catch_3
    move-exception v6

    move-object v5, v4

    .line 13274
    :goto_5
    :try_start_6
    const-string v7, "ActivityManager"

    new-instance v8, Ljava/lang/StringBuilder;

    invoke-direct {v8}, Ljava/lang/StringBuilder;-><init>()V

    const-string v9, "Content provider dead retrieving "

    invoke-virtual {v8, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v8, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    invoke-virtual {v8}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object p1

    invoke-static {v7, p1, v6}, Landroid/util/Log;->w(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I
    :try_end_6
    .catchall {:try_start_6 .. :try_end_6} :catchall_5

    .line 13275
    nop

    .line 13281
    if-nez v1, :cond_8

    .line 13282
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v2

    .line 13285
    :cond_8
    if-eqz v5, :cond_9

    .line 13286
    :try_start_7
    invoke-direct {p0, v0, v4, p2}, Lcom/android/server/am/ActivityManagerService;->removeContentProviderExternalUnchecked(Ljava/lang/String;Landroid/os/IBinder;I)V
    :try_end_7
    .catchall {:try_start_7 .. :try_end_7} :catchall_4

    goto :goto_6

    .line 13289
    :catchall_4
    move-exception p1

    invoke-static {v2, v3}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    throw p1

    :cond_9
    :goto_6
    invoke-static {v2, v3}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 13290
    nop

    .line 13275
    return-object v4

    .line 13281
    :catchall_5
    move-exception p1

    :goto_7
    if-nez v1, :cond_a

    .line 13282
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v2

    .line 13285
    :cond_a
    if-eqz v5, :cond_b

    .line 13286
    :try_start_8
    invoke-direct {p0, v0, v4, p2}, Lcom/android/server/am/ActivityManagerService;->removeContentProviderExternalUnchecked(Ljava/lang/String;Landroid/os/IBinder;I)V
    :try_end_8
    .catchall {:try_start_8 .. :try_end_8} :catchall_6

    goto :goto_8

    .line 13289
    :catchall_6
    move-exception p1

    invoke-static {v2, v3}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    throw p1

    :cond_b
    :goto_8
    invoke-static {v2, v3}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 13290
    nop

    .line 13289
    throw p1
.end method

.method public getRecentTasks(III)Landroid/content/pm/ParceledListSlice;
    .locals 9
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "(III)",
            "Landroid/content/pm/ParceledListSlice<",
            "Landroid/app/ActivityManager$RecentTaskInfo;",
            ">;"
        }
    .end annotation

    .line 10952
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v8

    .line 10953
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mUserController:Lcom/android/server/am/UserController;

    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result v1

    const-string v6, "getRecentTasks"

    const/4 v4, 0x0

    const/4 v5, 0x2

    const/4 v7, 0x0

    move v2, v8

    move v3, p3

    invoke-virtual/range {v0 .. v7}, Lcom/android/server/am/UserController;->handleIncomingUser(IIIZILjava/lang/String;Ljava/lang/String;)I

    move-result v5

    .line 10955
    const-string p3, "getRecentTasks"

    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result v0

    invoke-direct {p0, p3, v0, v8}, Lcom/android/server/am/ActivityManagerService;->isGetTasksAllowed(Ljava/lang/String;II)Z

    move-result v3

    .line 10957
    const-string p3, "android.permission.GET_DETAILED_TASKS"

    invoke-virtual {p0, p3}, Lcom/android/server/am/ActivityManagerService;->checkCallingPermission(Ljava/lang/String;)I

    move-result p3

    if-nez p3, :cond_0

    const/4 p3, 0x1

    .line 10961
    :goto_0
    move v4, p3

    goto :goto_1

    .line 10957
    :cond_0
    const/4 p3, 0x0

    goto :goto_0

    .line 10961
    :goto_1
    monitor-enter p0

    :try_start_0
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    .line 10962
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mRecentTasks:Lcom/android/server/am/RecentTasks;

    move v1, p1

    move v2, p2

    move v6, v8

    invoke-virtual/range {v0 .. v6}, Lcom/android/server/am/RecentTasks;->getRecentTasks(IIZZII)Landroid/content/pm/ParceledListSlice;

    move-result-object p1

    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    return-object p1

    .line 10964
    :catchall_0
    move-exception p1

    :try_start_1
    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw p1
.end method

.method getRecentTasks()Lcom/android/server/am/RecentTasks;
    .locals 1

    .line 3321
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mRecentTasks:Lcom/android/server/am/RecentTasks;

    return-object v0
.end method

.method getRecordForAppLocked(Landroid/app/IApplicationThread;)Lcom/android/server/am/ProcessRecord;
    .locals 7

    .line 6131
    const/4 v0, 0x0

    if-nez p1, :cond_0

    .line 6132
    return-object v0

    .line 6135
    :cond_0
    invoke-direct {p0, p1}, Lcom/android/server/am/ActivityManagerService;->getLRURecordIndexForAppLocked(Landroid/app/IApplicationThread;)I

    move-result v1

    .line 6136
    if-ltz v1, :cond_1

    .line 6137
    iget-object p1, p0, Lcom/android/server/am/ActivityManagerService;->mLruProcesses:Ljava/util/ArrayList;

    invoke-virtual {p1, v1}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object p1

    check-cast p1, Lcom/android/server/am/ProcessRecord;

    return-object p1

    .line 6142
    :cond_1
    invoke-interface {p1}, Landroid/app/IApplicationThread;->asBinder()Landroid/os/IBinder;

    move-result-object p1

    .line 6143
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mProcessNames:Lcom/android/internal/app/ProcessMap;

    invoke-virtual {v1}, Lcom/android/internal/app/ProcessMap;->getMap()Landroid/util/ArrayMap;

    move-result-object v1

    .line 6144
    invoke-virtual {v1}, Landroid/util/ArrayMap;->size()I

    move-result v2

    add-int/lit8 v2, v2, -0x1

    :goto_0
    if-ltz v2, :cond_4

    .line 6145
    invoke-virtual {v1, v2}, Landroid/util/ArrayMap;->valueAt(I)Ljava/lang/Object;

    move-result-object v3

    check-cast v3, Landroid/util/SparseArray;

    .line 6146
    invoke-virtual {v3}, Landroid/util/SparseArray;->size()I

    move-result v4

    add-int/lit8 v4, v4, -0x1

    :goto_1
    if-ltz v4, :cond_3

    .line 6147
    invoke-virtual {v3, v4}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;

    move-result-object v5

    check-cast v5, Lcom/android/server/am/ProcessRecord;

    .line 6148
    iget-object v6, v5, Lcom/android/server/am/ProcessRecord;->thread:Landroid/app/IApplicationThread;

    if-eqz v6, :cond_2

    iget-object v6, v5, Lcom/android/server/am/ProcessRecord;->thread:Landroid/app/IApplicationThread;

    invoke-interface {v6}, Landroid/app/IApplicationThread;->asBinder()Landroid/os/IBinder;

    move-result-object v6

    if-ne v6, p1, :cond_2

    .line 6149
    const-string p1, "ActivityManager"

    new-instance v0, Ljava/lang/StringBuilder;

    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V

    const-string v1, "getRecordForApp: exists in name list but not in LRU list: "

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    invoke-static {p1, v0}, Landroid/util/Slog;->wtf(Ljava/lang/String;Ljava/lang/String;)I

    .line 6151
    return-object v5

    .line 6146
    :cond_2
    add-int/lit8 v4, v4, -0x1

    goto :goto_1

    .line 6144
    :cond_3
    add-int/lit8 v2, v2, -0x1

    goto :goto_0

    .line 6156
    :cond_4
    return-object v0
.end method

.method public getRequestedOrientation(Landroid/os/IBinder;)I
    .locals 0

    .line 5809
    monitor-enter p0

    :try_start_0
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    .line 5810
    invoke-static {p1}, Lcom/android/server/am/ActivityRecord;->isInStackLocked(Landroid/os/IBinder;)Lcom/android/server/am/ActivityRecord;

    move-result-object p1

    .line 5811
    if-nez p1, :cond_0

    .line 5812
    const/4 p1, -0x1

    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    return p1

    .line 5814
    :cond_0
    :try_start_1
    invoke-virtual {p1}, Lcom/android/server/am/ActivityRecord;->getRequestedOrientation()I

    move-result p1

    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    return p1

    .line 5815
    :catchall_0
    move-exception p1

    :try_start_2
    monitor-exit p0
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw p1
.end method

.method public getRunningAppProcesses()Ljava/util/List;
    .locals 12
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "()",
            "Ljava/util/List<",
            "Landroid/app/ActivityManager$RunningAppProcessInfo;",
            ">;"
        }
    .end annotation

    .line 16200
    const-string v0, "getRunningAppProcesses"

    invoke-virtual {p0, v0}, Lcom/android/server/am/ActivityManagerService;->enforceNotIsolatedCaller(Ljava/lang/String;)V

    .line 16202
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v0

    .line 16203
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mPackageManagerInt:Landroid/content/pm/PackageManagerInternal;

    invoke-virtual {v1, v0}, Landroid/content/pm/PackageManagerInternal;->getUidTargetSdkVersion(I)I

    move-result v1

    .line 16206
    nop

    .line 16207
    const-string v2, "android.permission.INTERACT_ACROSS_USERS_FULL"

    invoke-static {v2, v0}, Landroid/app/ActivityManager;->checkUidPermission(Ljava/lang/String;I)I

    move-result v2

    const/4 v3, 0x1

    if-nez v2, :cond_0

    .line 16209
    move v2, v3

    goto :goto_0

    .line 16207
    :cond_0
    const/4 v2, 0x0

    .line 16209
    :goto_0
    invoke-static {v0}, Landroid/os/UserHandle;->getUserId(I)I

    move-result v4

    .line 16210
    const-string v5, "getRunningAppProcesses"

    .line 16211
    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result v6

    .line 16210
    invoke-direct {p0, v5, v6, v0}, Lcom/android/server/am/ActivityManagerService;->isGetTasksAllowed(Ljava/lang/String;II)Z

    move-result v5

    .line 16213
    monitor-enter p0

    :try_start_0
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    .line 16215
    iget-object v6, p0, Lcom/android/server/am/ActivityManagerService;->mLruProcesses:Ljava/util/ArrayList;

    invoke-virtual {v6}, Ljava/util/ArrayList;->size()I

    move-result v6

    sub-int/2addr v6, v3

    const/4 v3, 0x0

    :goto_1
    if-ltz v6, :cond_8

    .line 16216
    iget-object v7, p0, Lcom/android/server/am/ActivityManagerService;->mLruProcesses:Ljava/util/ArrayList;

    invoke-virtual {v7, v6}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v7

    check-cast v7, Lcom/android/server/am/ProcessRecord;

    .line 16217
    if-nez v2, :cond_1

    iget v8, v7, Lcom/android/server/am/ProcessRecord;->userId:I

    if-ne v8, v4, :cond_7

    :cond_1
    if-nez v5, :cond_2

    iget v8, v7, Lcom/android/server/am/ProcessRecord;->uid:I

    if-eq v8, v0, :cond_2

    .line 16219
    goto :goto_3

    .line 16221
    :cond_2
    iget-object v8, v7, Lcom/android/server/am/ProcessRecord;->thread:Landroid/app/IApplicationThread;

    if-eqz v8, :cond_7

    iget-boolean v8, v7, Lcom/android/server/am/ProcessRecord;->crashing:Z

    if-nez v8, :cond_7

    iget-boolean v8, v7, Lcom/android/server/am/ProcessRecord;->notResponding:Z

    if-nez v8, :cond_7

    .line 16223
    new-instance v8, Landroid/app/ActivityManager$RunningAppProcessInfo;

    iget-object v9, v7, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;

    iget v10, v7, Lcom/android/server/am/ProcessRecord;->pid:I

    .line 16225
    invoke-virtual {v7}, Lcom/android/server/am/ProcessRecord;->getPackageList()[Ljava/lang/String;

    move-result-object v11

    invoke-direct {v8, v9, v10, v11}, Landroid/app/ActivityManager$RunningAppProcessInfo;-><init>(Ljava/lang/String;I[Ljava/lang/String;)V

    .line 16226
    invoke-direct {p0, v7, v8, v1}, Lcom/android/server/am/ActivityManagerService;->fillInProcMemInfo(Lcom/android/server/am/ProcessRecord;Landroid/app/ActivityManager$RunningAppProcessInfo;I)V

    .line 16227
    iget-object v9, v7, Lcom/android/server/am/ProcessRecord;->adjSource:Ljava/lang/Object;

    instance-of v9, v9, Lcom/android/server/am/ProcessRecord;

    if-eqz v9, :cond_3

    .line 16228
    iget-object v9, v7, Lcom/android/server/am/ProcessRecord;->adjSource:Ljava/lang/Object;

    check-cast v9, Lcom/android/server/am/ProcessRecord;

    iget v9, v9, Lcom/android/server/am/ProcessRecord;->pid:I

    iput v9, v8, Landroid/app/ActivityManager$RunningAppProcessInfo;->importanceReasonPid:I

    .line 16229
    iget v9, v7, Lcom/android/server/am/ProcessRecord;->adjSourceProcState:I

    .line 16230
    invoke-static {v9}, Landroid/app/ActivityManager$RunningAppProcessInfo;->procStateToImportance(I)I

    move-result v9

    iput v9, v8, Landroid/app/ActivityManager$RunningAppProcessInfo;->importanceReasonImportance:I

    goto :goto_2

    .line 16232
    :cond_3
    iget-object v9, v7, Lcom/android/server/am/ProcessRecord;->adjSource:Ljava/lang/Object;

    instance-of v9, v9, Lcom/android/server/am/ActivityRecord;

    if-eqz v9, :cond_4

    .line 16233
    iget-object v9, v7, Lcom/android/server/am/ProcessRecord;->adjSource:Ljava/lang/Object;

    check-cast v9, Lcom/android/server/am/ActivityRecord;

    .line 16234
    iget-object v10, v9, Lcom/android/server/am/ActivityRecord;->app:Lcom/android/server/am/ProcessRecord;

    if-eqz v10, :cond_4

    iget-object v9, v9, Lcom/android/server/am/ActivityRecord;->app:Lcom/android/server/am/ProcessRecord;

    iget v9, v9, Lcom/android/server/am/ProcessRecord;->pid:I

    iput v9, v8, Landroid/app/ActivityManager$RunningAppProcessInfo;->importanceReasonPid:I

    .line 16236
    :cond_4
    :goto_2
    iget-object v9, v7, Lcom/android/server/am/ProcessRecord;->adjTarget:Ljava/lang/Object;

    instance-of v9, v9, Landroid/content/ComponentName;

    if-eqz v9, :cond_5

    .line 16237
    iget-object v7, v7, Lcom/android/server/am/ProcessRecord;->adjTarget:Ljava/lang/Object;

    check-cast v7, Landroid/content/ComponentName;

    iput-object v7, v8, Landroid/app/ActivityManager$RunningAppProcessInfo;->importanceReasonComponent:Landroid/content/ComponentName;

    .line 16241
    :cond_5
    if-nez v3, :cond_6

    .line 16242
    new-instance v3, Ljava/util/ArrayList;

    invoke-direct {v3}, Ljava/util/ArrayList;-><init>()V

    .line 16244
    :cond_6
    invoke-interface {v3, v8}, Ljava/util/List;->add(Ljava/lang/Object;)Z

    .line 16215
    :cond_7
    :goto_3
    add-int/lit8 v6, v6, -0x1

    goto :goto_1

    .line 16247
    :cond_8
    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    .line 16248
    return-object v3

    .line 16247
    :catchall_0
    move-exception v0

    :try_start_1
    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw v0
.end method

.method public getRunningExternalApplications()Ljava/util/List;
    .locals 7
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "()",
            "Ljava/util/List<",
            "Landroid/content/pm/ApplicationInfo;",
            ">;"
        }
    .end annotation

    .line 16253
    const-string v0, "getRunningExternalApplications"

    invoke-virtual {p0, v0}, Lcom/android/server/am/ActivityManagerService;->enforceNotIsolatedCaller(Ljava/lang/String;)V

    .line 16254
    invoke-virtual {p0}, Lcom/android/server/am/ActivityManagerService;->getRunningAppProcesses()Ljava/util/List;

    move-result-object v0

    .line 16255
    new-instance v1, Ljava/util/ArrayList;

    invoke-direct {v1}, Ljava/util/ArrayList;-><init>()V

    .line 16256
    if-eqz v0, :cond_3

    invoke-interface {v0}, Ljava/util/List;->size()I

    move-result v2

    if-lez v2, :cond_3

    .line 16257
    new-instance v2, Ljava/util/HashSet;

    invoke-direct {v2}, Ljava/util/HashSet;-><init>()V

    .line 16258
    invoke-interface {v0}, Ljava/util/List;->iterator()Ljava/util/Iterator;

    move-result-object v0

    :goto_0
    invoke-interface {v0}, Ljava/util/Iterator;->hasNext()Z

    move-result v3

    const/4 v4, 0x0

    if-eqz v3, :cond_1

    invoke-interface {v0}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v3

    check-cast v3, Landroid/app/ActivityManager$RunningAppProcessInfo;

    .line 16259
    iget-object v5, v3, Landroid/app/ActivityManager$RunningAppProcessInfo;->pkgList:[Ljava/lang/String;

    if-eqz v5, :cond_0

    .line 16260
    iget-object v3, v3, Landroid/app/ActivityManager$RunningAppProcessInfo;->pkgList:[Ljava/lang/String;

    array-length v5, v3

    :goto_1
    if-ge v4, v5, :cond_0

    aget-object v6, v3, v4

    .line 16261
    invoke-interface {v2, v6}, Ljava/util/Set;->add(Ljava/lang/Object;)Z

    .line 16260
    add-int/lit8 v4, v4, 0x1

    goto :goto_1

    .line 16264
    :cond_0
    goto :goto_0

    .line 16265
    :cond_1
    invoke-static {}, Landroid/app/AppGlobals;->getPackageManager()Landroid/content/pm/IPackageManager;

    move-result-object v0

    .line 16266
    invoke-interface {v2}, Ljava/util/Set;->iterator()Ljava/util/Iterator;

    move-result-object v2

    :goto_2
    invoke-interface {v2}, Ljava/util/Iterator;->hasNext()Z

    move-result v3

    if-eqz v3, :cond_3

    invoke-interface {v2}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v3

    check-cast v3, Ljava/lang/String;

    .line 16268
    :try_start_0
    invoke-static {}, Landroid/os/UserHandle;->getCallingUserId()I

    move-result v5

    invoke-interface {v0, v3, v4, v5}, Landroid/content/pm/IPackageManager;->getApplicationInfo(Ljava/lang/String;II)Landroid/content/pm/ApplicationInfo;

    move-result-object v3

    .line 16269
    iget v5, v3, Landroid/content/pm/ApplicationInfo;->flags:I

    const/high16 v6, 0x40000

    and-int/2addr v5, v6

    if-eqz v5, :cond_2

    .line 16270
    invoke-interface {v1, v3}, Ljava/util/List;->add(Ljava/lang/Object;)Z
    :try_end_0
    .catch Landroid/os/RemoteException; {:try_start_0 .. :try_end_0} :catch_0

    .line 16273
    :cond_2
    goto :goto_3

    .line 16272
    :catch_0
    move-exception v3

    .line 16274
    :goto_3
    goto :goto_2

    .line 16276
    :cond_3
    return-object v1
.end method

.method public getRunningServiceControlPanel(Landroid/content/ComponentName;)Landroid/app/PendingIntent;
    .locals 1

    .line 20645
    const-string v0, "getRunningServiceControlPanel"

    invoke-virtual {p0, v0}, Lcom/android/server/am/ActivityManagerService;->enforceNotIsolatedCaller(Ljava/lang/String;)V

    .line 20646
    monitor-enter p0

    :try_start_0
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    .line 20647
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mServices:Lcom/android/server/am/ActiveServices;

    invoke-virtual {v0, p1}, Lcom/android/server/am/ActiveServices;->getRunningServiceControlPanelLocked(Landroid/content/ComponentName;)Landroid/app/PendingIntent;

    move-result-object p1

    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    return-object p1

    .line 20648
    :catchall_0
    move-exception p1

    :try_start_1
    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw p1
.end method

.method public getRunningUserIds()[I
    .locals 2

    .line 26580
    const-string v0, "android.permission.INTERACT_ACROSS_USERS"

    invoke-virtual {p0, v0}, Lcom/android/server/am/ActivityManagerService;->checkCallingPermission(Ljava/lang/String;)I

    move-result v0

    if-nez v0, :cond_0

    .line 26589
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mUserController:Lcom/android/server/am/UserController;

    invoke-virtual {v0}, Lcom/android/server/am/UserController;->getStartedUserArray()[I

    move-result-object v0

    return-object v0

    .line 26582
    :cond_0
    new-instance v0, Ljava/lang/StringBuilder;

    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V

    const-string v1, "Permission Denial: isUserRunning() from pid="

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 26583
    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result v1

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v1, ", uid="

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 26584
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v1

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v1, " requires "

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v1, "android.permission.INTERACT_ACROSS_USERS"

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    .line 26586
    const-string v1, "ActivityManager"

    invoke-static {v1, v0}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 26587
    new-instance v1, Ljava/lang/SecurityException;

    invoke-direct {v1, v0}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v1
.end method

.method public getServices(II)Ljava/util/List;
    .locals 7
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "(II)",
            "Ljava/util/List<",
            "Landroid/app/ActivityManager$RunningServiceInfo;",
            ">;"
        }
    .end annotation

    .line 20630
    const-string v0, "getServices"

    invoke-virtual {p0, v0}, Lcom/android/server/am/ActivityManagerService;->enforceNotIsolatedCaller(Ljava/lang/String;)V

    .line 20632
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v4

    .line 20633
    const-string v0, "android.permission.INTERACT_ACROSS_USERS_FULL"

    invoke-static {v0, v4}, Landroid/app/ActivityManager;->checkUidPermission(Ljava/lang/String;I)I

    move-result v0

    if-nez v0, :cond_0

    const/4 v0, 0x1

    .line 20635
    :goto_0
    move v6, v0

    goto :goto_1

    .line 20633
    :cond_0
    const/4 v0, 0x0

    goto :goto_0

    .line 20635
    :goto_1
    const-string v0, "getServices"

    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result v1

    invoke-direct {p0, v0, v1, v4}, Lcom/android/server/am/ActivityManagerService;->isGetTasksAllowed(Ljava/lang/String;II)Z

    move-result v5

    .line 20637
    monitor-enter p0

    :try_start_0
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    .line 20638
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mServices:Lcom/android/server/am/ActiveServices;

    move v2, p1

    move v3, p2

    invoke-virtual/range {v1 .. v6}, Lcom/android/server/am/ActiveServices;->getRunningServiceInfoLocked(IIIZZ)Ljava/util/List;

    move-result-object p1

    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    return-object p1

    .line 20640
    :catchall_0
    move-exception p1

    :try_start_1
    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw p1
.end method

.method public getStackInfo(II)Landroid/app/ActivityManager$StackInfo;
    .locals 3

    .line 11860
    const-string v0, "android.permission.MANAGE_ACTIVITY_STACKS"

    const-string v1, "getStackInfo()"

    invoke-virtual {p0, v0, v1}, Lcom/android/server/am/ActivityManagerService;->enforceCallerIsRecentsOrHasPermission(Ljava/lang/String;Ljava/lang/String;)V

    .line 11861
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v0

    .line 11863
    :try_start_0
    monitor-enter p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_1

    :try_start_1
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    .line 11864
    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mStackSupervisor:Lcom/android/server/am/ActivityStackSupervisor;

    invoke-virtual {v2, p1, p2}, Lcom/android/server/am/ActivityStackSupervisor;->getStackInfo(II)Landroid/app/ActivityManager$StackInfo;

    move-result-object p1

    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 11867
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 11864
    return-object p1

    .line 11865
    :catchall_0
    move-exception p1

    :try_start_2
    monitor-exit p0
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    :try_start_3
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw p1
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_1

    .line 11867
    :catchall_1
    move-exception p1

    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    throw p1
.end method

.method getStartedUserState(I)Ljava/lang/String;
    .locals 1

    .line 26559
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mUserController:Lcom/android/server/am/UserController;

    invoke-virtual {v0, p1}, Lcom/android/server/am/UserController;->getStartedUserState(I)Lcom/android/server/am/UserState;

    move-result-object p1

    .line 26560
    iget p1, p1, Lcom/android/server/am/UserState;->state:I

    invoke-static {p1}, Lcom/android/server/am/UserState;->stateToString(I)Ljava/lang/String;

    move-result-object p1

    return-object p1
.end method

.method public getTagForIntentSender(Landroid/content/IIntentSender;Ljava/lang/String;)Ljava/lang/String;
    .locals 2

    .line 8852
    instance-of v0, p1, Lcom/android/server/am/PendingIntentRecord;

    const/4 v1, 0x0

    if-nez v0, :cond_0

    .line 8853
    return-object v1

    .line 8856
    :cond_0
    :try_start_0
    check-cast p1, Lcom/android/server/am/PendingIntentRecord;

    .line 8857
    monitor-enter p0
    :try_end_0
    .catch Ljava/lang/ClassCastException; {:try_start_0 .. :try_end_0} :catch_0

    :try_start_1
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    .line 8858
    invoke-virtual {p0, p1, p2}, Lcom/android/server/am/ActivityManagerService;->getTagForIntentSenderLocked(Lcom/android/server/am/PendingIntentRecord;Ljava/lang/String;)Ljava/lang/String;

    move-result-object p1

    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    return-object p1

    .line 8859
    :catchall_0
    move-exception p1

    :try_start_2
    monitor-exit p0
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    :try_start_3
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw p1
    :try_end_3
    .catch Ljava/lang/ClassCastException; {:try_start_3 .. :try_end_3} :catch_0

    .line 8860
    :catch_0
    move-exception p1

    .line 8862
    return-object v1
.end method

.method getTagForIntentSenderLocked(Lcom/android/server/am/PendingIntentRecord;Ljava/lang/String;)Ljava/lang/String;
    .locals 3

    .line 8866
    iget-object v0, p1, Lcom/android/server/am/PendingIntentRecord;->key:Lcom/android/server/am/PendingIntentRecord$Key;

    iget-object v0, v0, Lcom/android/server/am/PendingIntentRecord$Key;->requestIntent:Landroid/content/Intent;

    .line 8867
    if-eqz v0, :cond_5

    .line 8868
    iget-object v1, p1, Lcom/android/server/am/PendingIntentRecord;->lastTag:Ljava/lang/String;

    if-eqz v1, :cond_1

    iget-object v1, p1, Lcom/android/server/am/PendingIntentRecord;->lastTagPrefix:Ljava/lang/String;

    if-ne v1, p2, :cond_1

    iget-object v1, p1, Lcom/android/server/am/PendingIntentRecord;->lastTagPrefix:Ljava/lang/String;

    if-eqz v1, :cond_0

    iget-object v1, p1, Lcom/android/server/am/PendingIntentRecord;->lastTagPrefix:Ljava/lang/String;

    .line 8869
    invoke-virtual {v1, p2}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v1

    if-eqz v1, :cond_1

    .line 8870
    :cond_0
    iget-object p1, p1, Lcom/android/server/am/PendingIntentRecord;->lastTag:Ljava/lang/String;

    return-object p1

    .line 8872
    :cond_1
    iput-object p2, p1, Lcom/android/server/am/PendingIntentRecord;->lastTagPrefix:Ljava/lang/String;

    .line 8873
    new-instance v1, Ljava/lang/StringBuilder;

    const/16 v2, 0x80

    invoke-direct {v1, v2}, Ljava/lang/StringBuilder;-><init>(I)V

    .line 8874
    if-eqz p2, :cond_2

    .line 8875
    invoke-virtual {v1, p2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 8877
    :cond_2
    invoke-virtual {v0}, Landroid/content/Intent;->getAction()Ljava/lang/String;

    move-result-object p2

    if-eqz p2, :cond_3

    .line 8878
    invoke-virtual {v0}, Landroid/content/Intent;->getAction()Ljava/lang/String;

    move-result-object p2

    invoke-virtual {v1, p2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    goto :goto_0

    .line 8879
    :cond_3
    invoke-virtual {v0}, Landroid/content/Intent;->getComponent()Landroid/content/ComponentName;

    move-result-object p2

    if-eqz p2, :cond_4

    .line 8880
    invoke-virtual {v0}, Landroid/content/Intent;->getComponent()Landroid/content/ComponentName;

    move-result-object p2

    invoke-virtual {p2, v1}, Landroid/content/ComponentName;->appendShortString(Ljava/lang/StringBuilder;)V

    goto :goto_0

    .line 8882
    :cond_4
    const-string p2, "?"

    invoke-virtual {v1, p2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 8884
    :goto_0
    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object p2

    iput-object p2, p1, Lcom/android/server/am/PendingIntentRecord;->lastTag:Ljava/lang/String;

    return-object p2

    .line 8886
    :cond_5
    const/4 p1, 0x0

    return-object p1
.end method

.method public getTaskBounds(I)Landroid/graphics/Rect;
    .locals 6

    .line 11128
    const-string v0, "android.permission.MANAGE_ACTIVITY_STACKS"

    const-string v1, "getTaskBounds()"

    invoke-virtual {p0, v0, v1}, Lcom/android/server/am/ActivityManagerService;->enforceCallingPermission(Ljava/lang/String;Ljava/lang/String;)V

    .line 11129
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v0

    .line 11130
    new-instance v2, Landroid/graphics/Rect;

    invoke-direct {v2}, Landroid/graphics/Rect;-><init>()V

    .line 11132
    :try_start_0
    monitor-enter p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_1

    :try_start_1
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    .line 11133
    iget-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mStackSupervisor:Lcom/android/server/am/ActivityStackSupervisor;

    const/4 v4, 0x1

    invoke-virtual {v3, p1, v4}, Lcom/android/server/am/ActivityStackSupervisor;->anyTaskForIdLocked(II)Lcom/android/server/am/TaskRecord;

    move-result-object v3

    .line 11135
    if-nez v3, :cond_0

    .line 11136
    const-string v3, "ActivityManager"

    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    const-string v5, "getTaskBounds: taskId="

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v4, p1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string p1, " not found"

    invoke-virtual {v4, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object p1

    invoke-static {v3, p1}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 11137
    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 11154
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 11137
    return-object v2

    .line 11139
    :cond_0
    :try_start_2
    invoke-virtual {v3}, Lcom/android/server/am/TaskRecord;->getStack()Lcom/android/server/am/ActivityStack;

    move-result-object p1

    if-eqz p1, :cond_1

    .line 11142
    invoke-virtual {v3, v2}, Lcom/android/server/am/TaskRecord;->getWindowContainerBounds(Landroid/graphics/Rect;)V

    goto :goto_0

    .line 11146
    :cond_1
    invoke-virtual {v3}, Lcom/android/server/am/TaskRecord;->matchParentBounds()Z

    move-result p1

    if-nez p1, :cond_2

    .line 11147
    invoke-virtual {v3}, Lcom/android/server/am/TaskRecord;->getBounds()Landroid/graphics/Rect;

    move-result-object p1

    invoke-virtual {v2, p1}, Landroid/graphics/Rect;->set(Landroid/graphics/Rect;)V

    goto :goto_0

    .line 11148
    :cond_2
    iget-object p1, v3, Lcom/android/server/am/TaskRecord;->mLastNonFullscreenBounds:Landroid/graphics/Rect;

    if-eqz p1, :cond_3

    .line 11149
    iget-object p1, v3, Lcom/android/server/am/TaskRecord;->mLastNonFullscreenBounds:Landroid/graphics/Rect;

    invoke-virtual {v2, p1}, Landroid/graphics/Rect;->set(Landroid/graphics/Rect;)V

    .line 11152
    :cond_3
    :goto_0
    monitor-exit p0
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    :try_start_3
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_1

    .line 11154
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 11155
    nop

    .line 11156
    return-object v2

    .line 11152
    :catchall_0
    move-exception p1

    :try_start_4
    monitor-exit p0
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_0

    :try_start_5
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw p1
    :try_end_5
    .catchall {:try_start_5 .. :try_end_5} :catchall_1

    .line 11154
    :catchall_1
    move-exception p1

    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    throw p1
.end method

.method public getTaskDescription(I)Landroid/app/ActivityManager$TaskDescription;
    .locals 2

    .line 10969
    monitor-enter p0

    :try_start_0
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    .line 10970
    const-string v0, "android.permission.MANAGE_ACTIVITY_STACKS"

    const-string v1, "getTaskDescription()"

    invoke-virtual {p0, v0, v1}, Lcom/android/server/am/ActivityManagerService;->enforceCallerIsRecentsOrHasPermission(Ljava/lang/String;Ljava/lang/String;)V

    .line 10971
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mStackSupervisor:Lcom/android/server/am/ActivityStackSupervisor;

    const/4 v1, 0x1

    invoke-virtual {v0, p1, v1}, Lcom/android/server/am/ActivityStackSupervisor;->anyTaskForIdLocked(II)Lcom/android/server/am/TaskRecord;

    move-result-object p1

    .line 10973
    if-eqz p1, :cond_0

    .line 10974
    iget-object p1, p1, Lcom/android/server/am/TaskRecord;->lastTaskDescription:Landroid/app/ActivityManager$TaskDescription;

    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    return-object p1

    .line 10976
    :cond_0
    :try_start_1
    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    .line 10977
    const/4 p1, 0x0

    return-object p1

    .line 10976
    :catchall_0
    move-exception p1

    :try_start_2
    monitor-exit p0
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw p1
.end method

.method public getTaskDescriptionIcon(Ljava/lang/String;I)Landroid/graphics/Bitmap;
    .locals 8

    .line 11202
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mUserController:Lcom/android/server/am/UserController;

    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result v1

    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v2

    const-string v6, "getTaskDescriptionIcon"

    const/4 v4, 0x0

    const/4 v5, 0x2

    const/4 v7, 0x0

    move v3, p2

    invoke-virtual/range {v0 .. v7}, Lcom/android/server/am/UserController;->handleIncomingUser(IIIZILjava/lang/String;Ljava/lang/String;)I

    move-result p2

    .line 11205
    new-instance v0, Ljava/io/File;

    invoke-direct {v0, p1}, Ljava/io/File;-><init>(Ljava/lang/String;)V

    .line 11206
    new-instance v1, Ljava/io/File;

    invoke-static {p2}, Lcom/android/server/am/TaskPersister;->getUserImagesDir(I)Ljava/io/File;

    move-result-object v2

    .line 11207
    invoke-virtual {v0}, Ljava/io/File;->getName()Ljava/lang/String;

    move-result-object v0

    invoke-direct {v1, v2, v0}, Ljava/io/File;-><init>(Ljava/io/File;Ljava/lang/String;)V

    .line 11208
    invoke-virtual {v1}, Ljava/io/File;->getPath()Ljava/lang/String;

    move-result-object v0

    invoke-virtual {v0, p1}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v0

    if-eqz v0, :cond_0

    const-string v0, "_activity_icon_"

    .line 11209
    invoke-virtual {p1, v0}, Ljava/lang/String;->contains(Ljava/lang/CharSequence;)Z

    move-result v0

    if-eqz v0, :cond_0

    .line 11213
    iget-object p2, p0, Lcom/android/server/am/ActivityManagerService;->mRecentTasks:Lcom/android/server/am/RecentTasks;

    invoke-virtual {p2, p1}, Lcom/android/server/am/RecentTasks;->getTaskDescriptionIcon(Ljava/lang/String;)Landroid/graphics/Bitmap;

    move-result-object p1

    return-object p1

    .line 11210
    :cond_0
    new-instance v0, Ljava/lang/IllegalArgumentException;

    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string v2, "Bad file path: "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v1, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string p1, " passed for userId "

    invoke-virtual {v1, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v1, p2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object p1

    invoke-direct {v0, p1}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v0
.end method

.method public getTaskForActivity(Landroid/os/IBinder;Z)I
    .locals 0

    .line 11873
    monitor-enter p0

    :try_start_0
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    .line 11874
    invoke-static {p1, p2}, Lcom/android/server/am/ActivityRecord;->getTaskForActivityLocked(Landroid/os/IBinder;Z)I

    move-result p1

    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    return p1

    .line 11875
    :catchall_0
    move-exception p1

    :try_start_1
    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw p1
.end method

.method public getTaskSnapshot(IZ)Landroid/app/ActivityManager$TaskSnapshot;
    .locals 4

    .line 11181
    const-string v0, "android.permission.READ_FRAME_BUFFER"

    const-string v1, "getTaskSnapshot()"

    invoke-virtual {p0, v0, v1}, Lcom/android/server/am/ActivityManagerService;->enforceCallerIsRecentsOrHasPermission(Ljava/lang/String;Ljava/lang/String;)V

    .line 11182
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v0

    .line 11185
    :try_start_0
    monitor-enter p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_1

    :try_start_1
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    .line 11186
    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mStackSupervisor:Lcom/android/server/am/ActivityStackSupervisor;

    const/4 v3, 0x1

    invoke-virtual {v2, p1, v3}, Lcom/android/server/am/ActivityStackSupervisor;->anyTaskForIdLocked(II)Lcom/android/server/am/TaskRecord;

    move-result-object v2

    .line 11188
    if-nez v2, :cond_0

    .line 11189
    const-string p2, "ActivityManager"

    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    const-string v3, "getTaskSnapshot: taskId="

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v2, p1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string p1, " not found"

    invoke-virtual {v2, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object p1

    invoke-static {p2, p1}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 11190
    const/4 p1, 0x0

    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 11196
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 11190
    return-object p1

    .line 11192
    :cond_0
    :try_start_2
    monitor-exit p0
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    :try_start_3
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    .line 11194
    invoke-virtual {v2, p2}, Lcom/android/server/am/TaskRecord;->getSnapshot(Z)Landroid/app/ActivityManager$TaskSnapshot;

    move-result-object p1
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_1

    .line 11196
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 11194
    return-object p1

    .line 11192
    :catchall_0
    move-exception p1

    :try_start_4
    monitor-exit p0
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_0

    :try_start_5
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw p1
    :try_end_5
    .catchall {:try_start_5 .. :try_end_5} :catchall_1

    .line 11196
    :catchall_1
    move-exception p1

    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    throw p1
.end method

.method public getTasks(I)Ljava/util/List;
    .locals 1
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "(I)",
            "Ljava/util/List<",
            "Landroid/app/ActivityManager$RunningTaskInfo;",
            ">;"
        }
    .end annotation

    .line 10896
    const/4 v0, 0x0

    invoke-virtual {p0, p1, v0, v0}, Lcom/android/server/am/ActivityManagerService;->getFilteredTasks(III)Ljava/util/List;

    move-result-object p1

    return-object p1
.end method

.method public getUidForIntentSender(Landroid/content/IIntentSender;)I
    .locals 1

    .line 8778
    instance-of v0, p1, Lcom/android/server/am/PendingIntentRecord;

    if-eqz v0, :cond_0

    .line 8780
    :try_start_0
    check-cast p1, Lcom/android/server/am/PendingIntentRecord;

    .line 8781
    iget p1, p1, Lcom/android/server/am/PendingIntentRecord;->uid:I
    :try_end_0
    .catch Ljava/lang/ClassCastException; {:try_start_0 .. :try_end_0} :catch_0

    return p1

    .line 8782
    :catch_0
    move-exception p1

    .line 8785
    :cond_0
    const/4 p1, -0x1

    return p1
.end method

.method public getUidProcessState(ILjava/lang/String;)I
    .locals 1

    .line 14502
    invoke-direct {p0, p2}, Lcom/android/server/am/ActivityManagerService;->hasUsageStatsPermission(Ljava/lang/String;)Z

    move-result p2

    if-nez p2, :cond_0

    .line 14503
    const-string p2, "android.permission.PACKAGE_USAGE_STATS"

    const-string v0, "getUidProcessState"

    invoke-virtual {p0, p2, v0}, Lcom/android/server/am/ActivityManagerService;->enforceCallingPermission(Ljava/lang/String;Ljava/lang/String;)V

    .line 14507
    :cond_0
    monitor-enter p0

    :try_start_0
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    .line 14508
    iget-object p2, p0, Lcom/android/server/am/ActivityManagerService;->mActiveUids:Landroid/util/SparseArray;

    invoke-virtual {p2, p1}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    move-result-object p1

    check-cast p1, Lcom/android/server/am/UidRecord;

    .line 14509
    if-eqz p1, :cond_1

    iget p1, p1, Lcom/android/server/am/UidRecord;->curProcState:I

    goto :goto_0

    :cond_1
    const/16 p1, 0x13

    :goto_0
    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    return p1

    .line 14510
    :catchall_0
    move-exception p1

    :try_start_1
    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw p1
.end method

.method getUidState(I)I
    .locals 0

    .line 8996
    monitor-enter p0

    :try_start_0
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    .line 8997
    invoke-virtual {p0, p1}, Lcom/android/server/am/ActivityManagerService;->getUidStateLocked(I)I

    move-result p1

    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    return p1

    .line 8998
    :catchall_0
    move-exception p1

    :try_start_1
    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw p1
.end method

.method getUidStateLocked(I)I
    .locals 1

    .line 9002
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mActiveUids:Landroid/util/SparseArray;

    invoke-virtual {v0, p1}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    move-result-object p1

    check-cast p1, Lcom/android/server/am/UidRecord;

    .line 9003
    if-nez p1, :cond_0

    const/16 p1, 0x13

    goto :goto_0

    :cond_0
    iget p1, p1, Lcom/android/server/am/UidRecord;->curProcState:I

    :goto_0
    return p1
.end method

.method public getUriPermissionOwnerForActivity(Landroid/os/IBinder;)Landroid/os/IBinder;
    .locals 3

    .line 10423
    const-string v0, "getUriPermissionOwnerForActivity"

    invoke-virtual {p0, v0}, Lcom/android/server/am/ActivityManagerService;->enforceNotIsolatedCaller(Ljava/lang/String;)V

    .line 10424
    monitor-enter p0

    :try_start_0
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    .line 10425
    invoke-static {p1}, Lcom/android/server/am/ActivityRecord;->isInStackLocked(Landroid/os/IBinder;)Lcom/android/server/am/ActivityRecord;

    move-result-object v0

    .line 10426
    if-eqz v0, :cond_0

    .line 10430
    invoke-virtual {v0}, Lcom/android/server/am/ActivityRecord;->getUriPermissionsLocked()Lcom/android/server/am/UriPermissionOwner;

    move-result-object p1

    invoke-virtual {p1}, Lcom/android/server/am/UriPermissionOwner;->getExternalTokenLocked()Landroid/os/Binder;

    move-result-object p1

    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    return-object p1

    .line 10427
    :cond_0
    :try_start_1
    new-instance v0, Ljava/lang/IllegalArgumentException;

    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string v2, "Activity does not exist; token="

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v1, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object p1

    invoke-direct {v0, p1}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v0

    .line 10431
    :catchall_0
    move-exception p1

    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw p1
.end method

.method grantEphemeralAccessLocked(ILandroid/content/Intent;II)V
    .locals 1

    .line 9690
    invoke-virtual {p0}, Lcom/android/server/am/ActivityManagerService;->getPackageManagerInternalLocked()Landroid/content/pm/PackageManagerInternal;

    move-result-object v0

    .line 9691
    invoke-virtual {v0, p1, p2, p3, p4}, Landroid/content/pm/PackageManagerInternal;->grantEphemeralAccess(ILandroid/content/Intent;II)V

    .line 9692
    return-void
.end method

.method public grantUriPermission(Landroid/app/IApplicationThread;Ljava/lang/String;Landroid/net/Uri;II)V
    .locals 8

    .line 10181
    const-string v0, "grantUriPermission"

    invoke-virtual {p0, v0}, Lcom/android/server/am/ActivityManagerService;->enforceNotIsolatedCaller(Ljava/lang/String;)V

    .line 10182
    new-instance v4, Lcom/android/server/am/ActivityManagerService$GrantUri;

    const/4 v0, 0x0

    invoke-direct {v4, p5, p3, v0}, Lcom/android/server/am/ActivityManagerService$GrantUri;-><init>(ILandroid/net/Uri;Z)V

    .line 10183
    monitor-enter p0

    :try_start_0
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    .line 10184
    invoke-virtual {p0, p1}, Lcom/android/server/am/ActivityManagerService;->getRecordForAppLocked(Landroid/app/IApplicationThread;)Lcom/android/server/am/ProcessRecord;

    move-result-object p3

    .line 10185
    if-eqz p3, :cond_1

    .line 10190
    if-eqz p2, :cond_0

    .line 10193
    nop

    .line 10197
    const/16 p1, 0xc3

    invoke-static {p4, p1}, Lcom/android/internal/util/Preconditions;->checkFlagsArgument(II)I

    .line 10202
    iget v2, p3, Lcom/android/server/am/ProcessRecord;->uid:I

    const/4 v6, 0x0

    iget p1, p3, Lcom/android/server/am/ProcessRecord;->uid:I

    .line 10203
    invoke-static {p1}, Landroid/os/UserHandle;->getUserId(I)I

    move-result v7

    .line 10202
    move-object v1, p0

    move-object v3, p2

    move v5, p4

    invoke-virtual/range {v1 .. v7}, Lcom/android/server/am/ActivityManagerService;->grantUriPermissionLocked(ILjava/lang/String;Lcom/android/server/am/ActivityManagerService$GrantUri;ILcom/android/server/am/UriPermissionOwner;I)V

    .line 10204
    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    .line 10205
    return-void

    .line 10191
    :cond_0
    :try_start_1
    new-instance p1, Ljava/lang/IllegalArgumentException;

    const-string p2, "null target"

    invoke-direct {p1, p2}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw p1

    .line 10186
    :cond_1
    new-instance p2, Ljava/lang/SecurityException;

    new-instance p3, Ljava/lang/StringBuilder;

    invoke-direct {p3}, Ljava/lang/StringBuilder;-><init>()V

    const-string p4, "Unable to find app for caller "

    invoke-virtual {p3, p4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {p3, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    const-string p1, " when granting permission to uri "

    invoke-virtual {p3, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {p3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    invoke-virtual {p3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object p1

    invoke-direct {p2, p1}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw p2

    .line 10204
    :catchall_0
    move-exception p1

    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw p1
.end method

.method grantUriPermissionFromIntentLocked(ILjava/lang/String;Landroid/content/Intent;Lcom/android/server/am/UriPermissionOwner;I)V
    .locals 8
    .annotation build Lcom/android/internal/annotations/GuardedBy;
        value = "this"
    .end annotation

    .line 10165
    nop

    .line 10166
    if-eqz p3, :cond_0

    invoke-virtual {p3}, Landroid/content/Intent;->getFlags()I

    move-result v0

    :goto_0
    move v5, v0

    goto :goto_1

    :cond_0
    const/4 v0, 0x0

    goto :goto_0

    :goto_1
    const/4 v6, 0x0

    .line 10165
    move-object v1, p0

    move v2, p1

    move-object v3, p2

    move-object v4, p3

    move v7, p5

    invoke-virtual/range {v1 .. v7}, Lcom/android/server/am/ActivityManagerService;->checkGrantUriPermissionFromIntentLocked(ILjava/lang/String;Landroid/content/Intent;ILcom/android/server/am/ActivityManagerService$NeededUriGrants;I)Lcom/android/server/am/ActivityManagerService$NeededUriGrants;

    move-result-object p1

    .line 10167
    if-nez p1, :cond_1

    .line 10168
    return-void

    .line 10171
    :cond_1
    invoke-virtual {p0, p1, p4}, Lcom/android/server/am/ActivityManagerService;->grantUriPermissionUncheckedFromIntentLocked(Lcom/android/server/am/ActivityManagerService$NeededUriGrants;Lcom/android/server/am/UriPermissionOwner;)V

    .line 10172
    return-void
.end method

.method public grantUriPermissionFromOwner(Landroid/os/IBinder;ILjava/lang/String;Landroid/net/Uri;III)V
    .locals 17

    move-object/from16 v8, p0

    move-object/from16 v0, p4

    .line 10441
    iget-object v9, v8, Lcom/android/server/am/ActivityManagerService;->mUserController:Lcom/android/server/am/UserController;

    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result v10

    .line 10442
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v11

    const-string v15, "grantUriPermissionFromOwner"

    .line 10441
    const/4 v13, 0x0

    const/4 v14, 0x2

    const/16 v16, 0x0

    move/from16 v12, p7

    invoke-virtual/range {v9 .. v16}, Lcom/android/server/am/UserController;->handleIncomingUser(IIIZILjava/lang/String;Ljava/lang/String;)I

    move-result v7

    .line 10444
    monitor-enter p0

    :try_start_0
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    .line 10445
    invoke-static/range {p1 .. p1}, Lcom/android/server/am/UriPermissionOwner;->fromExternalToken(Landroid/os/IBinder;)Lcom/android/server/am/UriPermissionOwner;

    move-result-object v6

    .line 10446
    if-eqz v6, :cond_4

    .line 10449
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v1

    move/from16 v2, p2

    if-eq v2, v1, :cond_1

    .line 10450
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v1

    invoke-static {}, Landroid/os/Process;->myUid()I

    move-result v3

    if-ne v1, v3, :cond_0

    goto :goto_0

    .line 10453
    :cond_0
    new-instance v0, Ljava/lang/SecurityException;

    const-string v1, "nice try"

    invoke-direct {v0, v1}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v0

    .line 10456
    :cond_1
    :goto_0
    if-eqz p3, :cond_3

    .line 10459
    if-eqz v0, :cond_2

    .line 10463
    new-instance v4, Lcom/android/server/am/ActivityManagerService$GrantUri;

    const/4 v1, 0x0

    move/from16 v5, p6

    invoke-direct {v4, v5, v0, v1}, Lcom/android/server/am/ActivityManagerService$GrantUri;-><init>(ILandroid/net/Uri;Z)V

    move-object v1, v8

    move-object/from16 v3, p3

    move/from16 v5, p5

    invoke-virtual/range {v1 .. v7}, Lcom/android/server/am/ActivityManagerService;->grantUriPermissionLocked(ILjava/lang/String;Lcom/android/server/am/ActivityManagerService$GrantUri;ILcom/android/server/am/UriPermissionOwner;I)V

    .line 10465
    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    .line 10466
    return-void

    .line 10460
    :cond_2
    :try_start_1
    new-instance v0, Ljava/lang/IllegalArgumentException;

    const-string v1, "null uri"

    invoke-direct {v0, v1}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v0

    .line 10457
    :cond_3
    new-instance v0, Ljava/lang/IllegalArgumentException;

    const-string v1, "null target"

    invoke-direct {v0, v1}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v0

    .line 10447
    :cond_4
    new-instance v0, Ljava/lang/IllegalArgumentException;

    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string v2, "Unknown owner: "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-object/from16 v2, p1

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-direct {v0, v1}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v0

    .line 10465
    :catchall_0
    move-exception v0

    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw v0
.end method

.method grantUriPermissionLocked(ILjava/lang/String;Lcom/android/server/am/ActivityManagerService$GrantUri;ILcom/android/server/am/UriPermissionOwner;I)V
    .locals 8
    .annotation build Lcom/android/internal/annotations/GuardedBy;
        value = "this"
    .end annotation

    .line 10014
    if-eqz p2, :cond_1

    .line 10018
    invoke-static {}, Landroid/app/AppGlobals;->getPackageManager()Landroid/content/pm/IPackageManager;

    move-result-object v0

    .line 10020
    const/high16 v1, 0x10000000

    :try_start_0
    invoke-interface {v0, p2, v1, p6}, Landroid/content/pm/IPackageManager;->getPackageUid(Ljava/lang/String;II)I

    move-result v7
    :try_end_0
    .catch Landroid/os/RemoteException; {:try_start_0 .. :try_end_0} :catch_0

    .line 10023
    nop

    .line 10025
    move-object v2, p0

    move v3, p1

    move-object v4, p2

    move-object v5, p3

    move v6, p4

    invoke-virtual/range {v2 .. v7}, Lcom/android/server/am/ActivityManagerService;->checkGrantUriPermissionLocked(ILjava/lang/String;Lcom/android/server/am/ActivityManagerService$GrantUri;II)I

    move-result v1

    .line 10027
    if-gez v1, :cond_0

    .line 10028
    return-void

    .line 10031
    :cond_0
    move-object v0, p0

    move-object v2, p2

    move-object v3, p3

    move v4, p4

    move-object v5, p5

    invoke-virtual/range {v0 .. v5}, Lcom/android/server/am/ActivityManagerService;->grantUriPermissionUncheckedLocked(ILjava/lang/String;Lcom/android/server/am/ActivityManagerService$GrantUri;ILcom/android/server/am/UriPermissionOwner;)V

    .line 10033
    return-void

    .line 10021
    :catch_0
    move-exception p1

    .line 10022
    return-void

    .line 10015
    :cond_1
    new-instance p1, Ljava/lang/NullPointerException;

    const-string/jumbo p2, "targetPkg"

    invoke-direct {p1, p2}, Ljava/lang/NullPointerException;-><init>(Ljava/lang/String;)V

    throw p1
.end method

.method grantUriPermissionUncheckedFromIntentLocked(Lcom/android/server/am/ActivityManagerService$NeededUriGrants;Lcom/android/server/am/UriPermissionOwner;)V
    .locals 8
    .annotation build Lcom/android/internal/annotations/GuardedBy;
        value = "this"
    .end annotation

    .line 10153
    if-eqz p1, :cond_0

    .line 10154
    const/4 v0, 0x0

    :goto_0
    invoke-virtual {p1}, Lcom/android/server/am/ActivityManagerService$NeededUriGrants;->size()I

    move-result v1

    if-ge v0, v1, :cond_0

    .line 10155
    invoke-virtual {p1, v0}, Lcom/android/server/am/ActivityManagerService$NeededUriGrants;->get(I)Ljava/lang/Object;

    move-result-object v1

    move-object v5, v1

    check-cast v5, Lcom/android/server/am/ActivityManagerService$GrantUri;

    .line 10156
    iget v3, p1, Lcom/android/server/am/ActivityManagerService$NeededUriGrants;->targetUid:I

    iget-object v4, p1, Lcom/android/server/am/ActivityManagerService$NeededUriGrants;->targetPkg:Ljava/lang/String;

    iget v6, p1, Lcom/android/server/am/ActivityManagerService$NeededUriGrants;->flags:I

    move-object v2, p0

    move-object v7, p2

    invoke-virtual/range {v2 .. v7}, Lcom/android/server/am/ActivityManagerService;->grantUriPermissionUncheckedLocked(ILjava/lang/String;Lcom/android/server/am/ActivityManagerService$GrantUri;ILcom/android/server/am/UriPermissionOwner;)V

    .line 10154
    add-int/lit8 v0, v0, 0x1

    goto :goto_0

    .line 10160
    :cond_0
    return-void
.end method

.method grantUriPermissionUncheckedLocked(ILjava/lang/String;Lcom/android/server/am/ActivityManagerService$GrantUri;ILcom/android/server/am/UriPermissionOwner;)V
    .locals 3
    .annotation build Lcom/android/internal/annotations/GuardedBy;
        value = "this"
    .end annotation

    .line 9984
    invoke-static {p4}, Landroid/content/Intent;->isAccessUriMode(I)Z

    move-result v0

    if-nez v0, :cond_0

    .line 9985
    return-void

    .line 9995
    :cond_0
    iget-object v0, p3, Lcom/android/server/am/ActivityManagerService$GrantUri;->uri:Landroid/net/Uri;

    invoke-virtual {v0}, Landroid/net/Uri;->getAuthority()Ljava/lang/String;

    move-result-object v0

    .line 9996
    iget v1, p3, Lcom/android/server/am/ActivityManagerService$GrantUri;->sourceUserId:I

    const/high16 v2, 0x10000000

    invoke-direct {p0, v0, v1, v2}, Lcom/android/server/am/ActivityManagerService;->getProviderInfoLocked(Ljava/lang/String;II)Landroid/content/pm/ProviderInfo;

    move-result-object v0

    .line 9998
    if-nez v0, :cond_1

    .line 9999
    const-string p1, "ActivityManager"

    new-instance p2, Ljava/lang/StringBuilder;

    invoke-direct {p2}, Ljava/lang/StringBuilder;-><init>()V

    const-string p4, "No content provider found for grant: "

    invoke-virtual {p2, p4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {p3}, Lcom/android/server/am/ActivityManagerService$GrantUri;->toSafeString()Ljava/lang/String;

    move-result-object p3

    invoke-virtual {p2, p3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {p2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object p2

    invoke-static {p1, p2}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 10000
    return-void

    .line 10003
    :cond_1
    and-int/lit16 v1, p4, 0x80

    if-eqz v1, :cond_2

    .line 10004
    const/4 v1, 0x1

    iput-boolean v1, p3, Lcom/android/server/am/ActivityManagerService$GrantUri;->prefix:Z

    .line 10006
    :cond_2
    iget-object v0, v0, Landroid/content/pm/ProviderInfo;->packageName:Ljava/lang/String;

    invoke-direct {p0, v0, p2, p1, p3}, Lcom/android/server/am/ActivityManagerService;->findOrCreateUriPermissionLocked(Ljava/lang/String;Ljava/lang/String;ILcom/android/server/am/ActivityManagerService$GrantUri;)Lcom/android/server/am/UriPermission;

    move-result-object p1

    .line 10008
    invoke-virtual {p1, p4, p5}, Lcom/android/server/am/UriPermission;->grantModes(ILcom/android/server/am/UriPermissionOwner;)V

    .line 10009
    return-void
.end method

.method public handleApplicationCrash(Landroid/os/IBinder;Landroid/app/ApplicationErrorReport$ParcelableCrashInfo;)V
    .locals 2

    .line 15683
    const-string v0, "Crash"

    invoke-direct {p0, p1, v0}, Lcom/android/server/am/ActivityManagerService;->findAppProcess(Landroid/os/IBinder;Ljava/lang/String;)Lcom/android/server/am/ProcessRecord;

    move-result-object v0

    .line 15684
    if-nez p1, :cond_0

    const-string/jumbo p1, "system_server"

    goto :goto_0

    .line 15685
    :cond_0
    if-nez v0, :cond_1

    const-string/jumbo p1, "unknown"

    goto :goto_0

    :cond_1
    iget-object p1, v0, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;

    .line 15687
    :goto_0
    const-string v1, "crash"

    invoke-virtual {p0, v1, v0, p1, p2}, Lcom/android/server/am/ActivityManagerService;->handleApplicationCrashInner(Ljava/lang/String;Lcom/android/server/am/ProcessRecord;Ljava/lang/String;Landroid/app/ApplicationErrorReport$CrashInfo;)V

    .line 15688
    return-void
.end method

.method handleApplicationCrashInner(Ljava/lang/String;Lcom/android/server/am/ProcessRecord;Ljava/lang/String;Landroid/app/ApplicationErrorReport$CrashInfo;)V
    .locals 20

    move-object/from16 v10, p2

    .line 15695
    move-object/from16 v11, p4

    const/16 v0, 0x8

    new-array v0, v0, [Ljava/lang/Object;

    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result v1

    invoke-static {v1}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v1

    const/4 v2, 0x0

    aput-object v1, v0, v2

    .line 15696
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v1

    invoke-static {v1}, Landroid/os/UserHandle;->getUserId(I)I

    move-result v1

    invoke-static {v1}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v1

    const/4 v3, 0x1

    aput-object v1, v0, v3

    const/4 v1, 0x2

    aput-object p3, v0, v1

    .line 15697
    if-nez v10, :cond_0

    const/4 v5, -0x1

    goto :goto_0

    :cond_0
    iget-object v5, v10, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget v5, v5, Landroid/content/pm/ApplicationInfo;->flags:I

    :goto_0
    invoke-static {v5}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v5

    const/4 v6, 0x3

    aput-object v5, v0, v6

    const/4 v5, 0x4

    iget-object v6, v11, Landroid/app/ApplicationErrorReport$CrashInfo;->exceptionClassName:Ljava/lang/String;

    aput-object v6, v0, v5

    const/4 v5, 0x5

    iget-object v6, v11, Landroid/app/ApplicationErrorReport$CrashInfo;->exceptionMessage:Ljava/lang/String;

    aput-object v6, v0, v5

    const/4 v5, 0x6

    iget-object v6, v11, Landroid/app/ApplicationErrorReport$CrashInfo;->throwFileName:Ljava/lang/String;

    aput-object v6, v0, v5

    const/4 v5, 0x7

    iget v6, v11, Landroid/app/ApplicationErrorReport$CrashInfo;->throwLineNumber:I

    .line 15701
    invoke-static {v6}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v6

    aput-object v6, v0, v5

    .line 15695
    const/16 v5, 0x7557

    invoke-static {v5, v0}, Landroid/util/EventLog;->writeEvent(I[Ljava/lang/Object;)I

    .line 15703
    const/16 v12, 0x4e

    .line 15704
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v13

    .line 15707
    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result v16

    .line 15708
    if-eqz v10, :cond_1

    iget-object v0, v10, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    if-eqz v0, :cond_1

    iget-object v0, v10, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget-object v0, v0, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;

    goto :goto_1

    :cond_1
    const-string v0, ""

    .line 15709
    :goto_1
    move-object/from16 v17, v0

    if-eqz v10, :cond_3

    iget-object v0, v10, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    if-eqz v0, :cond_3

    iget-object v0, v10, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    invoke-virtual {v0}, Landroid/content/pm/ApplicationInfo;->isInstantApp()Z

    move-result v0

    if-eqz v0, :cond_2

    .line 15710
    nop

    .line 15713
    move/from16 v18, v1

    goto :goto_2

    .line 15711
    :cond_2
    nop

    .line 15713
    move/from16 v18, v3

    goto :goto_2

    .line 15712
    :cond_3
    nop

    .line 15713
    move/from16 v18, v2

    :goto_2
    if-eqz v10, :cond_5

    invoke-virtual/range {p2 .. p2}, Lcom/android/server/am/ProcessRecord;->isInterestingToUserLocked()Z

    move-result v0

    if-eqz v0, :cond_4

    .line 15714
    nop

    .line 15703
    move/from16 v19, v1

    goto :goto_3

    .line 15715
    :cond_4
    nop

    .line 15703
    move/from16 v19, v3

    goto :goto_3

    .line 15716
    :cond_5
    nop

    .line 15703
    move/from16 v19, v2

    :goto_3
    move-object/from16 v14, p1

    move-object/from16 v15, p3

    invoke-static/range {v12 .. v19}, Landroid/util/StatsLog;->write(IILjava/lang/String;Ljava/lang/String;ILjava/lang/String;II)I

    .line 15719
    const/4 v5, 0x0

    const/4 v6, 0x0

    const/4 v7, 0x0

    const/4 v8, 0x0

    const/4 v9, 0x0

    move-object/from16 v0, p0

    move-object/from16 v1, p1

    move-object v2, v10

    move-object/from16 v3, p3

    move-object v4, v5

    move-object v5, v6

    move-object v6, v7

    move-object v7, v8

    move-object v8, v9

    move-object v9, v11

    invoke-virtual/range {v0 .. v9}, Lcom/android/server/am/ActivityManagerService;->addErrorToDropBox(Ljava/lang/String;Lcom/android/server/am/ProcessRecord;Ljava/lang/String;Lcom/android/server/am/ActivityRecord;Lcom/android/server/am/ActivityRecord;Ljava/lang/String;Ljava/lang/String;Ljava/io/File;Landroid/app/ApplicationErrorReport$CrashInfo;)V

    .line 15721
    iget-object v0, v0, Lcom/android/server/am/ActivityManagerService;->mAppErrors:Lcom/android/server/am/AppErrors;

    invoke-virtual {v0, v10, v11}, Lcom/android/server/am/AppErrors;->crashApplication(Lcom/android/server/am/ProcessRecord;Landroid/app/ApplicationErrorReport$CrashInfo;)V

    .line 15722
    return-void
.end method

.method public handleApplicationStrictModeViolation(Landroid/os/IBinder;ILandroid/os/StrictMode$ViolationInfo;)V
    .locals 6

    .line 15730
    const-string v0, "StrictMode"

    invoke-direct {p0, p1, v0}, Lcom/android/server/am/ActivityManagerService;->findAppProcess(Landroid/os/IBinder;Ljava/lang/String;)Lcom/android/server/am/ProcessRecord;

    move-result-object v0

    .line 15732
    const/high16 v1, 0x200000

    and-int/2addr v1, p2

    if-eqz v1, :cond_2

    .line 15733
    invoke-virtual {p3}, Landroid/os/StrictMode$ViolationInfo;->hashCode()I

    move-result v1

    invoke-static {v1}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v1

    .line 15734
    const/4 v2, 0x1

    .line 15735
    iget-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mAlreadyLoggedViolatedStacks:Ljava/util/HashSet;

    monitor-enter v3

    .line 15736
    :try_start_0
    iget-object v4, p0, Lcom/android/server/am/ActivityManagerService;->mAlreadyLoggedViolatedStacks:Ljava/util/HashSet;

    invoke-virtual {v4, v1}, Ljava/util/HashSet;->contains(Ljava/lang/Object;)Z

    move-result v4

    if-eqz v4, :cond_0

    .line 15737
    const/4 v2, 0x0

    goto :goto_0

    .line 15745
    :cond_0
    iget-object v4, p0, Lcom/android/server/am/ActivityManagerService;->mAlreadyLoggedViolatedStacks:Ljava/util/HashSet;

    invoke-virtual {v4}, Ljava/util/HashSet;->size()I

    move-result v4

    const/16 v5, 0x1388

    if-lt v4, v5, :cond_1

    .line 15746
    iget-object v4, p0, Lcom/android/server/am/ActivityManagerService;->mAlreadyLoggedViolatedStacks:Ljava/util/HashSet;

    invoke-virtual {v4}, Ljava/util/HashSet;->clear()V

    .line 15748
    :cond_1
    iget-object v4, p0, Lcom/android/server/am/ActivityManagerService;->mAlreadyLoggedViolatedStacks:Ljava/util/HashSet;

    invoke-virtual {v4, v1}, Ljava/util/HashSet;->add(Ljava/lang/Object;)Z

    .line 15750
    :goto_0
    monitor-exit v3
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 15751
    if-eqz v2, :cond_2

    .line 15752
    invoke-direct {p0, v0, p3}, Lcom/android/server/am/ActivityManagerService;->logStrictModeViolationToDropBox(Lcom/android/server/am/ProcessRecord;Landroid/os/StrictMode$ViolationInfo;)V

    goto :goto_1

    .line 15750
    :catchall_0
    move-exception p1

    :try_start_1
    monitor-exit v3
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    throw p1

    .line 15756
    :cond_2
    :goto_1
    const/high16 v1, 0x20000

    and-int/2addr v1, p2

    if-eqz v1, :cond_3

    if-eqz p1, :cond_3

    .line 15757
    new-instance p1, Lcom/android/server/am/AppErrorResult;

    invoke-direct {p1}, Lcom/android/server/am/AppErrorResult;-><init>()V

    .line 15758
    monitor-enter p0

    :try_start_2
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    .line 15759
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v1

    .line 15761
    invoke-static {}, Landroid/os/Message;->obtain()Landroid/os/Message;

    move-result-object v3

    .line 15762
    const/16 v4, 0x1a

    iput v4, v3, Landroid/os/Message;->what:I

    .line 15763
    new-instance v4, Ljava/util/HashMap;

    invoke-direct {v4}, Ljava/util/HashMap;-><init>()V

    .line 15764
    const-string/jumbo v5, "result"

    invoke-virtual {v4, v5, p1}, Ljava/util/HashMap;->put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    .line 15765
    const-string v5, "app"

    invoke-virtual {v4, v5, v0}, Ljava/util/HashMap;->put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    .line 15766
    const-string/jumbo v0, "violationMask"

    invoke-static {p2}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object p2

    invoke-virtual {v4, v0, p2}, Ljava/util/HashMap;->put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    .line 15767
    const-string p2, "info"

    invoke-virtual {v4, p2, p3}, Ljava/util/HashMap;->put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    .line 15768
    iput-object v4, v3, Landroid/os/Message;->obj:Ljava/lang/Object;

    .line 15769
    iget-object p2, p0, Lcom/android/server/am/ActivityManagerService;->mUiHandler:Landroid/os/Handler;

    invoke-virtual {p2, v3}, Landroid/os/Handler;->sendMessage(Landroid/os/Message;)Z

    .line 15771
    invoke-static {v1, v2}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 15772
    monitor-exit p0
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_1

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    .line 15773
    invoke-virtual {p1}, Lcom/android/server/am/AppErrorResult;->get()I

    move-result p1

    .line 15774
    const-string p2, "ActivityManager"

    new-instance p3, Ljava/lang/StringBuilder;

    invoke-direct {p3}, Ljava/lang/StringBuilder;-><init>()V

    const-string v0, "handleApplicationStrictModeViolation; res="

    invoke-virtual {p3, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {p3, p1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {p3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object p1

    invoke-static {p2, p1}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    goto :goto_2

    .line 15772
    :catchall_1
    move-exception p1

    :try_start_3
    monitor-exit p0
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_1

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw p1

    .line 15776
    :cond_3
    :goto_2
    return-void
.end method

.method public handleApplicationWtf(Landroid/os/IBinder;Ljava/lang/String;ZLandroid/app/ApplicationErrorReport$ParcelableCrashInfo;)Z
    .locals 9

    .line 15850
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v2

    .line 15851
    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result v3

    .line 15853
    const/4 v7, 0x0

    if-eqz p3, :cond_0

    .line 15857
    iget-object p3, p0, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    new-instance v8, Lcom/android/server/am/ActivityManagerService$21;

    move-object v0, v8

    move-object v1, p0

    move-object v4, p1

    move-object v5, p2

    move-object v6, p4

    invoke-direct/range {v0 .. v6}, Lcom/android/server/am/ActivityManagerService$21;-><init>(Lcom/android/server/am/ActivityManagerService;IILandroid/os/IBinder;Ljava/lang/String;Landroid/app/ApplicationErrorReport$ParcelableCrashInfo;)V

    invoke-virtual {p3, v8}, Lcom/android/server/am/ActivityManagerService$MainHandler;->post(Ljava/lang/Runnable;)Z

    .line 15862
    return v7

    .line 15865
    :cond_0
    move-object v0, p0

    move v1, v2

    move v2, v3

    move-object v3, p1

    move-object v4, p2

    move-object v5, p4

    invoke-virtual/range {v0 .. v5}, Lcom/android/server/am/ActivityManagerService;->handleApplicationWtfInner(IILandroid/os/IBinder;Ljava/lang/String;Landroid/app/ApplicationErrorReport$CrashInfo;)Lcom/android/server/am/ProcessRecord;

    move-result-object p1

    .line 15868
    sget-boolean p2, Landroid/os/Build;->IS_ENG:Z

    const/4 p3, 0x1

    if-nez p2, :cond_2

    iget-object p2, p0, Lcom/android/server/am/ActivityManagerService;->mContext:Landroid/content/Context;

    .line 15869
    invoke-virtual {p2}, Landroid/content/Context;->getContentResolver()Landroid/content/ContentResolver;

    move-result-object p2

    const-string/jumbo v0, "wtf_is_fatal"

    invoke-static {p2, v0, v7}, Landroid/provider/Settings$Global;->getInt(Landroid/content/ContentResolver;Ljava/lang/String;I)I

    move-result p2

    if-eqz p2, :cond_1

    goto :goto_0

    .line 15870
    :cond_1
    move p2, v7

    goto :goto_1

    .line 15869
    :cond_2
    :goto_0
    nop

    .line 15870
    move p2, p3

    :goto_1
    if-eqz p1, :cond_4

    iget-boolean v0, p1, Lcom/android/server/am/ProcessRecord;->persistent:Z

    if-eqz v0, :cond_3

    goto :goto_2

    .line 15872
    :cond_3
    move v0, v7

    goto :goto_3

    .line 15870
    :cond_4
    :goto_2
    nop

    .line 15872
    move v0, p3

    :goto_3
    if-eqz p2, :cond_5

    if-nez v0, :cond_5

    .line 15873
    iget-object p2, p0, Lcom/android/server/am/ActivityManagerService;->mAppErrors:Lcom/android/server/am/AppErrors;

    invoke-virtual {p2, p1, p4}, Lcom/android/server/am/AppErrors;->crashApplication(Lcom/android/server/am/ProcessRecord;Landroid/app/ApplicationErrorReport$CrashInfo;)V

    .line 15874
    return p3

    .line 15876
    :cond_5
    return v7
.end method

.method handleApplicationWtfInner(IILandroid/os/IBinder;Ljava/lang/String;Landroid/app/ApplicationErrorReport$CrashInfo;)Lcom/android/server/am/ProcessRecord;
    .locals 11

    move-object v0, p3

    move-object v6, p4

    .line 15882
    const-string v1, "WTF"

    move-object v2, p0

    invoke-direct {v2, v0, v1}, Lcom/android/server/am/ActivityManagerService;->findAppProcess(Landroid/os/IBinder;Ljava/lang/String;)Lcom/android/server/am/ProcessRecord;

    move-result-object v10

    .line 15883
    if-nez v0, :cond_0

    const-string/jumbo v0, "system_server"

    .line 15886
    :goto_0
    move-object v3, v0

    goto :goto_1

    .line 15884
    :cond_0
    if-nez v10, :cond_1

    const-string/jumbo v0, "unknown"

    goto :goto_0

    :cond_1
    iget-object v0, v10, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;

    goto :goto_0

    .line 15886
    :goto_1
    const/16 v0, 0x7558

    const/4 v1, 0x6

    new-array v1, v1, [Ljava/lang/Object;

    const/4 v4, 0x0

    invoke-static {p1}, Landroid/os/UserHandle;->getUserId(I)I

    move-result v5

    invoke-static {v5}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v5

    aput-object v5, v1, v4

    const/4 v4, 0x1

    invoke-static {p2}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v5

    aput-object v5, v1, v4

    const/4 v4, 0x2

    aput-object v3, v1, v4

    const/4 v4, 0x3

    .line 15887
    if-nez v10, :cond_2

    const/4 v5, -0x1

    goto :goto_2

    :cond_2
    iget-object v5, v10, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget v5, v5, Landroid/content/pm/ApplicationInfo;->flags:I

    :goto_2
    invoke-static {v5}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v5

    aput-object v5, v1, v4

    const/4 v4, 0x4

    aput-object v6, v1, v4

    const/4 v4, 0x5

    move-object/from16 v9, p5

    iget-object v5, v9, Landroid/app/ApplicationErrorReport$CrashInfo;->exceptionMessage:Ljava/lang/String;

    aput-object v5, v1, v4

    .line 15886
    invoke-static {v0, v1}, Landroid/util/EventLog;->writeEvent(I[Ljava/lang/Object;)I

    .line 15889
    const/16 v0, 0x50

    move v1, p1

    move v4, p2

    invoke-static {v0, v1, v6, v3, v4}, Landroid/util/StatsLog;->write(IILjava/lang/String;Ljava/lang/String;I)I

    .line 15892
    const-string/jumbo v1, "wtf"

    const/4 v4, 0x0

    const/4 v5, 0x0

    const/4 v7, 0x0

    const/4 v8, 0x0

    move-object v0, v2

    move-object v2, v10

    invoke-virtual/range {v0 .. v9}, Lcom/android/server/am/ActivityManagerService;->addErrorToDropBox(Ljava/lang/String;Lcom/android/server/am/ProcessRecord;Ljava/lang/String;Lcom/android/server/am/ActivityRecord;Lcom/android/server/am/ActivityRecord;Ljava/lang/String;Ljava/lang/String;Ljava/io/File;Landroid/app/ApplicationErrorReport$CrashInfo;)V

    .line 15894
    return-object v10
.end method

.method public handleIncomingUser(IIIZZLjava/lang/String;Ljava/lang/String;)I
    .locals 8

    .line 20751
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mUserController:Lcom/android/server/am/UserController;

    .line 20752
    if-eqz p5, :cond_0

    const/4 p5, 0x2

    .line 20751
    :goto_0
    move v5, p5

    goto :goto_1

    .line 20752
    :cond_0
    const/4 p5, 0x0

    goto :goto_0

    .line 20751
    :goto_1
    move v1, p1

    move v2, p2

    move v3, p3

    move v4, p4

    move-object v6, p6

    move-object v7, p7

    invoke-virtual/range {v0 .. v7}, Lcom/android/server/am/UserController;->handleIncomingUser(IIIZILjava/lang/String;Ljava/lang/String;)I

    move-result p1

    return p1
.end method

.method public hang(Landroid/os/IBinder;Z)V
    .locals 3

    .line 15180
    const-string v0, "android.permission.SET_ACTIVITY_WATCHER"

    invoke-virtual {p0, v0}, Lcom/android/server/am/ActivityManagerService;->checkCallingPermission(Ljava/lang/String;)I

    move-result v0

    if-nez v0, :cond_1

    .line 15186
    new-instance v0, Lcom/android/server/am/ActivityManagerService$17;

    invoke-direct {v0, p0}, Lcom/android/server/am/ActivityManagerService$17;-><init>(Lcom/android/server/am/ActivityManagerService;)V

    .line 15196
    const/4 v1, 0x0

    :try_start_0
    invoke-interface {p1, v0, v1}, Landroid/os/IBinder;->linkToDeath(Landroid/os/IBinder$DeathRecipient;I)V
    :try_end_0
    .catch Landroid/os/RemoteException; {:try_start_0 .. :try_end_0} :catch_1

    .line 15200
    nop

    .line 15202
    monitor-enter p0

    :try_start_1
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    .line 15203
    invoke-static {}, Lcom/android/server/Watchdog;->getInstance()Lcom/android/server/Watchdog;

    move-result-object v1

    invoke-virtual {v1, p2}, Lcom/android/server/Watchdog;->setAllowRestart(Z)V

    .line 15204
    const-string p2, "ActivityManager"

    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string v2, "Hanging system process at request of pid "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result v2

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-static {p2, v1}, Landroid/util/Slog;->i(Ljava/lang/String;Ljava/lang/String;)I

    .line 15205
    monitor-enter v0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_1

    .line 15206
    :goto_0
    :try_start_2
    invoke-interface {p1}, Landroid/os/IBinder;->isBinderAlive()Z

    move-result p2
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    if-eqz p2, :cond_0

    .line 15208
    :try_start_3
    invoke-virtual {v0}, Ljava/lang/Object;->wait()V
    :try_end_3
    .catch Ljava/lang/InterruptedException; {:try_start_3 .. :try_end_3} :catch_0
    .catchall {:try_start_3 .. :try_end_3} :catchall_0

    .line 15210
    :goto_1
    goto :goto_0

    .line 15209
    :catch_0
    move-exception p2

    goto :goto_1

    .line 15212
    :cond_0
    :try_start_4
    monitor-exit v0
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_0

    .line 15213
    :try_start_5
    invoke-static {}, Lcom/android/server/Watchdog;->getInstance()Lcom/android/server/Watchdog;

    move-result-object p1

    const/4 p2, 0x1

    invoke-virtual {p1, p2}, Lcom/android/server/Watchdog;->setAllowRestart(Z)V

    .line 15214
    monitor-exit p0
    :try_end_5
    .catchall {:try_start_5 .. :try_end_5} :catchall_1

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    .line 15215
    return-void

    .line 15212
    :catchall_0
    move-exception p1

    :try_start_6
    monitor-exit v0
    :try_end_6
    .catchall {:try_start_6 .. :try_end_6} :catchall_0

    :try_start_7
    throw p1

    .line 15214
    :catchall_1
    move-exception p1

    monitor-exit p0
    :try_end_7
    .catchall {:try_start_7 .. :try_end_7} :catchall_1

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw p1

    .line 15197
    :catch_1
    move-exception p1

    .line 15198
    const-string p1, "ActivityManager"

    const-string p2, "hang: given caller IBinder is already dead."

    invoke-static {p1, p2}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 15199
    return-void

    .line 15182
    :cond_1
    new-instance p1, Ljava/lang/SecurityException;

    const-string p2, "Requires permission android.permission.SET_ACTIVITY_WATCHER"

    invoke-direct {p1, p2}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw p1
.end method

.method final idleUids()V
    .locals 14

    .line 25916
    monitor-enter p0

    :try_start_0
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    .line 25917
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mActiveUids:Landroid/util/SparseArray;

    invoke-virtual {v0}, Landroid/util/SparseArray;->size()I

    move-result v0

    .line 25918
    if-gtz v0, :cond_0

    .line 25919
    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    return-void

    .line 25921
    :cond_0
    :try_start_1
    invoke-static {}, Landroid/os/SystemClock;->elapsedRealtime()J

    move-result-wide v1

    .line 25922
    iget-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mConstants:Lcom/android/server/am/ActivityManagerConstants;

    iget-wide v3, v3, Lcom/android/server/am/ActivityManagerConstants;->BACKGROUND_SETTLE_TIME:J

    sub-long v3, v1, v3

    .line 25923
    nop

    .line 25924
    iget-object v5, p0, Lcom/android/server/am/ActivityManagerService;->mLocalPowerManager:Landroid/os/PowerManagerInternal;

    if-eqz v5, :cond_1

    .line 25925
    iget-object v5, p0, Lcom/android/server/am/ActivityManagerService;->mLocalPowerManager:Landroid/os/PowerManagerInternal;

    invoke-virtual {v5}, Landroid/os/PowerManagerInternal;->startUidChanges()V

    .line 25927
    :cond_1
    const/4 v5, 0x1

    sub-int/2addr v0, v5

    const-wide/16 v6, 0x0

    move-wide v8, v6

    :goto_0
    if-ltz v0, :cond_5

    .line 25928
    iget-object v10, p0, Lcom/android/server/am/ActivityManagerService;->mActiveUids:Landroid/util/SparseArray;

    invoke-virtual {v10, v0}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;

    move-result-object v10

    check-cast v10, Lcom/android/server/am/UidRecord;

    .line 25929
    iget-wide v11, v10, Lcom/android/server/am/UidRecord;->lastBackgroundTime:J

    .line 25930
    cmp-long v13, v11, v6

    if-lez v13, :cond_4

    iget-boolean v13, v10, Lcom/android/server/am/UidRecord;->idle:Z

    if-nez v13, :cond_4

    .line 25931
    cmp-long v13, v11, v3

    if-gtz v13, :cond_2

    .line 25932
    iget v11, v10, Lcom/android/server/am/UidRecord;->uid:I

    invoke-static {v11}, Lcom/android/server/am/EventLogTags;->writeAmUidIdle(I)V

    .line 25933
    iput-boolean v5, v10, Lcom/android/server/am/UidRecord;->idle:Z

    .line 25934
    iput-boolean v5, v10, Lcom/android/server/am/UidRecord;->setIdle:Z

    .line 25935
    iget v11, v10, Lcom/android/server/am/UidRecord;->uid:I

    invoke-virtual {p0, v11, v10}, Lcom/android/server/am/ActivityManagerService;->doStopUidLocked(ILcom/android/server/am/UidRecord;)V

    goto :goto_1

    .line 25937
    :cond_2
    cmp-long v10, v8, v6

    if-eqz v10, :cond_3

    cmp-long v10, v8, v11

    if-lez v10, :cond_4

    .line 25938
    :cond_3
    nop

    .line 25927
    move-wide v8, v11

    :cond_4
    :goto_1
    add-int/lit8 v0, v0, -0x1

    goto :goto_0

    .line 25943
    :cond_5
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mLocalPowerManager:Landroid/os/PowerManagerInternal;

    if-eqz v0, :cond_6

    .line 25944
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mLocalPowerManager:Landroid/os/PowerManagerInternal;

    invoke-virtual {v0}, Landroid/os/PowerManagerInternal;->finishUidChanges()V

    .line 25946
    :cond_6
    cmp-long v0, v8, v6

    if-lez v0, :cond_7

    .line 25947
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    const/16 v3, 0x3a

    invoke-virtual {v0, v3}, Lcom/android/server/am/ActivityManagerService$MainHandler;->removeMessages(I)V

    .line 25948
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    iget-object v4, p0, Lcom/android/server/am/ActivityManagerService;->mConstants:Lcom/android/server/am/ActivityManagerConstants;

    iget-wide v4, v4, Lcom/android/server/am/ActivityManagerConstants;->BACKGROUND_SETTLE_TIME:J

    add-long/2addr v8, v4

    sub-long/2addr v8, v1

    invoke-virtual {v0, v3, v8, v9}, Lcom/android/server/am/ActivityManagerService$MainHandler;->sendEmptyMessageDelayed(IJ)Z

    .line 25951
    :cond_7
    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    .line 25952
    return-void

    .line 25951
    :catchall_0
    move-exception v0

    :try_start_2
    monitor-exit p0
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw v0
.end method

.method importanceTokenDied(Lcom/android/server/am/ActivityManagerService$ImportanceToken;)V
    .locals 3

    .line 8907
    monitor-enter p0

    :try_start_0
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    .line 8908
    nop

    .line 8909
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Landroid/util/SparseArray;

    monitor-enter v0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_1

    .line 8910
    :try_start_1
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mImportantProcesses:Landroid/util/SparseArray;

    iget v2, p1, Lcom/android/server/am/ActivityManagerService$ImportanceToken;->pid:I

    .line 8911
    invoke-virtual {v1, v2}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    move-result-object v1

    check-cast v1, Lcom/android/server/am/ActivityManagerService$ImportanceToken;

    .line 8912
    if-eq v1, p1, :cond_0

    .line 8913
    monitor-exit v0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    :try_start_2
    monitor-exit p0
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_1

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    return-void

    .line 8915
    :cond_0
    :try_start_3
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mImportantProcesses:Landroid/util/SparseArray;

    iget v2, p1, Lcom/android/server/am/ActivityManagerService$ImportanceToken;->pid:I

    invoke-virtual {v1, v2}, Landroid/util/SparseArray;->remove(I)V

    .line 8916
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Landroid/util/SparseArray;

    iget p1, p1, Lcom/android/server/am/ActivityManagerService$ImportanceToken;->pid:I

    invoke-virtual {v1, p1}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    move-result-object p1

    check-cast p1, Lcom/android/server/am/ProcessRecord;

    .line 8917
    if-nez p1, :cond_1

    .line 8918
    monitor-exit v0
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_0

    :try_start_4
    monitor-exit p0
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_1

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    return-void

    .line 8920
    :cond_1
    const/4 v1, 0x0

    :try_start_5
    iput-object v1, p1, Lcom/android/server/am/ProcessRecord;->forcingToImportant:Ljava/lang/Object;

    .line 8921
    monitor-exit v0
    :try_end_5
    .catchall {:try_start_5 .. :try_end_5} :catchall_0

    .line 8922
    const/4 v0, 0x0

    :try_start_6
    invoke-virtual {p0, p1, v0, v0}, Lcom/android/server/am/ActivityManagerService;->updateProcessForegroundLocked(Lcom/android/server/am/ProcessRecord;ZZ)V

    .line 8923
    invoke-virtual {p0}, Lcom/android/server/am/ActivityManagerService;->updateOomAdjLocked()V

    .line 8924
    monitor-exit p0
    :try_end_6
    .catchall {:try_start_6 .. :try_end_6} :catchall_1

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    .line 8925
    return-void

    .line 8921
    :catchall_0
    move-exception p1

    :try_start_7
    monitor-exit v0
    :try_end_7
    .catchall {:try_start_7 .. :try_end_7} :catchall_0

    :try_start_8
    throw p1

    .line 8924
    :catchall_1
    move-exception p1

    monitor-exit p0
    :try_end_8
    .catchall {:try_start_8 .. :try_end_8} :catchall_1

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw p1
.end method

.method incProviderCountLocked(Lcom/android/server/am/ProcessRecord;Lcom/android/server/am/ContentProviderRecord;Landroid/os/IBinder;Z)Lcom/android/server/am/ContentProviderConnection;
    .locals 7

    .line 12272
    if-eqz p1, :cond_4

    .line 12273
    const/4 p3, 0x0

    :goto_0
    iget-object v0, p1, Lcom/android/server/am/ProcessRecord;->conProviders:Ljava/util/ArrayList;

    invoke-virtual {v0}, Ljava/util/ArrayList;->size()I

    move-result v0

    const/4 v1, 0x1

    if-ge p3, v0, :cond_2

    .line 12274
    iget-object v0, p1, Lcom/android/server/am/ProcessRecord;->conProviders:Ljava/util/ArrayList;

    invoke-virtual {v0, p3}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Lcom/android/server/am/ContentProviderConnection;

    .line 12275
    iget-object v2, v0, Lcom/android/server/am/ContentProviderConnection;->provider:Lcom/android/server/am/ContentProviderRecord;

    if-ne v2, p2, :cond_1

    .line 12281
    if-eqz p4, :cond_0

    .line 12282
    iget p1, v0, Lcom/android/server/am/ContentProviderConnection;->stableCount:I

    add-int/2addr p1, v1

    iput p1, v0, Lcom/android/server/am/ContentProviderConnection;->stableCount:I

    .line 12283
    iget p1, v0, Lcom/android/server/am/ContentProviderConnection;->numStableIncs:I

    add-int/2addr p1, v1

    iput p1, v0, Lcom/android/server/am/ContentProviderConnection;->numStableIncs:I

    goto :goto_1

    .line 12285
    :cond_0
    iget p1, v0, Lcom/android/server/am/ContentProviderConnection;->unstableCount:I

    add-int/2addr p1, v1

    iput p1, v0, Lcom/android/server/am/ContentProviderConnection;->unstableCount:I

    .line 12286
    iget p1, v0, Lcom/android/server/am/ContentProviderConnection;->numUnstableIncs:I

    add-int/2addr p1, v1

    iput p1, v0, Lcom/android/server/am/ContentProviderConnection;->numUnstableIncs:I

    .line 12288
    :goto_1
    return-object v0

    .line 12273
    :cond_1
    add-int/lit8 p3, p3, 0x1

    goto :goto_0

    .line 12291
    :cond_2
    new-instance p3, Lcom/android/server/am/ContentProviderConnection;

    invoke-direct {p3, p2, p1}, Lcom/android/server/am/ContentProviderConnection;-><init>(Lcom/android/server/am/ContentProviderRecord;Lcom/android/server/am/ProcessRecord;)V

    .line 12292
    if-eqz p4, :cond_3

    .line 12293
    iput v1, p3, Lcom/android/server/am/ContentProviderConnection;->stableCount:I

    .line 12294
    iput v1, p3, Lcom/android/server/am/ContentProviderConnection;->numStableIncs:I

    goto :goto_2

    .line 12296
    :cond_3
    iput v1, p3, Lcom/android/server/am/ContentProviderConnection;->unstableCount:I

    .line 12297
    iput v1, p3, Lcom/android/server/am/ContentProviderConnection;->numUnstableIncs:I

    .line 12299
    :goto_2
    iget-object p4, p2, Lcom/android/server/am/ContentProviderRecord;->connections:Ljava/util/ArrayList;

    invoke-virtual {p4, p3}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    .line 12300
    iget-object p4, p1, Lcom/android/server/am/ProcessRecord;->conProviders:Ljava/util/ArrayList;

    invoke-virtual {p4, p3}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    .line 12301
    iget v1, p1, Lcom/android/server/am/ProcessRecord;->uid:I

    iget-object v2, p1, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;

    iget v3, p1, Lcom/android/server/am/ProcessRecord;->curProcState:I

    iget v4, p2, Lcom/android/server/am/ContentProviderRecord;->uid:I

    iget-object v5, p2, Lcom/android/server/am/ContentProviderRecord;->name:Landroid/content/ComponentName;

    iget-object p1, p2, Lcom/android/server/am/ContentProviderRecord;->info:Landroid/content/pm/ProviderInfo;

    iget-object v6, p1, Landroid/content/pm/ProviderInfo;->processName:Ljava/lang/String;

    move-object v0, p0

    invoke-virtual/range {v0 .. v6}, Lcom/android/server/am/ActivityManagerService;->startAssociationLocked(ILjava/lang/String;IILandroid/content/ComponentName;Ljava/lang/String;)Lcom/android/server/am/ActivityManagerService$Association;

    .line 12303
    return-object p3

    .line 12305
    :cond_4
    invoke-virtual {p2, p3}, Lcom/android/server/am/ContentProviderRecord;->addExternalProcessHandleLocked(Landroid/os/IBinder;)V

    .line 12306
    const/4 p1, 0x0

    return-object p1
.end method

.method incrementProcStateSeqAndNotifyAppsLocked()V
    .locals 10
    .annotation build Lcom/android/internal/annotations/GuardedBy;
        value = "this"
    .end annotation

    .annotation build Lcom/android/internal/annotations/VisibleForTesting;
    .end annotation

    .line 25962
    iget-wide v0, p0, Lcom/android/server/am/ActivityManagerService;->mWaitForNetworkTimeoutMs:J

    const-wide/16 v2, 0x0

    cmp-long v0, v0, v2

    if-gtz v0, :cond_0

    .line 25963
    return-void

    .line 25966
    :cond_0
    const/4 v0, 0x0

    .line 25967
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mActiveUids:Landroid/util/SparseArray;

    invoke-virtual {v1}, Landroid/util/SparseArray;->size()I

    move-result v1

    const/4 v2, 0x1

    sub-int/2addr v1, v2

    :goto_0
    if-ltz v1, :cond_9

    .line 25968
    iget-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mActiveUids:Landroid/util/SparseArray;

    invoke-virtual {v3, v1}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;

    move-result-object v3

    check-cast v3, Lcom/android/server/am/UidRecord;

    .line 25970
    iget-object v4, p0, Lcom/android/server/am/ActivityManagerService;->mInjector:Lcom/android/server/am/ActivityManagerService$Injector;

    iget v5, v3, Lcom/android/server/am/UidRecord;->uid:I

    invoke-virtual {v4, v5}, Lcom/android/server/am/ActivityManagerService$Injector;->isNetworkRestrictedForUid(I)Z

    move-result v4

    if-nez v4, :cond_1

    .line 25971
    goto :goto_2

    .line 25973
    :cond_1
    iget v4, v3, Lcom/android/server/am/UidRecord;->uid:I

    invoke-static {v4}, Landroid/os/UserHandle;->isApp(I)Z

    move-result v4

    if-eqz v4, :cond_8

    iget-boolean v4, v3, Lcom/android/server/am/UidRecord;->hasInternetPermission:Z

    if-nez v4, :cond_2

    .line 25974
    goto :goto_2

    .line 25977
    :cond_2
    iget v4, v3, Lcom/android/server/am/UidRecord;->setProcState:I

    iget v5, v3, Lcom/android/server/am/UidRecord;->curProcState:I

    if-ne v4, v5, :cond_3

    .line 25978
    goto :goto_2

    .line 25980
    :cond_3
    invoke-virtual {p0, v3}, Lcom/android/server/am/ActivityManagerService;->getBlockStateForUid(Lcom/android/server/am/UidRecord;)I

    move-result v4

    .line 25983
    if-nez v4, :cond_4

    .line 25984
    goto :goto_2

    .line 25986
    :cond_4
    iget-object v5, v3, Lcom/android/server/am/UidRecord;->networkStateLock:Ljava/lang/Object;

    monitor-enter v5

    .line 25987
    :try_start_0
    iget-wide v6, p0, Lcom/android/server/am/ActivityManagerService;->mProcStateSeqCounter:J

    const-wide/16 v8, 0x1

    add-long/2addr v6, v8

    iput-wide v6, p0, Lcom/android/server/am/ActivityManagerService;->mProcStateSeqCounter:J

    iput-wide v6, v3, Lcom/android/server/am/UidRecord;->curProcStateSeq:J

    .line 25988
    if-ne v4, v2, :cond_6

    .line 25989
    if-nez v0, :cond_5

    .line 25990
    new-instance v0, Ljava/util/ArrayList;

    invoke-direct {v0}, Ljava/util/ArrayList;-><init>()V

    .line 25992
    :cond_5
    iget v3, v3, Lcom/android/server/am/UidRecord;->uid:I

    invoke-static {v3}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v3

    invoke-virtual {v0, v3}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    goto :goto_1

    .line 25998
    :cond_6
    iget-boolean v4, v3, Lcom/android/server/am/UidRecord;->waitingForNetwork:Z

    if-eqz v4, :cond_7

    .line 25999
    iget-object v3, v3, Lcom/android/server/am/UidRecord;->networkStateLock:Ljava/lang/Object;

    invoke-virtual {v3}, Ljava/lang/Object;->notifyAll()V

    .line 26002
    :cond_7
    :goto_1
    monitor-exit v5

    goto :goto_2

    :catchall_0
    move-exception v0

    monitor-exit v5
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    throw v0

    .line 25967
    :cond_8
    :goto_2
    add-int/lit8 v1, v1, -0x1

    goto :goto_0

    .line 26006
    :cond_9
    if-nez v0, :cond_a

    .line 26007
    return-void

    .line 26010
    :cond_a
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mLruProcesses:Ljava/util/ArrayList;

    invoke-virtual {v1}, Ljava/util/ArrayList;->size()I

    move-result v1

    sub-int/2addr v1, v2

    :goto_3
    if-ltz v1, :cond_d

    .line 26011
    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mLruProcesses:Ljava/util/ArrayList;

    invoke-virtual {v2, v1}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Lcom/android/server/am/ProcessRecord;

    .line 26012
    iget v3, v2, Lcom/android/server/am/ProcessRecord;->uid:I

    invoke-static {v3}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v3

    invoke-virtual {v0, v3}, Ljava/util/ArrayList;->contains(Ljava/lang/Object;)Z

    move-result v3

    if-nez v3, :cond_b

    .line 26013
    goto :goto_4

    .line 26015
    :cond_b
    iget-boolean v3, v2, Lcom/android/server/am/ProcessRecord;->killedByAm:Z

    if-nez v3, :cond_c

    iget-object v3, v2, Lcom/android/server/am/ProcessRecord;->thread:Landroid/app/IApplicationThread;

    if-eqz v3, :cond_c

    .line 26016
    iget-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mActiveUids:Landroid/util/SparseArray;

    iget v4, v2, Lcom/android/server/am/ProcessRecord;->uid:I

    invoke-virtual {v3, v4}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    move-result-object v3

    check-cast v3, Lcom/android/server/am/UidRecord;

    .line 26022
    :try_start_1
    iget-object v2, v2, Lcom/android/server/am/ProcessRecord;->thread:Landroid/app/IApplicationThread;

    iget-wide v3, v3, Lcom/android/server/am/UidRecord;->curProcStateSeq:J

    invoke-interface {v2, v3, v4}, Landroid/app/IApplicationThread;->setNetworkBlockSeq(J)V
    :try_end_1
    .catch Landroid/os/RemoteException; {:try_start_1 .. :try_end_1} :catch_0

    .line 26024
    goto :goto_4

    .line 26023
    :catch_0
    move-exception v2

    .line 26010
    :cond_c
    :goto_4
    add-int/lit8 v1, v1, -0x1

    goto :goto_3

    .line 26027
    :cond_d
    return-void
.end method

.method public initPowerManagement()V
    .locals 3

    .line 3358
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mStackSupervisor:Lcom/android/server/am/ActivityStackSupervisor;

    invoke-virtual {v0}, Lcom/android/server/am/ActivityStackSupervisor;->initPowerManagement()V

    .line 3359
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mBatteryStatsService:Lcom/android/server/am/BatteryStatsService;

    invoke-virtual {v0}, Lcom/android/server/am/BatteryStatsService;->initPowerManagement()V

    .line 3360
    const-class v0, Landroid/os/PowerManagerInternal;

    invoke-static {v0}, Lcom/android/server/LocalServices;->getService(Ljava/lang/Class;)Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Landroid/os/PowerManagerInternal;

    iput-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mLocalPowerManager:Landroid/os/PowerManagerInternal;

    .line 3361
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mContext:Landroid/content/Context;

    const-string/jumbo v1, "power"

    invoke-virtual {v0, v1}, Landroid/content/Context;->getSystemService(Ljava/lang/String;)Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Landroid/os/PowerManager;

    .line 3362
    const-string v1, "*voice*"

    const/4 v2, 0x1

    invoke-virtual {v0, v2, v1}, Landroid/os/PowerManager;->newWakeLock(ILjava/lang/String;)Landroid/os/PowerManager$WakeLock;

    move-result-object v0

    iput-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mVoiceWakeLock:Landroid/os/PowerManager$WakeLock;

    .line 3363
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mVoiceWakeLock:Landroid/os/PowerManager$WakeLock;

    const/4 v1, 0x0

    invoke-virtual {v0, v1}, Landroid/os/PowerManager$WakeLock;->setReferenceCounted(Z)V

    .line 3364
    return-void
.end method

.method public inputDispatchingTimedOut(IZLjava/lang/String;)J
    .locals 9

    .line 14159
    const-string v0, "android.permission.FILTER_EVENTS"

    invoke-virtual {p0, v0}, Lcom/android/server/am/ActivityManagerService;->checkCallingPermission(Ljava/lang/String;)I

    move-result v0

    if-nez v0, :cond_1

    .line 14166
    monitor-enter p0

    :try_start_0
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    .line 14167
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Landroid/util/SparseArray;

    monitor-enter v0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_1

    .line 14168
    :try_start_1
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Landroid/util/SparseArray;

    invoke-virtual {v1, p1}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    move-result-object p1

    move-object v2, p1

    check-cast v2, Lcom/android/server/am/ProcessRecord;

    .line 14169
    monitor-exit v0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 14170
    :try_start_2
    invoke-static {v2}, Lcom/android/server/am/ActivityManagerService;->getInputDispatchingTimeoutLocked(Lcom/android/server/am/ProcessRecord;)J

    move-result-wide v7

    .line 14171
    monitor-exit p0
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_1

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    .line 14173
    const/4 v3, 0x0

    const/4 v4, 0x0

    move-object v1, p0

    move v5, p2

    move-object v6, p3

    invoke-virtual/range {v1 .. v6}, Lcom/android/server/am/ActivityManagerService;->inputDispatchingTimedOut(Lcom/android/server/am/ProcessRecord;Lcom/android/server/am/ActivityRecord;Lcom/android/server/am/ActivityRecord;ZLjava/lang/String;)Z

    move-result p1

    if-eqz p1, :cond_0

    .line 14174
    const-wide/16 p1, -0x1

    return-wide p1

    .line 14177
    :cond_0
    return-wide v7

    .line 14169
    :catchall_0
    move-exception p1

    :try_start_3
    monitor-exit v0
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_0

    :try_start_4
    throw p1

    .line 14171
    :catchall_1
    move-exception p1

    monitor-exit p0
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_1

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw p1

    .line 14161
    :cond_1
    new-instance p1, Ljava/lang/SecurityException;

    const-string p2, "Requires permission android.permission.FILTER_EVENTS"

    invoke-direct {p1, p2}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw p1
.end method

.method public inputDispatchingTimedOut(Lcom/android/server/am/ProcessRecord;Lcom/android/server/am/ActivityRecord;Lcom/android/server/am/ActivityRecord;ZLjava/lang/String;)Z
    .locals 9

    .line 14187
    const-string v0, "android.permission.FILTER_EVENTS"

    invoke-virtual {p0, v0}, Lcom/android/server/am/ActivityManagerService;->checkCallingPermission(Ljava/lang/String;)I

    move-result v0

    if-nez v0, :cond_4

    .line 14194
    if-nez p5, :cond_0

    .line 14195
    const-string p5, "Input dispatching timed out"

    .line 14200
    :goto_0
    move-object v6, p5

    goto :goto_1

    .line 14197
    :cond_0
    new-instance v0, Ljava/lang/StringBuilder;

    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V

    const-string v1, "Input dispatching timed out ("

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0, p5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string p5, ")"

    invoke-virtual {v0, p5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object p5

    goto :goto_0

    .line 14200
    :goto_1
    const/4 p5, 0x1

    if-eqz p1, :cond_3

    .line 14201
    monitor-enter p0

    :try_start_0
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    .line 14202
    iget-boolean v0, p1, Lcom/android/server/am/ProcessRecord;->debugging:Z

    const/4 v1, 0x0

    if-eqz v0, :cond_1

    .line 14203
    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    return v1

    .line 14206
    :cond_1
    :try_start_1
    iget-object v0, p1, Lcom/android/server/am/ProcessRecord;->instr:Lcom/android/server/am/ActiveInstrumentation;

    if-eqz v0, :cond_2

    .line 14207
    new-instance p2, Landroid/os/Bundle;

    invoke-direct {p2}, Landroid/os/Bundle;-><init>()V

    .line 14208
    const-string/jumbo p3, "shortMsg"

    const-string p4, "keyDispatchingTimedOut"

    invoke-virtual {p2, p3, p4}, Landroid/os/Bundle;->putString(Ljava/lang/String;Ljava/lang/String;)V

    .line 14209
    const-string p3, "longMsg"

    invoke-virtual {p2, p3, v6}, Landroid/os/Bundle;->putString(Ljava/lang/String;Ljava/lang/String;)V

    .line 14210
    invoke-virtual {p0, p1, v1, p2}, Lcom/android/server/am/ActivityManagerService;->finishInstrumentationLocked(Lcom/android/server/am/ProcessRecord;ILandroid/os/Bundle;)V

    .line 14211
    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    return p5

    .line 14213
    :cond_2
    :try_start_2
    monitor-exit p0
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    .line 14214
    iget-object v7, p0, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    new-instance v8, Lcom/android/server/am/ActivityManagerService$16;

    move-object v0, v8

    move-object v1, p0

    move-object v2, p1

    move-object v3, p2

    move-object v4, p3

    move v5, p4

    invoke-direct/range {v0 .. v6}, Lcom/android/server/am/ActivityManagerService$16;-><init>(Lcom/android/server/am/ActivityManagerService;Lcom/android/server/am/ProcessRecord;Lcom/android/server/am/ActivityRecord;Lcom/android/server/am/ActivityRecord;ZLjava/lang/String;)V

    invoke-virtual {v7, v8}, Lcom/android/server/am/ActivityManagerService$MainHandler;->post(Ljava/lang/Runnable;)Z

    goto :goto_2

    .line 14213
    :catchall_0
    move-exception p1

    :try_start_3
    monitor-exit p0
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw p1

    .line 14222
    :cond_3
    :goto_2
    return p5

    .line 14189
    :cond_4
    new-instance p1, Ljava/lang/SecurityException;

    const-string p2, "Requires permission android.permission.FILTER_EVENTS"

    invoke-direct {p1, p2}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw p1
.end method

.method installEncryptionUnawareProviders(I)V
    .locals 19

    move-object/from16 v1, p0

    .line 13205
    move/from16 v2, p1

    monitor-enter p0

    :try_start_0
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    .line 13206
    iget-object v0, v1, Lcom/android/server/am/ActivityManagerService;->mProcessNames:Lcom/android/internal/app/ProcessMap;

    invoke-virtual {v0}, Lcom/android/internal/app/ProcessMap;->getMap()Landroid/util/ArrayMap;

    move-result-object v0

    invoke-virtual {v0}, Landroid/util/ArrayMap;->size()I

    move-result v3

    .line 13207
    const/4 v5, 0x0

    :goto_0
    if-ge v5, v3, :cond_9

    .line 13208
    iget-object v0, v1, Lcom/android/server/am/ActivityManagerService;->mProcessNames:Lcom/android/internal/app/ProcessMap;

    invoke-virtual {v0}, Lcom/android/internal/app/ProcessMap;->getMap()Landroid/util/ArrayMap;

    move-result-object v0

    invoke-virtual {v0, v5}, Landroid/util/ArrayMap;->valueAt(I)Ljava/lang/Object;

    move-result-object v0

    move-object v6, v0

    check-cast v6, Landroid/util/SparseArray;

    .line 13209
    invoke-virtual {v6}, Landroid/util/SparseArray;->size()I

    move-result v7

    .line 13210
    const/4 v8, 0x0

    :goto_1
    if-ge v8, v7, :cond_8

    .line 13211
    invoke-virtual {v6, v8}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;

    move-result-object v0

    move-object v9, v0

    check-cast v9, Lcom/android/server/am/ProcessRecord;

    .line 13212
    iget v0, v9, Lcom/android/server/am/ProcessRecord;->userId:I

    if-ne v0, v2, :cond_7

    iget-object v0, v9, Lcom/android/server/am/ProcessRecord;->thread:Landroid/app/IApplicationThread;

    if-eqz v0, :cond_7

    iget-boolean v0, v9, Lcom/android/server/am/ProcessRecord;->unlocked:Z

    if-eqz v0, :cond_0

    goto/16 :goto_a

    .line 13214
    :cond_0
    iget-object v0, v9, Lcom/android/server/am/ProcessRecord;->pkgList:Landroid/util/ArrayMap;

    invoke-virtual {v0}, Landroid/util/ArrayMap;->size()I

    move-result v10
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 13215
    const/4 v11, 0x0

    :goto_2
    if-ge v11, v10, :cond_7

    .line 13217
    :try_start_1
    iget-object v0, v9, Lcom/android/server/am/ProcessRecord;->pkgList:Landroid/util/ArrayMap;

    invoke-virtual {v0, v11}, Landroid/util/ArrayMap;->keyAt(I)Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Ljava/lang/String;

    .line 13218
    invoke-static {}, Landroid/app/AppGlobals;->getPackageManager()Landroid/content/pm/IPackageManager;

    move-result-object v12

    const v13, 0x40008

    .line 13219
    invoke-interface {v12, v0, v13, v2}, Landroid/content/pm/IPackageManager;->getPackageInfo(Ljava/lang/String;II)Landroid/content/pm/PackageInfo;

    move-result-object v0

    .line 13220
    if-eqz v0, :cond_6

    iget-object v12, v0, Landroid/content/pm/PackageInfo;->providers:[Landroid/content/pm/ProviderInfo;

    invoke-static {v12}, Lcom/android/internal/util/ArrayUtils;->isEmpty([Ljava/lang/Object;)Z

    move-result v12

    if-nez v12, :cond_6

    .line 13221
    iget-object v0, v0, Landroid/content/pm/PackageInfo;->providers:[Landroid/content/pm/ProviderInfo;

    array-length v12, v0

    const/4 v13, 0x0

    :goto_3
    if-ge v13, v12, :cond_6

    aget-object v14, v0, v13

    .line 13223
    iget-object v15, v14, Landroid/content/pm/ProviderInfo;->processName:Ljava/lang/String;

    iget-object v4, v9, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;

    invoke-static {v15, v4}, Ljava/util/Objects;->equals(Ljava/lang/Object;Ljava/lang/Object;)Z

    move-result v4

    if-nez v4, :cond_2

    iget-boolean v4, v14, Landroid/content/pm/ProviderInfo;->multiprocess:Z

    if-eqz v4, :cond_1

    goto :goto_4

    .line 13225
    :cond_1
    const/4 v4, 0x0

    goto :goto_5

    .line 13223
    :cond_2
    :goto_4
    nop

    .line 13225
    const/4 v4, 0x1

    :goto_5
    iget-object v15, v14, Landroid/content/pm/ProviderInfo;->processName:Ljava/lang/String;

    move-object/from16 v17, v0

    iget-object v0, v14, Landroid/content/pm/ProviderInfo;->applicationInfo:Landroid/content/pm/ApplicationInfo;

    iget-object v2, v14, Landroid/content/pm/ProviderInfo;->name:Ljava/lang/String;
    :try_end_1
    .catch Landroid/os/RemoteException; {:try_start_1 .. :try_end_1} :catch_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    move/from16 v18, v3

    :try_start_2
    iget v3, v14, Landroid/content/pm/ProviderInfo;->flags:I

    invoke-virtual {v1, v15, v0, v2, v3}, Lcom/android/server/am/ActivityManagerService;->isSingleton(Ljava/lang/String;Landroid/content/pm/ApplicationInfo;Ljava/lang/String;I)Z

    move-result v0

    if-eqz v0, :cond_4

    .line 13227
    iget v0, v9, Lcom/android/server/am/ProcessRecord;->userId:I

    if-nez v0, :cond_3

    goto :goto_6

    .line 13228
    :cond_3
    const/16 v16, 0x0

    goto :goto_7

    .line 13227
    :cond_4
    :goto_6
    nop

    .line 13228
    const/16 v16, 0x1

    :goto_7
    if-eqz v4, :cond_5

    if-eqz v16, :cond_5

    .line 13229
    const-string v0, "ActivityManager"

    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    const-string v3, "Installing "

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v2, v14}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v2

    invoke-static {v0, v2}, Landroid/util/Log;->v(Ljava/lang/String;Ljava/lang/String;)I

    .line 13230
    iget-object v0, v9, Lcom/android/server/am/ProcessRecord;->thread:Landroid/app/IApplicationThread;

    invoke-interface {v0, v14}, Landroid/app/IApplicationThread;->scheduleInstallProvider(Landroid/content/pm/ProviderInfo;)V

    goto :goto_8

    .line 13232
    :cond_5
    const-string v0, "ActivityManager"

    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    const-string v3, "Skipping "

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v2, v14}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v2

    invoke-static {v0, v2}, Landroid/util/Log;->v(Ljava/lang/String;Ljava/lang/String;)I
    :try_end_2
    .catch Landroid/os/RemoteException; {:try_start_2 .. :try_end_2} :catch_0
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    .line 13221
    :goto_8
    add-int/lit8 v13, v13, 0x1

    move-object/from16 v0, v17

    move/from16 v3, v18

    move/from16 v2, p1

    goto :goto_3

    .line 13236
    :catch_0
    move-exception v0

    goto :goto_9

    .line 13237
    :cond_6
    move/from16 v18, v3

    goto :goto_9

    .line 13236
    :catch_1
    move-exception v0

    move/from16 v18, v3

    .line 13215
    :goto_9
    add-int/lit8 v11, v11, 0x1

    move/from16 v3, v18

    move/from16 v2, p1

    goto/16 :goto_2

    .line 13210
    :cond_7
    :goto_a
    move/from16 v18, v3

    add-int/lit8 v8, v8, 0x1

    move/from16 v3, v18

    move/from16 v2, p1

    goto/16 :goto_1

    .line 13207
    :cond_8
    move/from16 v18, v3

    add-int/lit8 v5, v5, 0x1

    move/from16 v2, p1

    goto/16 :goto_0

    .line 13241
    :cond_9
    :try_start_3
    monitor-exit p0
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    .line 13242
    return-void

    .line 13241
    :catchall_0
    move-exception v0

    :try_start_4
    monitor-exit p0
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw v0
.end method

.method public final installSystemProviders()V
    .locals 7

    .line 13137
    monitor-enter p0

    :try_start_0
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    .line 13138
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mProcessNames:Lcom/android/internal/app/ProcessMap;

    const-string/jumbo v1, "system"

    const/16 v2, 0x3e8

    invoke-virtual {v0, v1, v2}, Lcom/android/internal/app/ProcessMap;->get(Ljava/lang/String;I)Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Lcom/android/server/am/ProcessRecord;

    .line 13139
    invoke-direct {p0, v0}, Lcom/android/server/am/ActivityManagerService;->generateApplicationProvidersLocked(Lcom/android/server/am/ProcessRecord;)Ljava/util/List;

    move-result-object v0

    .line 13140
    const/4 v1, 0x1

    if-eqz v0, :cond_1

    .line 13141
    invoke-interface {v0}, Ljava/util/List;->size()I

    move-result v2

    sub-int/2addr v2, v1

    :goto_0
    if-ltz v2, :cond_1

    .line 13142
    invoke-interface {v0, v2}, Ljava/util/List;->get(I)Ljava/lang/Object;

    move-result-object v3

    check-cast v3, Landroid/content/pm/ProviderInfo;

    .line 13143
    iget-object v4, v3, Landroid/content/pm/ProviderInfo;->applicationInfo:Landroid/content/pm/ApplicationInfo;

    iget v4, v4, Landroid/content/pm/ApplicationInfo;->flags:I

    and-int/2addr v4, v1

    if-nez v4, :cond_0

    .line 13144
    const-string v4, "ActivityManager"

    new-instance v5, Ljava/lang/StringBuilder;

    invoke-direct {v5}, Ljava/lang/StringBuilder;-><init>()V

    const-string v6, "Not installing system proc provider "

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget-object v3, v3, Landroid/content/pm/ProviderInfo;->name:Ljava/lang/String;

    invoke-virtual {v5, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v3, ": not system .apk"

    invoke-virtual {v5, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v5}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v3

    invoke-static {v4, v3}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 13146
    invoke-interface {v0, v2}, Ljava/util/List;->remove(I)Ljava/lang/Object;

    .line 13141
    :cond_0
    add-int/lit8 v2, v2, -0x1

    goto :goto_0

    .line 13150
    :cond_1
    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_1

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    .line 13151
    if-eqz v0, :cond_2

    .line 13152
    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mSystemThread:Landroid/app/ActivityThread;

    invoke-virtual {v2, v0}, Landroid/app/ActivityThread;->installSystemProviders(Ljava/util/List;)V

    .line 13155
    :cond_2
    monitor-enter p0

    :try_start_1
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    .line 13156
    iput-boolean v1, p0, Lcom/android/server/am/ActivityManagerService;->mSystemProvidersInstalled:Z

    .line 13157
    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    .line 13159
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mConstants:Lcom/android/server/am/ActivityManagerConstants;

    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mContext:Landroid/content/Context;

    invoke-virtual {v1}, Landroid/content/Context;->getContentResolver()Landroid/content/ContentResolver;

    move-result-object v1

    invoke-virtual {v0, v1}, Lcom/android/server/am/ActivityManagerConstants;->start(Landroid/content/ContentResolver;)V

    .line 13160
    new-instance v0, Lcom/android/server/am/CoreSettingsObserver;

    invoke-direct {v0, p0}, Lcom/android/server/am/CoreSettingsObserver;-><init>(Lcom/android/server/am/ActivityManagerService;)V

    iput-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mCoreSettingsObserver:Lcom/android/server/am/CoreSettingsObserver;

    .line 13161
    new-instance v0, Lcom/android/server/am/ActivityManagerService$FontScaleSettingObserver;

    invoke-direct {v0, p0}, Lcom/android/server/am/ActivityManagerService$FontScaleSettingObserver;-><init>(Lcom/android/server/am/ActivityManagerService;)V

    iput-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mFontScaleSettingObserver:Lcom/android/server/am/ActivityManagerService$FontScaleSettingObserver;

    .line 13163
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mContext:Landroid/content/Context;

    invoke-virtual {v0}, Landroid/content/Context;->getContentResolver()Landroid/content/ContentResolver;

    move-result-object v0

    invoke-static {v0}, Lcom/android/server/am/GlobalSettingsToPropertiesMapper;->start(Landroid/content/ContentResolver;)V

    .line 13167
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mContext:Landroid/content/Context;

    invoke-static {v0}, Lcom/android/server/RescueParty;->onSettingsProviderPublished(Landroid/content/Context;)V

    .line 13172
    new-instance v0, Lcom/android/internal/util/aospextended/GamingModeController;

    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mContext:Landroid/content/Context;

    invoke-direct {v0, v1}, Lcom/android/internal/util/aospextended/GamingModeController;-><init>(Landroid/content/Context;)V

    iput-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mGamingModeController:Lcom/android/internal/util/aospextended/GamingModeController;

    .line 13175
    new-instance v0, Lcom/android/internal/util/custom/cutout/CutoutFullscreenController;

    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mContext:Landroid/content/Context;

    invoke-direct {v0, v1}, Lcom/android/internal/util/custom/cutout/CutoutFullscreenController;-><init>(Landroid/content/Context;)V

    iput-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mCutoutFullscreenController:Lcom/android/internal/util/custom/cutout/CutoutFullscreenController;

    .line 13176
    return-void

    .line 13157
    :catchall_0
    move-exception v0

    :try_start_2
    monitor-exit p0
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw v0

    .line 13150
    :catchall_1
    move-exception v0

    :try_start_3
    monitor-exit p0
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_1

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw v0
.end method

.method isActivityStartsLoggingEnabled()Z
    .locals 1
    .annotation build Lcom/android/internal/annotations/VisibleForTesting;
    .end annotation

    .line 11300
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mConstants:Lcom/android/server/am/ActivityManagerConstants;

    iget-boolean v0, v0, Lcom/android/server/am/ActivityManagerConstants;->mFlagActivityStartsLoggingEnabled:Z

    return v0
.end method

.method isAllowedWhileBooting(Landroid/content/pm/ApplicationInfo;)Z
    .locals 0

    .line 4301
    iget p1, p1, Landroid/content/pm/ApplicationInfo;->flags:I

    and-int/lit8 p1, p1, 0x8

    if-eqz p1, :cond_0

    const/4 p1, 0x1

    goto :goto_0

    :cond_0
    const/4 p1, 0x0

    :goto_0
    return p1
.end method

.method public isAppForeground(I)Z
    .locals 2

    .line 8976
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v0

    .line 8977
    invoke-static {v0}, Landroid/os/UserHandle;->isCore(I)Z

    move-result v1

    if-nez v1, :cond_1

    if-ne v0, p1, :cond_0

    goto :goto_0

    .line 8980
    :cond_0
    const/4 p1, 0x0

    return p1

    .line 8978
    :cond_1
    :goto_0
    invoke-direct {p0, p1}, Lcom/android/server/am/ActivityManagerService;->isAppForegroundInternal(I)Z

    move-result p1

    return p1
.end method

.method public isAppStartModeDisabled(ILjava/lang/String;)Z
    .locals 8

    .line 9522
    monitor-enter p0

    :try_start_0
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    .line 9523
    const/4 v3, 0x0

    const/4 v4, -0x1

    const/4 v5, 0x0

    const/4 v6, 0x1

    const/4 v7, 0x0

    move-object v0, p0

    move v1, p1

    move-object v2, p2

    invoke-virtual/range {v0 .. v7}, Lcom/android/server/am/ActivityManagerService;->getAppStartModeLocked(ILjava/lang/String;IIZZZ)I

    move-result p1

    const/4 p2, 0x3

    if-ne p1, p2, :cond_0

    const/4 p1, 0x1

    goto :goto_0

    :cond_0
    const/4 p1, 0x0

    :goto_0
    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    return p1

    .line 9525
    :catchall_0
    move-exception p1

    :try_start_1
    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw p1
.end method

.method public isAssistDataAllowedOnCurrentActivity()Z
    .locals 3

    .line 14252
    monitor-enter p0

    :try_start_0
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    .line 14253
    invoke-virtual {p0}, Lcom/android/server/am/ActivityManagerService;->getFocusedStack()Lcom/android/server/am/ActivityStack;

    move-result-object v0

    .line 14254
    const/4 v1, 0x0

    if-eqz v0, :cond_2

    invoke-virtual {v0}, Lcom/android/server/am/ActivityStack;->isActivityTypeAssistant()Z

    move-result v2

    if-eqz v2, :cond_0

    goto :goto_0

    .line 14258
    :cond_0
    invoke-virtual {v0}, Lcom/android/server/am/ActivityStack;->getTopActivity()Lcom/android/server/am/ActivityRecord;

    move-result-object v0

    .line 14259
    if-nez v0, :cond_1

    .line 14260
    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    return v1

    .line 14262
    :cond_1
    :try_start_1
    iget v0, v0, Lcom/android/server/am/ActivityRecord;->userId:I

    .line 14263
    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    .line 14264
    invoke-static {}, Landroid/app/admin/DevicePolicyCache;->getInstance()Landroid/app/admin/DevicePolicyCache;

    move-result-object v1

    invoke-virtual {v1, v0}, Landroid/app/admin/DevicePolicyCache;->getScreenCaptureDisabled(I)Z

    move-result v0

    xor-int/lit8 v0, v0, 0x1

    return v0

    .line 14255
    :cond_2
    :goto_0
    :try_start_2
    monitor-exit p0
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    return v1

    .line 14263
    :catchall_0
    move-exception v0

    :try_start_3
    monitor-exit p0
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw v0
.end method

.method public isBackgroundRestricted(Ljava/lang/String;)Z
    .locals 4

    .line 13387
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v0

    .line 13388
    invoke-static {}, Landroid/app/AppGlobals;->getPackageManager()Landroid/content/pm/IPackageManager;

    move-result-object v1

    .line 13390
    const/high16 v2, 0x10000000

    .line 13391
    :try_start_0
    invoke-static {v0}, Landroid/os/UserHandle;->getUserId(I)I

    move-result v3

    .line 13390
    invoke-interface {v1, p1, v2, v3}, Landroid/content/pm/IPackageManager;->getPackageUid(Ljava/lang/String;II)I

    move-result v1

    .line 13392
    if-ne v1, v0, :cond_0

    .line 13398
    goto :goto_0

    .line 13393
    :cond_0
    new-instance v1, Ljava/lang/IllegalArgumentException;

    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    const-string v3, "Uid "

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v2, v0}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v3, " cannot query restriction state for package "

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v2, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v2

    invoke-direct {v1, v2}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v1
    :try_end_0
    .catch Landroid/os/RemoteException; {:try_start_0 .. :try_end_0} :catch_0

    .line 13396
    :catch_0
    move-exception v1

    .line 13399
    :goto_0
    invoke-virtual {p0, v0, p1}, Lcom/android/server/am/ActivityManagerService;->isBackgroundRestrictedNoCheck(ILjava/lang/String;)Z

    move-result p1

    return p1
.end method

.method isBackgroundRestrictedNoCheck(ILjava/lang/String;)Z
    .locals 2

    .line 13403
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mAppOpsService:Lcom/android/server/AppOpsService;

    const/16 v1, 0x46

    invoke-virtual {v0, v1, p1, p2}, Lcom/android/server/AppOpsService;->checkOperation(IILjava/lang/String;)I

    move-result p1

    .line 13405
    if-eqz p1, :cond_0

    const/4 p1, 0x1

    goto :goto_0

    :cond_0
    const/4 p1, 0x0

    :goto_0
    return p1
.end method

.method public isImmersive(Landroid/os/IBinder;)Z
    .locals 0

    .line 14635
    monitor-enter p0

    :try_start_0
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    .line 14636
    invoke-static {p1}, Lcom/android/server/am/ActivityRecord;->isInStackLocked(Landroid/os/IBinder;)Lcom/android/server/am/ActivityRecord;

    move-result-object p1

    .line 14637
    if-eqz p1, :cond_0

    .line 14640
    iget-boolean p1, p1, Lcom/android/server/am/ActivityRecord;->immersive:Z

    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    return p1

    .line 14638
    :cond_0
    :try_start_1
    new-instance p1, Ljava/lang/IllegalArgumentException;

    invoke-direct {p1}, Ljava/lang/IllegalArgumentException;-><init>()V

    throw p1

    .line 14641
    :catchall_0
    move-exception p1

    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw p1
.end method

.method public isInLockTaskMode()Z
    .locals 1

    .line 12016
    invoke-virtual {p0}, Lcom/android/server/am/ActivityManagerService;->getLockTaskModeState()I

    move-result v0

    if-eqz v0, :cond_0

    const/4 v0, 0x1

    goto :goto_0

    :cond_0
    const/4 v0, 0x0

    :goto_0
    return v0
.end method

.method public isInMultiWindowMode(Landroid/os/IBinder;)Z
    .locals 2

    .line 9008
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v0

    .line 9010
    :try_start_0
    monitor-enter p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_1

    :try_start_1
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    .line 9011
    invoke-static {p1}, Lcom/android/server/am/ActivityRecord;->isInStackLocked(Landroid/os/IBinder;)Lcom/android/server/am/ActivityRecord;

    move-result-object p1

    .line 9012
    if-nez p1, :cond_0

    .line 9013
    const/4 p1, 0x0

    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 9019
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 9013
    return p1

    .line 9016
    :cond_0
    :try_start_2
    invoke-virtual {p1}, Lcom/android/server/am/ActivityRecord;->inMultiWindowMode()Z

    move-result p1

    monitor-exit p0
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    .line 9019
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 9016
    return p1

    .line 9017
    :catchall_0
    move-exception p1

    :try_start_3
    monitor-exit p0
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_0

    :try_start_4
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw p1
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_1

    .line 9019
    :catchall_1
    move-exception p1

    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    throw p1
.end method

.method public isInPictureInPictureMode(Landroid/os/IBinder;)Z
    .locals 2

    .line 9025
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v0

    .line 9027
    :try_start_0
    monitor-enter p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_1

    :try_start_1
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    .line 9028
    invoke-static {p1}, Lcom/android/server/am/ActivityRecord;->forTokenLocked(Landroid/os/IBinder;)Lcom/android/server/am/ActivityRecord;

    move-result-object p1

    invoke-direct {p0, p1}, Lcom/android/server/am/ActivityManagerService;->isInPictureInPictureMode(Lcom/android/server/am/ActivityRecord;)Z

    move-result p1

    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 9031
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 9028
    return p1

    .line 9029
    :catchall_0
    move-exception p1

    :try_start_2
    monitor-exit p0
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    :try_start_3
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw p1
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_1

    .line 9031
    :catchall_1
    move-exception p1

    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    throw p1
.end method

.method public isIntentSenderAForegroundService(Landroid/content/IIntentSender;)Z
    .locals 2

    .line 8828
    instance-of v0, p1, Lcom/android/server/am/PendingIntentRecord;

    const/4 v1, 0x0

    if-eqz v0, :cond_1

    .line 8829
    check-cast p1, Lcom/android/server/am/PendingIntentRecord;

    .line 8830
    iget-object p1, p1, Lcom/android/server/am/PendingIntentRecord;->key:Lcom/android/server/am/PendingIntentRecord$Key;

    iget p1, p1, Lcom/android/server/am/PendingIntentRecord$Key;->type:I

    const/4 v0, 0x5

    if-ne p1, v0, :cond_0

    const/4 v1, 0x1

    nop

    :cond_0
    return v1

    .line 8832
    :cond_1
    return v1
.end method

.method public isIntentSenderAnActivity(Landroid/content/IIntentSender;)Z
    .locals 2

    .line 8812
    instance-of v0, p1, Lcom/android/server/am/PendingIntentRecord;

    const/4 v1, 0x0

    if-nez v0, :cond_0

    .line 8813
    return v1

    .line 8816
    :cond_0
    :try_start_0
    check-cast p1, Lcom/android/server/am/PendingIntentRecord;

    .line 8817
    iget-object p1, p1, Lcom/android/server/am/PendingIntentRecord;->key:Lcom/android/server/am/PendingIntentRecord$Key;

    iget p1, p1, Lcom/android/server/am/PendingIntentRecord$Key;->type:I
    :try_end_0
    .catch Ljava/lang/ClassCastException; {:try_start_0 .. :try_end_0} :catch_0

    const/4 v0, 0x2

    if-ne p1, v0, :cond_1

    .line 8818
    const/4 p1, 0x1

    return p1

    .line 8820
    :cond_1
    return v1

    .line 8821
    :catch_0
    move-exception p1

    .line 8823
    return v1
.end method

.method public isIntentSenderTargetedToPackage(Landroid/content/IIntentSender;)Z
    .locals 4

    .line 8790
    instance-of v0, p1, Lcom/android/server/am/PendingIntentRecord;

    const/4 v1, 0x0

    if-nez v0, :cond_0

    .line 8791
    return v1

    .line 8794
    :cond_0
    :try_start_0
    check-cast p1, Lcom/android/server/am/PendingIntentRecord;

    .line 8795
    iget-object v0, p1, Lcom/android/server/am/PendingIntentRecord;->key:Lcom/android/server/am/PendingIntentRecord$Key;

    iget-object v0, v0, Lcom/android/server/am/PendingIntentRecord$Key;->allIntents:[Landroid/content/Intent;

    if-nez v0, :cond_1

    .line 8796
    return v1

    .line 8798
    :cond_1
    move v0, v1

    :goto_0
    iget-object v2, p1, Lcom/android/server/am/PendingIntentRecord;->key:Lcom/android/server/am/PendingIntentRecord$Key;

    iget-object v2, v2, Lcom/android/server/am/PendingIntentRecord$Key;->allIntents:[Landroid/content/Intent;

    array-length v2, v2

    if-ge v0, v2, :cond_3

    .line 8799
    iget-object v2, p1, Lcom/android/server/am/PendingIntentRecord;->key:Lcom/android/server/am/PendingIntentRecord$Key;

    iget-object v2, v2, Lcom/android/server/am/PendingIntentRecord$Key;->allIntents:[Landroid/content/Intent;

    aget-object v2, v2, v0

    .line 8800
    invoke-virtual {v2}, Landroid/content/Intent;->getPackage()Ljava/lang/String;

    move-result-object v3

    if-eqz v3, :cond_2

    invoke-virtual {v2}, Landroid/content/Intent;->getComponent()Landroid/content/ComponentName;

    move-result-object v2
    :try_end_0
    .catch Ljava/lang/ClassCastException; {:try_start_0 .. :try_end_0} :catch_0

    if-eqz v2, :cond_2

    .line 8801
    return v1

    .line 8798
    :cond_2
    add-int/lit8 v0, v0, 0x1

    goto :goto_0

    .line 8804
    :cond_3
    const/4 p1, 0x1

    return p1

    .line 8805
    :catch_0
    move-exception p1

    .line 8807
    return v1
.end method

.method isKeyguardLocked()Z
    .locals 1

    .line 8215
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mKeyguardController:Lcom/android/server/am/KeyguardController;

    invoke-virtual {v0}, Lcom/android/server/am/KeyguardController;->isKeyguardLocked()Z

    move-result v0

    return v0
.end method

.method isNextTransitionForward()Z
    .locals 2

    .line 4143
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mWindowManager:Lcom/android/server/wm/WindowManagerService;

    invoke-virtual {v0}, Lcom/android/server/wm/WindowManagerService;->getPendingAppTransition()I

    move-result v0

    .line 4144
    const/4 v1, 0x6

    if-eq v0, v1, :cond_1

    const/16 v1, 0x8

    if-eq v0, v1, :cond_1

    const/16 v1, 0xa

    if-ne v0, v1, :cond_0

    goto :goto_0

    :cond_0
    const/4 v0, 0x0

    goto :goto_1

    :cond_1
    :goto_0
    const/4 v0, 0x1

    :goto_1
    return v0
.end method

.method isOnDeviceIdleWhitelistLocked(IZ)Z
    .locals 1

    .line 9661
    invoke-static {p1}, Landroid/os/UserHandle;->getAppId(I)I

    move-result v0

    .line 9663
    if-eqz p2, :cond_0

    .line 9664
    iget-object p2, p0, Lcom/android/server/am/ActivityManagerService;->mDeviceIdleExceptIdleWhitelist:[I

    goto :goto_0

    .line 9665
    :cond_0
    iget-object p2, p0, Lcom/android/server/am/ActivityManagerService;->mDeviceIdleWhitelist:[I

    .line 9667
    :goto_0
    invoke-static {p2, v0}, Ljava/util/Arrays;->binarySearch([II)I

    move-result p2

    if-gez p2, :cond_2

    iget-object p2, p0, Lcom/android/server/am/ActivityManagerService;->mDeviceIdleTempWhitelist:[I

    .line 9668
    invoke-static {p2, v0}, Ljava/util/Arrays;->binarySearch([II)I

    move-result p2

    if-gez p2, :cond_2

    iget-object p2, p0, Lcom/android/server/am/ActivityManagerService;->mPendingTempWhitelist:Landroid/util/SparseArray;

    .line 9669
    invoke-virtual {p2, p1}, Landroid/util/SparseArray;->indexOfKey(I)I

    move-result p1

    if-ltz p1, :cond_1

    goto :goto_1

    :cond_1
    const/4 p1, 0x0

    goto :goto_2

    :cond_2
    :goto_1
    const/4 p1, 0x1

    .line 9667
    :goto_2
    return p1
.end method

.method isPendingBroadcastProcessLocked(I)Z
    .locals 1

    .line 21091
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mFgBroadcastQueue:Lcom/android/server/am/BroadcastQueue;

    invoke-virtual {v0, p1}, Lcom/android/server/am/BroadcastQueue;->isPendingBroadcastProcessLocked(I)Z

    move-result v0

    if-nez v0, :cond_1

    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mBgBroadcastQueue:Lcom/android/server/am/BroadcastQueue;

    .line 21092
    invoke-virtual {v0, p1}, Lcom/android/server/am/BroadcastQueue;->isPendingBroadcastProcessLocked(I)Z

    move-result p1

    if-eqz p1, :cond_0

    goto :goto_0

    :cond_0
    const/4 p1, 0x0

    goto :goto_1

    :cond_1
    :goto_0
    const/4 p1, 0x1

    .line 21091
    :goto_1
    return p1
.end method

.method public isRootVoiceInteraction(Landroid/os/IBinder;)Z
    .locals 0

    .line 8496
    monitor-enter p0

    :try_start_0
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    .line 8497
    invoke-static {p1}, Lcom/android/server/am/ActivityRecord;->isInStackLocked(Landroid/os/IBinder;)Lcom/android/server/am/ActivityRecord;

    move-result-object p1

    .line 8498
    if-nez p1, :cond_0

    .line 8499
    const/4 p1, 0x0

    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    return p1

    .line 8501
    :cond_0
    :try_start_1
    iget-boolean p1, p1, Lcom/android/server/am/ActivityRecord;->rootVoiceInteraction:Z

    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    return p1

    .line 8502
    :catchall_0
    move-exception p1

    :try_start_2
    monitor-exit p0
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw p1
.end method

.method isShuttingDownLocked()Z
    .locals 1

    .line 13528
    iget-boolean v0, p0, Lcom/android/server/am/ActivityManagerService;->mShuttingDown:Z

    return v0
.end method

.method isSingleton(Ljava/lang/String;Landroid/content/pm/ApplicationInfo;Ljava/lang/String;I)Z
    .locals 5

    .line 20757
    nop

    .line 20759
    iget v0, p2, Landroid/content/pm/ApplicationInfo;->uid:I

    invoke-static {v0}, Landroid/os/UserHandle;->getAppId(I)I

    move-result v0

    const/high16 v1, 0x40000000    # 2.0f

    const/4 v2, 0x0

    const/4 v3, 0x1

    const/16 v4, 0x2710

    if-lt v0, v4, :cond_1

    .line 20760
    and-int p1, p4, v1

    if-eqz p1, :cond_5

    .line 20761
    const-string p1, "android.permission.INTERACT_ACROSS_USERS"

    iget p4, p2, Landroid/content/pm/ApplicationInfo;->uid:I

    invoke-static {p1, p4}, Landroid/app/ActivityManager;->checkUidPermission(Ljava/lang/String;I)I

    move-result p1

    if-nez p1, :cond_0

    .line 20772
    goto :goto_0

    .line 20764
    :cond_0
    new-instance p1, Landroid/content/ComponentName;

    iget-object p2, p2, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;

    invoke-direct {p1, p2, p3}, Landroid/content/ComponentName;-><init>(Ljava/lang/String;Ljava/lang/String;)V

    .line 20765
    new-instance p2, Ljava/lang/StringBuilder;

    invoke-direct {p2}, Ljava/lang/StringBuilder;-><init>()V

    const-string p3, "Permission Denial: Component "

    invoke-virtual {p2, p3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {p1}, Landroid/content/ComponentName;->flattenToShortString()Ljava/lang/String;

    move-result-object p1

    invoke-virtual {p2, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string p1, " requests FLAG_SINGLE_USER, but app does not hold "

    invoke-virtual {p2, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string p1, "android.permission.INTERACT_ACROSS_USERS"

    invoke-virtual {p2, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {p2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object p1

    .line 20768
    const-string p2, "ActivityManager"

    invoke-static {p2, p1}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 20769
    new-instance p2, Ljava/lang/SecurityException;

    invoke-direct {p2, p1}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw p2

    .line 20774
    :cond_1
    const-string/jumbo p3, "system"

    invoke-virtual {p3, p1}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result p1

    if-eqz p1, :cond_2

    .line 20775
    nop

    .line 20784
    :goto_0
    move v2, v3

    goto :goto_2

    .line 20776
    :cond_2
    and-int p1, p4, v1

    if-eqz p1, :cond_5

    .line 20778
    iget p1, p2, Landroid/content/pm/ApplicationInfo;->uid:I

    const/16 p3, 0x3e9

    invoke-static {p1, p3}, Landroid/os/UserHandle;->isSameApp(II)Z

    move-result p1

    if-nez p1, :cond_4

    iget p1, p2, Landroid/content/pm/ApplicationInfo;->flags:I

    and-int/lit8 p1, p1, 0x8

    if-eqz p1, :cond_3

    goto :goto_1

    :cond_3
    goto :goto_2

    :cond_4
    :goto_1
    goto :goto_0

    .line 20784
    :cond_5
    :goto_2
    return v2
.end method

.method isSleepingLocked()Z
    .locals 1

    .line 13532
    iget-boolean v0, p0, Lcom/android/server/am/ActivityManagerService;->mSleeping:Z

    return v0
.end method

.method isSleepingOrShuttingDownLocked()Z
    .locals 1

    .line 13524
    invoke-virtual {p0}, Lcom/android/server/am/ActivityManagerService;->isSleepingLocked()Z

    move-result v0

    if-nez v0, :cond_1

    iget-boolean v0, p0, Lcom/android/server/am/ActivityManagerService;->mShuttingDown:Z

    if-eqz v0, :cond_0

    goto :goto_0

    :cond_0
    const/4 v0, 0x0

    goto :goto_1

    :cond_1
    :goto_0
    const/4 v0, 0x1

    :goto_1
    return v0
.end method

.method public isSwipeToScreenshotGestureActive()Z
    .locals 2

    .line 27665
    monitor-enter p0

    :try_start_0
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    .line 27666
    iget-boolean v0, p0, Lcom/android/server/am/ActivityManagerService;->mIsSwipeToScrenshotEnabled:Z

    const/4 v1, 0x0

    if-eqz v0, :cond_0

    const-string/jumbo v0, "sys.android.screenshot"

    invoke-static {v0, v1}, Landroid/os/SystemProperties;->getBoolean(Ljava/lang/String;Z)Z

    move-result v0

    if-eqz v0, :cond_0

    const/4 v1, 0x1

    nop

    :cond_0
    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    return v1

    .line 27667
    :catchall_0
    move-exception v0

    :try_start_1
    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw v0
.end method

.method public isTopActivityImmersive()Z
    .locals 1

    .line 14836
    const-string/jumbo v0, "startActivity"

    invoke-virtual {p0, v0}, Lcom/android/server/am/ActivityManagerService;->enforceNotIsolatedCaller(Ljava/lang/String;)V

    .line 14837
    monitor-enter p0

    :try_start_0
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    .line 14838
    invoke-virtual {p0}, Lcom/android/server/am/ActivityManagerService;->getFocusedStack()Lcom/android/server/am/ActivityStack;

    move-result-object v0

    invoke-virtual {v0}, Lcom/android/server/am/ActivityStack;->topRunningActivityLocked()Lcom/android/server/am/ActivityRecord;

    move-result-object v0

    .line 14839
    if-eqz v0, :cond_0

    iget-boolean v0, v0, Lcom/android/server/am/ActivityRecord;->immersive:Z

    goto :goto_0

    :cond_0
    const/4 v0, 0x0

    :goto_0
    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    return v0

    .line 14840
    :catchall_0
    move-exception v0

    :try_start_1
    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw v0
.end method

.method public isTopOfTask(Landroid/os/IBinder;)Z
    .locals 1

    .line 14852
    monitor-enter p0

    :try_start_0
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    .line 14853
    invoke-static {p1}, Lcom/android/server/am/ActivityRecord;->isInStackLocked(Landroid/os/IBinder;)Lcom/android/server/am/ActivityRecord;

    move-result-object p1

    .line 14854
    if-eqz p1, :cond_1

    .line 14857
    invoke-virtual {p1}, Lcom/android/server/am/ActivityRecord;->getTask()Lcom/android/server/am/TaskRecord;

    move-result-object v0

    invoke-virtual {v0}, Lcom/android/server/am/TaskRecord;->getTopActivity()Lcom/android/server/am/ActivityRecord;

    move-result-object v0

    if-ne v0, p1, :cond_0

    const/4 p1, 0x1

    goto :goto_0

    :cond_0
    const/4 p1, 0x0

    :goto_0
    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    return p1

    .line 14855
    :cond_1
    :try_start_1
    new-instance p1, Ljava/lang/IllegalArgumentException;

    invoke-direct {p1}, Ljava/lang/IllegalArgumentException;-><init>()V

    throw p1

    .line 14858
    :catchall_0
    move-exception p1

    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw p1
.end method

.method public isUidActive(ILjava/lang/String;)Z
    .locals 1

    .line 14535
    invoke-direct {p0, p2}, Lcom/android/server/am/ActivityManagerService;->hasUsageStatsPermission(Ljava/lang/String;)Z

    move-result p2

    if-nez p2, :cond_0

    .line 14536
    const-string p2, "android.permission.PACKAGE_USAGE_STATS"

    const-string v0, "isUidActive"

    invoke-virtual {p0, p2, v0}, Lcom/android/server/am/ActivityManagerService;->enforceCallingPermission(Ljava/lang/String;Ljava/lang/String;)V

    .line 14539
    :cond_0
    monitor-enter p0

    :try_start_0
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    .line 14540
    invoke-virtual {p0, p1}, Lcom/android/server/am/ActivityManagerService;->isUidActiveLocked(I)Z

    move-result p1

    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    return p1

    .line 14541
    :catchall_0
    move-exception p1

    :try_start_1
    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw p1
.end method

.method isUidActiveLocked(I)Z
    .locals 1

    .line 14545
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mActiveUids:Landroid/util/SparseArray;

    invoke-virtual {v0, p1}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    move-result-object p1

    check-cast p1, Lcom/android/server/am/UidRecord;

    .line 14546
    if-eqz p1, :cond_0

    iget-boolean p1, p1, Lcom/android/server/am/UidRecord;->setIdle:Z

    if-nez p1, :cond_0

    const/4 p1, 0x1

    goto :goto_0

    :cond_0
    const/4 p1, 0x0

    :goto_0
    return p1
.end method

.method public isUserAMonkey()Z
    .locals 1

    .line 14033
    monitor-enter p0

    :try_start_0
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    .line 14035
    iget-boolean v0, p0, Lcom/android/server/am/ActivityManagerService;->mUserIsMonkey:Z

    if-nez v0, :cond_1

    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mController:Landroid/app/IActivityController;

    if-eqz v0, :cond_0

    iget-boolean v0, p0, Lcom/android/server/am/ActivityManagerService;->mControllerIsAMonkey:Z

    if-eqz v0, :cond_0

    goto :goto_0

    :cond_0
    const/4 v0, 0x0

    goto :goto_1

    :cond_1
    :goto_0
    const/4 v0, 0x1

    :goto_1
    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    return v0

    .line 14036
    :catchall_0
    move-exception v0

    :try_start_1
    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw v0
.end method

.method public isUserRunning(II)Z
    .locals 2

    .line 26565
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mUserController:Lcom/android/server/am/UserController;

    invoke-static {}, Landroid/os/UserHandle;->getCallingUserId()I

    move-result v1

    invoke-virtual {v0, p1, v1}, Lcom/android/server/am/UserController;->isSameProfileGroup(II)Z

    move-result v0

    if-nez v0, :cond_1

    const-string v0, "android.permission.INTERACT_ACROSS_USERS"

    .line 26566
    invoke-virtual {p0, v0}, Lcom/android/server/am/ActivityManagerService;->checkCallingPermission(Ljava/lang/String;)I

    move-result v0

    if-nez v0, :cond_0

    goto :goto_0

    .line 26568
    :cond_0
    new-instance p1, Ljava/lang/StringBuilder;

    invoke-direct {p1}, Ljava/lang/StringBuilder;-><init>()V

    const-string p2, "Permission Denial: isUserRunning() from pid="

    invoke-virtual {p1, p2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 26569
    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result p2

    invoke-virtual {p1, p2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string p2, ", uid="

    invoke-virtual {p1, p2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 26570
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result p2

    invoke-virtual {p1, p2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string p2, " requires "

    invoke-virtual {p1, p2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string p2, "android.permission.INTERACT_ACROSS_USERS"

    invoke-virtual {p1, p2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {p1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object p1

    .line 26572
    const-string p2, "ActivityManager"

    invoke-static {p2, p1}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 26573
    new-instance p2, Ljava/lang/SecurityException;

    invoke-direct {p2, p1}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw p2

    .line 26575
    :cond_1
    :goto_0
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mUserController:Lcom/android/server/am/UserController;

    invoke-virtual {v0, p1, p2}, Lcom/android/server/am/UserController;->isUserRunning(II)Z

    move-result p1

    return p1
.end method

.method public isUserStopped(I)Z
    .locals 1

    .line 26610
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mUserController:Lcom/android/server/am/UserController;

    invoke-virtual {v0, p1}, Lcom/android/server/am/UserController;->getStartedUserState(I)Lcom/android/server/am/UserState;

    move-result-object p1

    if-nez p1, :cond_0

    const/4 p1, 0x1

    goto :goto_0

    :cond_0
    const/4 p1, 0x0

    :goto_0
    return p1
.end method

.method isValidSingletonCall(II)Z
    .locals 1

    .line 20794
    invoke-static {p2}, Landroid/os/UserHandle;->getAppId(I)I

    move-result v0

    .line 20795
    invoke-static {p1, p2}, Landroid/os/UserHandle;->isSameApp(II)Z

    move-result p1

    if-nez p1, :cond_1

    const/16 p1, 0x3e8

    if-eq v0, p1, :cond_1

    const/16 p1, 0x3e9

    if-eq v0, p1, :cond_1

    const-string p1, "android.permission.INTERACT_ACROSS_USERS_FULL"

    .line 20798
    invoke-static {p1, p2}, Landroid/app/ActivityManager;->checkUidPermission(Ljava/lang/String;I)I

    move-result p1

    if-nez p1, :cond_0

    goto :goto_0

    :cond_0
    const/4 p1, 0x0

    goto :goto_1

    :cond_1
    :goto_0
    const/4 p1, 0x1

    .line 20795
    :goto_1
    return p1
.end method

.method public isVrModePackageEnabled(Landroid/content/ComponentName;)Z
    .locals 2

    .line 14827
    invoke-direct {p0}, Lcom/android/server/am/ActivityManagerService;->enforceSystemHasVrFeature()V

    .line 14829
    const-class v0, Lcom/android/server/vr/VrManagerInternal;

    invoke-static {v0}, Lcom/android/server/LocalServices;->getService(Ljava/lang/Class;)Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Lcom/android/server/vr/VrManagerInternal;

    .line 14831
    invoke-static {}, Landroid/os/UserHandle;->getCallingUserId()I

    move-result v1

    invoke-virtual {v0, p1, v1}, Lcom/android/server/vr/VrManagerInternal;->hasVrPackage(Landroid/content/ComponentName;I)I

    move-result p1

    if-nez p1, :cond_0

    const/4 p1, 0x1

    goto :goto_0

    :cond_0
    const/4 p1, 0x0

    :goto_0
    return p1
.end method

.method public keyguardGoingAway(I)V
    .locals 3

    .line 8200
    const-string v0, "keyguardGoingAway"

    invoke-virtual {p0, v0}, Lcom/android/server/am/ActivityManagerService;->enforceNotIsolatedCaller(Ljava/lang/String;)V

    .line 8201
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v0

    .line 8203
    :try_start_0
    monitor-enter p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_1

    :try_start_1
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    .line 8204
    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mKeyguardController:Lcom/android/server/am/KeyguardController;

    invoke-virtual {v2, p1}, Lcom/android/server/am/KeyguardController;->keyguardGoingAway(I)V

    .line 8205
    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    :try_start_2
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_1

    .line 8207
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 8208
    nop

    .line 8209
    return-void

    .line 8205
    :catchall_0
    move-exception p1

    :try_start_3
    monitor-exit p0
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_0

    :try_start_4
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw p1
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_1

    .line 8207
    :catchall_1
    move-exception p1

    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    throw p1
.end method

.method public killAllBackgroundProcesses()V
    .locals 13

    .line 6899
    const-string v0, "android.permission.KILL_BACKGROUND_PROCESSES"

    invoke-virtual {p0, v0}, Lcom/android/server/am/ActivityManagerService;->checkCallingPermission(Ljava/lang/String;)I

    move-result v0

    if-nez v0, :cond_6

    .line 6908
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v0

    .line 6910
    :try_start_0
    monitor-enter p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_1

    :try_start_1
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    .line 6911
    new-instance v2, Ljava/util/ArrayList;

    invoke-direct {v2}, Ljava/util/ArrayList;-><init>()V

    .line 6912
    iget-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mProcessNames:Lcom/android/internal/app/ProcessMap;

    invoke-virtual {v3}, Lcom/android/internal/app/ProcessMap;->getMap()Landroid/util/ArrayMap;

    move-result-object v3

    invoke-virtual {v3}, Landroid/util/ArrayMap;->size()I

    move-result v3

    .line 6913
    const/4 v4, 0x0

    move v5, v4

    :goto_0
    const/4 v6, 0x1

    if-ge v5, v3, :cond_4

    .line 6914
    iget-object v7, p0, Lcom/android/server/am/ActivityManagerService;->mProcessNames:Lcom/android/internal/app/ProcessMap;

    invoke-virtual {v7}, Lcom/android/internal/app/ProcessMap;->getMap()Landroid/util/ArrayMap;

    move-result-object v7

    invoke-virtual {v7, v5}, Landroid/util/ArrayMap;->valueAt(I)Ljava/lang/Object;

    move-result-object v7

    check-cast v7, Landroid/util/SparseArray;

    .line 6915
    invoke-virtual {v7}, Landroid/util/SparseArray;->size()I

    move-result v8

    .line 6916
    move v9, v4

    :goto_1
    if-ge v9, v8, :cond_3

    .line 6917
    invoke-virtual {v7, v9}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;

    move-result-object v10

    check-cast v10, Lcom/android/server/am/ProcessRecord;

    .line 6918
    iget-boolean v11, v10, Lcom/android/server/am/ProcessRecord;->persistent:Z

    if-eqz v11, :cond_0

    .line 6920
    goto :goto_2

    .line 6922
    :cond_0
    iget-boolean v11, v10, Lcom/android/server/am/ProcessRecord;->removed:Z

    if-eqz v11, :cond_1

    .line 6923
    invoke-virtual {v2, v10}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    goto :goto_2

    .line 6924
    :cond_1
    iget v11, v10, Lcom/android/server/am/ProcessRecord;->setAdj:I

    const/16 v12, 0x384

    if-lt v11, v12, :cond_2

    .line 6925
    iput-boolean v6, v10, Lcom/android/server/am/ProcessRecord;->removed:Z

    .line 6926
    invoke-virtual {v2, v10}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    .line 6916
    :cond_2
    :goto_2
    add-int/lit8 v9, v9, 0x1

    goto :goto_1

    .line 6913
    :cond_3
    add-int/lit8 v5, v5, 0x1

    goto :goto_0

    .line 6931
    :cond_4
    invoke-virtual {v2}, Ljava/util/ArrayList;->size()I

    move-result v3

    .line 6932
    move v5, v4

    :goto_3
    if-ge v5, v3, :cond_5

    .line 6933
    invoke-virtual {v2, v5}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v7

    check-cast v7, Lcom/android/server/am/ProcessRecord;

    const-string v8, "kill all background"

    invoke-virtual {p0, v7, v4, v6, v8}, Lcom/android/server/am/ActivityManagerService;->removeProcessLocked(Lcom/android/server/am/ProcessRecord;ZZLjava/lang/String;)Z

    .line 6932
    add-int/lit8 v5, v5, 0x1

    goto :goto_3

    .line 6936
    :cond_5
    iput-boolean v6, p0, Lcom/android/server/am/ActivityManagerService;->mAllowLowerMemLevel:Z

    .line 6938
    invoke-virtual {p0}, Lcom/android/server/am/ActivityManagerService;->updateOomAdjLocked()V

    .line 6939
    const/4 v2, 0x0

    invoke-virtual {p0, v2}, Lcom/android/server/am/ActivityManagerService;->doLowMemReportIfNeededLocked(Lcom/android/server/am/ProcessRecord;)V

    .line 6940
    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    :try_start_2
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_1

    .line 6942
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 6943
    nop

    .line 6944
    return-void

    .line 6940
    :catchall_0
    move-exception v2

    :try_start_3
    monitor-exit p0
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_0

    :try_start_4
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw v2
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_1

    .line 6942
    :catchall_1
    move-exception v2

    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    throw v2

    .line 6901
    :cond_6
    new-instance v0, Ljava/lang/StringBuilder;

    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V

    const-string v1, "Permission Denial: killAllBackgroundProcesses() from pid="

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 6902
    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result v1

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v1, ", uid="

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v1

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v1, " requires "

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v1, "android.permission.KILL_BACKGROUND_PROCESSES"

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    .line 6904
    const-string v1, "ActivityManager"

    invoke-static {v1, v0}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 6905
    new-instance v1, Ljava/lang/SecurityException;

    invoke-direct {v1, v0}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v1
.end method

.method killAppAtUsersRequest(Lcom/android/server/am/ProcessRecord;Landroid/app/Dialog;)V
    .locals 1

    .line 15664
    monitor-enter p0

    :try_start_0
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    .line 15665
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mAppErrors:Lcom/android/server/am/AppErrors;

    invoke-virtual {v0, p1, p2}, Lcom/android/server/am/AppErrors;->killAppAtUserRequestLocked(Lcom/android/server/am/ProcessRecord;Landroid/app/Dialog;)V

    .line 15666
    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    .line 15667
    return-void

    .line 15666
    :catchall_0
    move-exception p1

    :try_start_1
    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw p1
.end method

.method public killApplication(Ljava/lang/String;IILjava/lang/String;)V
    .locals 3

    .line 7077
    if-nez p1, :cond_0

    .line 7078
    return-void

    .line 7081
    :cond_0
    if-gez p2, :cond_1

    .line 7082
    const-string p2, "ActivityManager"

    new-instance p3, Ljava/lang/StringBuilder;

    invoke-direct {p3}, Ljava/lang/StringBuilder;-><init>()V

    const-string p4, "Invalid appid specified for pkg : "

    invoke-virtual {p3, p4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {p3, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {p3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object p1

    invoke-static {p2, p1}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 7083
    return-void

    .line 7085
    :cond_1
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v0

    .line 7087
    invoke-static {v0}, Landroid/os/UserHandle;->getAppId(I)I

    move-result v1

    const/16 v2, 0x3e8

    if-ne v1, v2, :cond_2

    .line 7089
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    const/16 v1, 0x16

    invoke-virtual {v0, v1}, Lcom/android/server/am/ActivityManagerService$MainHandler;->obtainMessage(I)Landroid/os/Message;

    move-result-object v0

    .line 7090
    iput p2, v0, Landroid/os/Message;->arg1:I

    .line 7091
    iput p3, v0, Landroid/os/Message;->arg2:I

    .line 7092
    new-instance p2, Landroid/os/Bundle;

    invoke-direct {p2}, Landroid/os/Bundle;-><init>()V

    .line 7093
    const-string/jumbo p3, "pkg"

    invoke-virtual {p2, p3, p1}, Landroid/os/Bundle;->putString(Ljava/lang/String;Ljava/lang/String;)V

    .line 7094
    const-string/jumbo p1, "reason"

    invoke-virtual {p2, p1, p4}, Landroid/os/Bundle;->putString(Ljava/lang/String;Ljava/lang/String;)V

    .line 7095
    iput-object p2, v0, Landroid/os/Message;->obj:Ljava/lang/Object;

    .line 7096
    iget-object p1, p0, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    invoke-virtual {p1, v0}, Lcom/android/server/am/ActivityManagerService$MainHandler;->sendMessage(Landroid/os/Message;)Z

    .line 7097
    nop

    .line 7101
    return-void

    .line 7098
    :cond_2
    new-instance p2, Ljava/lang/SecurityException;

    new-instance p3, Ljava/lang/StringBuilder;

    invoke-direct {p3}, Ljava/lang/StringBuilder;-><init>()V

    invoke-virtual {p3, v0}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string p4, " cannot kill pkg: "

    invoke-virtual {p3, p4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {p3, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {p3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object p1

    invoke-direct {p2, p1}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw p2
.end method

.method public killApplicationProcess(Ljava/lang/String;I)V
    .locals 3

    .line 7213
    if-nez p1, :cond_0

    .line 7214
    return-void

    .line 7217
    :cond_0
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v0

    .line 7219
    const/16 v1, 0x3e8

    if-ne v0, v1, :cond_2

    .line 7220
    monitor-enter p0

    :try_start_0
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    .line 7221
    const/4 v0, 0x1

    invoke-virtual {p0, p1, p2, v0}, Lcom/android/server/am/ActivityManagerService;->getProcessRecordLocked(Ljava/lang/String;IZ)Lcom/android/server/am/ProcessRecord;

    move-result-object v0

    .line 7222
    if-eqz v0, :cond_1

    iget-object v1, v0, Lcom/android/server/am/ProcessRecord;->thread:Landroid/app/IApplicationThread;
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    if-eqz v1, :cond_1

    .line 7224
    :try_start_1
    iget-object p1, v0, Lcom/android/server/am/ProcessRecord;->thread:Landroid/app/IApplicationThread;

    invoke-interface {p1}, Landroid/app/IApplicationThread;->scheduleSuicide()V
    :try_end_1
    .catch Landroid/os/RemoteException; {:try_start_1 .. :try_end_1} :catch_0
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    goto :goto_0

    .line 7225
    :catch_0
    move-exception p1

    .line 7227
    :goto_0
    goto :goto_1

    .line 7229
    :cond_1
    :try_start_2
    const-string v0, "ActivityManager"

    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string v2, "Process/uid not found attempting kill of "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v1, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string p1, " / "

    invoke-virtual {v1, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v1, p2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object p1

    invoke-static {v0, p1}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 7232
    :goto_1
    monitor-exit p0
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    .line 7237
    return-void

    .line 7232
    :catchall_0
    move-exception p1

    :try_start_3
    monitor-exit p0
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw p1

    .line 7234
    :cond_2
    new-instance p2, Ljava/lang/SecurityException;

    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    invoke-virtual {v1, v0}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v0, " cannot kill app process: "

    invoke-virtual {v1, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v1, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object p1

    invoke-direct {p2, p1}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw p2
.end method

.method public killBackgroundProcesses(Ljava/lang/String;I)V
    .locals 20

    move-object/from16 v11, p0

    move-object/from16 v12, p1

    .line 6856
    const-string v0, "android.permission.KILL_BACKGROUND_PROCESSES"

    invoke-virtual {v11, v0}, Lcom/android/server/am/ActivityManagerService;->checkCallingPermission(Ljava/lang/String;)I

    move-result v0

    if-eqz v0, :cond_1

    const-string v0, "android.permission.RESTART_PACKAGES"

    .line 6858
    invoke-virtual {v11, v0}, Lcom/android/server/am/ActivityManagerService;->checkCallingPermission(Ljava/lang/String;)I

    move-result v0

    if-nez v0, :cond_0

    goto :goto_0

    .line 6860
    :cond_0
    new-instance v0, Ljava/lang/StringBuilder;

    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V

    const-string v1, "Permission Denial: killBackgroundProcesses() from pid="

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 6861
    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result v1

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v1, ", uid="

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 6862
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v1

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v1, " requires "

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v1, "android.permission.KILL_BACKGROUND_PROCESSES"

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    .line 6864
    const-string v1, "ActivityManager"

    invoke-static {v1, v0}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 6865
    new-instance v1, Ljava/lang/SecurityException;

    invoke-direct {v1, v0}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v1

    .line 6868
    :cond_1
    :goto_0
    iget-object v2, v11, Lcom/android/server/am/ActivityManagerService;->mUserController:Lcom/android/server/am/UserController;

    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result v3

    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v4

    const/4 v6, 0x1

    const/4 v7, 0x2

    const-string v8, "killBackgroundProcesses"

    const/4 v9, 0x0

    move/from16 v5, p2

    invoke-virtual/range {v2 .. v9}, Lcom/android/server/am/UserController;->handleIncomingUser(IIIZILjava/lang/String;Ljava/lang/String;)I

    move-result v0

    .line 6870
    iget-object v1, v11, Lcom/android/server/am/ActivityManagerService;->mUserController:Lcom/android/server/am/UserController;

    invoke-virtual {v1, v0}, Lcom/android/server/am/UserController;->expandUserId(I)[I

    move-result-object v13

    .line 6872
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v14

    .line 6874
    :try_start_0
    invoke-static {}, Landroid/app/AppGlobals;->getPackageManager()Landroid/content/pm/IPackageManager;

    move-result-object v10

    .line 6875
    array-length v9, v13

    const/4 v0, 0x0

    move v8, v0

    :goto_1
    if-ge v8, v9, :cond_3

    aget v4, v13, v8
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_1

    .line 6876
    nop

    .line 6878
    const/high16 v0, 0x10000000

    .line 6879
    const/4 v1, -0x1

    :try_start_1
    invoke-interface {v10, v12, v0, v4}, Landroid/content/pm/IPackageManager;->getPackageUid(Ljava/lang/String;II)I

    move-result v0

    .line 6878
    invoke-static {v0}, Landroid/os/UserHandle;->getAppId(I)I

    move-result v0
    :try_end_1
    .catch Landroid/os/RemoteException; {:try_start_1 .. :try_end_1} :catch_0
    .catchall {:try_start_1 .. :try_end_1} :catchall_1

    .line 6882
    nop

    .line 6883
    move v3, v0

    goto :goto_2

    .line 6881
    :catch_0
    move-exception v0

    .line 6883
    move v3, v1

    :goto_2
    if-ne v3, v1, :cond_2

    .line 6884
    :try_start_2
    const-string v0, "ActivityManager"

    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string v2, "Invalid packageName: "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v1, v12}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-static {v0, v1}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_1

    .line 6893
    invoke-static {v14, v15}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 6885
    return-void

    .line 6887
    :cond_2
    :try_start_3
    monitor-enter p0
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_1

    :try_start_4
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    .line 6888
    const/16 v5, 0x1f4

    const/4 v6, 0x0

    const/4 v7, 0x1

    const/4 v0, 0x1

    const/16 v16, 0x0

    const-string v17, "kill background"

    move-object v1, v11

    move-object v2, v12

    move/from16 v18, v8

    move v8, v0

    move/from16 v19, v9

    move/from16 v9, v16

    move-object/from16 v16, v10

    move-object/from16 v10, v17

    invoke-direct/range {v1 .. v10}, Lcom/android/server/am/ActivityManagerService;->killPackageProcessesLocked(Ljava/lang/String;IIIZZZZLjava/lang/String;)Z

    .line 6890
    monitor-exit p0
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_0

    :try_start_5
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V
    :try_end_5
    .catchall {:try_start_5 .. :try_end_5} :catchall_1

    .line 6875
    add-int/lit8 v8, v18, 0x1

    move-object/from16 v10, v16

    move/from16 v9, v19

    goto :goto_1

    .line 6890
    :catchall_0
    move-exception v0

    :try_start_6
    monitor-exit p0
    :try_end_6
    .catchall {:try_start_6 .. :try_end_6} :catchall_0

    :try_start_7
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw v0
    :try_end_7
    .catchall {:try_start_7 .. :try_end_7} :catchall_1

    .line 6893
    :cond_3
    invoke-static {v14, v15}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 6894
    nop

    .line 6895
    return-void

    .line 6893
    :catchall_1
    move-exception v0

    invoke-static {v14, v15}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    throw v0
.end method

.method public killPackageDependents(Ljava/lang/String;I)V
    .locals 12

    .line 27386
    const-string v0, "android.permission.KILL_UID"

    const-string v1, "killPackageDependents()"

    invoke-virtual {p0, v0, v1}, Lcom/android/server/am/ActivityManagerService;->enforceCallingPermission(Ljava/lang/String;Ljava/lang/String;)V

    .line 27387
    if-eqz p1, :cond_2

    .line 27392
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v0

    .line 27393
    invoke-static {}, Landroid/app/AppGlobals;->getPackageManager()Landroid/content/pm/IPackageManager;

    move-result-object v2

    .line 27394
    nop

    .line 27396
    const/high16 v3, 0x10000000

    const/4 v4, -0x1

    :try_start_0
    invoke-interface {v2, p1, v3, p2}, Landroid/content/pm/IPackageManager;->getPackageUid(Ljava/lang/String;II)I

    move-result v2
    :try_end_0
    .catch Landroid/os/RemoteException; {:try_start_0 .. :try_end_0} :catch_0

    .line 27398
    goto :goto_0

    .line 27397
    :catch_0
    move-exception v2

    .line 27399
    move v2, v4

    :goto_0
    if-eq p2, v4, :cond_1

    if-eq v2, v4, :cond_0

    goto :goto_1

    .line 27400
    :cond_0
    new-instance p2, Ljava/lang/IllegalArgumentException;

    new-instance v0, Ljava/lang/StringBuilder;

    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V

    const-string v1, "Cannot kill dependents of non-existing package "

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object p1

    invoke-direct {p2, p1}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw p2

    .line 27404
    :cond_1
    :goto_1
    :try_start_1
    monitor-enter p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_1

    :try_start_2
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    .line 27405
    invoke-static {v2}, Landroid/os/UserHandle;->getAppId(I)I

    move-result v4

    const/4 v6, 0x0

    const/4 v7, 0x0

    const/4 v8, 0x1

    const/4 v9, 0x1

    const/4 v10, 0x0

    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    const-string v3, "dep: "

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v2, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v11

    move-object v2, p0

    move-object v3, p1

    move v5, p2

    invoke-direct/range {v2 .. v11}, Lcom/android/server/am/ActivityManagerService;->killPackageProcessesLocked(Ljava/lang/String;IIIZZZZLjava/lang/String;)Z

    .line 27408
    monitor-exit p0
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    :try_start_3
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_1

    .line 27410
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 27411
    nop

    .line 27412
    return-void

    .line 27408
    :catchall_0
    move-exception p1

    :try_start_4
    monitor-exit p0
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_0

    :try_start_5
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw p1
    :try_end_5
    .catchall {:try_start_5 .. :try_end_5} :catchall_1

    .line 27410
    :catchall_1
    move-exception p1

    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    throw p1

    .line 27388
    :cond_2
    new-instance p1, Ljava/lang/NullPointerException;

    const-string p2, "Cannot kill the dependents of a package without its name."

    invoke-direct {p1, p2}, Ljava/lang/NullPointerException;-><init>(Ljava/lang/String;)V

    throw p1
.end method

.method public killPids([ILjava/lang/String;Z)Z
    .locals 6

    .line 15082
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v0

    const/16 v1, 0x3e8

    if-ne v0, v1, :cond_8

    .line 15085
    if-nez p2, :cond_0

    const-string p2, "Unknown"

    .line 15089
    :cond_0
    nop

    .line 15090
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Landroid/util/SparseArray;

    monitor-enter v0

    .line 15091
    nop

    .line 15092
    const/4 v1, 0x0

    move v2, v1

    move v3, v2

    :goto_0
    :try_start_0
    array-length v4, p1

    if-ge v2, v4, :cond_2

    .line 15093
    iget-object v4, p0, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Landroid/util/SparseArray;

    aget v5, p1, v2

    invoke-virtual {v4, v5}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    move-result-object v4

    check-cast v4, Lcom/android/server/am/ProcessRecord;

    .line 15094
    if-eqz v4, :cond_1

    .line 15095
    iget v4, v4, Lcom/android/server/am/ProcessRecord;->setAdj:I

    .line 15096
    if-le v4, v3, :cond_1

    .line 15097
    nop

    .line 15092
    move v3, v4

    :cond_1
    add-int/lit8 v2, v2, 0x1

    goto :goto_0

    .line 15104
    :cond_2
    const/16 v2, 0x38a

    const/16 v4, 0x384

    if-ge v3, v2, :cond_3

    if-le v3, v4, :cond_3

    .line 15106
    nop

    .line 15111
    move v3, v4

    :cond_3
    const/16 v2, 0x1f4

    if-nez p3, :cond_4

    if-ge v3, v2, :cond_4

    .line 15112
    goto :goto_1

    .line 15115
    :cond_4
    move v2, v3

    :goto_1
    const-string p3, "ActivityManager"

    new-instance v3, Ljava/lang/StringBuilder;

    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V

    const-string v4, "Killing processes "

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v3, p2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v4, " at adjustment "

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v3, v2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v3

    invoke-static {p3, v3}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 15116
    move p3, v1

    :goto_2
    array-length v3, p1

    if-ge v1, v3, :cond_7

    .line 15117
    iget-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Landroid/util/SparseArray;

    aget v4, p1, v1

    invoke-virtual {v3, v4}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    move-result-object v3

    check-cast v3, Lcom/android/server/am/ProcessRecord;

    .line 15118
    const/4 v4, 0x1

    if-nez v3, :cond_5

    .line 15119
    goto :goto_3

    .line 15121
    :cond_5
    iget v5, v3, Lcom/android/server/am/ProcessRecord;->setAdj:I

    .line 15122
    if-lt v5, v2, :cond_6

    iget-boolean v5, v3, Lcom/android/server/am/ProcessRecord;->killedByAm:Z

    if-nez v5, :cond_6

    .line 15123
    invoke-virtual {v3, p2, v4}, Lcom/android/server/am/ProcessRecord;->kill(Ljava/lang/String;Z)V

    .line 15124
    nop

    .line 15116
    move p3, v4

    :cond_6
    :goto_3
    add-int/lit8 v1, v1, 0x1

    goto :goto_2

    .line 15127
    :cond_7
    monitor-exit v0

    .line 15128
    return p3

    .line 15127
    :catchall_0
    move-exception p1

    monitor-exit v0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    throw p1

    .line 15083
    :cond_8
    new-instance p1, Ljava/lang/SecurityException;

    const-string p2, "killPids only available to the system"

    invoke-direct {p1, p2}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw p1
.end method

.method public killProcessesBelowForeground(Ljava/lang/String;)Z
    .locals 2

    .line 15148
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v0

    const/16 v1, 0x3e8

    if-ne v0, v1, :cond_0

    .line 15152
    const/4 v0, 0x0

    invoke-direct {p0, v0, p1}, Lcom/android/server/am/ActivityManagerService;->killProcessesBelowAdj(ILjava/lang/String;)Z

    move-result p1

    return p1

    .line 15149
    :cond_0
    new-instance p1, Ljava/lang/SecurityException;

    const-string v0, "killProcessesBelowForeground() only available to system"

    invoke-direct {p1, v0}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw p1
.end method

.method public killUid(IILjava/lang/String;)V
    .locals 12

    .line 15133
    const-string v0, "android.permission.KILL_UID"

    const-string v1, "killUid"

    invoke-virtual {p0, v0, v1}, Lcom/android/server/am/ActivityManagerService;->enforceCallingPermission(Ljava/lang/String;Ljava/lang/String;)V

    .line 15134
    monitor-enter p0

    :try_start_0
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    .line 15135
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_1

    .line 15137
    const/4 v3, 0x0

    const/16 v6, -0x320

    const/4 v7, 0x0

    const/4 v8, 0x1

    const/4 v9, 0x1

    const/4 v10, 0x1

    .line 15139
    if-eqz p3, :cond_0

    .line 15137
    :goto_0
    move-object v11, p3

    goto :goto_1

    .line 15139
    :cond_0
    :try_start_1
    const-string p3, "kill uid"

    goto :goto_0

    .line 15137
    :goto_1
    move-object v2, p0

    move v4, p1

    move v5, p2

    invoke-direct/range {v2 .. v11}, Lcom/android/server/am/ActivityManagerService;->killPackageProcessesLocked(Ljava/lang/String;IIIZZZZLjava/lang/String;)Z
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 15141
    :try_start_2
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 15142
    nop

    .line 15143
    monitor-exit p0
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_1

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    .line 15144
    return-void

    .line 15141
    :catchall_0
    move-exception p1

    :try_start_3
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    throw p1

    .line 15143
    :catchall_1
    move-exception p1

    monitor-exit p0
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_1

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw p1
.end method

.method public launchAssistIntent(Landroid/content/Intent;ILjava/lang/String;ILandroid/os/Bundle;)Z
    .locals 14

    .line 14480
    const/4 v4, 0x0

    const/4 v5, 0x0

    const/4 v6, 0x0

    const/4 v7, 0x1

    const/4 v8, 0x1

    const-wide/16 v11, 0x1f4

    const/4 v13, 0x0

    move-object v0, p0

    move/from16 v1, p2

    move-object v2, p1

    move-object/from16 v3, p3

    move/from16 v9, p4

    move-object/from16 v10, p5

    invoke-direct/range {v0 .. v13}, Lcom/android/server/am/ActivityManagerService;->enqueueAssistContext(ILandroid/content/Intent;Ljava/lang/String;Landroid/app/IAssistDataReceiver;Landroid/os/Bundle;Landroid/os/IBinder;ZZILandroid/os/Bundle;JI)Lcom/android/server/am/ActivityManagerService$PendingAssistExtras;

    move-result-object v0

    if-eqz v0, :cond_0

    const/4 v0, 0x1

    goto :goto_0

    :cond_0
    const/4 v0, 0x0

    :goto_0
    return v0
.end method

.method final logAppTooSlow(Lcom/android/server/am/ProcessRecord;JLjava/lang/String;)V
    .locals 0

    .line 6626
    return-void
.end method

.method makeIntentSenderCanceledLocked(Lcom/android/server/am/PendingIntentRecord;)V
    .locals 2

    .line 8724
    const/4 v0, 0x1

    iput-boolean v0, p1, Lcom/android/server/am/PendingIntentRecord;->canceled:Z

    .line 8725
    invoke-virtual {p1}, Lcom/android/server/am/PendingIntentRecord;->detachCancelListenersLocked()Landroid/os/RemoteCallbackList;

    move-result-object p1

    .line 8726
    if-eqz p1, :cond_0

    .line 8727
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    const/16 v1, 0x43

    invoke-virtual {v0, v1, p1}, Lcom/android/server/am/ActivityManagerService$MainHandler;->obtainMessage(ILjava/lang/Object;)Landroid/os/Message;

    move-result-object p1

    invoke-virtual {p1}, Landroid/os/Message;->sendToTarget()V

    .line 8729
    :cond_0
    return-void
.end method

.method public makePackageIdle(Ljava/lang/String;I)V
    .locals 11

    .line 25858
    const-string v0, "android.permission.FORCE_STOP_PACKAGES"

    invoke-virtual {p0, v0}, Lcom/android/server/am/ActivityManagerService;->checkCallingPermission(Ljava/lang/String;)I

    move-result v0

    if-nez v0, :cond_7

    .line 25867
    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result v2

    .line 25868
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mUserController:Lcom/android/server/am/UserController;

    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v3

    const/4 v5, 0x1

    const/4 v6, 0x2

    const-string v7, "makePackageIdle"

    const/4 v8, 0x0

    move v4, p2

    invoke-virtual/range {v1 .. v8}, Lcom/android/server/am/UserController;->handleIncomingUser(IIIZILjava/lang/String;Ljava/lang/String;)I

    move-result p2

    .line 25870
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v0

    .line 25871
    monitor-enter p0

    :try_start_0
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    .line 25873
    invoke-static {}, Landroid/app/AppGlobals;->getPackageManager()Landroid/content/pm/IPackageManager;

    move-result-object v2
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 25874
    nop

    .line 25876
    const v3, 0x10002000

    const/4 v4, 0x0

    const/4 v5, -0x1

    :try_start_1
    invoke-interface {v2, p1, v3, v4}, Landroid/content/pm/IPackageManager;->getPackageUid(Ljava/lang/String;II)I

    move-result v2
    :try_end_1
    .catch Landroid/os/RemoteException; {:try_start_1 .. :try_end_1} :catch_0
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 25879
    goto :goto_0

    .line 25878
    :catch_0
    move-exception v2

    .line 25880
    move v2, v5

    :goto_0
    if-eq v2, v5, :cond_5

    .line 25884
    :try_start_2
    iget-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mLocalPowerManager:Landroid/os/PowerManagerInternal;

    if-eqz v3, :cond_0

    .line 25885
    iget-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mLocalPowerManager:Landroid/os/PowerManagerInternal;

    invoke-virtual {v3}, Landroid/os/PowerManagerInternal;->startUidChanges()V

    .line 25887
    :cond_0
    invoke-static {v2}, Landroid/os/UserHandle;->getAppId(I)I

    move-result v2

    .line 25888
    iget-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mActiveUids:Landroid/util/SparseArray;

    invoke-virtual {v3}, Landroid/util/SparseArray;->size()I

    move-result v3

    .line 25889
    const/4 v4, 0x1

    sub-int/2addr v3, v4

    :goto_1
    if-ltz v3, :cond_3

    .line 25890
    iget-object v6, p0, Lcom/android/server/am/ActivityManagerService;->mActiveUids:Landroid/util/SparseArray;

    invoke-virtual {v6, v3}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;

    move-result-object v6

    check-cast v6, Lcom/android/server/am/UidRecord;

    .line 25891
    iget-wide v7, v6, Lcom/android/server/am/UidRecord;->lastBackgroundTime:J

    .line 25892
    const-wide/16 v9, 0x0

    cmp-long v7, v7, v9

    if-lez v7, :cond_2

    iget-boolean v7, v6, Lcom/android/server/am/UidRecord;->idle:Z

    if-nez v7, :cond_2

    .line 25893
    iget v7, v6, Lcom/android/server/am/UidRecord;->uid:I

    invoke-static {v7}, Landroid/os/UserHandle;->getAppId(I)I

    move-result v7

    if-ne v7, v2, :cond_2

    .line 25894
    if-eq p2, v5, :cond_1

    iget v7, v6, Lcom/android/server/am/UidRecord;->uid:I

    .line 25895
    invoke-static {v7}, Landroid/os/UserHandle;->getUserId(I)I

    move-result v7

    if-ne p2, v7, :cond_2

    .line 25896
    :cond_1
    iget v7, v6, Lcom/android/server/am/UidRecord;->uid:I

    invoke-static {v7}, Lcom/android/server/am/EventLogTags;->writeAmUidIdle(I)V

    .line 25897
    iput-boolean v4, v6, Lcom/android/server/am/UidRecord;->idle:Z

    .line 25898
    iput-boolean v4, v6, Lcom/android/server/am/UidRecord;->setIdle:Z

    .line 25899
    const-string v7, "ActivityManager"

    new-instance v8, Ljava/lang/StringBuilder;

    invoke-direct {v8}, Ljava/lang/StringBuilder;-><init>()V

    const-string v9, "Idling uid "

    invoke-virtual {v8, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget v9, v6, Lcom/android/server/am/UidRecord;->uid:I

    invoke-static {v9}, Landroid/os/UserHandle;->formatUid(I)Ljava/lang/String;

    move-result-object v9

    invoke-virtual {v8, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v9, " from package "

    invoke-virtual {v8, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v8, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v9, " user "

    invoke-virtual {v8, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v8, p2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v8}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v8

    invoke-static {v7, v8}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 25901
    iget v7, v6, Lcom/android/server/am/UidRecord;->uid:I

    invoke-virtual {p0, v7, v6}, Lcom/android/server/am/ActivityManagerService;->doStopUidLocked(ILcom/android/server/am/UidRecord;)V
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    .line 25889
    :cond_2
    add-int/lit8 v3, v3, -0x1

    goto :goto_1

    .line 25907
    :cond_3
    :try_start_3
    iget-object p1, p0, Lcom/android/server/am/ActivityManagerService;->mLocalPowerManager:Landroid/os/PowerManagerInternal;

    if-eqz p1, :cond_4

    .line 25908
    iget-object p1, p0, Lcom/android/server/am/ActivityManagerService;->mLocalPowerManager:Landroid/os/PowerManagerInternal;

    invoke-virtual {p1}, Landroid/os/PowerManagerInternal;->finishUidChanges()V

    .line 25910
    :cond_4
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 25911
    nop

    .line 25912
    monitor-exit p0
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_1

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    .line 25913
    return-void

    .line 25881
    :cond_5
    :try_start_4
    new-instance p2, Ljava/lang/IllegalArgumentException;

    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    const-string v3, "Unknown package name "

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v2, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object p1

    invoke-direct {p2, p1}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw p2
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_0

    .line 25907
    :catchall_0
    move-exception p1

    :try_start_5
    iget-object p2, p0, Lcom/android/server/am/ActivityManagerService;->mLocalPowerManager:Landroid/os/PowerManagerInternal;

    if-eqz p2, :cond_6

    .line 25908
    iget-object p2, p0, Lcom/android/server/am/ActivityManagerService;->mLocalPowerManager:Landroid/os/PowerManagerInternal;

    invoke-virtual {p2}, Landroid/os/PowerManagerInternal;->finishUidChanges()V

    .line 25910
    :cond_6
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    throw p1

    .line 25912
    :catchall_1
    move-exception p1

    monitor-exit p0
    :try_end_5
    .catchall {:try_start_5 .. :try_end_5} :catchall_1

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw p1

    .line 25860
    :cond_7
    new-instance p1, Ljava/lang/StringBuilder;

    invoke-direct {p1}, Ljava/lang/StringBuilder;-><init>()V

    const-string p2, "Permission Denial: makePackageIdle() from pid="

    invoke-virtual {p1, p2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 25861
    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result p2

    invoke-virtual {p1, p2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string p2, ", uid="

    invoke-virtual {p1, p2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 25862
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result p2

    invoke-virtual {p1, p2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string p2, " requires "

    invoke-virtual {p1, p2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string p2, "android.permission.FORCE_STOP_PACKAGES"

    invoke-virtual {p1, p2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {p1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object p1

    .line 25864
    const-string p2, "ActivityManager"

    invoke-static {p2, p1}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 25865
    new-instance p2, Ljava/lang/SecurityException;

    invoke-direct {p2, p1}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw p2
.end method

.method matchesProvider(Landroid/net/Uri;Landroid/content/pm/ProviderInfo;)Z
    .locals 4

    .line 12257
    invoke-virtual {p1}, Landroid/net/Uri;->getAuthority()Ljava/lang/String;

    move-result-object p1

    .line 12258
    iget-object p2, p2, Landroid/content/pm/ProviderInfo;->authority:Ljava/lang/String;

    .line 12259
    const/16 v0, 0x3b

    invoke-virtual {p2, v0}, Ljava/lang/String;->indexOf(I)I

    move-result v0

    const/4 v1, -0x1

    if-ne v0, v1, :cond_0

    .line 12260
    invoke-virtual {p2, p1}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result p1

    return p1

    .line 12262
    :cond_0
    const-string v0, ";"

    invoke-virtual {p2, v0}, Ljava/lang/String;->split(Ljava/lang/String;)[Ljava/lang/String;

    move-result-object p2

    .line 12263
    array-length v0, p2

    .line 12264
    const/4 v1, 0x0

    move v2, v1

    :goto_0
    if-ge v2, v0, :cond_2

    .line 12265
    aget-object v3, p2, v2

    invoke-virtual {v3, p1}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v3

    if-eqz v3, :cond_1

    const/4 p1, 0x1

    return p1

    .line 12264
    :cond_1
    add-int/lit8 v2, v2, 0x1

    goto :goto_0

    .line 12267
    :cond_2
    return v1
.end method

.method public monitor()V
    .locals 1

    .line 26506
    monitor-enter p0

    :try_start_0
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    .line 26507
    return-void

    .line 26506
    :catchall_0
    move-exception v0

    :try_start_1
    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw v0
.end method

.method public moveActivityTaskToBack(Landroid/os/IBinder;Z)Z
    .locals 3

    .line 11407
    const-string v0, "moveActivityTaskToBack"

    invoke-virtual {p0, v0}, Lcom/android/server/am/ActivityManagerService;->enforceNotIsolatedCaller(Ljava/lang/String;)V

    .line 11408
    monitor-enter p0

    :try_start_0
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    .line 11409
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_1

    .line 11411
    xor-int/lit8 p2, p2, 0x1

    :try_start_1
    invoke-static {p1, p2}, Lcom/android/server/am/ActivityRecord;->getTaskForActivityLocked(Landroid/os/IBinder;Z)I

    move-result p2

    .line 11412
    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mStackSupervisor:Lcom/android/server/am/ActivityStackSupervisor;

    invoke-virtual {v2, p2}, Lcom/android/server/am/ActivityStackSupervisor;->anyTaskForIdLocked(I)Lcom/android/server/am/TaskRecord;

    move-result-object v2

    .line 11413
    if-eqz v2, :cond_0

    .line 11414
    invoke-static {p1}, Lcom/android/server/am/ActivityRecord;->getStackLocked(Landroid/os/IBinder;)Lcom/android/server/am/ActivityStack;

    move-result-object p1

    invoke-virtual {p1, p2}, Lcom/android/server/am/ActivityStack;->moveTaskToBackLocked(I)Z

    move-result p1
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 11417
    :try_start_2
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    monitor-exit p0
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_1

    .line 11414
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    return p1

    .line 11417
    :cond_0
    :try_start_3
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 11418
    nop

    .line 11419
    monitor-exit p0
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_1

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    .line 11420
    const/4 p1, 0x0

    return p1

    .line 11417
    :catchall_0
    move-exception p1

    :try_start_4
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    throw p1

    .line 11419
    :catchall_1
    move-exception p1

    monitor-exit p0
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_1

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw p1
.end method

.method public moveStackToDisplay(II)V
    .locals 4

    .line 11305
    const-string v0, "android.permission.INTERNAL_SYSTEM_WINDOW"

    const-string v1, "moveStackToDisplay()"

    invoke-virtual {p0, v0, v1}, Lcom/android/server/am/ActivityManagerService;->enforceCallingPermission(Ljava/lang/String;Ljava/lang/String;)V

    .line 11307
    monitor-enter p0

    :try_start_0
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    .line 11308
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_1

    .line 11312
    :try_start_1
    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mStackSupervisor:Lcom/android/server/am/ActivityStackSupervisor;

    const/4 v3, 0x1

    invoke-virtual {v2, p1, p2, v3}, Lcom/android/server/am/ActivityStackSupervisor;->moveStackToDisplayLocked(IIZ)V
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 11314
    :try_start_2
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 11315
    nop

    .line 11316
    monitor-exit p0
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_1

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    .line 11317
    return-void

    .line 11314
    :catchall_0
    move-exception p1

    :try_start_3
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    throw p1

    .line 11316
    :catchall_1
    move-exception p1

    monitor-exit p0
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_1

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw p1
.end method

.method public moveTaskBackwards(I)V
    .locals 8

    .line 11425
    const-string v0, "android.permission.REORDER_TASKS"

    const-string v1, "moveTaskBackwards()"

    invoke-virtual {p0, v0, v1}, Lcom/android/server/am/ActivityManagerService;->enforceCallingPermission(Ljava/lang/String;Ljava/lang/String;)V

    .line 11428
    monitor-enter p0

    :try_start_0
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    .line 11429
    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result v3

    .line 11430
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v4

    const/4 v5, -0x1

    const/4 v6, -0x1

    const-string v7, "Task backwards"

    .line 11429
    move-object v2, p0

    invoke-virtual/range {v2 .. v7}, Lcom/android/server/am/ActivityManagerService;->checkAppSwitchAllowedLocked(IIIILjava/lang/String;)Z

    move-result v0

    if-nez v0, :cond_0

    .line 11431
    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    return-void

    .line 11433
    :cond_0
    :try_start_1
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v0

    .line 11434
    invoke-direct {p0, p1}, Lcom/android/server/am/ActivityManagerService;->moveTaskBackwardsLocked(I)V

    .line 11435
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 11436
    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    .line 11437
    return-void

    .line 11436
    :catchall_0
    move-exception p1

    :try_start_2
    monitor-exit p0
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw p1
.end method

.method public moveTaskToFront(IILandroid/os/Bundle;)V
    .locals 2

    .line 11338
    const-string v0, "android.permission.REORDER_TASKS"

    const-string v1, "moveTaskToFront()"

    invoke-virtual {p0, v0, v1}, Lcom/android/server/am/ActivityManagerService;->enforceCallingPermission(Ljava/lang/String;Ljava/lang/String;)V

    .line 11341
    monitor-enter p0

    :try_start_0
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    .line 11342
    invoke-static {p3}, Lcom/android/server/am/SafeActivityOptions;->fromBundle(Landroid/os/Bundle;)Lcom/android/server/am/SafeActivityOptions;

    move-result-object p3

    const/4 v0, 0x0

    invoke-virtual {p0, p1, p2, p3, v0}, Lcom/android/server/am/ActivityManagerService;->moveTaskToFrontLocked(IILcom/android/server/am/SafeActivityOptions;Z)V

    .line 11344
    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    .line 11345
    return-void

    .line 11344
    :catchall_0
    move-exception p1

    :try_start_1
    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw p1
.end method

.method moveTaskToFrontLocked(IILcom/android/server/am/SafeActivityOptions;Z)V
    .locals 9

    .line 11350
    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result v1

    .line 11351
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v2

    const-string v5, "Task to front"

    .line 11350
    const/4 v3, -0x1

    const/4 v4, -0x1

    move-object v0, p0

    invoke-virtual/range {v0 .. v5}, Lcom/android/server/am/ActivityManagerService;->checkAppSwitchAllowedLocked(IIIILjava/lang/String;)Z

    move-result v0

    if-nez v0, :cond_0

    .line 11352
    invoke-static {p3}, Lcom/android/server/am/SafeActivityOptions;->abort(Lcom/android/server/am/SafeActivityOptions;)V

    .line 11353
    return-void

    .line 11355
    :cond_0
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v0

    .line 11357
    :try_start_0
    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mStackSupervisor:Lcom/android/server/am/ActivityStackSupervisor;

    invoke-virtual {v2, p1}, Lcom/android/server/am/ActivityStackSupervisor;->anyTaskForIdLocked(I)Lcom/android/server/am/TaskRecord;

    move-result-object v2

    .line 11358
    if-nez v2, :cond_1

    .line 11359
    const-string p2, "ActivityManager"

    new-instance p3, Ljava/lang/StringBuilder;

    invoke-direct {p3}, Ljava/lang/StringBuilder;-><init>()V

    const-string p4, "Could not find task for id: "

    invoke-virtual {p3, p4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {p3, p1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {p3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object p1

    invoke-static {p2, p1}, Landroid/util/Slog;->d(Ljava/lang/String;Ljava/lang/String;)I
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 11381
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 11360
    return-void

    .line 11362
    :cond_1
    :try_start_1
    iget-object p1, p0, Lcom/android/server/am/ActivityManagerService;->mLockTaskController:Lcom/android/server/am/LockTaskController;

    invoke-virtual {p1, v2}, Lcom/android/server/am/LockTaskController;->isLockTaskModeViolation(Lcom/android/server/am/TaskRecord;)Z

    move-result p1

    if-eqz p1, :cond_2

    .line 11363
    const-string p1, "ActivityManager"

    const-string p2, "moveTaskToFront: Attempt to violate Lock Task Mode"

    invoke-static {p1, p2}, Landroid/util/Slog;->e(Ljava/lang/String;Ljava/lang/String;)I
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 11381
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 11364
    return-void

    .line 11366
    :cond_2
    const/4 p1, 0x0

    if-eqz p3, :cond_3

    .line 11367
    :try_start_2
    iget-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mStackSupervisor:Lcom/android/server/am/ActivityStackSupervisor;

    invoke-virtual {p3, v3}, Lcom/android/server/am/SafeActivityOptions;->getOptions(Lcom/android/server/am/ActivityStackSupervisor;)Landroid/app/ActivityOptions;

    move-result-object v3

    .line 11369
    move-object v6, v3

    goto :goto_0

    .line 11368
    :cond_3
    nop

    .line 11369
    move-object v6, p1

    :goto_0
    iget-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mStackSupervisor:Lcom/android/server/am/ActivityStackSupervisor;

    const-string v7, "moveTaskToFront"

    const/4 v8, 0x0

    move-object v4, v2

    move v5, p2

    invoke-virtual/range {v3 .. v8}, Lcom/android/server/am/ActivityStackSupervisor;->findTaskToMoveToFront(Lcom/android/server/am/TaskRecord;ILandroid/app/ActivityOptions;Ljava/lang/String;Z)V

    .line 11372
    invoke-virtual {v2}, Lcom/android/server/am/TaskRecord;->getTopActivity()Lcom/android/server/am/ActivityRecord;

    move-result-object p2

    .line 11373
    if-eqz p2, :cond_4

    .line 11377
    const/4 v2, 0x0

    const/4 v3, 0x1

    invoke-virtual {p2, p1, v2, v3, p4}, Lcom/android/server/am/ActivityRecord;->showStartingWindow(Lcom/android/server/am/ActivityRecord;ZZZ)V
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    .line 11381
    :cond_4
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 11382
    nop

    .line 11383
    invoke-static {p3}, Lcom/android/server/am/SafeActivityOptions;->abort(Lcom/android/server/am/SafeActivityOptions;)V

    .line 11384
    return-void

    .line 11381
    :catchall_0
    move-exception p1

    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    throw p1
.end method

.method public moveTaskToStack(IIZ)V
    .locals 10

    .line 11586
    const-string v0, "android.permission.MANAGE_ACTIVITY_STACKS"

    const-string v1, "moveTaskToStack()"

    invoke-virtual {p0, v0, v1}, Lcom/android/server/am/ActivityManagerService;->enforceCallerIsRecentsOrHasPermission(Ljava/lang/String;Ljava/lang/String;)V

    .line 11587
    monitor-enter p0

    :try_start_0
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    .line 11588
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_1

    .line 11590
    :try_start_1
    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mStackSupervisor:Lcom/android/server/am/ActivityStackSupervisor;

    invoke-virtual {v2, p1}, Lcom/android/server/am/ActivityStackSupervisor;->anyTaskForIdLocked(I)Lcom/android/server/am/TaskRecord;

    move-result-object v3

    .line 11591
    if-nez v3, :cond_0

    .line 11592
    const-string p2, "ActivityManager"

    new-instance p3, Ljava/lang/StringBuilder;

    invoke-direct {p3}, Ljava/lang/StringBuilder;-><init>()V

    const-string v2, "moveTaskToStack: No task for id="

    invoke-virtual {p3, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {p3, p1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {p3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object p1

    invoke-static {p2, p1}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 11615
    :try_start_2
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    monitor-exit p0
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_1

    .line 11593
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    return-void

    .line 11599
    :cond_0
    :try_start_3
    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mStackSupervisor:Lcom/android/server/am/ActivityStackSupervisor;

    invoke-virtual {v2, p2}, Lcom/android/server/am/ActivityStackSupervisor;->getStack(I)Lcom/android/server/am/ActivityStack;

    move-result-object v4

    .line 11600
    if-eqz v4, :cond_3

    .line 11604
    invoke-virtual {v4}, Lcom/android/server/am/ActivityStack;->isActivityTypeStandardOrUndefined()Z

    move-result v2

    if-eqz v2, :cond_2

    .line 11608
    invoke-virtual {v4}, Lcom/android/server/am/ActivityStack;->inSplitScreenPrimaryWindowingMode()Z

    move-result p1

    if-eqz p1, :cond_1

    .line 11609
    iget-object p1, p0, Lcom/android/server/am/ActivityManagerService;->mWindowManager:Lcom/android/server/wm/WindowManagerService;

    const/4 p2, 0x0

    const/4 v2, 0x0

    invoke-virtual {p1, p2, v2}, Lcom/android/server/wm/WindowManagerService;->setDockedStackCreateState(ILandroid/graphics/Rect;)V

    .line 11612
    :cond_1
    const/4 v6, 0x1

    const/4 v7, 0x1

    const/4 v8, 0x0

    const-string v9, "moveTaskToStack"

    move v5, p3

    invoke-virtual/range {v3 .. v9}, Lcom/android/server/am/TaskRecord;->reparent(Lcom/android/server/am/ActivityStack;ZIZZLjava/lang/String;)Z
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_0

    .line 11615
    :try_start_4
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 11616
    nop

    .line 11617
    monitor-exit p0
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_1

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    .line 11618
    return-void

    .line 11605
    :cond_2
    :try_start_5
    new-instance p3, Ljava/lang/IllegalArgumentException;

    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    const-string v3, "moveTaskToStack: Attempt to move task "

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v2, p1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string p1, " to stack "

    invoke-virtual {v2, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v2, p2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object p1

    invoke-direct {p3, p1}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw p3

    .line 11601
    :cond_3
    new-instance p1, Ljava/lang/IllegalStateException;

    new-instance p3, Ljava/lang/StringBuilder;

    invoke-direct {p3}, Ljava/lang/StringBuilder;-><init>()V

    const-string v2, "moveTaskToStack: No stack for stackId="

    invoke-virtual {p3, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {p3, p2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {p3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object p2

    invoke-direct {p1, p2}, Ljava/lang/IllegalStateException;-><init>(Ljava/lang/String;)V

    throw p1
    :try_end_5
    .catchall {:try_start_5 .. :try_end_5} :catchall_0

    .line 11615
    :catchall_0
    move-exception p1

    :try_start_6
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    throw p1

    .line 11617
    :catchall_1
    move-exception p1

    monitor-exit p0
    :try_end_6
    .catchall {:try_start_6 .. :try_end_6} :catchall_1

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw p1
.end method

.method public moveTasksToFullscreenStack(IZ)V
    .locals 3

    .line 22654
    const-string v0, "android.permission.MANAGE_ACTIVITY_STACKS"

    const-string v1, "moveTasksToFullscreenStack()"

    invoke-virtual {p0, v0, v1}, Lcom/android/server/am/ActivityManagerService;->enforceCallerIsRecentsOrHasPermission(Ljava/lang/String;Ljava/lang/String;)V

    .line 22656
    monitor-enter p0

    :try_start_0
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    .line 22657
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_1

    .line 22659
    :try_start_1
    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mStackSupervisor:Lcom/android/server/am/ActivityStackSupervisor;

    invoke-virtual {v2, p1}, Lcom/android/server/am/ActivityStackSupervisor;->getStack(I)Lcom/android/server/am/ActivityStack;

    move-result-object p1

    .line 22660
    if-eqz p1, :cond_1

    .line 22661
    invoke-virtual {p1}, Lcom/android/server/am/ActivityStack;->isActivityTypeStandardOrUndefined()Z

    move-result v2

    if-eqz v2, :cond_0

    .line 22665
    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mStackSupervisor:Lcom/android/server/am/ActivityStackSupervisor;

    invoke-virtual {v2, p1, p2}, Lcom/android/server/am/ActivityStackSupervisor;->moveTasksToFullscreenStackLocked(Lcom/android/server/am/ActivityStack;Z)V

    goto :goto_0

    .line 22662
    :cond_0
    new-instance p1, Ljava/lang/IllegalArgumentException;

    const-string p2, "You can\'t move tasks from non-standard stacks."

    invoke-direct {p1, p2}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw p1
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 22668
    :cond_1
    :goto_0
    :try_start_2
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 22669
    nop

    .line 22670
    monitor-exit p0
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_1

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    .line 22671
    return-void

    .line 22668
    :catchall_0
    move-exception p1

    :try_start_3
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    throw p1

    .line 22670
    :catchall_1
    move-exception p1

    monitor-exit p0
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_1

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw p1
.end method

.method public moveTopActivityToPinnedStack(ILandroid/graphics/Rect;)Z
    .locals 3

    .line 11704
    const-string v0, "android.permission.MANAGE_ACTIVITY_STACKS"

    const-string v1, "moveTopActivityToPinnedStack()"

    invoke-virtual {p0, v0, v1}, Lcom/android/server/am/ActivityManagerService;->enforceCallerIsRecentsOrHasPermission(Ljava/lang/String;Ljava/lang/String;)V

    .line 11706
    monitor-enter p0

    :try_start_0
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    .line 11707
    iget-boolean v0, p0, Lcom/android/server/am/ActivityManagerService;->mSupportsPictureInPicture:Z

    if-eqz v0, :cond_0

    .line 11712
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_1

    .line 11714
    :try_start_1
    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mStackSupervisor:Lcom/android/server/am/ActivityStackSupervisor;

    invoke-virtual {v2, p1, p2}, Lcom/android/server/am/ActivityStackSupervisor;->moveTopStackActivityToPinnedStackLocked(ILandroid/graphics/Rect;)Z

    move-result p1
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 11716
    :try_start_2
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    monitor-exit p0
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_1

    .line 11714
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    return p1

    .line 11716
    :catchall_0
    move-exception p1

    :try_start_3
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    throw p1

    .line 11708
    :cond_0
    new-instance p1, Ljava/lang/IllegalStateException;

    const-string p2, "moveTopActivityToPinnedStack:Device doesn\'t support picture-in-picture mode"

    invoke-direct {p1, p2}, Ljava/lang/IllegalStateException;-><init>(Ljava/lang/String;)V

    throw p1

    .line 11718
    :catchall_1
    move-exception p1

    monitor-exit p0
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_1

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw p1
.end method

.method public navigateUpTo(Landroid/os/IBinder;Landroid/content/Intent;ILandroid/content/Intent;)Z
    .locals 1

    .line 23188
    monitor-enter p0

    :try_start_0
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    .line 23189
    invoke-static {p1}, Lcom/android/server/am/ActivityRecord;->forTokenLocked(Landroid/os/IBinder;)Lcom/android/server/am/ActivityRecord;

    move-result-object p1

    .line 23190
    if-eqz p1, :cond_0

    .line 23191
    invoke-virtual {p1}, Lcom/android/server/am/ActivityRecord;->getStack()Lcom/android/server/am/ActivityStack;

    move-result-object v0

    invoke-virtual {v0, p1, p2, p3, p4}, Lcom/android/server/am/ActivityStack;->navigateUpToLocked(Lcom/android/server/am/ActivityRecord;Landroid/content/Intent;ILandroid/content/Intent;)Z

    move-result p1

    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    return p1

    .line 23193
    :cond_0
    const/4 p1, 0x0

    :try_start_1
    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    return p1

    .line 23194
    :catchall_0
    move-exception p1

    :try_start_2
    monitor-exit p0
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw p1
.end method

.method final newProcessRecordLocked(Landroid/content/pm/ApplicationInfo;Ljava/lang/String;ZI)Lcom/android/server/am/ProcessRecord;
    .locals 8
    .annotation build Lcom/android/internal/annotations/GuardedBy;
        value = "this"
    .end annotation

    .line 13316
    if-eqz p2, :cond_0

    .line 13317
    :goto_0
    move-object v4, p2

    goto :goto_1

    .line 13316
    :cond_0
    iget-object p2, p1, Landroid/content/pm/ApplicationInfo;->processName:Ljava/lang/String;

    goto :goto_0

    .line 13317
    :goto_1
    iget-object p2, p0, Lcom/android/server/am/ActivityManagerService;->mBatteryStatsService:Lcom/android/server/am/BatteryStatsService;

    invoke-virtual {p2}, Lcom/android/server/am/BatteryStatsService;->getActiveStatistics()Lcom/android/internal/os/BatteryStatsImpl;

    move-result-object v2

    .line 13318
    iget p2, p1, Landroid/content/pm/ApplicationInfo;->uid:I

    invoke-static {p2}, Landroid/os/UserHandle;->getUserId(I)I

    move-result p2

    .line 13319
    iget v0, p1, Landroid/content/pm/ApplicationInfo;->uid:I

    .line 13320
    const/4 v6, 0x1

    if-eqz p3, :cond_6

    .line 13321
    if-nez p4, :cond_5

    .line 13322
    const/16 v0, 0x3e8

    .line 13324
    :cond_1
    iget v1, p0, Lcom/android/server/am/ActivityManagerService;->mNextIsolatedProcessUid:I

    const v3, 0x182b8

    if-lt v1, v3, :cond_2

    iget v1, p0, Lcom/android/server/am/ActivityManagerService;->mNextIsolatedProcessUid:I

    const v5, 0x1869f

    if-le v1, v5, :cond_3

    .line 13326
    :cond_2
    iput v3, p0, Lcom/android/server/am/ActivityManagerService;->mNextIsolatedProcessUid:I

    .line 13328
    :cond_3
    iget v1, p0, Lcom/android/server/am/ActivityManagerService;->mNextIsolatedProcessUid:I

    invoke-static {p2, v1}, Landroid/os/UserHandle;->getUid(II)I

    move-result v1

    .line 13329
    iget v3, p0, Lcom/android/server/am/ActivityManagerService;->mNextIsolatedProcessUid:I

    add-int/2addr v3, v6

    iput v3, p0, Lcom/android/server/am/ActivityManagerService;->mNextIsolatedProcessUid:I

    .line 13330
    iget-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mIsolatedProcesses:Landroid/util/SparseArray;

    invoke-virtual {v3, v1}, Landroid/util/SparseArray;->indexOfKey(I)I

    move-result v3

    if-gez v3, :cond_4

    .line 13332
    nop

    .line 13339
    goto :goto_2

    .line 13334
    :cond_4
    add-int/lit8 v0, v0, -0x1

    .line 13335
    if-gtz v0, :cond_1

    .line 13336
    const/4 p1, 0x0

    return-object p1

    .line 13342
    :cond_5
    nop

    .line 13344
    move v1, p4

    :goto_2
    invoke-virtual {p0}, Lcom/android/server/am/ActivityManagerService;->getPackageManagerInternalLocked()Landroid/content/pm/PackageManagerInternal;

    move-result-object v0

    iget v3, p1, Landroid/content/pm/ApplicationInfo;->uid:I

    invoke-virtual {v0, v1, v3}, Landroid/content/pm/PackageManagerInternal;->addIsolatedUid(II)V

    .line 13352
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mBatteryStatsService:Lcom/android/server/am/BatteryStatsService;

    iget v3, p1, Landroid/content/pm/ApplicationInfo;->uid:I

    invoke-virtual {v0, v1, v3}, Lcom/android/server/am/BatteryStatsService;->addIsolatedUid(II)V

    .line 13354
    move v5, v1

    goto :goto_3

    :cond_6
    move v5, v0

    :goto_3
    new-instance v7, Lcom/android/server/am/ProcessRecord;

    move-object v0, v7

    move-object v1, p0

    move-object v3, p1

    invoke-direct/range {v0 .. v5}, Lcom/android/server/am/ProcessRecord;-><init>(Lcom/android/server/am/ActivityManagerService;Lcom/android/internal/os/BatteryStatsImpl;Landroid/content/pm/ApplicationInfo;Ljava/lang/String;I)V

    .line 13355
    iget-boolean v0, p0, Lcom/android/server/am/ActivityManagerService;->mBooted:Z

    if-nez v0, :cond_7

    iget-boolean v0, p0, Lcom/android/server/am/ActivityManagerService;->mBooting:Z

    if-nez v0, :cond_7

    if-nez p2, :cond_7

    iget p1, p1, Landroid/content/pm/ApplicationInfo;->flags:I

    const/16 p2, 0x9

    and-int/2addr p1, p2

    if-ne p1, p2, :cond_7

    .line 13359
    const/4 p1, 0x2

    iput p1, v7, Lcom/android/server/am/ProcessRecord;->curSchedGroup:I

    .line 13360
    iput p1, v7, Lcom/android/server/am/ProcessRecord;->setSchedGroup:I

    .line 13361
    iput-boolean v6, v7, Lcom/android/server/am/ProcessRecord;->persistent:Z

    .line 13362
    const/16 p1, -0x320

    iput p1, v7, Lcom/android/server/am/ProcessRecord;->maxAdj:I

    .line 13364
    :cond_7
    if-eqz p3, :cond_8

    if-eqz p4, :cond_8

    .line 13367
    const/16 p1, -0x2bc

    iput p1, v7, Lcom/android/server/am/ProcessRecord;->maxAdj:I

    .line 13369
    :cond_8
    invoke-direct {p0, v7}, Lcom/android/server/am/ActivityManagerService;->addProcessNameLocked(Lcom/android/server/am/ProcessRecord;)V

    .line 13370
    return-object v7
.end method

.method public newUriPermissionOwner(Ljava/lang/String;)Landroid/os/IBinder;
    .locals 1

    .line 10414
    const-string v0, "newUriPermissionOwner"

    invoke-virtual {p0, v0}, Lcom/android/server/am/ActivityManagerService;->enforceNotIsolatedCaller(Ljava/lang/String;)V

    .line 10415
    monitor-enter p0

    :try_start_0
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    .line 10416
    new-instance v0, Lcom/android/server/am/UriPermissionOwner;

    invoke-direct {v0, p0, p1}, Lcom/android/server/am/UriPermissionOwner;-><init>(Lcom/android/server/am/ActivityManagerService;Ljava/lang/Object;)V

    .line 10417
    invoke-virtual {v0}, Lcom/android/server/am/UriPermissionOwner;->getExternalTokenLocked()Landroid/os/Binder;

    move-result-object p1

    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    return-object p1

    .line 10418
    :catchall_0
    move-exception p1

    :try_start_1
    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw p1
.end method

.method public noteAlarmFinish(Landroid/content/IIntentSender;Landroid/os/WorkSource;ILjava/lang/String;)V
    .locals 1

    .line 15052
    if-eqz p2, :cond_0

    invoke-virtual {p2}, Landroid/os/WorkSource;->isEmpty()Z

    move-result v0

    if-eqz v0, :cond_0

    .line 15053
    const/4 p2, 0x0

    .line 15056
    :cond_0
    if-gtz p3, :cond_4

    if-nez p2, :cond_4

    .line 15058
    if-eqz p1, :cond_3

    .line 15059
    instance-of p3, p1, Lcom/android/server/am/PendingIntentRecord;

    if-nez p3, :cond_1

    .line 15060
    return-void

    .line 15063
    :cond_1
    check-cast p1, Lcom/android/server/am/PendingIntentRecord;

    .line 15064
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result p3

    .line 15065
    iget v0, p1, Lcom/android/server/am/PendingIntentRecord;->uid:I

    if-ne v0, p3, :cond_2

    const/16 p1, 0x3e8

    .line 15066
    :goto_0
    move p3, p1

    goto :goto_1

    .line 15065
    :cond_2
    iget p1, p1, Lcom/android/server/am/PendingIntentRecord;->uid:I

    goto :goto_0

    .line 15066
    :goto_1
    goto :goto_2

    .line 15069
    :cond_3
    return-void

    .line 15078
    :cond_4
    :goto_2
    iget-object p1, p0, Lcom/android/server/am/ActivityManagerService;->mBatteryStatsService:Lcom/android/server/am/BatteryStatsService;

    invoke-virtual {p1, p4, p2, p3}, Lcom/android/server/am/BatteryStatsService;->noteAlarmFinish(Ljava/lang/String;Landroid/os/WorkSource;I)V

    .line 15079
    return-void
.end method

.method public noteAlarmStart(Landroid/content/IIntentSender;Landroid/os/WorkSource;ILjava/lang/String;)V
    .locals 1

    .line 15020
    if-eqz p2, :cond_0

    invoke-virtual {p2}, Landroid/os/WorkSource;->isEmpty()Z

    move-result v0

    if-eqz v0, :cond_0

    .line 15021
    const/4 p2, 0x0

    .line 15024
    :cond_0
    if-gtz p3, :cond_4

    if-nez p2, :cond_4

    .line 15026
    if-eqz p1, :cond_3

    .line 15027
    instance-of p3, p1, Lcom/android/server/am/PendingIntentRecord;

    if-nez p3, :cond_1

    .line 15028
    return-void

    .line 15031
    :cond_1
    check-cast p1, Lcom/android/server/am/PendingIntentRecord;

    .line 15032
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result p3

    .line 15033
    iget v0, p1, Lcom/android/server/am/PendingIntentRecord;->uid:I

    if-ne v0, p3, :cond_2

    const/16 p1, 0x3e8

    .line 15034
    :goto_0
    move p3, p1

    goto :goto_1

    .line 15033
    :cond_2
    iget p1, p1, Lcom/android/server/am/PendingIntentRecord;->uid:I

    goto :goto_0

    .line 15034
    :goto_1
    goto :goto_2

    .line 15037
    :cond_3
    return-void

    .line 15046
    :cond_4
    :goto_2
    iget-object p1, p0, Lcom/android/server/am/ActivityManagerService;->mBatteryStatsService:Lcom/android/server/am/BatteryStatsService;

    invoke-virtual {p1, p4, p2, p3}, Lcom/android/server/am/BatteryStatsService;->noteAlarmStart(Ljava/lang/String;Landroid/os/WorkSource;I)V

    .line 15047
    return-void
.end method

.method public noteWakeupAlarm(Landroid/content/IIntentSender;Landroid/os/WorkSource;ILjava/lang/String;Ljava/lang/String;)V
    .locals 1

    .line 14988
    if-eqz p2, :cond_0

    invoke-virtual {p2}, Landroid/os/WorkSource;->isEmpty()Z

    move-result v0

    if-eqz v0, :cond_0

    .line 14989
    const/4 p2, 0x0

    .line 14992
    :cond_0
    if-gtz p3, :cond_4

    if-nez p2, :cond_4

    .line 14994
    if-eqz p1, :cond_3

    .line 14995
    instance-of p3, p1, Lcom/android/server/am/PendingIntentRecord;

    if-nez p3, :cond_1

    .line 14996
    return-void

    .line 14999
    :cond_1
    check-cast p1, Lcom/android/server/am/PendingIntentRecord;

    .line 15000
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result p3

    .line 15001
    iget v0, p1, Lcom/android/server/am/PendingIntentRecord;->uid:I

    if-ne v0, p3, :cond_2

    const/16 p1, 0x3e8

    .line 15002
    :goto_0
    move p3, p1

    goto :goto_1

    .line 15001
    :cond_2
    iget p1, p1, Lcom/android/server/am/PendingIntentRecord;->uid:I

    goto :goto_0

    .line 15002
    :goto_1
    goto :goto_2

    .line 15005
    :cond_3
    return-void

    .line 15014
    :cond_4
    :goto_2
    iget-object p1, p0, Lcom/android/server/am/ActivityManagerService;->mBatteryStatsService:Lcom/android/server/am/BatteryStatsService;

    invoke-virtual {p1, p4, p3, p2, p5}, Lcom/android/server/am/BatteryStatsService;->noteWakupAlarm(Ljava/lang/String;ILandroid/os/WorkSource;Ljava/lang/String;)V

    .line 15015
    return-void
.end method

.method public notifyActivityDrawn(Landroid/os/IBinder;)V
    .locals 1

    .line 3768
    monitor-enter p0

    :try_start_0
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    .line 3769
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mStackSupervisor:Lcom/android/server/am/ActivityStackSupervisor;

    invoke-virtual {v0, p1}, Lcom/android/server/am/ActivityStackSupervisor;->isInAnyStackLocked(Landroid/os/IBinder;)Lcom/android/server/am/ActivityRecord;

    move-result-object p1

    .line 3770
    if-eqz p1, :cond_0

    .line 3771
    invoke-virtual {p1}, Lcom/android/server/am/ActivityRecord;->getStack()Lcom/android/server/am/ActivityStack;

    move-result-object v0

    invoke-virtual {v0, p1}, Lcom/android/server/am/ActivityStack;->notifyActivityDrawnLocked(Lcom/android/server/am/ActivityRecord;)V

    .line 3773
    :cond_0
    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    .line 3774
    return-void

    .line 3773
    :catchall_0
    move-exception p1

    :try_start_1
    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw p1
.end method

.method public notifyCleartextNetwork(I[B)V
    .locals 3

    .line 13644
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    const/16 v1, 0x31

    const/4 v2, 0x0

    invoke-virtual {v0, v1, p1, v2, p2}, Lcom/android/server/am/ActivityManagerService$MainHandler;->obtainMessage(IIILjava/lang/Object;)Landroid/os/Message;

    move-result-object p1

    invoke-virtual {p1}, Landroid/os/Message;->sendToTarget()V

    .line 13645
    return-void
.end method

.method public final notifyEnterAnimationComplete(Landroid/os/IBinder;)V
    .locals 3

    .line 8445
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    const/16 v2, 0x2c

    invoke-virtual {v1, v2, p1}, Lcom/android/server/am/ActivityManagerService$MainHandler;->obtainMessage(ILjava/lang/Object;)Landroid/os/Message;

    move-result-object p1

    invoke-virtual {v0, p1}, Lcom/android/server/am/ActivityManagerService$MainHandler;->sendMessage(Landroid/os/Message;)Z

    .line 8446
    return-void
.end method

.method public final notifyLaunchTaskBehindComplete(Landroid/os/IBinder;)V
    .locals 1

    .line 8440
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mStackSupervisor:Lcom/android/server/am/ActivityStackSupervisor;

    invoke-virtual {v0, p1}, Lcom/android/server/am/ActivityStackSupervisor;->scheduleLaunchTaskBehindComplete(Landroid/os/IBinder;)V

    .line 8441
    return-void
.end method

.method public notifyLockedProfile(I)V
    .locals 4

    .line 13740
    :try_start_0
    invoke-static {}, Landroid/app/AppGlobals;->getPackageManager()Landroid/content/pm/IPackageManager;

    move-result-object v0

    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v1

    invoke-interface {v0, v1}, Landroid/content/pm/IPackageManager;->isUidPrivileged(I)Z

    move-result v0
    :try_end_0
    .catch Landroid/os/RemoteException; {:try_start_0 .. :try_end_0} :catch_0

    if-eqz v0, :cond_2

    .line 13745
    nop

    .line 13747
    monitor-enter p0

    :try_start_1
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    .line 13748
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_1

    .line 13750
    :try_start_2
    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mUserController:Lcom/android/server/am/UserController;

    invoke-virtual {v2, p1}, Lcom/android/server/am/UserController;->shouldConfirmCredentials(I)Z

    move-result v2

    if-eqz v2, :cond_1

    .line 13751
    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mKeyguardController:Lcom/android/server/am/KeyguardController;

    invoke-virtual {v2}, Lcom/android/server/am/KeyguardController;->isKeyguardLocked()Z

    move-result v2

    if-eqz v2, :cond_0

    .line 13753
    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mUserController:Lcom/android/server/am/UserController;

    invoke-virtual {v2}, Lcom/android/server/am/UserController;->getCurrentUserId()I

    move-result v2

    .line 13754
    const-string v3, "notifyLockedProfile"

    invoke-virtual {p0, v2, v3}, Lcom/android/server/am/ActivityManagerService;->startHomeActivityLocked(ILjava/lang/String;)Z

    .line 13756
    :cond_0
    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mStackSupervisor:Lcom/android/server/am/ActivityStackSupervisor;

    invoke-virtual {v2, p1}, Lcom/android/server/am/ActivityStackSupervisor;->lockAllProfileTasks(I)V
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    .line 13759
    :cond_1
    :try_start_3
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 13760
    nop

    .line 13761
    monitor-exit p0
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_1

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    .line 13762
    return-void

    .line 13759
    :catchall_0
    move-exception p1

    :try_start_4
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    throw p1

    .line 13761
    :catchall_1
    move-exception p1

    monitor-exit p0
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_1

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw p1

    .line 13741
    :cond_2
    :try_start_5
    new-instance p1, Ljava/lang/SecurityException;

    const-string v0, "Only privileged app can call notifyLockedProfile"

    invoke-direct {p1, v0}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw p1
    :try_end_5
    .catch Landroid/os/RemoteException; {:try_start_5 .. :try_end_5} :catch_0

    .line 13743
    :catch_0
    move-exception p1

    .line 13744
    new-instance v0, Ljava/lang/SecurityException;

    const-string v1, "Fail to check is caller a privileged app"

    invoke-direct {v0, v1, p1}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;Ljava/lang/Throwable;)V

    throw v0
.end method

.method notifyPackageUse(Ljava/lang/String;I)V
    .locals 1

    .line 4137
    monitor-enter p0

    :try_start_0
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    .line 4138
    invoke-virtual {p0}, Lcom/android/server/am/ActivityManagerService;->getPackageManagerInternalLocked()Landroid/content/pm/PackageManagerInternal;

    move-result-object v0

    invoke-virtual {v0, p1, p2}, Landroid/content/pm/PackageManagerInternal;->notifyPackageUse(Ljava/lang/String;I)V

    .line 4139
    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    .line 4140
    return-void

    .line 4139
    :catchall_0
    move-exception p1

    :try_start_1
    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw p1
.end method

.method public notifyPinnedStackAnimationEnded()V
    .locals 1

    .line 13639
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mTaskChangeNotificationController:Lcom/android/server/am/TaskChangeNotificationController;

    invoke-virtual {v0}, Lcom/android/server/am/TaskChangeNotificationController;->notifyPinnedStackAnimationEnded()V

    .line 13640
    return-void
.end method

.method public notifyPinnedStackAnimationStarted()V
    .locals 1

    .line 13631
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mTaskChangeNotificationController:Lcom/android/server/am/TaskChangeNotificationController;

    invoke-virtual {v0}, Lcom/android/server/am/TaskChangeNotificationController;->notifyPinnedStackAnimationStarted()V

    .line 13632
    return-void
.end method

.method notifyTaskPersisterLocked(Lcom/android/server/am/TaskRecord;Z)V
    .locals 1

    .line 13623
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mRecentTasks:Lcom/android/server/am/RecentTasks;

    invoke-virtual {v0, p1, p2}, Lcom/android/server/am/RecentTasks;->notifyTaskPersisterLocked(Lcom/android/server/am/TaskRecord;Z)V

    .line 13624
    return-void
.end method

.method onCoreSettingsChange(Landroid/os/Bundle;)V
    .locals 3

    .line 26510
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mLruProcesses:Ljava/util/ArrayList;

    invoke-virtual {v0}, Ljava/util/ArrayList;->size()I

    move-result v0

    add-int/lit8 v0, v0, -0x1

    :goto_0
    if-ltz v0, :cond_1

    .line 26511
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mLruProcesses:Ljava/util/ArrayList;

    invoke-virtual {v1, v0}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v1

    check-cast v1, Lcom/android/server/am/ProcessRecord;

    .line 26513
    :try_start_0
    iget-object v2, v1, Lcom/android/server/am/ProcessRecord;->thread:Landroid/app/IApplicationThread;

    if-eqz v2, :cond_0

    .line 26514
    iget-object v1, v1, Lcom/android/server/am/ProcessRecord;->thread:Landroid/app/IApplicationThread;

    invoke-interface {v1, p1}, Landroid/app/IApplicationThread;->setCoreSettings(Landroid/os/Bundle;)V
    :try_end_0
    .catch Landroid/os/RemoteException; {:try_start_0 .. :try_end_0} :catch_0

    .line 26518
    :cond_0
    goto :goto_1

    .line 26516
    :catch_0
    move-exception v1

    .line 26510
    :goto_1
    add-int/lit8 v0, v0, -0x1

    goto :goto_0

    .line 26520
    :cond_1
    return-void
.end method

.method onLocalVoiceInteractionStartedLocked(Landroid/os/IBinder;Landroid/service/voice/IVoiceInteractionSession;Lcom/android/internal/app/IVoiceInteractor;)V
    .locals 3
    .annotation build Lcom/android/internal/annotations/GuardedBy;
        value = "this"
    .end annotation

    .line 5591
    invoke-static {p1}, Lcom/android/server/am/ActivityRecord;->forTokenLocked(Landroid/os/IBinder;)Lcom/android/server/am/ActivityRecord;

    move-result-object v0

    .line 5592
    if-nez v0, :cond_0

    return-void

    .line 5593
    :cond_0
    invoke-virtual {v0, p2}, Lcom/android/server/am/ActivityRecord;->setVoiceSessionLocked(Landroid/service/voice/IVoiceInteractionSession;)V

    .line 5597
    :try_start_0
    iget-object v1, v0, Lcom/android/server/am/ActivityRecord;->app:Lcom/android/server/am/ProcessRecord;

    iget-object v1, v1, Lcom/android/server/am/ProcessRecord;->thread:Landroid/app/IApplicationThread;

    invoke-interface {v1, p1, p3}, Landroid/app/IApplicationThread;->scheduleLocalVoiceInteractionStarted(Landroid/os/IBinder;Lcom/android/internal/app/IVoiceInteractor;)V

    .line 5599
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v1
    :try_end_0
    .catch Landroid/os/RemoteException; {:try_start_0 .. :try_end_0} :catch_0

    .line 5601
    :try_start_1
    iget-object p1, v0, Lcom/android/server/am/ActivityRecord;->appInfo:Landroid/content/pm/ApplicationInfo;

    iget p1, p1, Landroid/content/pm/ApplicationInfo;->uid:I

    invoke-virtual {p0, p2, p1}, Lcom/android/server/am/ActivityManagerService;->startRunningVoiceLocked(Landroid/service/voice/IVoiceInteractionSession;I)V
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 5603
    :try_start_2
    invoke-static {v1, v2}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 5604
    nop

    .line 5610
    goto :goto_0

    .line 5603
    :catchall_0
    move-exception p1

    invoke-static {v1, v2}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    throw p1
    :try_end_2
    .catch Landroid/os/RemoteException; {:try_start_2 .. :try_end_2} :catch_0

    .line 5607
    :catch_0
    move-exception p1

    .line 5608
    invoke-virtual {v0}, Lcom/android/server/am/ActivityRecord;->clearVoiceSessionLocked()V

    .line 5611
    :goto_0
    return-void
.end method

.method public onShellCommand(Ljava/io/FileDescriptor;Ljava/io/FileDescriptor;Ljava/io/FileDescriptor;[Ljava/lang/String;Landroid/os/ShellCallback;Landroid/os/ResultReceiver;)V
    .locals 8

    .line 16312
    new-instance v0, Lcom/android/server/am/ActivityManagerShellCommand;

    const/4 v1, 0x0

    invoke-direct {v0, p0, v1}, Lcom/android/server/am/ActivityManagerShellCommand;-><init>(Lcom/android/server/am/ActivityManagerService;Z)V

    move-object v1, p0

    move-object v2, p1

    move-object v3, p2

    move-object v4, p3

    move-object v5, p4

    move-object v6, p5

    move-object v7, p6

    invoke-virtual/range {v0 .. v7}, Lcom/android/server/am/ActivityManagerShellCommand;->exec(Landroid/os/Binder;Ljava/io/FileDescriptor;Ljava/io/FileDescriptor;Ljava/io/FileDescriptor;[Ljava/lang/String;Landroid/os/ShellCallback;Landroid/os/ResultReceiver;)I

    .line 16314
    return-void
.end method

.method public onTransact(ILandroid/os/Parcel;Landroid/os/Parcel;I)Z
    .locals 10
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Landroid/os/RemoteException;
        }
    .end annotation

    .line 3376
    const v0, 0x5f535052

    if-ne p1, v0, :cond_3

    .line 3378
    new-instance v1, Ljava/util/ArrayList;

    invoke-direct {v1}, Ljava/util/ArrayList;-><init>()V

    .line 3379
    monitor-enter p0

    :try_start_0
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    .line 3380
    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mProcessNames:Lcom/android/internal/app/ProcessMap;

    invoke-virtual {v2}, Lcom/android/internal/app/ProcessMap;->getMap()Landroid/util/ArrayMap;

    move-result-object v2

    invoke-virtual {v2}, Landroid/util/ArrayMap;->size()I

    move-result v2

    .line 3381
    const/4 v3, 0x0

    move v4, v3

    :goto_0
    if-ge v4, v2, :cond_2

    .line 3382
    iget-object v5, p0, Lcom/android/server/am/ActivityManagerService;->mProcessNames:Lcom/android/internal/app/ProcessMap;

    invoke-virtual {v5}, Lcom/android/internal/app/ProcessMap;->getMap()Landroid/util/ArrayMap;

    move-result-object v5

    invoke-virtual {v5, v4}, Landroid/util/ArrayMap;->valueAt(I)Ljava/lang/Object;

    move-result-object v5

    check-cast v5, Landroid/util/SparseArray;

    .line 3383
    invoke-virtual {v5}, Landroid/util/SparseArray;->size()I

    move-result v6

    .line 3384
    move v7, v3

    :goto_1
    if-ge v7, v6, :cond_1

    .line 3385
    invoke-virtual {v5, v7}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;

    move-result-object v8

    check-cast v8, Lcom/android/server/am/ProcessRecord;

    .line 3386
    iget-object v9, v8, Lcom/android/server/am/ProcessRecord;->thread:Landroid/app/IApplicationThread;

    if-eqz v9, :cond_0

    .line 3387
    iget-object v8, v8, Lcom/android/server/am/ProcessRecord;->thread:Landroid/app/IApplicationThread;

    invoke-interface {v8}, Landroid/app/IApplicationThread;->asBinder()Landroid/os/IBinder;

    move-result-object v8

    invoke-virtual {v1, v8}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    .line 3384
    :cond_0
    add-int/lit8 v7, v7, 0x1

    goto :goto_1

    .line 3381
    :cond_1
    add-int/lit8 v4, v4, 0x1

    goto :goto_0

    .line 3391
    :cond_2
    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    .line 3393
    invoke-virtual {v1}, Ljava/util/ArrayList;->size()I

    move-result v2

    .line 3394
    :goto_2
    if-ge v3, v2, :cond_3

    .line 3395
    invoke-static {}, Landroid/os/Parcel;->obtain()Landroid/os/Parcel;

    move-result-object v4

    .line 3397
    :try_start_1
    invoke-virtual {v1, v3}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v5

    check-cast v5, Landroid/os/IBinder;

    const/4 v6, 0x0

    const/4 v7, 0x1

    invoke-interface {v5, v0, v4, v6, v7}, Landroid/os/IBinder;->transact(ILandroid/os/Parcel;Landroid/os/Parcel;I)Z
    :try_end_1
    .catch Landroid/os/RemoteException; {:try_start_1 .. :try_end_1} :catch_0

    .line 3400
    goto :goto_3

    .line 3399
    :catch_0
    move-exception v5

    .line 3401
    :goto_3
    invoke-virtual {v4}, Landroid/os/Parcel;->recycle()V

    .line 3394
    add-int/lit8 v3, v3, 0x1

    goto :goto_2

    .line 3391
    :catchall_0
    move-exception p1

    :try_start_2
    monitor-exit p0
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw p1

    .line 3405
    :cond_3
    :try_start_3
    invoke-super {p0, p1, p2, p3, p4}, Landroid/app/IActivityManager$Stub;->onTransact(ILandroid/os/Parcel;Landroid/os/Parcel;I)Z

    move-result p2
    :try_end_3
    .catch Ljava/lang/RuntimeException; {:try_start_3 .. :try_end_3} :catch_1

    return p2

    .line 3406
    :catch_1
    move-exception p2

    .line 3409
    instance-of p3, p2, Ljava/lang/SecurityException;

    if-nez p3, :cond_4

    instance-of p3, p2, Ljava/lang/IllegalArgumentException;

    if-nez p3, :cond_4

    instance-of p3, p2, Ljava/lang/IllegalStateException;

    if-nez p3, :cond_4

    .line 3412
    new-instance p3, Ljava/lang/StringBuilder;

    invoke-direct {p3}, Ljava/lang/StringBuilder;-><init>()V

    const-string p4, "Activity Manager Crash. UID:"

    invoke-virtual {p3, p4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 3413
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result p4

    invoke-virtual {p3, p4}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string p4, " PID:"

    invoke-virtual {p3, p4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 3414
    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result p4

    invoke-virtual {p3, p4}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string p4, " TRANS:"

    invoke-virtual {p3, p4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {p3, p1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {p3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object p1

    .line 3412
    const-string p3, "ActivityManager"

    invoke-static {p3, p1, p2}, Landroid/util/Slog;->wtf(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I

    .line 3417
    :cond_4
    throw p2
.end method

.method onUserStoppedLocked(I)V
    .locals 1

    .line 3353
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mRecentTasks:Lcom/android/server/am/RecentTasks;

    invoke-virtual {v0, p1}, Lcom/android/server/am/RecentTasks;->unloadUserDataFromMemoryLocked(I)V

    .line 3354
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mAllowAppSwitchUids:Landroid/util/SparseArray;

    invoke-virtual {v0, p1}, Landroid/util/SparseArray;->remove(I)V

    .line 3355
    return-void
.end method

.method onWakefulnessChanged(I)V
    .locals 3

    .line 13558
    monitor-enter p0

    :try_start_0
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    .line 13559
    iget v0, p0, Lcom/android/server/am/ActivityManagerService;->mWakefulness:I

    const/4 v1, 0x0

    const/4 v2, 0x1

    if-ne v0, v2, :cond_0

    .line 13560
    move v0, v2

    goto :goto_0

    .line 13559
    :cond_0
    nop

    .line 13560
    move v0, v1

    :goto_0
    if-ne p1, v2, :cond_1

    goto :goto_1

    .line 13561
    :cond_1
    move v2, v1

    :goto_1
    iput p1, p0, Lcom/android/server/am/ActivityManagerService;->mWakefulness:I

    .line 13563
    if-eq v0, v2, :cond_2

    .line 13565
    iget-object p1, p0, Lcom/android/server/am/ActivityManagerService;->mServices:Lcom/android/server/am/ActiveServices;

    invoke-virtual {p1, v2}, Lcom/android/server/am/ActiveServices;->updateScreenStateLocked(Z)V

    .line 13566
    invoke-virtual {p0}, Lcom/android/server/am/ActivityManagerService;->reportCurWakefulnessUsageEventLocked()V

    .line 13567
    iget-object p1, p0, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    const/16 v0, 0x40

    invoke-virtual {p1, v0, v2, v1}, Lcom/android/server/am/ActivityManagerService$MainHandler;->obtainMessage(III)Landroid/os/Message;

    move-result-object p1

    .line 13568
    invoke-virtual {p1}, Landroid/os/Message;->sendToTarget()V

    .line 13570
    :cond_2
    invoke-virtual {p0}, Lcom/android/server/am/ActivityManagerService;->updateOomAdjLocked()V

    .line 13571
    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    .line 13572
    return-void

    .line 13571
    :catchall_0
    move-exception p1

    :try_start_1
    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw p1
.end method

.method public openContentUri(Ljava/lang/String;)Landroid/os/ParcelFileDescriptor;
    .locals 9
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Landroid/os/RemoteException;
        }
    .end annotation

    .line 13488
    const-string/jumbo v0, "openContentUri"

    invoke-virtual {p0, v0}, Lcom/android/server/am/ActivityManagerService;->enforceNotIsolatedCaller(Ljava/lang/String;)V

    .line 13489
    invoke-static {}, Landroid/os/UserHandle;->getCallingUserId()I

    move-result v0

    .line 13490
    invoke-static {p1}, Landroid/net/Uri;->parse(Ljava/lang/String;)Landroid/net/Uri;

    move-result-object v3

    .line 13491
    invoke-virtual {v3}, Landroid/net/Uri;->getAuthority()Ljava/lang/String;

    move-result-object p1

    .line 13492
    const/4 v7, 0x0

    invoke-direct {p0, p1, v7, v0}, Lcom/android/server/am/ActivityManagerService;->getContentProviderExternalUnchecked(Ljava/lang/String;Landroid/os/IBinder;I)Landroid/app/ContentProviderHolder;

    move-result-object v1

    .line 13493
    nop

    .line 13494
    if-eqz v1, :cond_0

    .line 13502
    new-instance v6, Landroid/os/Binder;

    invoke-direct {v6}, Landroid/os/Binder;-><init>()V

    .line 13503
    sget-object v2, Lcom/android/server/am/ActivityManagerService;->sCallerIdentity:Ljava/lang/ThreadLocal;

    new-instance v4, Lcom/android/server/am/ActivityManagerService$Identity;

    .line 13504
    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result v5

    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v8

    invoke-direct {v4, p0, v6, v5, v8}, Lcom/android/server/am/ActivityManagerService$Identity;-><init>(Lcom/android/server/am/ActivityManagerService;Landroid/os/IBinder;II)V

    .line 13503
    invoke-virtual {v2, v4}, Ljava/lang/ThreadLocal;->set(Ljava/lang/Object;)V

    .line 13506
    :try_start_0
    iget-object v1, v1, Landroid/app/ContentProviderHolder;->provider:Landroid/content/IContentProvider;

    const/4 v2, 0x0

    const-string/jumbo v4, "r"

    const/4 v5, 0x0

    invoke-interface/range {v1 .. v6}, Landroid/content/IContentProvider;->openFile(Ljava/lang/String;Landroid/net/Uri;Ljava/lang/String;Landroid/os/ICancellationSignal;Landroid/os/IBinder;)Landroid/os/ParcelFileDescriptor;

    move-result-object v1
    :try_end_0
    .catch Ljava/io/FileNotFoundException; {:try_start_0 .. :try_end_0} :catch_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 13511
    sget-object v2, Lcom/android/server/am/ActivityManagerService;->sCallerIdentity:Ljava/lang/ThreadLocal;

    invoke-virtual {v2}, Ljava/lang/ThreadLocal;->remove()V

    .line 13513
    invoke-direct {p0, p1, v7, v0}, Lcom/android/server/am/ActivityManagerService;->removeContentProviderExternalUnchecked(Ljava/lang/String;Landroid/os/IBinder;I)V

    .line 13514
    nop

    .line 13515
    move-object v7, v1

    goto :goto_0

    .line 13511
    :catchall_0
    move-exception v1

    sget-object v2, Lcom/android/server/am/ActivityManagerService;->sCallerIdentity:Ljava/lang/ThreadLocal;

    invoke-virtual {v2}, Ljava/lang/ThreadLocal;->remove()V

    .line 13513
    invoke-direct {p0, p1, v7, v0}, Lcom/android/server/am/ActivityManagerService;->removeContentProviderExternalUnchecked(Ljava/lang/String;Landroid/os/IBinder;I)V

    throw v1

    .line 13507
    :catch_0
    move-exception v1

    .line 13511
    sget-object v1, Lcom/android/server/am/ActivityManagerService;->sCallerIdentity:Ljava/lang/ThreadLocal;

    invoke-virtual {v1}, Ljava/lang/ThreadLocal;->remove()V

    .line 13513
    invoke-direct {p0, p1, v7, v0}, Lcom/android/server/am/ActivityManagerService;->removeContentProviderExternalUnchecked(Ljava/lang/String;Landroid/os/IBinder;I)V

    .line 13514
    nop

    .line 13515
    :goto_0
    goto :goto_1

    .line 13516
    :cond_0
    const-string v0, "ActivityManager"

    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string v2, "Failed to get provider for authority \'"

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v1, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string p1, "\'"

    invoke-virtual {v1, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object p1

    invoke-static {v0, p1}, Landroid/util/Slog;->d(Ljava/lang/String;Ljava/lang/String;)I

    .line 13518
    :goto_1
    return-object v7
.end method

.method public overridePendingTransition(Landroid/os/IBinder;Ljava/lang/String;II)V
    .locals 4

    .line 6048
    monitor-enter p0

    :try_start_0
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    .line 6049
    invoke-static {p1}, Lcom/android/server/am/ActivityRecord;->isInStackLocked(Landroid/os/IBinder;)Lcom/android/server/am/ActivityRecord;

    move-result-object p1

    .line 6050
    if-nez p1, :cond_0

    .line 6051
    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    return-void

    .line 6054
    :cond_0
    :try_start_1
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v0

    .line 6056
    sget-object v2, Lcom/android/server/am/ActivityStack$ActivityState;->RESUMED:Lcom/android/server/am/ActivityStack$ActivityState;

    sget-object v3, Lcom/android/server/am/ActivityStack$ActivityState;->PAUSING:Lcom/android/server/am/ActivityStack$ActivityState;

    invoke-virtual {p1, v2, v3}, Lcom/android/server/am/ActivityRecord;->isState(Lcom/android/server/am/ActivityStack$ActivityState;Lcom/android/server/am/ActivityStack$ActivityState;)Z

    move-result p1

    if-eqz p1, :cond_1

    .line 6057
    iget-object p1, p0, Lcom/android/server/am/ActivityManagerService;->mWindowManager:Lcom/android/server/wm/WindowManagerService;

    const/4 v2, 0x0

    invoke-virtual {p1, p2, p3, p4, v2}, Lcom/android/server/wm/WindowManagerService;->overridePendingAppTransition(Ljava/lang/String;IILandroid/os/IRemoteCallback;)V

    .line 6061
    :cond_1
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 6062
    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    .line 6063
    return-void

    .line 6062
    :catchall_0
    move-exception p1

    :try_start_2
    monitor-exit p0
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw p1
.end method

.method public peekService(Landroid/content/Intent;Ljava/lang/String;Ljava/lang/String;)Landroid/os/IBinder;
    .locals 2

    .line 20717
    const-string/jumbo v0, "peekService"

    invoke-virtual {p0, v0}, Lcom/android/server/am/ActivityManagerService;->enforceNotIsolatedCaller(Ljava/lang/String;)V

    .line 20719
    if-eqz p1, :cond_1

    invoke-virtual {p1}, Landroid/content/Intent;->hasFileDescriptors()Z

    move-result v0

    const/4 v1, 0x1

    if-eq v0, v1, :cond_0

    goto :goto_0

    .line 20720
    :cond_0
    new-instance p1, Ljava/lang/IllegalArgumentException;

    const-string p2, "File descriptors passed in Intent"

    invoke-direct {p1, p2}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw p1

    .line 20723
    :cond_1
    :goto_0
    if-eqz p3, :cond_2

    .line 20727
    monitor-enter p0

    :try_start_0
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    .line 20728
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mServices:Lcom/android/server/am/ActiveServices;

    invoke-virtual {v0, p1, p2, p3}, Lcom/android/server/am/ActiveServices;->peekServiceLocked(Landroid/content/Intent;Ljava/lang/String;Ljava/lang/String;)Landroid/os/IBinder;

    move-result-object p1

    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    return-object p1

    .line 20729
    :catchall_0
    move-exception p1

    :try_start_1
    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw p1

    .line 20724
    :cond_2
    new-instance p1, Ljava/lang/IllegalArgumentException;

    const-string p2, "callingPackage cannot be null"

    invoke-direct {p1, p2}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw p1
.end method

.method pendingAssistExtrasTimedOut(Lcom/android/server/am/ActivityManagerService$PendingAssistExtras;)V
    .locals 3

    .line 14378
    monitor-enter p0

    :try_start_0
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    .line 14379
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mPendingAssistExtras:Ljava/util/ArrayList;

    invoke-virtual {v0, p1}, Ljava/util/ArrayList;->remove(Ljava/lang/Object;)Z

    .line 14380
    iget-object v0, p1, Lcom/android/server/am/ActivityManagerService$PendingAssistExtras;->receiver:Landroid/app/IAssistDataReceiver;

    .line 14381
    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    .line 14382
    if-eqz v0, :cond_0

    .line 14384
    new-instance v0, Landroid/os/Bundle;

    invoke-direct {v0}, Landroid/os/Bundle;-><init>()V

    .line 14386
    const-string/jumbo v1, "receiverExtras"

    iget-object v2, p1, Lcom/android/server/am/ActivityManagerService$PendingAssistExtras;->receiverExtras:Landroid/os/Bundle;

    invoke-virtual {v0, v1, v2}, Landroid/os/Bundle;->putBundle(Ljava/lang/String;Landroid/os/Bundle;)V

    .line 14388
    :try_start_1
    iget-object p1, p1, Lcom/android/server/am/ActivityManagerService$PendingAssistExtras;->receiver:Landroid/app/IAssistDataReceiver;

    invoke-interface {p1, v0}, Landroid/app/IAssistDataReceiver;->onHandleAssistData(Landroid/os/Bundle;)V
    :try_end_1
    .catch Landroid/os/RemoteException; {:try_start_1 .. :try_end_1} :catch_0

    .line 14390
    goto :goto_0

    .line 14389
    :catch_0
    move-exception p1

    .line 14392
    :cond_0
    :goto_0
    return-void

    .line 14381
    :catchall_0
    move-exception p1

    :try_start_2
    monitor-exit p0
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw p1
.end method

.method final performAppGcLocked(Lcom/android/server/am/ProcessRecord;)V
    .locals 2

    .line 24526
    :try_start_0
    invoke-static {}, Landroid/os/SystemClock;->uptimeMillis()J

    move-result-wide v0

    iput-wide v0, p1, Lcom/android/server/am/ProcessRecord;->lastRequestedGc:J

    .line 24527
    iget-object v0, p1, Lcom/android/server/am/ProcessRecord;->thread:Landroid/app/IApplicationThread;

    if-eqz v0, :cond_1

    .line 24528
    iget-boolean v0, p1, Lcom/android/server/am/ProcessRecord;->reportLowMemory:Z

    if-eqz v0, :cond_0

    .line 24529
    const/4 v0, 0x0

    iput-boolean v0, p1, Lcom/android/server/am/ProcessRecord;->reportLowMemory:Z

    .line 24530
    iget-object p1, p1, Lcom/android/server/am/ProcessRecord;->thread:Landroid/app/IApplicationThread;

    invoke-interface {p1}, Landroid/app/IApplicationThread;->scheduleLowMemory()V

    goto :goto_0

    .line 24532
    :cond_0
    iget-object p1, p1, Lcom/android/server/am/ProcessRecord;->thread:Landroid/app/IApplicationThread;

    invoke-interface {p1}, Landroid/app/IApplicationThread;->processInBackground()V
    :try_end_0
    .catch Ljava/lang/Exception; {:try_start_0 .. :try_end_0} :catch_0

    .line 24537
    :cond_1
    :goto_0
    goto :goto_1

    .line 24535
    :catch_0
    move-exception p1

    .line 24538
    :goto_1
    return-void
.end method

.method final performAppGcsIfAppropriateLocked()V
    .locals 1

    .line 24591
    invoke-direct {p0}, Lcom/android/server/am/ActivityManagerService;->canGcNowLocked()Z

    move-result v0

    if-eqz v0, :cond_0

    .line 24592
    invoke-virtual {p0}, Lcom/android/server/am/ActivityManagerService;->performAppGcsLocked()V

    .line 24593
    return-void

    .line 24596
    :cond_0
    invoke-virtual {p0}, Lcom/android/server/am/ActivityManagerService;->scheduleAppGcsLocked()V

    .line 24597
    return-void
.end method

.method final performAppGcsLocked()V
    .locals 5

    .line 24559
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mProcessesToGc:Ljava/util/ArrayList;

    invoke-virtual {v0}, Ljava/util/ArrayList;->size()I

    move-result v0

    .line 24560
    if-gtz v0, :cond_0

    .line 24561
    return-void

    .line 24563
    :cond_0
    invoke-direct {p0}, Lcom/android/server/am/ActivityManagerService;->canGcNowLocked()Z

    move-result v0

    if-eqz v0, :cond_5

    .line 24564
    :goto_0
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mProcessesToGc:Ljava/util/ArrayList;

    invoke-virtual {v0}, Ljava/util/ArrayList;->size()I

    move-result v0

    if-lez v0, :cond_4

    .line 24565
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mProcessesToGc:Ljava/util/ArrayList;

    const/4 v1, 0x0

    invoke-virtual {v0, v1}, Ljava/util/ArrayList;->remove(I)Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Lcom/android/server/am/ProcessRecord;

    .line 24566
    iget v1, v0, Lcom/android/server/am/ProcessRecord;->curRawAdj:I

    const/16 v2, 0xc8

    if-gt v1, v2, :cond_2

    iget-boolean v1, v0, Lcom/android/server/am/ProcessRecord;->reportLowMemory:Z

    if-eqz v1, :cond_1

    goto :goto_1

    .line 24581
    :cond_1
    goto :goto_0

    .line 24567
    :cond_2
    :goto_1
    iget-wide v1, v0, Lcom/android/server/am/ProcessRecord;->lastRequestedGc:J

    iget-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mConstants:Lcom/android/server/am/ActivityManagerConstants;

    iget-wide v3, v3, Lcom/android/server/am/ActivityManagerConstants;->GC_MIN_INTERVAL:J

    add-long/2addr v1, v3

    .line 24568
    invoke-static {}, Landroid/os/SystemClock;->uptimeMillis()J

    move-result-wide v3

    cmp-long v1, v1, v3

    if-gtz v1, :cond_3

    .line 24571
    invoke-virtual {p0, v0}, Lcom/android/server/am/ActivityManagerService;->performAppGcLocked(Lcom/android/server/am/ProcessRecord;)V

    .line 24572
    invoke-virtual {p0}, Lcom/android/server/am/ActivityManagerService;->scheduleAppGcsLocked()V

    .line 24573
    return-void

    .line 24577
    :cond_3
    invoke-virtual {p0, v0}, Lcom/android/server/am/ActivityManagerService;->addProcessToGcListLocked(Lcom/android/server/am/ProcessRecord;)V

    .line 24578
    nop

    .line 24583
    :cond_4
    invoke-virtual {p0}, Lcom/android/server/am/ActivityManagerService;->scheduleAppGcsLocked()V

    .line 24585
    :cond_5
    return-void
.end method

.method public performIdleMaintenance()V
    .locals 23

    .line 15255
    move-object/from16 v1, p0

    const-string v0, "android.permission.SET_ACTIVITY_WATCHER"

    invoke-virtual {v1, v0}, Lcom/android/server/am/ActivityManagerService;->checkCallingPermission(Ljava/lang/String;)I

    move-result v0

    if-nez v0, :cond_5

    .line 15261
    monitor-enter p0

    :try_start_0
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    .line 15262
    invoke-static {}, Landroid/os/SystemClock;->uptimeMillis()J

    move-result-wide v8

    .line 15263
    iget-wide v2, v1, Lcom/android/server/am/ActivityManagerService;->mLastIdleTime:J

    sub-long v10, v8, v2

    .line 15264
    invoke-direct {v1, v8, v9}, Lcom/android/server/am/ActivityManagerService;->getLowRamTimeSinceIdle(J)J

    move-result-wide v12

    .line 15265
    iput-wide v8, v1, Lcom/android/server/am/ActivityManagerService;->mLastIdleTime:J

    .line 15266
    const-wide/16 v14, 0x0

    iput-wide v14, v1, Lcom/android/server/am/ActivityManagerService;->mLowRamTimeSinceLastIdle:J

    .line 15267
    iget-wide v2, v1, Lcom/android/server/am/ActivityManagerService;->mLowRamStartTime:J

    cmp-long v0, v2, v14

    if-eqz v0, :cond_0

    .line 15268
    iput-wide v8, v1, Lcom/android/server/am/ActivityManagerService;->mLowRamStartTime:J

    .line 15271
    :cond_0
    new-instance v0, Ljava/lang/StringBuilder;

    const/16 v6, 0x80

    invoke-direct {v0, v6}, Ljava/lang/StringBuilder;-><init>(I)V

    .line 15272
    const-string v2, "Idle maintenance over "

    invoke-virtual {v0, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 15273
    invoke-static {v10, v11, v0}, Landroid/util/TimeUtils;->formatDuration(JLjava/lang/StringBuilder;)V

    .line 15274
    const-string v2, " low RAM for "

    invoke-virtual {v0, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 15275
    invoke-static {v12, v13, v0}, Landroid/util/TimeUtils;->formatDuration(JLjava/lang/StringBuilder;)V

    .line 15276
    const-string v2, "ActivityManager"

    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    invoke-static {v2, v0}, Landroid/util/Slog;->i(Ljava/lang/String;Ljava/lang/String;)I

    .line 15280
    const-wide/16 v16, 0x3

    div-long v2, v10, v16

    cmp-long v0, v12, v2

    const/4 v7, 0x1

    if-lez v0, :cond_1

    .line 15282
    move v0, v7

    goto :goto_0

    .line 15280
    :cond_1
    const/4 v0, 0x0

    .line 15282
    :goto_0
    iget-object v2, v1, Lcom/android/server/am/ActivityManagerService;->mLruProcesses:Ljava/util/ArrayList;

    invoke-virtual {v2}, Ljava/util/ArrayList;->size()I

    move-result v2

    sub-int/2addr v2, v7

    move v5, v2

    :goto_1
    if-ltz v5, :cond_4

    .line 15283
    iget-object v2, v1, Lcom/android/server/am/ActivityManagerService;->mLruProcesses:Ljava/util/ArrayList;

    invoke-virtual {v2, v5}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v2

    move-object v4, v2

    check-cast v4, Lcom/android/server/am/ProcessRecord;

    .line 15284
    iget-boolean v2, v4, Lcom/android/server/am/ProcessRecord;->notCachedSinceIdle:Z

    if-eqz v2, :cond_3

    .line 15285
    iget v2, v4, Lcom/android/server/am/ProcessRecord;->setProcState:I

    const/4 v3, 0x4

    if-lt v2, v3, :cond_2

    iget v2, v4, Lcom/android/server/am/ProcessRecord;->setProcState:I

    const/16 v3, 0x9

    if-gt v2, v3, :cond_2

    .line 15287
    if-eqz v0, :cond_2

    iget-wide v2, v4, Lcom/android/server/am/ProcessRecord;->initialIdlePss:J

    cmp-long v2, v2, v14

    if-eqz v2, :cond_2

    iget-wide v2, v4, Lcom/android/server/am/ProcessRecord;->lastPss:J

    iget-wide v14, v4, Lcom/android/server/am/ProcessRecord;->initialIdlePss:J

    mul-long v14, v14, v16

    const-wide/16 v20, 0x2

    div-long v14, v14, v20

    cmp-long v2, v2, v14

    if-lez v2, :cond_2

    .line 15289
    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2, v6}, Ljava/lang/StringBuilder;-><init>(I)V

    .line 15290
    const-string v3, "Kill"

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 15291
    iget-object v3, v4, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 15292
    const-string v3, " in idle maint: pss="

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 15293
    iget-wide v14, v4, Lcom/android/server/am/ProcessRecord;->lastPss:J

    invoke-virtual {v2, v14, v15}, Ljava/lang/StringBuilder;->append(J)Ljava/lang/StringBuilder;

    .line 15294
    const-string v3, ", swapPss="

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 15295
    iget-wide v14, v4, Lcom/android/server/am/ProcessRecord;->lastSwapPss:J

    invoke-virtual {v2, v14, v15}, Ljava/lang/StringBuilder;->append(J)Ljava/lang/StringBuilder;

    .line 15296
    const-string v3, ", initialPss="

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 15297
    iget-wide v14, v4, Lcom/android/server/am/ProcessRecord;->initialIdlePss:J

    invoke-virtual {v2, v14, v15}, Ljava/lang/StringBuilder;->append(J)Ljava/lang/StringBuilder;

    .line 15298
    const-string v3, ", period="

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 15299
    invoke-static {v10, v11, v2}, Landroid/util/TimeUtils;->formatDuration(JLjava/lang/StringBuilder;)V

    .line 15300
    const-string v3, ", lowRamPeriod="

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 15301
    invoke-static {v12, v13, v2}, Landroid/util/TimeUtils;->formatDuration(JLjava/lang/StringBuilder;)V

    .line 15302
    const-string v3, "ActivityManager"

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v2

    invoke-static {v3, v2}, Landroid/util/Slog;->wtfQuiet(Ljava/lang/String;Ljava/lang/String;)V

    .line 15303
    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    const-string v3, "idle maint (pss "

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget-wide v14, v4, Lcom/android/server/am/ProcessRecord;->lastPss:J

    invoke-virtual {v2, v14, v15}, Ljava/lang/StringBuilder;->append(J)Ljava/lang/StringBuilder;

    const-string v3, " from "

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget-wide v14, v4, Lcom/android/server/am/ProcessRecord;->initialIdlePss:J

    invoke-virtual {v2, v14, v15}, Ljava/lang/StringBuilder;->append(J)Ljava/lang/StringBuilder;

    const-string v3, ")"

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v2

    invoke-virtual {v4, v2, v7}, Lcom/android/server/am/ProcessRecord;->kill(Ljava/lang/String;Z)V

    .line 15282
    :cond_2
    move v15, v5

    move/from16 v19, v6

    move/from16 v18, v7

    goto :goto_2

    .line 15307
    :cond_3
    iget v2, v4, Lcom/android/server/am/ProcessRecord;->setProcState:I

    const/16 v3, 0xd

    if-ge v2, v3, :cond_2

    iget v2, v4, Lcom/android/server/am/ProcessRecord;->setProcState:I

    if-ltz v2, :cond_2

    .line 15309
    iput-boolean v7, v4, Lcom/android/server/am/ProcessRecord;->notCachedSinceIdle:Z

    .line 15310
    const-wide/16 v14, 0x0

    iput-wide v14, v4, Lcom/android/server/am/ProcessRecord;->initialIdlePss:J

    .line 15311
    iget v2, v4, Lcom/android/server/am/ProcessRecord;->setProcState:I

    const/4 v3, 0x0

    iget-boolean v6, v1, Lcom/android/server/am/ActivityManagerService;->mTestPssMode:Z

    .line 15312
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/am/ActivityManagerService;->isSleepingLocked()Z

    move-result v18

    .line 15311
    move-object v14, v4

    move v4, v6

    move v15, v5

    move/from16 v5, v18

    move/from16 v18, v7

    const/16 v19, 0x80

    move-wide v6, v8

    invoke-static/range {v2 .. v7}, Lcom/android/server/am/ProcessList;->computeNextPssTime(ILcom/android/server/am/ProcessList$ProcStateMemTracker;ZZJ)J

    move-result-wide v2

    iput-wide v2, v14, Lcom/android/server/am/ProcessRecord;->nextPssTime:J

    .line 15282
    :goto_2
    add-int/lit8 v5, v15, -0x1

    move/from16 v7, v18

    move/from16 v6, v19

    const-wide/16 v14, 0x0

    goto/16 :goto_1

    .line 15315
    :cond_4
    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    .line 15316
    return-void

    .line 15315
    :catchall_0
    move-exception v0

    :try_start_1
    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw v0

    .line 15257
    :cond_5
    new-instance v0, Ljava/lang/SecurityException;

    const-string v1, "Requires permission android.permission.SET_ACTIVITY_WATCHER"

    invoke-direct {v0, v1}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v0
.end method

.method public positionTaskInStack(III)V
    .locals 10

    .line 11806
    const-string v0, "android.permission.MANAGE_ACTIVITY_STACKS"

    const-string/jumbo v1, "positionTaskInStack()"

    invoke-virtual {p0, v0, v1}, Lcom/android/server/am/ActivityManagerService;->enforceCallingPermission(Ljava/lang/String;Ljava/lang/String;)V

    .line 11807
    monitor-enter p0

    :try_start_0
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    .line 11808
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_1

    .line 11812
    :try_start_1
    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mStackSupervisor:Lcom/android/server/am/ActivityStackSupervisor;

    invoke-virtual {v2, p1}, Lcom/android/server/am/ActivityStackSupervisor;->anyTaskForIdLocked(I)Lcom/android/server/am/TaskRecord;

    move-result-object v3

    .line 11813
    if-eqz v3, :cond_3

    .line 11818
    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mStackSupervisor:Lcom/android/server/am/ActivityStackSupervisor;

    invoke-virtual {v2, p2}, Lcom/android/server/am/ActivityStackSupervisor;->getStack(I)Lcom/android/server/am/ActivityStack;

    move-result-object v4

    .line 11820
    if-eqz v4, :cond_2

    .line 11824
    invoke-virtual {v4}, Lcom/android/server/am/ActivityStack;->isActivityTypeStandardOrUndefined()Z

    move-result p2

    if-eqz p2, :cond_1

    .line 11831
    invoke-virtual {v3}, Lcom/android/server/am/TaskRecord;->getStack()Lcom/android/server/am/ActivityStack;

    move-result-object p1

    if-ne p1, v4, :cond_0

    .line 11833
    invoke-virtual {v4, v3, p3}, Lcom/android/server/am/ActivityStack;->positionChildAt(Lcom/android/server/am/TaskRecord;I)V

    goto :goto_0

    .line 11836
    :cond_0
    const/4 v6, 0x2

    const/4 v7, 0x0

    const/4 v8, 0x0

    const-string/jumbo v9, "positionTaskInStack"

    move v5, p3

    invoke-virtual/range {v3 .. v9}, Lcom/android/server/am/TaskRecord;->reparent(Lcom/android/server/am/ActivityStack;IIZZLjava/lang/String;)Z
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 11840
    :goto_0
    :try_start_2
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 11841
    nop

    .line 11842
    monitor-exit p0
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_1

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    .line 11843
    return-void

    .line 11825
    :cond_1
    :try_start_3
    new-instance p2, Ljava/lang/IllegalArgumentException;

    new-instance p3, Ljava/lang/StringBuilder;

    invoke-direct {p3}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v2, "positionTaskInStack: Attempt to change the position of task "

    invoke-virtual {p3, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {p3, p1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string p1, " in/to non-standard stack"

    invoke-virtual {p3, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {p3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object p1

    invoke-direct {p2, p1}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw p2

    .line 11821
    :cond_2
    new-instance p1, Ljava/lang/IllegalArgumentException;

    new-instance p3, Ljava/lang/StringBuilder;

    invoke-direct {p3}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v2, "positionTaskInStack: no stack for id="

    invoke-virtual {p3, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {p3, p2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {p3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object p2

    invoke-direct {p1, p2}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw p1

    .line 11814
    :cond_3
    new-instance p2, Ljava/lang/IllegalArgumentException;

    new-instance p3, Ljava/lang/StringBuilder;

    invoke-direct {p3}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v2, "positionTaskInStack: no task for id="

    invoke-virtual {p3, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {p3, p1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {p3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object p1

    invoke-direct {p2, p1}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw p2
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_0

    .line 11840
    :catchall_0
    move-exception p1

    :try_start_4
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    throw p1

    .line 11842
    :catchall_1
    move-exception p1

    monitor-exit p0
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_1

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw p1
.end method

.method postFinishBooting(ZZ)V
    .locals 3

    .line 8176
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    .line 8177
    nop

    .line 8176
    const/16 v2, 0x2d

    invoke-virtual {v1, v2, p1, p2}, Lcom/android/server/am/ActivityManagerService$MainHandler;->obtainMessage(III)Landroid/os/Message;

    move-result-object p1

    invoke-virtual {v0, p1}, Lcom/android/server/am/ActivityManagerService$MainHandler;->sendMessage(Landroid/os/Message;)Z

    .line 8178
    return-void
.end method

.method printOomLevel(Ljava/io/PrintWriter;Ljava/lang/String;I)V
    .locals 2

    .line 17845
    const-string v0, "    "

    invoke-virtual {p1, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 17846
    const/16 v0, 0x20

    if-ltz p3, :cond_0

    .line 17847
    invoke-virtual {p1, v0}, Ljava/io/PrintWriter;->print(C)V

    .line 17848
    const/16 v1, 0xa

    if-ge p3, v1, :cond_1

    invoke-virtual {p1, v0}, Ljava/io/PrintWriter;->print(C)V

    goto :goto_0

    .line 17850
    :cond_0
    const/16 v1, -0xa

    if-le p3, v1, :cond_1

    invoke-virtual {p1, v0}, Ljava/io/PrintWriter;->print(C)V

    .line 17852
    :cond_1
    :goto_0
    invoke-virtual {p1, p3}, Ljava/io/PrintWriter;->print(I)V

    .line 17853
    const-string v0, ": "

    invoke-virtual {p1, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 17854
    invoke-virtual {p1, p2}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 17855
    const-string p2, " ("

    invoke-virtual {p1, p2}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 17856
    iget-object p2, p0, Lcom/android/server/am/ActivityManagerService;->mProcessList:Lcom/android/server/am/ProcessList;

    invoke-virtual {p2, p3}, Lcom/android/server/am/ProcessList;->getMemLevel(I)J

    move-result-wide p2

    const/16 v0, 0x400

    invoke-static {p2, p3, v0}, Lcom/android/server/am/ActivityManagerService;->stringifySize(JI)Ljava/lang/String;

    move-result-object p2

    invoke-virtual {p1, p2}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 17857
    const-string p2, ")"

    invoke-virtual {p1, p2}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 17858
    return-void
.end method

.method public profileControl(Ljava/lang/String;IZLandroid/app/ProfilerInfo;I)Z
    .locals 2
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Landroid/os/RemoteException;
        }
    .end annotation

    .line 26294
    :try_start_0
    monitor-enter p0
    :try_end_0
    .catch Landroid/os/RemoteException; {:try_start_0 .. :try_end_0} :catch_4
    .catchall {:try_start_0 .. :try_end_0} :catchall_1

    :try_start_1
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    .line 26297
    const-string v0, "android.permission.SET_ACTIVITY_WATCHER"

    invoke-virtual {p0, v0}, Lcom/android/server/am/ActivityManagerService;->checkCallingPermission(Ljava/lang/String;)I

    move-result v0

    if-nez v0, :cond_9

    .line 26303
    if-eqz p3, :cond_1

    if-eqz p4, :cond_0

    iget-object v0, p4, Landroid/app/ProfilerInfo;->profileFd:Landroid/os/ParcelFileDescriptor;

    if-eqz v0, :cond_0

    goto :goto_0

    .line 26304
    :cond_0
    new-instance p1, Ljava/lang/IllegalArgumentException;

    const-string p2, "null profile info or fd"

    invoke-direct {p1, p2}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw p1

    .line 26307
    :cond_1
    :goto_0
    nop

    .line 26308
    const/4 v0, 0x0

    if-eqz p1, :cond_2

    .line 26309
    const-string/jumbo v1, "profileControl"

    invoke-direct {p0, p1, p2, v1}, Lcom/android/server/am/ActivityManagerService;->findProcessLocked(Ljava/lang/String;ILjava/lang/String;)Lcom/android/server/am/ProcessRecord;

    move-result-object p2

    goto :goto_1

    .line 26312
    :cond_2
    move-object p2, v0

    :goto_1
    if-eqz p3, :cond_4

    if-eqz p2, :cond_3

    iget-object v1, p2, Lcom/android/server/am/ProcessRecord;->thread:Landroid/app/IApplicationThread;

    if-eqz v1, :cond_3

    goto :goto_2

    .line 26313
    :cond_3
    new-instance p2, Ljava/lang/IllegalArgumentException;

    new-instance p3, Ljava/lang/StringBuilder;

    invoke-direct {p3}, Ljava/lang/StringBuilder;-><init>()V

    const-string p5, "Unknown process: "

    invoke-virtual {p3, p5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {p3, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {p3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object p1

    invoke-direct {p2, p1}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw p2

    .line 26316
    :cond_4
    :goto_2
    if-eqz p3, :cond_6

    .line 26317
    const/4 p1, 0x0

    invoke-direct {p0, v0, p1}, Lcom/android/server/am/ActivityManagerService;->stopProfilerLocked(Lcom/android/server/am/ProcessRecord;I)V

    .line 26318
    iget-object p1, p2, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget-object v1, p2, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;

    invoke-virtual {p0, p1, v1, p4}, Lcom/android/server/am/ActivityManagerService;->setProfileApp(Landroid/content/pm/ApplicationInfo;Ljava/lang/String;Landroid/app/ProfilerInfo;)V

    .line 26319
    iput-object p2, p0, Lcom/android/server/am/ActivityManagerService;->mProfileProc:Lcom/android/server/am/ProcessRecord;

    .line 26320
    iput p5, p0, Lcom/android/server/am/ActivityManagerService;->mProfileType:I

    .line 26321
    iget-object p1, p4, Landroid/app/ProfilerInfo;->profileFd:Landroid/os/ParcelFileDescriptor;
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 26323
    :try_start_2
    invoke-virtual {p1}, Landroid/os/ParcelFileDescriptor;->dup()Landroid/os/ParcelFileDescriptor;

    move-result-object p1
    :try_end_2
    .catch Ljava/io/IOException; {:try_start_2 .. :try_end_2} :catch_0
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    .line 26326
    goto :goto_3

    .line 26324
    :catch_0
    move-exception p1

    .line 26325
    nop

    .line 26327
    move-object p1, v0

    :goto_3
    :try_start_3
    iput-object p1, p4, Landroid/app/ProfilerInfo;->profileFd:Landroid/os/ParcelFileDescriptor;

    .line 26328
    iget-object p1, p2, Lcom/android/server/am/ProcessRecord;->thread:Landroid/app/IApplicationThread;

    invoke-interface {p1, p3, p4, p5}, Landroid/app/IApplicationThread;->profilerControl(ZLandroid/app/ProfilerInfo;I)V
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_0

    .line 26329
    nop

    .line 26331
    :try_start_4
    iget-object p1, p0, Lcom/android/server/am/ActivityManagerService;->mProfilerInfo:Landroid/app/ProfilerInfo;

    iget-object p1, p1, Landroid/app/ProfilerInfo;->profileFd:Landroid/os/ParcelFileDescriptor;

    invoke-virtual {p1}, Landroid/os/ParcelFileDescriptor;->close()V
    :try_end_4
    .catch Ljava/io/IOException; {:try_start_4 .. :try_end_4} :catch_1
    .catchall {:try_start_4 .. :try_end_4} :catchall_0

    .line 26333
    goto :goto_4

    .line 26332
    :catch_1
    move-exception p1

    .line 26334
    :goto_4
    :try_start_5
    iget-object p1, p0, Lcom/android/server/am/ActivityManagerService;->mProfilerInfo:Landroid/app/ProfilerInfo;

    iput-object v0, p1, Landroid/app/ProfilerInfo;->profileFd:Landroid/os/ParcelFileDescriptor;

    .line 26336
    iget p1, p2, Lcom/android/server/am/ProcessRecord;->pid:I

    sget p2, Lcom/android/server/am/ActivityManagerService;->MY_PID:I

    if-ne p1, p2, :cond_5

    .line 26341
    nop

    .line 26343
    move-object p4, v0

    :cond_5
    goto :goto_5

    .line 26344
    :cond_6
    invoke-direct {p0, p2, p5}, Lcom/android/server/am/ActivityManagerService;->stopProfilerLocked(Lcom/android/server/am/ProcessRecord;I)V

    .line 26345
    if-eqz p4, :cond_7

    iget-object p1, p4, Landroid/app/ProfilerInfo;->profileFd:Landroid/os/ParcelFileDescriptor;
    :try_end_5
    .catchall {:try_start_5 .. :try_end_5} :catchall_0

    if-eqz p1, :cond_7

    .line 26347
    :try_start_6
    iget-object p1, p4, Landroid/app/ProfilerInfo;->profileFd:Landroid/os/ParcelFileDescriptor;

    invoke-virtual {p1}, Landroid/os/ParcelFileDescriptor;->close()V
    :try_end_6
    .catch Ljava/io/IOException; {:try_start_6 .. :try_end_6} :catch_2
    .catchall {:try_start_6 .. :try_end_6} :catchall_0

    .line 26349
    goto :goto_5

    .line 26348
    :catch_2
    move-exception p1

    .line 26353
    :cond_7
    :goto_5
    const/4 p1, 0x1

    :try_start_7
    monitor-exit p0
    :try_end_7
    .catchall {:try_start_7 .. :try_end_7} :catchall_0

    .line 26358
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    if-eqz p4, :cond_8

    iget-object p2, p4, Landroid/app/ProfilerInfo;->profileFd:Landroid/os/ParcelFileDescriptor;

    if-eqz p2, :cond_8

    .line 26360
    :try_start_8
    iget-object p2, p4, Landroid/app/ProfilerInfo;->profileFd:Landroid/os/ParcelFileDescriptor;

    invoke-virtual {p2}, Landroid/os/ParcelFileDescriptor;->close()V
    :try_end_8
    .catch Ljava/io/IOException; {:try_start_8 .. :try_end_8} :catch_3

    .line 26362
    goto :goto_6

    .line 26361
    :catch_3
    move-exception p2

    .line 26353
    :cond_8
    :goto_6
    return p1

    .line 26299
    :cond_9
    :try_start_9
    new-instance p1, Ljava/lang/SecurityException;

    const-string p2, "Requires permission android.permission.SET_ACTIVITY_WATCHER"

    invoke-direct {p1, p2}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw p1

    .line 26354
    :catchall_0
    move-exception p1

    monitor-exit p0
    :try_end_9
    .catchall {:try_start_9 .. :try_end_9} :catchall_0

    :try_start_a
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw p1
    :try_end_a
    .catch Landroid/os/RemoteException; {:try_start_a .. :try_end_a} :catch_4
    .catchall {:try_start_a .. :try_end_a} :catchall_1

    .line 26358
    :catchall_1
    move-exception p1

    goto :goto_7

    .line 26355
    :catch_4
    move-exception p1

    .line 26356
    :try_start_b
    new-instance p1, Ljava/lang/IllegalStateException;

    const-string p2, "Process disappeared"

    invoke-direct {p1, p2}, Ljava/lang/IllegalStateException;-><init>(Ljava/lang/String;)V

    throw p1
    :try_end_b
    .catchall {:try_start_b .. :try_end_b} :catchall_1

    .line 26358
    :goto_7
    if-eqz p4, :cond_a

    iget-object p2, p4, Landroid/app/ProfilerInfo;->profileFd:Landroid/os/ParcelFileDescriptor;

    if-eqz p2, :cond_a

    .line 26360
    :try_start_c
    iget-object p2, p4, Landroid/app/ProfilerInfo;->profileFd:Landroid/os/ParcelFileDescriptor;

    invoke-virtual {p2}, Landroid/os/ParcelFileDescriptor;->close()V
    :try_end_c
    .catch Ljava/io/IOException; {:try_start_c .. :try_end_c} :catch_5

    .line 26362
    goto :goto_8

    .line 26361
    :catch_5
    move-exception p2

    .line 26362
    :cond_a
    :goto_8
    throw p1
.end method

.method public final publishContentProviders(Landroid/app/IApplicationThread;Ljava/util/List;)V
    .locals 12
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "(",
            "Landroid/app/IApplicationThread;",
            "Ljava/util/List<",
            "Landroid/app/ContentProviderHolder;",
            ">;)V"
        }
    .end annotation

    .line 12944
    if-nez p2, :cond_0

    .line 12945
    return-void

    .line 12948
    :cond_0
    const-string/jumbo v0, "publishContentProviders"

    invoke-virtual {p0, v0}, Lcom/android/server/am/ActivityManagerService;->enforceNotIsolatedCaller(Ljava/lang/String;)V

    .line 12949
    monitor-enter p0

    :try_start_0
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    .line 12950
    invoke-virtual {p0, p1}, Lcom/android/server/am/ActivityManagerService;->getRecordForAppLocked(Landroid/app/IApplicationThread;)Lcom/android/server/am/ProcessRecord;

    move-result-object v0

    .line 12952
    if-eqz v0, :cond_8

    .line 12959
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v1

    .line 12961
    invoke-interface {p2}, Ljava/util/List;->size()I

    move-result p1

    .line 12962
    const/4 v3, 0x0

    move v4, v3

    :goto_0
    if-ge v4, p1, :cond_7

    .line 12963
    invoke-interface {p2, v4}, Ljava/util/List;->get(I)Ljava/lang/Object;

    move-result-object v5

    check-cast v5, Landroid/app/ContentProviderHolder;

    .line 12964
    if-eqz v5, :cond_6

    iget-object v6, v5, Landroid/app/ContentProviderHolder;->info:Landroid/content/pm/ProviderInfo;

    if-eqz v6, :cond_6

    iget-object v6, v5, Landroid/app/ContentProviderHolder;->provider:Landroid/content/IContentProvider;

    if-nez v6, :cond_1

    .line 12965
    goto/16 :goto_3

    .line 12967
    :cond_1
    iget-object v6, v0, Lcom/android/server/am/ProcessRecord;->pubProviders:Landroid/util/ArrayMap;

    iget-object v7, v5, Landroid/app/ContentProviderHolder;->info:Landroid/content/pm/ProviderInfo;

    iget-object v7, v7, Landroid/content/pm/ProviderInfo;->name:Ljava/lang/String;

    invoke-virtual {v6, v7}, Landroid/util/ArrayMap;->get(Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object v6

    check-cast v6, Lcom/android/server/am/ContentProviderRecord;

    .line 12969
    if-eqz v6, :cond_6

    .line 12970
    new-instance v7, Landroid/content/ComponentName;

    iget-object v8, v6, Lcom/android/server/am/ContentProviderRecord;->info:Landroid/content/pm/ProviderInfo;

    iget-object v8, v8, Landroid/content/pm/ProviderInfo;->packageName:Ljava/lang/String;

    iget-object v9, v6, Lcom/android/server/am/ContentProviderRecord;->info:Landroid/content/pm/ProviderInfo;

    iget-object v9, v9, Landroid/content/pm/ProviderInfo;->name:Ljava/lang/String;

    invoke-direct {v7, v8, v9}, Landroid/content/ComponentName;-><init>(Ljava/lang/String;Ljava/lang/String;)V

    .line 12971
    iget-object v8, p0, Lcom/android/server/am/ActivityManagerService;->mProviderMap:Lcom/android/server/am/ProviderMap;

    invoke-virtual {v8, v7, v6}, Lcom/android/server/am/ProviderMap;->putProviderByClass(Landroid/content/ComponentName;Lcom/android/server/am/ContentProviderRecord;)V

    .line 12972
    iget-object v7, v6, Lcom/android/server/am/ContentProviderRecord;->info:Landroid/content/pm/ProviderInfo;

    iget-object v7, v7, Landroid/content/pm/ProviderInfo;->authority:Ljava/lang/String;

    const-string v8, ";"

    invoke-virtual {v7, v8}, Ljava/lang/String;->split(Ljava/lang/String;)[Ljava/lang/String;

    move-result-object v7

    .line 12973
    move v8, v3

    :goto_1
    array-length v9, v7

    if-ge v8, v9, :cond_2

    .line 12974
    iget-object v9, p0, Lcom/android/server/am/ActivityManagerService;->mProviderMap:Lcom/android/server/am/ProviderMap;

    aget-object v10, v7, v8

    invoke-virtual {v9, v10, v6}, Lcom/android/server/am/ProviderMap;->putProviderByName(Ljava/lang/String;Lcom/android/server/am/ContentProviderRecord;)V

    .line 12973
    add-int/lit8 v8, v8, 0x1

    goto :goto_1

    .line 12977
    :cond_2
    iget-object v7, p0, Lcom/android/server/am/ActivityManagerService;->mLaunchingProviders:Ljava/util/ArrayList;

    invoke-virtual {v7}, Ljava/util/ArrayList;->size()I

    move-result v7

    .line 12979
    nop

    .line 12980
    move v9, v3

    move v8, v7

    move v7, v9

    :goto_2
    const/4 v10, 0x1

    if-ge v7, v8, :cond_4

    .line 12981
    iget-object v11, p0, Lcom/android/server/am/ActivityManagerService;->mLaunchingProviders:Ljava/util/ArrayList;

    invoke-virtual {v11, v7}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v11

    if-ne v11, v6, :cond_3

    .line 12982
    iget-object v9, p0, Lcom/android/server/am/ActivityManagerService;->mLaunchingProviders:Ljava/util/ArrayList;

    invoke-virtual {v9, v7}, Ljava/util/ArrayList;->remove(I)Ljava/lang/Object;

    .line 12983
    nop

    .line 12984
    add-int/lit8 v7, v7, -0x1

    .line 12985
    add-int/lit8 v8, v8, -0x1

    .line 12980
    move v9, v10

    :cond_3
    add-int/2addr v7, v10

    goto :goto_2

    .line 12988
    :cond_4
    if-eqz v9, :cond_5

    .line 12989
    iget-object v7, p0, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    const/16 v8, 0x39

    invoke-virtual {v7, v8, v0}, Lcom/android/server/am/ActivityManagerService$MainHandler;->removeMessages(ILjava/lang/Object;)V

    .line 12991
    :cond_5
    monitor-enter v6
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_1

    .line 12992
    :try_start_1
    iget-object v7, v5, Landroid/app/ContentProviderHolder;->provider:Landroid/content/IContentProvider;

    iput-object v7, v6, Lcom/android/server/am/ContentProviderRecord;->provider:Landroid/content/IContentProvider;

    .line 12993
    iput-object v0, v6, Lcom/android/server/am/ContentProviderRecord;->proc:Lcom/android/server/am/ProcessRecord;

    .line 12994
    invoke-virtual {v6}, Ljava/lang/Object;->notifyAll()V

    .line 12995
    monitor-exit v6
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 12996
    :try_start_2
    invoke-virtual {p0, v0, v10}, Lcom/android/server/am/ActivityManagerService;->updateOomAdjLocked(Lcom/android/server/am/ProcessRecord;Z)Z

    .line 12997
    iget-object v6, v5, Landroid/app/ContentProviderHolder;->info:Landroid/content/pm/ProviderInfo;

    iget-object v6, v6, Landroid/content/pm/ProviderInfo;->packageName:Ljava/lang/String;

    iget-object v5, v5, Landroid/app/ContentProviderHolder;->info:Landroid/content/pm/ProviderInfo;

    iget-object v5, v5, Landroid/content/pm/ProviderInfo;->authority:Ljava/lang/String;

    invoke-direct {p0, v0, v6, v5}, Lcom/android/server/am/ActivityManagerService;->maybeUpdateProviderUsageStatsLocked(Lcom/android/server/am/ProcessRecord;Ljava/lang/String;Ljava/lang/String;)V
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_1

    goto :goto_3

    .line 12995
    :catchall_0
    move-exception p1

    :try_start_3
    monitor-exit v6
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_0

    :try_start_4
    throw p1

    .line 12962
    :cond_6
    :goto_3
    add-int/lit8 v4, v4, 0x1

    goto/16 :goto_0

    .line 13002
    :cond_7
    invoke-static {v1, v2}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 13003
    monitor-exit p0
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_1

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    .line 13004
    return-void

    .line 12953
    :cond_8
    :try_start_5
    new-instance p2, Ljava/lang/SecurityException;

    new-instance v0, Ljava/lang/StringBuilder;

    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V

    const-string v1, "Unable to find app for caller "

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    const-string p1, " (pid="

    invoke-virtual {v0, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 12955
    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result p1

    invoke-virtual {v0, p1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string p1, ") when publishing content providers"

    invoke-virtual {v0, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object p1

    invoke-direct {p2, p1}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw p2

    .line 13003
    :catchall_1
    move-exception p1

    monitor-exit p0
    :try_end_5
    .catchall {:try_start_5 .. :try_end_5} :catchall_1

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw p1
.end method

.method public publishService(Landroid/os/IBinder;Landroid/content/Intent;Landroid/os/IBinder;)V
    .locals 2

    .line 20830
    if-eqz p2, :cond_1

    invoke-virtual {p2}, Landroid/content/Intent;->hasFileDescriptors()Z

    move-result v0

    const/4 v1, 0x1

    if-eq v0, v1, :cond_0

    goto :goto_0

    .line 20831
    :cond_0
    new-instance p1, Ljava/lang/IllegalArgumentException;

    const-string p2, "File descriptors passed in Intent"

    invoke-direct {p1, p2}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw p1

    .line 20834
    :cond_1
    :goto_0
    monitor-enter p0

    :try_start_0
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    .line 20835
    instance-of v0, p1, Lcom/android/server/am/ServiceRecord;

    if-eqz v0, :cond_2

    .line 20838
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mServices:Lcom/android/server/am/ActiveServices;

    check-cast p1, Lcom/android/server/am/ServiceRecord;

    invoke-virtual {v0, p1, p2, p3}, Lcom/android/server/am/ActiveServices;->publishServiceLocked(Lcom/android/server/am/ServiceRecord;Landroid/content/Intent;Landroid/os/IBinder;)V

    .line 20839
    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    .line 20840
    return-void

    .line 20836
    :cond_2
    :try_start_1
    new-instance p1, Ljava/lang/IllegalArgumentException;

    const-string p2, "Invalid service token"

    invoke-direct {p1, p2}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw p1

    .line 20839
    :catchall_0
    move-exception p1

    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw p1
.end method

.method pushTempWhitelist()V
    .locals 11

    .line 26147
    monitor-enter p0

    :try_start_0
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    .line 26148
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mPendingTempWhitelist:Landroid/util/SparseArray;

    invoke-virtual {v0}, Landroid/util/SparseArray;->size()I

    move-result v0

    .line 26149
    new-array v1, v0, [Lcom/android/server/am/ActivityManagerService$PendingTempWhitelist;

    .line 26150
    const/4 v2, 0x0

    move v3, v2

    :goto_0
    if-ge v3, v0, :cond_0

    .line 26151
    iget-object v4, p0, Lcom/android/server/am/ActivityManagerService;->mPendingTempWhitelist:Landroid/util/SparseArray;

    invoke-virtual {v4, v3}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;

    move-result-object v4

    check-cast v4, Lcom/android/server/am/ActivityManagerService$PendingTempWhitelist;

    aput-object v4, v1, v3

    .line 26150
    add-int/lit8 v3, v3, 0x1

    goto :goto_0

    .line 26153
    :cond_0
    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_1

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    .line 26156
    move v3, v2

    :goto_1
    if-ge v3, v0, :cond_1

    .line 26157
    aget-object v4, v1, v3

    .line 26158
    iget-object v5, p0, Lcom/android/server/am/ActivityManagerService;->mLocalDeviceIdleController:Lcom/android/server/DeviceIdleController$LocalService;

    iget v6, v4, Lcom/android/server/am/ActivityManagerService$PendingTempWhitelist;->targetUid:I

    iget-wide v7, v4, Lcom/android/server/am/ActivityManagerService$PendingTempWhitelist;->duration:J

    const/4 v9, 0x1

    iget-object v10, v4, Lcom/android/server/am/ActivityManagerService$PendingTempWhitelist;->tag:Ljava/lang/String;

    invoke-virtual/range {v5 .. v10}, Lcom/android/server/DeviceIdleController$LocalService;->addPowerSaveTempWhitelistAppDirect(IJZLjava/lang/String;)V

    .line 26156
    add-int/lit8 v3, v3, 0x1

    goto :goto_1

    .line 26163
    :cond_1
    monitor-enter p0

    :try_start_1
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    .line 26164
    :goto_2
    if-ge v2, v0, :cond_3

    .line 26165
    aget-object v3, v1, v2

    .line 26166
    iget-object v4, p0, Lcom/android/server/am/ActivityManagerService;->mPendingTempWhitelist:Landroid/util/SparseArray;

    iget v5, v3, Lcom/android/server/am/ActivityManagerService$PendingTempWhitelist;->targetUid:I

    invoke-virtual {v4, v5}, Landroid/util/SparseArray;->indexOfKey(I)I

    move-result v4

    .line 26167
    if-ltz v4, :cond_2

    iget-object v5, p0, Lcom/android/server/am/ActivityManagerService;->mPendingTempWhitelist:Landroid/util/SparseArray;

    invoke-virtual {v5, v4}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;

    move-result-object v5

    if-ne v5, v3, :cond_2

    .line 26168
    iget-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mPendingTempWhitelist:Landroid/util/SparseArray;

    invoke-virtual {v3, v4}, Landroid/util/SparseArray;->removeAt(I)V

    .line 26164
    :cond_2
    add-int/lit8 v2, v2, 0x1

    goto :goto_2

    .line 26171
    :cond_3
    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    .line 26172
    return-void

    .line 26171
    :catchall_0
    move-exception v0

    :try_start_2
    monitor-exit p0
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw v0

    .line 26153
    :catchall_1
    move-exception v0

    :try_start_3
    monitor-exit p0
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_1

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw v0
.end method

.method recordPssSampleLocked(Lcom/android/server/am/ProcessRecord;IJJJJIJJ)V
    .locals 34

    move-object/from16 v0, p0

    move-object/from16 v1, p1

    move-wide/from16 v14, p3

    move-wide/from16 v11, p7

    .line 24358
    iget v2, v1, Lcom/android/server/am/ProcessRecord;->pid:I

    iget v3, v1, Lcom/android/server/am/ProcessRecord;->uid:I

    iget-object v4, v1, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;

    const-wide/16 v5, 0x400

    mul-long v31, v14, v5

    mul-long v21, p5, v5

    mul-long v23, v11, v5

    mul-long v25, p9, v5

    move/from16 v16, v2

    move/from16 v17, v3

    move-object/from16 v18, v4

    move-wide/from16 v19, v31

    move/from16 v27, p11

    move/from16 v28, p2

    move-wide/from16 v29, p12

    invoke-static/range {v16 .. v30}, Lcom/android/server/am/EventLogTags;->writeAmPss(IILjava/lang/String;JJJJIIJ)V

    .line 24360
    move-wide/from16 v2, p14

    iput-wide v2, v1, Lcom/android/server/am/ProcessRecord;->lastPssTime:J

    .line 24361
    iget-object v2, v1, Lcom/android/server/am/ProcessRecord;->baseProcessTracker:Lcom/android/internal/app/procstats/ProcessState;

    iget-object v13, v1, Lcom/android/server/am/ProcessRecord;->pkgList:Landroid/util/ArrayMap;

    const/16 v16, 0x1

    move-wide v3, v14

    move-wide/from16 v5, p5

    move-wide/from16 v7, p9

    move/from16 v9, v16

    move/from16 v10, p11

    move-wide/from16 v11, p12

    invoke-virtual/range {v2 .. v13}, Lcom/android/internal/app/procstats/ProcessState;->addPss(JJJZIJLandroid/util/ArrayMap;)V

    .line 24365
    iget-wide v2, v1, Lcom/android/server/am/ProcessRecord;->initialIdlePss:J

    const-wide/16 v4, 0x0

    cmp-long v2, v2, v4

    if-nez v2, :cond_0

    .line 24366
    iput-wide v14, v1, Lcom/android/server/am/ProcessRecord;->initialIdlePss:J

    .line 24368
    :cond_0
    iput-wide v14, v1, Lcom/android/server/am/ProcessRecord;->lastPss:J

    .line 24369
    move-wide/from16 v2, p7

    iput-wide v2, v1, Lcom/android/server/am/ProcessRecord;->lastSwapPss:J

    .line 24370
    const/16 v4, 0xd

    move/from16 v5, p2

    if-lt v5, v4, :cond_1

    .line 24371
    iput-wide v14, v1, Lcom/android/server/am/ProcessRecord;->lastCachedPss:J

    .line 24372
    iput-wide v2, v1, Lcom/android/server/am/ProcessRecord;->lastCachedSwapPss:J

    .line 24375
    :cond_1
    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mMemWatchProcesses:Lcom/android/internal/app/ProcessMap;

    .line 24376
    invoke-virtual {v2}, Lcom/android/internal/app/ProcessMap;->getMap()Landroid/util/ArrayMap;

    move-result-object v2

    iget-object v3, v1, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;

    invoke-virtual {v2, v3}, Landroid/util/ArrayMap;->get(Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Landroid/util/SparseArray;

    .line 24377
    const/4 v3, 0x0

    .line 24378
    if-eqz v2, :cond_3

    .line 24379
    iget v4, v1, Lcom/android/server/am/ProcessRecord;->uid:I

    invoke-virtual {v2, v4}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    move-result-object v4

    check-cast v4, Landroid/util/Pair;

    .line 24380
    if-nez v4, :cond_2

    .line 24381
    const/4 v4, 0x0

    invoke-virtual {v2, v4}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    move-result-object v2

    move-object v4, v2

    check-cast v4, Landroid/util/Pair;

    .line 24383
    :cond_2
    if-eqz v4, :cond_3

    .line 24384
    iget-object v2, v4, Landroid/util/Pair;->first:Ljava/lang/Object;

    move-object v3, v2

    check-cast v3, Ljava/lang/Long;

    .line 24387
    :cond_3
    if-eqz v3, :cond_6

    .line 24388
    invoke-virtual {v3}, Ljava/lang/Long;->longValue()J

    move-result-wide v4

    cmp-long v2, v31, v4

    if-ltz v2, :cond_6

    iget-object v2, v1, Lcom/android/server/am/ProcessRecord;->thread:Landroid/app/IApplicationThread;

    if-eqz v2, :cond_6

    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mMemWatchDumpProcName:Ljava/lang/String;

    if-nez v2, :cond_6

    .line 24389
    const-string v2, "1"

    const-string/jumbo v4, "ro.debuggable"

    const-string v5, "0"

    invoke-static {v4, v5}, Landroid/os/SystemProperties;->get(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;

    move-result-object v4

    invoke-virtual {v2, v4}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v2

    .line 24390
    if-nez v2, :cond_4

    .line 24391
    iget-object v4, v1, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget v4, v4, Landroid/content/pm/ApplicationInfo;->flags:I

    and-int/lit8 v4, v4, 0x2

    if-eqz v4, :cond_4

    .line 24392
    const/4 v2, 0x1

    .line 24395
    :cond_4
    if-eqz v2, :cond_5

    .line 24396
    const-string v2, "ActivityManager"

    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    const-string v5, "Process "

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v4, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    const-string v5, " exceeded pss limit "

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v4, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    const-string v3, "; reporting"

    invoke-virtual {v4, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v3

    invoke-static {v2, v3}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 24397
    nop

    .line 24398
    invoke-static {}, Lcom/android/server/am/DumpHeapProvider;->getJavaFile()Ljava/io/File;

    move-result-object v2

    .line 24399
    iget-object v3, v1, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;

    iput-object v3, v0, Lcom/android/server/am/ActivityManagerService;->mMemWatchDumpProcName:Ljava/lang/String;

    .line 24400
    invoke-virtual {v2}, Ljava/io/File;->toString()Ljava/lang/String;

    move-result-object v3

    iput-object v3, v0, Lcom/android/server/am/ActivityManagerService;->mMemWatchDumpFile:Ljava/lang/String;

    .line 24401
    iget v3, v1, Lcom/android/server/am/ProcessRecord;->pid:I

    iput v3, v0, Lcom/android/server/am/ActivityManagerService;->mMemWatchDumpPid:I

    .line 24402
    iget v3, v1, Lcom/android/server/am/ProcessRecord;->uid:I

    iput v3, v0, Lcom/android/server/am/ActivityManagerService;->mMemWatchDumpUid:I

    .line 24403
    invoke-static {}, Lcom/android/internal/os/BackgroundThread;->getHandler()Landroid/os/Handler;

    move-result-object v3

    new-instance v4, Lcom/android/server/am/ActivityManagerService$27;

    invoke-direct {v4, v0, v2, v1}, Lcom/android/server/am/ActivityManagerService$27;-><init>(Lcom/android/server/am/ActivityManagerService;Ljava/io/File;Lcom/android/server/am/ProcessRecord;)V

    invoke-virtual {v3, v4}, Landroid/os/Handler;->post(Ljava/lang/Runnable;)Z

    .line 24444
    goto :goto_0

    .line 24445
    :cond_5
    const-string v0, "ActivityManager"

    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    const-string v4, "Process "

    invoke-virtual {v2, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v2, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    const-string v1, " exceeded pss limit "

    invoke-virtual {v2, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    const-string v1, ", but debugging not enabled"

    invoke-virtual {v2, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-static {v0, v1}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 24450
    :cond_6
    :goto_0
    return-void
.end method

.method public refContentProvider(Landroid/os/IBinder;II)Z
    .locals 2

    .line 13009
    :try_start_0
    move-object v0, p1

    check-cast v0, Lcom/android/server/am/ContentProviderConnection;
    :try_end_0
    .catch Ljava/lang/ClassCastException; {:try_start_0 .. :try_end_0} :catch_0

    .line 13015
    nop

    .line 13016
    if-eqz v0, :cond_5

    .line 13020
    monitor-enter p0

    :try_start_1
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    .line 13021
    if-lez p2, :cond_0

    .line 13022
    iget p1, v0, Lcom/android/server/am/ContentProviderConnection;->numStableIncs:I

    add-int/2addr p1, p2

    iput p1, v0, Lcom/android/server/am/ContentProviderConnection;->numStableIncs:I

    .line 13024
    :cond_0
    iget p1, v0, Lcom/android/server/am/ContentProviderConnection;->stableCount:I

    add-int/2addr p1, p2

    .line 13025
    if-ltz p1, :cond_4

    .line 13029
    if-lez p3, :cond_1

    .line 13030
    iget p2, v0, Lcom/android/server/am/ContentProviderConnection;->numUnstableIncs:I

    add-int/2addr p2, p3

    iput p2, v0, Lcom/android/server/am/ContentProviderConnection;->numUnstableIncs:I

    .line 13032
    :cond_1
    iget p2, v0, Lcom/android/server/am/ContentProviderConnection;->unstableCount:I

    add-int/2addr p2, p3

    .line 13033
    if-ltz p2, :cond_3

    .line 13037
    add-int p3, p1, p2

    if-lez p3, :cond_2

    .line 13041
    iput p1, v0, Lcom/android/server/am/ContentProviderConnection;->stableCount:I

    .line 13042
    iput p2, v0, Lcom/android/server/am/ContentProviderConnection;->unstableCount:I

    .line 13043
    iget-boolean p1, v0, Lcom/android/server/am/ContentProviderConnection;->dead:Z

    xor-int/lit8 p1, p1, 0x1

    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    return p1

    .line 13038
    :cond_2
    :try_start_2
    new-instance p3, Ljava/lang/IllegalStateException;

    new-instance v0, Ljava/lang/StringBuilder;

    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v1, "ref counts can\'t go to zero here: stable="

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0, p1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string p1, " unstable="

    invoke-virtual {v0, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0, p2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object p1

    invoke-direct {p3, p1}, Ljava/lang/IllegalStateException;-><init>(Ljava/lang/String;)V

    throw p3

    .line 13034
    :cond_3
    new-instance p1, Ljava/lang/IllegalStateException;

    new-instance p3, Ljava/lang/StringBuilder;

    invoke-direct {p3}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v0, "unstableCount < 0: "

    invoke-virtual {p3, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {p3, p2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {p3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object p2

    invoke-direct {p1, p2}, Ljava/lang/IllegalStateException;-><init>(Ljava/lang/String;)V

    throw p1

    .line 13026
    :cond_4
    new-instance p2, Ljava/lang/IllegalStateException;

    new-instance p3, Ljava/lang/StringBuilder;

    invoke-direct {p3}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v0, "stableCount < 0: "

    invoke-virtual {p3, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {p3, p1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {p3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object p1

    invoke-direct {p2, p1}, Ljava/lang/IllegalStateException;-><init>(Ljava/lang/String;)V

    throw p2

    .line 13044
    :catchall_0
    move-exception p1

    monitor-exit p0
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw p1

    .line 13017
    :cond_5
    new-instance p1, Ljava/lang/NullPointerException;

    const-string p2, "connection is null"

    invoke-direct {p1, p2}, Ljava/lang/NullPointerException;-><init>(Ljava/lang/String;)V

    throw p1

    .line 13010
    :catch_0
    move-exception p2

    .line 13011
    new-instance p2, Ljava/lang/StringBuilder;

    invoke-direct {p2}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo p3, "refContentProvider: "

    invoke-virtual {p2, p3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {p2, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    const-string p1, " not a ContentProviderConnection"

    invoke-virtual {p2, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {p2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object p1

    .line 13013
    const-string p2, "ActivityManager"

    invoke-static {p2, p1}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 13014
    new-instance p2, Ljava/lang/IllegalArgumentException;

    invoke-direct {p2, p1}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw p2
.end method

.method public registerIntentSenderCancelListener(Landroid/content/IIntentSender;Lcom/android/internal/os/IResultReceiver;)V
    .locals 1

    .line 8746
    instance-of v0, p1, Lcom/android/server/am/PendingIntentRecord;

    if-nez v0, :cond_0

    .line 8747
    return-void

    .line 8750
    :cond_0
    monitor-enter p0

    :try_start_0
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    .line 8751
    check-cast p1, Lcom/android/server/am/PendingIntentRecord;

    .line 8752
    iget-boolean v0, p1, Lcom/android/server/am/PendingIntentRecord;->canceled:Z

    .line 8753
    if-nez v0, :cond_1

    .line 8754
    invoke-virtual {p1, p2}, Lcom/android/server/am/PendingIntentRecord;->registerCancelListenerLocked(Lcom/android/internal/os/IResultReceiver;)V

    .line 8756
    :cond_1
    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    .line 8757
    if-eqz v0, :cond_2

    .line 8759
    const/4 p1, 0x0

    const/4 v0, 0x0

    :try_start_1
    invoke-interface {p2, p1, v0}, Lcom/android/internal/os/IResultReceiver;->send(ILandroid/os/Bundle;)V
    :try_end_1
    .catch Landroid/os/RemoteException; {:try_start_1 .. :try_end_1} :catch_0

    .line 8761
    goto :goto_0

    .line 8760
    :catch_0
    move-exception p1

    .line 8763
    :cond_2
    :goto_0
    return-void

    .line 8756
    :catchall_0
    move-exception p1

    :try_start_2
    monitor-exit p0
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw p1
.end method

.method public registerProcessObserver(Landroid/app/IProcessObserver;)V
    .locals 2

    .line 14486
    const-string v0, "android.permission.SET_ACTIVITY_WATCHER"

    const-string/jumbo v1, "registerProcessObserver()"

    invoke-virtual {p0, v0, v1}, Lcom/android/server/am/ActivityManagerService;->enforceCallingPermission(Ljava/lang/String;Ljava/lang/String;)V

    .line 14488
    monitor-enter p0

    :try_start_0
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    .line 14489
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mProcessObservers:Landroid/os/RemoteCallbackList;

    invoke-virtual {v0, p1}, Landroid/os/RemoteCallbackList;->register(Landroid/os/IInterface;)Z

    .line 14490
    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    .line 14491
    return-void

    .line 14490
    :catchall_0
    move-exception p1

    :try_start_1
    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw p1
.end method

.method public registerReceiver(Landroid/app/IApplicationThread;Ljava/lang/String;Landroid/content/IIntentReceiver;Landroid/content/IntentFilter;Ljava/lang/String;II)Landroid/content/Intent;
    .locals 40

    move-object/from16 v8, p0

    move-object/from16 v0, p1

    move-object/from16 v1, p2

    move-object/from16 v9, p3

    move-object/from16 v15, p4

    .line 21114
    const-string/jumbo v2, "registerReceiver"

    invoke-virtual {v8, v2}, Lcom/android/server/am/ActivityManagerService;->enforceNotIsolatedCaller(Ljava/lang/String;)V

    .line 21115
    nop

    .line 21116
    nop

    .line 21117
    const/4 v10, 0x1

    and-int/lit8 v2, p7, 0x1

    const/4 v14, 0x0

    if-eqz v2, :cond_0

    .line 21122
    move/from16 v17, v10

    goto :goto_0

    .line 21117
    :cond_0
    nop

    .line 21122
    move/from16 v17, v14

    :goto_0
    monitor-enter p0

    :try_start_0
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    .line 21123
    const/16 v11, 0x3e8

    const/4 v2, 0x0

    if-eqz v0, :cond_4

    .line 21124
    invoke-virtual/range {p0 .. p1}, Lcom/android/server/am/ActivityManagerService;->getRecordForAppLocked(Landroid/app/IApplicationThread;)Lcom/android/server/am/ProcessRecord;

    move-result-object v3

    .line 21125
    if-eqz v3, :cond_3

    .line 21131
    iget-object v4, v3, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget v4, v4, Landroid/content/pm/ApplicationInfo;->uid:I

    if-eq v4, v11, :cond_2

    iget-object v4, v3, Lcom/android/server/am/ProcessRecord;->pkgList:Landroid/util/ArrayMap;

    .line 21132
    invoke-virtual {v4, v1}, Landroid/util/ArrayMap;->containsKey(Ljava/lang/Object;)Z

    move-result v4

    if-nez v4, :cond_2

    const-string v4, "android"

    .line 21133
    invoke-virtual {v4, v1}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v4

    if-eqz v4, :cond_1

    goto :goto_1

    .line 21134
    :cond_1
    new-instance v0, Ljava/lang/SecurityException;

    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    const-string v4, "Given caller package "

    invoke-virtual {v2, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v2, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v1, " is not running in process "

    invoke-virtual {v2, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-direct {v0, v1}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v0

    .line 21137
    :cond_2
    :goto_1
    iget-object v4, v3, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget v4, v4, Landroid/content/pm/ApplicationInfo;->uid:I

    .line 21138
    iget v5, v3, Lcom/android/server/am/ProcessRecord;->pid:I

    .line 21145
    move-object v13, v1

    move v12, v4

    goto :goto_2

    .line 21126
    :cond_3
    new-instance v1, Ljava/lang/SecurityException;

    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    const-string v3, "Unable to find app for caller "

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v2, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    const-string v0, " (pid="

    invoke-virtual {v2, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 21128
    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result v0

    invoke-virtual {v2, v0}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v0, ") when registering receiver "

    invoke-virtual {v2, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v2, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    invoke-direct {v1, v0}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v1

    .line 21140
    :cond_4
    nop

    .line 21141
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v1

    .line 21142
    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result v3

    .line 21145
    move v12, v1

    move-object v13, v2

    move v5, v3

    move-object v3, v13

    :goto_2
    invoke-direct {v8, v3, v13, v12}, Lcom/android/server/am/ActivityManagerService;->isInstantApp(Lcom/android/server/am/ProcessRecord;Ljava/lang/String;I)Z

    move-result v16

    .line 21146
    iget-object v1, v8, Lcom/android/server/am/ActivityManagerService;->mUserController:Lcom/android/server/am/UserController;

    const/16 v22, 0x1

    const/16 v23, 0x2

    const-string/jumbo v24, "registerReceiver"

    move-object/from16 v18, v1

    move/from16 v19, v5

    move/from16 v20, v12

    move/from16 v21, p6

    move-object/from16 v25, v13

    invoke-virtual/range {v18 .. v25}, Lcom/android/server/am/UserController;->handleIncomingUser(IIIZILjava/lang/String;Ljava/lang/String;)I

    move-result v7

    .line 21149
    invoke-virtual/range {p4 .. p4}, Landroid/content/IntentFilter;->actionsIterator()Ljava/util/Iterator;

    move-result-object v1

    .line 21150
    if-nez v1, :cond_5

    .line 21151
    new-instance v1, Ljava/util/ArrayList;

    invoke-direct {v1, v10}, Ljava/util/ArrayList;-><init>(I)V

    .line 21152
    invoke-virtual {v1, v2}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    .line 21153
    invoke-virtual {v1}, Ljava/util/ArrayList;->iterator()Ljava/util/Iterator;

    move-result-object v1

    .line 21157
    :cond_5
    const/4 v4, 0x2

    new-array v4, v4, [I

    const/4 v6, -0x1

    aput v6, v4, v14

    invoke-static {v12}, Landroid/os/UserHandle;->getUserId(I)I

    move-result v6

    aput v6, v4, v10

    .line 21158
    move-object v6, v2

    :goto_3
    invoke-interface {v1}, Ljava/util/Iterator;->hasNext()Z

    move-result v18

    if-eqz v18, :cond_9

    .line 21159
    invoke-interface {v1}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v18

    move-object/from16 v11, v18

    check-cast v11, Ljava/lang/String;

    .line 21160
    array-length v2, v4

    move-object/from16 v18, v6

    move v6, v14

    :goto_4
    if-ge v6, v2, :cond_8

    aget v14, v4, v6

    .line 21161
    iget-object v10, v8, Lcom/android/server/am/ActivityManagerService;->mStickyBroadcasts:Landroid/util/SparseArray;

    invoke-virtual {v10, v14}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    move-result-object v10

    check-cast v10, Landroid/util/ArrayMap;

    .line 21162
    if-eqz v10, :cond_7

    .line 21163
    invoke-virtual {v10, v11}, Landroid/util/ArrayMap;->get(Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object v10

    check-cast v10, Ljava/util/ArrayList;

    .line 21164
    if-eqz v10, :cond_7

    .line 21165
    if-nez v18, :cond_6

    .line 21166
    new-instance v14, Ljava/util/ArrayList;

    invoke-direct {v14}, Ljava/util/ArrayList;-><init>()V

    goto :goto_5

    .line 21168
    :cond_6
    move-object/from16 v14, v18

    :goto_5
    invoke-virtual {v14, v10}, Ljava/util/ArrayList;->addAll(Ljava/util/Collection;)Z

    .line 21160
    move-object/from16 v18, v14

    :cond_7
    add-int/lit8 v6, v6, 0x1

    const/4 v10, 0x1

    const/4 v14, 0x0

    goto :goto_4

    .line 21172
    :cond_8
    nop

    .line 21158
    move-object/from16 v6, v18

    const/4 v2, 0x0

    const/4 v10, 0x1

    const/16 v11, 0x3e8

    const/4 v14, 0x0

    goto :goto_3

    .line 21173
    :cond_9
    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_1

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    .line 21175
    nop

    .line 21176
    if-eqz v6, :cond_e

    .line 21177
    iget-object v1, v8, Lcom/android/server/am/ActivityManagerService;->mContext:Landroid/content/Context;

    invoke-virtual {v1}, Landroid/content/Context;->getContentResolver()Landroid/content/ContentResolver;

    move-result-object v1

    .line 21179
    invoke-virtual {v6}, Ljava/util/ArrayList;->size()I

    move-result v2

    const/4 v4, 0x0

    const/4 v10, 0x0

    :goto_6
    if-ge v4, v2, :cond_d

    .line 21180
    invoke-virtual {v6, v4}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v11

    check-cast v11, Landroid/content/Intent;

    .line 21182
    if-eqz v16, :cond_a

    .line 21183
    invoke-virtual {v11}, Landroid/content/Intent;->getFlags()I

    move-result v14

    const/high16 v18, 0x200000

    and-int v14, v14, v18

    if-nez v14, :cond_a

    .line 21184
    nop

    .line 21179
    move/from16 v30, v2

    goto :goto_7

    .line 21190
    :cond_a
    const-string v14, "ActivityManager"

    move/from16 v30, v2

    const/4 v2, 0x1

    invoke-virtual {v15, v1, v11, v2, v14}, Landroid/content/IntentFilter;->match(Landroid/content/ContentResolver;Landroid/content/Intent;ZLjava/lang/String;)I

    move-result v14

    if-ltz v14, :cond_c

    .line 21191
    if-nez v10, :cond_b

    .line 21192
    new-instance v10, Ljava/util/ArrayList;

    invoke-direct {v10}, Ljava/util/ArrayList;-><init>()V

    .line 21194
    :cond_b
    invoke-virtual {v10, v11}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    .line 21179
    :cond_c
    :goto_7
    add-int/lit8 v4, v4, 0x1

    move/from16 v2, v30

    goto :goto_6

    .line 21200
    :cond_d
    move-object v14, v10

    goto :goto_8

    :cond_e
    const/4 v14, 0x0

    :goto_8
    if-eqz v14, :cond_f

    const/4 v1, 0x0

    invoke-virtual {v14, v1}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Landroid/content/Intent;

    .line 21202
    move-object/from16 v18, v2

    goto :goto_9

    .line 21200
    :cond_f
    nop

    .line 21202
    const/16 v18, 0x0

    :goto_9
    if-nez v9, :cond_10

    .line 21203
    return-object v18

    .line 21206
    :cond_10
    monitor-enter p0

    :try_start_1
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    .line 21207
    if-eqz v3, :cond_12

    iget-object v1, v3, Lcom/android/server/am/ProcessRecord;->thread:Landroid/app/IApplicationThread;

    if-eqz v1, :cond_11

    iget-object v1, v3, Lcom/android/server/am/ProcessRecord;->thread:Landroid/app/IApplicationThread;

    .line 21208
    invoke-interface {v1}, Landroid/app/IApplicationThread;->asBinder()Landroid/os/IBinder;

    move-result-object v1

    invoke-interface/range {p1 .. p1}, Landroid/app/IApplicationThread;->asBinder()Landroid/os/IBinder;

    move-result-object v0

    if-eq v1, v0, :cond_12

    .line 21210
    :cond_11
    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    const/4 v0, 0x0

    return-object v0

    .line 21212
    :cond_12
    :try_start_2
    iget-object v0, v8, Lcom/android/server/am/ActivityManagerService;->mRegisteredReceivers:Ljava/util/HashMap;

    invoke-interface/range {p3 .. p3}, Landroid/content/IIntentReceiver;->asBinder()Landroid/os/IBinder;

    move-result-object v1

    invoke-virtual {v0, v1}, Ljava/util/HashMap;->get(Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Lcom/android/server/am/ReceiverList;

    .line 21213
    if-nez v0, :cond_15

    .line 21214
    new-instance v0, Lcom/android/server/am/ReceiverList;

    move-object v1, v0

    move-object v2, v8

    move v4, v5

    move v5, v12

    move v6, v7

    move v11, v7

    move-object v7, v9

    invoke-direct/range {v1 .. v7}, Lcom/android/server/am/ReceiverList;-><init>(Lcom/android/server/am/ActivityManagerService;Lcom/android/server/am/ProcessRecord;IIILandroid/content/IIntentReceiver;)V

    .line 21216
    iget-object v1, v0, Lcom/android/server/am/ReceiverList;->app:Lcom/android/server/am/ProcessRecord;

    if-eqz v1, :cond_14

    .line 21217
    iget-object v1, v0, Lcom/android/server/am/ReceiverList;->app:Lcom/android/server/am/ProcessRecord;

    iget-object v1, v1, Lcom/android/server/am/ProcessRecord;->receivers:Landroid/util/ArraySet;

    invoke-virtual {v1}, Landroid/util/ArraySet;->size()I

    move-result v1

    .line 21218
    const/16 v2, 0x3e8

    if-ge v1, v2, :cond_13

    .line 21223
    iget-object v1, v0, Lcom/android/server/am/ReceiverList;->app:Lcom/android/server/am/ProcessRecord;

    iget-object v1, v1, Lcom/android/server/am/ProcessRecord;->receivers:Landroid/util/ArraySet;

    invoke-virtual {v1, v0}, Landroid/util/ArraySet;->add(Ljava/lang/Object;)Z

    .line 21224
    nop

    .line 21232
    const/4 v2, 0x0

    goto :goto_a

    .line 21219
    :cond_13
    new-instance v2, Ljava/lang/IllegalStateException;

    new-instance v3, Ljava/lang/StringBuilder;

    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V

    const-string v4, "Too many receivers, total of "

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v3, v1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v1, ", registered for pid: "

    invoke-virtual {v3, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget v0, v0, Lcom/android/server/am/ReceiverList;->pid:I

    invoke-virtual {v3, v0}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v0, ", callerPackage: "

    invoke-virtual {v3, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v3, v13}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    invoke-direct {v2, v0}, Ljava/lang/IllegalStateException;-><init>(Ljava/lang/String;)V

    throw v2
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    .line 21226
    :cond_14
    :try_start_3
    invoke-interface/range {p3 .. p3}, Landroid/content/IIntentReceiver;->asBinder()Landroid/os/IBinder;

    move-result-object v1

    const/4 v2, 0x0

    invoke-interface {v1, v0, v2}, Landroid/os/IBinder;->linkToDeath(Landroid/os/IBinder$DeathRecipient;I)V
    :try_end_3
    .catch Landroid/os/RemoteException; {:try_start_3 .. :try_end_3} :catch_0
    .catchall {:try_start_3 .. :try_end_3} :catchall_0

    .line 21229
    nop

    .line 21230
    const/4 v1, 0x1

    :try_start_4
    iput-boolean v1, v0, Lcom/android/server/am/ReceiverList;->linkedToDeath:Z

    .line 21232
    :goto_a
    iget-object v1, v8, Lcom/android/server/am/ActivityManagerService;->mRegisteredReceivers:Ljava/util/HashMap;

    invoke-interface/range {p3 .. p3}, Landroid/content/IIntentReceiver;->asBinder()Landroid/os/IBinder;

    move-result-object v3

    invoke-virtual {v1, v3, v0}, Ljava/util/HashMap;->put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    goto :goto_b

    .line 21227
    :catch_0
    move-exception v0

    .line 21228
    monitor-exit p0
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    return-object v18

    .line 21233
    :cond_15
    move v11, v7

    const/4 v2, 0x0

    :try_start_5
    iget v1, v0, Lcom/android/server/am/ReceiverList;->uid:I

    if-ne v1, v12, :cond_1b

    .line 21238
    iget v1, v0, Lcom/android/server/am/ReceiverList;->pid:I

    if-ne v1, v5, :cond_1a

    .line 21243
    iget v1, v0, Lcom/android/server/am/ReceiverList;->userId:I

    if-ne v1, v11, :cond_19

    .line 21249
    :goto_b
    new-instance v1, Lcom/android/server/am/BroadcastFilter;

    move-object v9, v1

    move-object v10, v15

    move v3, v11

    move-object v11, v0

    move v4, v12

    move-object v12, v13

    move-object v6, v13

    move-object/from16 v13, p5

    move v5, v2

    move-object v2, v14

    move v14, v4

    move-object v4, v15

    move v15, v3

    invoke-direct/range {v9 .. v17}, Lcom/android/server/am/BroadcastFilter;-><init>(Landroid/content/IntentFilter;Lcom/android/server/am/ReceiverList;Ljava/lang/String;Ljava/lang/String;IIZZ)V

    .line 21251
    invoke-virtual {v0, v4}, Lcom/android/server/am/ReceiverList;->containsFilter(Landroid/content/IntentFilter;)Z

    move-result v3

    if-eqz v3, :cond_16

    .line 21252
    const-string v3, "ActivityManager"

    new-instance v7, Ljava/lang/StringBuilder;

    invoke-direct {v7}, Ljava/lang/StringBuilder;-><init>()V

    const-string v9, "Receiver with filter "

    invoke-virtual {v7, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v7, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    const-string v4, " already registered for pid "

    invoke-virtual {v7, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget v0, v0, Lcom/android/server/am/ReceiverList;->pid:I

    invoke-virtual {v7, v0}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v0, ", callerPackage is "

    invoke-virtual {v7, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v7, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v7}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    invoke-static {v3, v0}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    goto :goto_c

    .line 21256
    :cond_16
    invoke-virtual {v0, v1}, Lcom/android/server/am/ReceiverList;->add(Ljava/lang/Object;)Z

    .line 21257
    invoke-virtual {v1}, Lcom/android/server/am/BroadcastFilter;->debugCheck()Z

    move-result v0

    if-nez v0, :cond_17

    .line 21258
    const-string v0, "ActivityManager"

    const-string v3, "==> For Dynamic broadcast"

    invoke-static {v0, v3}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 21260
    :cond_17
    iget-object v0, v8, Lcom/android/server/am/ActivityManagerService;->mReceiverResolver:Lcom/android/server/IntentResolver;

    invoke-virtual {v0, v1}, Lcom/android/server/IntentResolver;->addFilter(Landroid/content/IntentFilter;)V

    .line 21265
    :goto_c
    if-eqz v2, :cond_18

    .line 21266
    new-instance v0, Ljava/util/ArrayList;

    invoke-direct {v0}, Ljava/util/ArrayList;-><init>()V

    .line 21267
    invoke-virtual {v0, v1}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    .line 21269
    invoke-virtual {v2}, Ljava/util/ArrayList;->size()I

    move-result v1

    .line 21270
    :goto_d
    if-ge v5, v1, :cond_18

    .line 21271
    invoke-virtual {v2, v5}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v3

    check-cast v3, Landroid/content/Intent;

    .line 21272
    invoke-virtual {v8, v3}, Lcom/android/server/am/ActivityManagerService;->broadcastQueueForIntent(Landroid/content/Intent;)Lcom/android/server/am/BroadcastQueue;

    move-result-object v4

    .line 21273
    new-instance v6, Lcom/android/server/am/BroadcastRecord;

    const/16 v22, 0x0

    const/16 v23, 0x0

    const/16 v24, -0x1

    const/16 v25, -0x1

    const/16 v26, 0x0

    const/16 v27, 0x0

    const/16 v28, 0x0

    const/16 v29, -0x1

    const/16 v30, 0x0

    const/16 v32, 0x0

    const/16 v33, 0x0

    const/16 v34, 0x0

    const/16 v35, 0x0

    const/16 v36, 0x0

    const/16 v37, 0x1

    const/16 v38, 0x1

    const/16 v39, -0x1

    move-object/from16 v19, v6

    move-object/from16 v20, v4

    move-object/from16 v21, v3

    move-object/from16 v31, v0

    invoke-direct/range {v19 .. v39}, Lcom/android/server/am/BroadcastRecord;-><init>(Lcom/android/server/am/BroadcastQueue;Landroid/content/Intent;Lcom/android/server/am/ProcessRecord;Ljava/lang/String;IIZLjava/lang/String;[Ljava/lang/String;ILandroid/app/BroadcastOptions;Ljava/util/List;Landroid/content/IIntentReceiver;ILjava/lang/String;Landroid/os/Bundle;ZZZI)V

    .line 21276
    invoke-virtual {v4, v6}, Lcom/android/server/am/BroadcastQueue;->enqueueParallelBroadcastLocked(Lcom/android/server/am/BroadcastRecord;)V

    .line 21277
    invoke-virtual {v4}, Lcom/android/server/am/BroadcastQueue;->scheduleBroadcastsLocked()V

    .line 21270
    add-int/lit8 v5, v5, 0x1

    goto :goto_d

    .line 21281
    :cond_18
    monitor-exit p0
    :try_end_5
    .catchall {:try_start_5 .. :try_end_5} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    return-object v18

    .line 21244
    :cond_19
    move v3, v11

    move-object v6, v13

    :try_start_6
    new-instance v1, Ljava/lang/IllegalArgumentException;

    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    const-string v4, "Receiver requested to register for user "

    invoke-virtual {v2, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v3, " was previously registered for user "

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget v0, v0, Lcom/android/server/am/ReceiverList;->userId:I

    invoke-virtual {v2, v0}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v0, " callerPackage is "

    invoke-virtual {v2, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v2, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    invoke-direct {v1, v0}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v1

    .line 21239
    :cond_1a
    move-object v6, v13

    new-instance v1, Ljava/lang/IllegalArgumentException;

    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    const-string v3, "Receiver requested to register for pid "

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v2, v5}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v3, " was previously registered for pid "

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget v0, v0, Lcom/android/server/am/ReceiverList;->pid:I

    invoke-virtual {v2, v0}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v0, " callerPackage is "

    invoke-virtual {v2, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v2, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    invoke-direct {v1, v0}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v1

    .line 21234
    :cond_1b
    move v4, v12

    move-object v6, v13

    new-instance v1, Ljava/lang/IllegalArgumentException;

    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    const-string v3, "Receiver requested to register for uid "

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v2, v4}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v3, " was previously registered for uid "

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget v0, v0, Lcom/android/server/am/ReceiverList;->uid:I

    invoke-virtual {v2, v0}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v0, " callerPackage is "

    invoke-virtual {v2, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v2, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    invoke-direct {v1, v0}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v1

    .line 21282
    :catchall_0
    move-exception v0

    monitor-exit p0
    :try_end_6
    .catchall {:try_start_6 .. :try_end_6} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw v0

    .line 21173
    :catchall_1
    move-exception v0

    :try_start_7
    monitor-exit p0
    :try_end_7
    .catchall {:try_start_7 .. :try_end_7} :catchall_1

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw v0
.end method

.method public registerRemoteAnimationForNextActivityStart(Ljava/lang/String;Landroid/view/RemoteAnimationAdapter;)V
    .locals 3
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Landroid/os/RemoteException;
        }
    .end annotation

    .line 27606
    const-string v0, "android.permission.CONTROL_REMOTE_APP_TRANSITION_ANIMATIONS"

    const-string/jumbo v1, "registerRemoteAnimationForNextActivityStart"

    invoke-virtual {p0, v0, v1}, Lcom/android/server/am/ActivityManagerService;->enforceCallingPermission(Ljava/lang/String;Ljava/lang/String;)V

    .line 27608
    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result v0

    invoke-virtual {p2, v0}, Landroid/view/RemoteAnimationAdapter;->setCallingPid(I)V

    .line 27609
    monitor-enter p0

    :try_start_0
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    .line 27610
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_1

    .line 27612
    :try_start_1
    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mActivityStartController:Lcom/android/server/am/ActivityStartController;

    invoke-virtual {v2, p1, p2}, Lcom/android/server/am/ActivityStartController;->registerRemoteAnimationForNextActivityStart(Ljava/lang/String;Landroid/view/RemoteAnimationAdapter;)V
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 27615
    :try_start_2
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 27616
    nop

    .line 27617
    monitor-exit p0
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_1

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    .line 27618
    return-void

    .line 27615
    :catchall_0
    move-exception p1

    :try_start_3
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    throw p1

    .line 27617
    :catchall_1
    move-exception p1

    monitor-exit p0
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_1

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw p1
.end method

.method public registerRemoteAnimations(Landroid/os/IBinder;Landroid/view/RemoteAnimationDefinition;)V
    .locals 2
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Landroid/os/RemoteException;
        }
    .end annotation

    .line 27586
    const-string v0, "android.permission.CONTROL_REMOTE_APP_TRANSITION_ANIMATIONS"

    const-string/jumbo v1, "registerRemoteAnimations"

    invoke-virtual {p0, v0, v1}, Lcom/android/server/am/ActivityManagerService;->enforceCallingPermission(Ljava/lang/String;Ljava/lang/String;)V

    .line 27588
    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result v0

    invoke-virtual {p2, v0}, Landroid/view/RemoteAnimationDefinition;->setCallingPid(I)V

    .line 27589
    monitor-enter p0

    :try_start_0
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    .line 27590
    invoke-static {p1}, Lcom/android/server/am/ActivityRecord;->isInStackLocked(Landroid/os/IBinder;)Lcom/android/server/am/ActivityRecord;

    move-result-object p1

    .line 27591
    if-nez p1, :cond_0

    .line 27592
    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_1

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    return-void

    .line 27594
    :cond_0
    :try_start_1
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_1

    .line 27596
    :try_start_2
    invoke-virtual {p1, p2}, Lcom/android/server/am/ActivityRecord;->registerRemoteAnimations(Landroid/view/RemoteAnimationDefinition;)V
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    .line 27598
    :try_start_3
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 27599
    nop

    .line 27600
    monitor-exit p0
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_1

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    .line 27601
    return-void

    .line 27598
    :catchall_0
    move-exception p1

    :try_start_4
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    throw p1

    .line 27600
    :catchall_1
    move-exception p1

    monitor-exit p0
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_1

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw p1
.end method

.method public registerTaskStackListener(Landroid/app/ITaskStackListener;)V
    .locals 2
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Landroid/os/RemoteException;
        }
    .end annotation

    .line 3750
    const-string v0, "android.permission.MANAGE_ACTIVITY_STACKS"

    const-string/jumbo v1, "registerTaskStackListener()"

    invoke-virtual {p0, v0, v1}, Lcom/android/server/am/ActivityManagerService;->enforceCallerIsRecentsOrHasPermission(Ljava/lang/String;Ljava/lang/String;)V

    .line 3752
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mTaskChangeNotificationController:Lcom/android/server/am/TaskChangeNotificationController;

    invoke-virtual {v0, p1}, Lcom/android/server/am/TaskChangeNotificationController;->registerTaskStackListener(Landroid/app/ITaskStackListener;)V

    .line 3753
    return-void
.end method

.method public registerUidObserver(Landroid/app/IUidObserver;IILjava/lang/String;)V
    .locals 3

    .line 14516
    invoke-direct {p0, p4}, Lcom/android/server/am/ActivityManagerService;->hasUsageStatsPermission(Ljava/lang/String;)Z

    move-result v0

    if-nez v0, :cond_0

    .line 14517
    const-string v0, "android.permission.PACKAGE_USAGE_STATS"

    const-string/jumbo v1, "registerUidObserver"

    invoke-virtual {p0, v0, v1}, Lcom/android/server/am/ActivityManagerService;->enforceCallingPermission(Ljava/lang/String;Ljava/lang/String;)V

    .line 14520
    :cond_0
    monitor-enter p0

    :try_start_0
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    .line 14521
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mUidObservers:Landroid/os/RemoteCallbackList;

    new-instance v1, Lcom/android/server/am/ActivityManagerService$UidObserverRegistration;

    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v2

    invoke-direct {v1, v2, p4, p2, p3}, Lcom/android/server/am/ActivityManagerService$UidObserverRegistration;-><init>(ILjava/lang/String;II)V

    invoke-virtual {v0, p1, v1}, Landroid/os/RemoteCallbackList;->register(Landroid/os/IInterface;Ljava/lang/Object;)Z

    .line 14523
    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    .line 14524
    return-void

    .line 14523
    :catchall_0
    move-exception p1

    :try_start_1
    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw p1
.end method

.method public registerUserSwitchObserver(Landroid/app/IUserSwitchObserver;Ljava/lang/String;)V
    .locals 1

    .line 26594
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mUserController:Lcom/android/server/am/UserController;

    invoke-virtual {v0, p1, p2}, Lcom/android/server/am/UserController;->registerUserSwitchObserver(Landroid/app/IUserSwitchObserver;Ljava/lang/String;)V

    .line 26595
    return-void
.end method

.method public releaseActivityInstance(Landroid/os/IBinder;)Z
    .locals 4

    .line 6007
    monitor-enter p0

    :try_start_0
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    .line 6008
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_1

    .line 6010
    :try_start_1
    invoke-static {p1}, Lcom/android/server/am/ActivityRecord;->isInStackLocked(Landroid/os/IBinder;)Lcom/android/server/am/ActivityRecord;

    move-result-object p1
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 6011
    if-nez p1, :cond_0

    .line 6012
    const/4 p1, 0x0

    .line 6016
    :try_start_2
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    monitor-exit p0
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_1

    .line 6012
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    return p1

    .line 6014
    :cond_0
    :try_start_3
    invoke-virtual {p1}, Lcom/android/server/am/ActivityRecord;->getStack()Lcom/android/server/am/ActivityStack;

    move-result-object v2

    const-string v3, "app-req"

    invoke-virtual {v2, p1, v3}, Lcom/android/server/am/ActivityStack;->safelyDestroyActivityLocked(Lcom/android/server/am/ActivityRecord;Ljava/lang/String;)Z

    move-result p1
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_0

    .line 6016
    :try_start_4
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    monitor-exit p0
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_1

    .line 6014
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    return p1

    .line 6016
    :catchall_0
    move-exception p1

    :try_start_5
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    throw p1

    .line 6018
    :catchall_1
    move-exception p1

    monitor-exit p0
    :try_end_5
    .catchall {:try_start_5 .. :try_end_5} :catchall_1

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw p1
.end method

.method public releasePersistableUriPermission(Landroid/net/Uri;ILjava/lang/String;I)V
    .locals 5

    .line 10685
    const/4 v0, 0x0

    if-eqz p3, :cond_0

    .line 10686
    const-string v1, "android.permission.FORCE_PERSISTABLE_URI_PERMISSIONS"

    const-string/jumbo v2, "releasePersistableUriPermission"

    invoke-virtual {p0, v1, v2}, Lcom/android/server/am/ActivityManagerService;->enforceCallingPermission(Ljava/lang/String;Ljava/lang/String;)V

    .line 10688
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mPackageManagerInt:Landroid/content/pm/PackageManagerInternal;

    invoke-virtual {v1, p3, v0, p4}, Landroid/content/pm/PackageManagerInternal;->getPackageUid(Ljava/lang/String;II)I

    move-result v1

    goto :goto_0

    .line 10690
    :cond_0
    const-string/jumbo v1, "releasePersistableUriPermission"

    invoke-virtual {p0, v1}, Lcom/android/server/am/ActivityManagerService;->enforceNotIsolatedCaller(Ljava/lang/String;)V

    .line 10691
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v1

    .line 10694
    :goto_0
    const/4 v2, 0x3

    invoke-static {p2, v2}, Lcom/android/internal/util/Preconditions;->checkFlagsArgument(II)I

    .line 10697
    monitor-enter p0

    :try_start_0
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    .line 10698
    nop

    .line 10700
    new-instance v2, Lcom/android/server/am/ActivityManagerService$GrantUri;

    invoke-direct {v2, p4, p1, v0}, Lcom/android/server/am/ActivityManagerService$GrantUri;-><init>(ILandroid/net/Uri;Z)V

    invoke-direct {p0, v1, v2}, Lcom/android/server/am/ActivityManagerService;->findUriPermissionLocked(ILcom/android/server/am/ActivityManagerService$GrantUri;)Lcom/android/server/am/UriPermission;

    move-result-object v2

    .line 10702
    new-instance v3, Lcom/android/server/am/ActivityManagerService$GrantUri;

    const/4 v4, 0x1

    invoke-direct {v3, p4, p1, v4}, Lcom/android/server/am/ActivityManagerService$GrantUri;-><init>(ILandroid/net/Uri;Z)V

    invoke-direct {p0, v1, v3}, Lcom/android/server/am/ActivityManagerService;->findUriPermissionLocked(ILcom/android/server/am/ActivityManagerService$GrantUri;)Lcom/android/server/am/UriPermission;

    move-result-object p4

    .line 10704
    if-nez v2, :cond_2

    if-nez p4, :cond_2

    if-eqz p3, :cond_1

    goto :goto_1

    .line 10705
    :cond_1
    new-instance p2, Ljava/lang/SecurityException;

    new-instance p3, Ljava/lang/StringBuilder;

    invoke-direct {p3}, Ljava/lang/StringBuilder;-><init>()V

    const-string p4, "No permission grants found for UID "

    invoke-virtual {p3, p4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {p3, v1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string p4, " and Uri "

    invoke-virtual {p3, p4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 10706
    invoke-virtual {p1}, Landroid/net/Uri;->toSafeString()Ljava/lang/String;

    move-result-object p1

    invoke-virtual {p3, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {p3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object p1

    invoke-direct {p2, p1}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw p2

    .line 10709
    :cond_2
    :goto_1
    if-eqz v2, :cond_3

    .line 10710
    invoke-virtual {v2, p2}, Lcom/android/server/am/UriPermission;->releasePersistableModes(I)Z

    move-result p1

    or-int/2addr v0, p1

    .line 10711
    invoke-virtual {p0, v2}, Lcom/android/server/am/ActivityManagerService;->removeUriPermissionIfNeededLocked(Lcom/android/server/am/UriPermission;)V

    .line 10713
    :cond_3
    if-eqz p4, :cond_4

    .line 10714
    invoke-virtual {p4, p2}, Lcom/android/server/am/UriPermission;->releasePersistableModes(I)Z

    move-result p1

    or-int/2addr v0, p1

    .line 10715
    invoke-virtual {p0, p4}, Lcom/android/server/am/ActivityManagerService;->removeUriPermissionIfNeededLocked(Lcom/android/server/am/UriPermission;)V

    .line 10718
    :cond_4
    if-eqz v0, :cond_5

    .line 10719
    invoke-direct {p0}, Lcom/android/server/am/ActivityManagerService;->schedulePersistUriGrants()V

    .line 10721
    :cond_5
    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    .line 10722
    return-void

    .line 10721
    :catchall_0
    move-exception p1

    :try_start_1
    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw p1
.end method

.method public releaseSomeActivities(Landroid/app/IApplicationThread;)V
    .locals 4

    .line 6023
    monitor-enter p0

    :try_start_0
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    .line 6024
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_1

    .line 6026
    :try_start_1
    invoke-virtual {p0, p1}, Lcom/android/server/am/ActivityManagerService;->getRecordForAppLocked(Landroid/app/IApplicationThread;)Lcom/android/server/am/ProcessRecord;

    move-result-object p1

    .line 6027
    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mStackSupervisor:Lcom/android/server/am/ActivityStackSupervisor;

    const-string v3, "low-mem"

    invoke-virtual {v2, p1, v3}, Lcom/android/server/am/ActivityStackSupervisor;->releaseSomeActivitiesLocked(Lcom/android/server/am/ProcessRecord;Ljava/lang/String;)V
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 6029
    :try_start_2
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 6030
    nop

    .line 6031
    monitor-exit p0
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_1

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    .line 6032
    return-void

    .line 6029
    :catchall_0
    move-exception p1

    :try_start_3
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    throw p1

    .line 6031
    :catchall_1
    move-exception p1

    monitor-exit p0
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_1

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw p1
.end method

.method public removeContentProvider(Landroid/os/IBinder;Z)V
    .locals 3

    .line 12878
    const-string/jumbo v0, "removeContentProvider"

    invoke-virtual {p0, v0}, Lcom/android/server/am/ActivityManagerService;->enforceNotIsolatedCaller(Ljava/lang/String;)V

    .line 12879
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v0

    .line 12881
    :try_start_0
    monitor-enter p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_1

    :try_start_1
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    .line 12884
    move-object v2, p1

    check-cast v2, Lcom/android/server/am/ContentProviderConnection;
    :try_end_1
    .catch Ljava/lang/ClassCastException; {:try_start_1 .. :try_end_1} :catch_0
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 12890
    nop

    .line 12891
    if-eqz v2, :cond_1

    .line 12894
    const/4 p1, 0x0

    :try_start_2
    invoke-virtual {p0, v2, p1, p1, p2}, Lcom/android/server/am/ActivityManagerService;->decProviderCountLocked(Lcom/android/server/am/ContentProviderConnection;Lcom/android/server/am/ContentProviderRecord;Landroid/os/IBinder;Z)Z

    move-result p1

    if-eqz p1, :cond_0

    .line 12895
    invoke-virtual {p0}, Lcom/android/server/am/ActivityManagerService;->updateOomAdjLocked()V

    .line 12897
    :cond_0
    monitor-exit p0
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    :try_start_3
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_1

    .line 12899
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 12900
    nop

    .line 12901
    return-void

    .line 12892
    :cond_1
    :try_start_4
    new-instance p1, Ljava/lang/NullPointerException;

    const-string p2, "connection is null"

    invoke-direct {p1, p2}, Ljava/lang/NullPointerException;-><init>(Ljava/lang/String;)V

    throw p1

    .line 12897
    :catchall_0
    move-exception p1

    goto :goto_0

    .line 12885
    :catch_0
    move-exception p2

    .line 12886
    new-instance p2, Ljava/lang/StringBuilder;

    invoke-direct {p2}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v2, "removeContentProvider: "

    invoke-virtual {p2, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {p2, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    const-string p1, " not a ContentProviderConnection"

    invoke-virtual {p2, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {p2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object p1

    .line 12888
    const-string p2, "ActivityManager"

    invoke-static {p2, p1}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 12889
    new-instance p2, Ljava/lang/IllegalArgumentException;

    invoke-direct {p2, p1}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw p2

    .line 12897
    :goto_0
    monitor-exit p0
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_0

    :try_start_5
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw p1
    :try_end_5
    .catchall {:try_start_5 .. :try_end_5} :catchall_1

    .line 12899
    :catchall_1
    move-exception p1

    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    throw p1
.end method

.method public removeContentProviderExternal(Ljava/lang/String;Landroid/os/IBinder;)V
    .locals 3

    .line 12904
    const-string v0, "android.permission.ACCESS_CONTENT_PROVIDERS_EXTERNALLY"

    const-string v1, "Do not have permission in call removeContentProviderExternal()"

    invoke-virtual {p0, v0, v1}, Lcom/android/server/am/ActivityManagerService;->enforceCallingPermission(Ljava/lang/String;Ljava/lang/String;)V

    .line 12906
    invoke-static {}, Landroid/os/UserHandle;->getCallingUserId()I

    move-result v0

    .line 12907
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v1

    .line 12909
    :try_start_0
    invoke-direct {p0, p1, p2, v0}, Lcom/android/server/am/ActivityManagerService;->removeContentProviderExternalUnchecked(Ljava/lang/String;Landroid/os/IBinder;I)V
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 12911
    invoke-static {v1, v2}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 12912
    nop

    .line 12913
    return-void

    .line 12911
    :catchall_0
    move-exception p1

    invoke-static {v1, v2}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    throw p1
.end method

.method final removeLruProcessLocked(Lcom/android/server/am/ProcessRecord;)V
    .locals 4

    .line 3875
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mLruProcesses:Ljava/util/ArrayList;

    invoke-virtual {v0, p1}, Ljava/util/ArrayList;->lastIndexOf(Ljava/lang/Object;)I

    move-result v0

    .line 3876
    if-ltz v0, :cond_5

    .line 3877
    iget-boolean v1, p1, Lcom/android/server/am/ProcessRecord;->killed:Z

    if-nez v1, :cond_2

    .line 3878
    iget-boolean v1, p1, Lcom/android/server/am/ProcessRecord;->persistent:Z

    if-eqz v1, :cond_0

    .line 3879
    const-string v1, "ActivityManager"

    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    const-string v3, "Removing persistent process that hasn\'t been killed: "

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v2, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object p1

    invoke-static {v1, p1}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    goto :goto_0

    .line 3881
    :cond_0
    const-string v1, "ActivityManager"

    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    const-string v3, "Removing process that hasn\'t been killed: "

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v2, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v2

    invoke-static {v1, v2}, Landroid/util/Slog;->wtfStack(Ljava/lang/String;Ljava/lang/String;)I

    .line 3882
    iget v1, p1, Lcom/android/server/am/ProcessRecord;->pid:I

    if-lez v1, :cond_1

    .line 3883
    iget v1, p1, Lcom/android/server/am/ProcessRecord;->pid:I

    invoke-static {v1}, Landroid/os/Process;->killProcessQuiet(I)V

    .line 3884
    iget v1, p1, Lcom/android/server/am/ProcessRecord;->uid:I

    iget p1, p1, Lcom/android/server/am/ProcessRecord;->pid:I

    invoke-static {v1, p1}, Lcom/android/server/am/ActivityManagerService;->killProcessGroup(II)V

    goto :goto_0

    .line 3886
    :cond_1
    const/4 v1, 0x0

    iput-boolean v1, p1, Lcom/android/server/am/ProcessRecord;->pendingStart:Z

    .line 3890
    :cond_2
    :goto_0
    iget p1, p0, Lcom/android/server/am/ActivityManagerService;->mLruProcessActivityStart:I

    if-gt v0, p1, :cond_3

    .line 3891
    iget p1, p0, Lcom/android/server/am/ActivityManagerService;->mLruProcessActivityStart:I

    add-int/lit8 p1, p1, -0x1

    iput p1, p0, Lcom/android/server/am/ActivityManagerService;->mLruProcessActivityStart:I

    .line 3893
    :cond_3
    iget p1, p0, Lcom/android/server/am/ActivityManagerService;->mLruProcessServiceStart:I

    if-gt v0, p1, :cond_4

    .line 3894
    iget p1, p0, Lcom/android/server/am/ActivityManagerService;->mLruProcessServiceStart:I

    add-int/lit8 p1, p1, -0x1

    iput p1, p0, Lcom/android/server/am/ActivityManagerService;->mLruProcessServiceStart:I

    .line 3896
    :cond_4
    iget-object p1, p0, Lcom/android/server/am/ActivityManagerService;->mLruProcesses:Ljava/util/ArrayList;

    invoke-virtual {p1, v0}, Ljava/util/ArrayList;->remove(I)Ljava/lang/Object;

    .line 3898
    :cond_5
    return-void
.end method

.method removeProcessLocked(Lcom/android/server/am/ProcessRecord;ZZLjava/lang/String;)Z
    .locals 6
    .annotation build Lcom/android/internal/annotations/GuardedBy;
        value = "this"
    .end annotation

    .line 7652
    iget-object v0, p1, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;

    .line 7653
    iget v1, p1, Lcom/android/server/am/ProcessRecord;->uid:I

    .line 7657
    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mProcessNames:Lcom/android/internal/app/ProcessMap;

    invoke-virtual {v2, v0, v1}, Lcom/android/internal/app/ProcessMap;->get(Ljava/lang/String;I)Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Lcom/android/server/am/ProcessRecord;

    .line 7658
    const/4 v3, 0x0

    if-eq v2, p1, :cond_0

    .line 7660
    const-string p2, "ActivityManager"

    new-instance p3, Ljava/lang/StringBuilder;

    invoke-direct {p3}, Ljava/lang/StringBuilder;-><init>()V

    const-string p4, "Ignoring remove of inactive process: "

    invoke-virtual {p3, p4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {p3, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    invoke-virtual {p3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object p1

    invoke-static {p2, p1}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 7661
    return v3

    .line 7663
    :cond_0
    invoke-direct {p0, v0, v1}, Lcom/android/server/am/ActivityManagerService;->removeProcessNameLocked(Ljava/lang/String;I)Lcom/android/server/am/ProcessRecord;

    .line 7664
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mHeavyWeightProcess:Lcom/android/server/am/ProcessRecord;

    const/4 v1, 0x0

    if-ne v0, p1, :cond_1

    .line 7665
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    const/16 v4, 0x19

    iget-object v5, p0, Lcom/android/server/am/ActivityManagerService;->mHeavyWeightProcess:Lcom/android/server/am/ProcessRecord;

    iget v5, v5, Lcom/android/server/am/ProcessRecord;->userId:I

    invoke-virtual {v2, v4, v5, v3}, Lcom/android/server/am/ActivityManagerService$MainHandler;->obtainMessage(III)Landroid/os/Message;

    move-result-object v2

    invoke-virtual {v0, v2}, Lcom/android/server/am/ActivityManagerService$MainHandler;->sendMessage(Landroid/os/Message;)Z

    .line 7667
    iput-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mHeavyWeightProcess:Lcom/android/server/am/ProcessRecord;

    .line 7669
    :cond_1
    nop

    .line 7670
    iget v0, p1, Lcom/android/server/am/ProcessRecord;->pid:I

    if-lez v0, :cond_2

    iget v0, p1, Lcom/android/server/am/ProcessRecord;->pid:I

    sget v2, Lcom/android/server/am/ActivityManagerService;->MY_PID:I

    if-ne v0, v2, :cond_3

    :cond_2
    iget v0, p1, Lcom/android/server/am/ProcessRecord;->pid:I

    if-nez v0, :cond_8

    iget-boolean v0, p1, Lcom/android/server/am/ProcessRecord;->pendingStart:Z

    if-eqz v0, :cond_8

    .line 7671
    :cond_3
    iget v0, p1, Lcom/android/server/am/ProcessRecord;->pid:I

    .line 7672
    if-lez v0, :cond_4

    .line 7673
    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Landroid/util/SparseArray;

    monitor-enter v2

    .line 7674
    :try_start_0
    iget-object v4, p0, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Landroid/util/SparseArray;

    invoke-virtual {v4, v0}, Landroid/util/SparseArray;->remove(I)V

    .line 7675
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    const/16 v4, 0x14

    invoke-virtual {v0, v4, p1}, Lcom/android/server/am/ActivityManagerService$MainHandler;->removeMessages(ILjava/lang/Object;)V

    .line 7676
    monitor-exit v2
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 7677
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mBatteryStatsService:Lcom/android/server/am/BatteryStatsService;

    iget-object v2, p1, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;

    iget-object v4, p1, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget v4, v4, Landroid/content/pm/ApplicationInfo;->uid:I

    invoke-virtual {v0, v2, v4}, Lcom/android/server/am/BatteryStatsService;->noteProcessFinish(Ljava/lang/String;I)V

    .line 7678
    iget-boolean v0, p1, Lcom/android/server/am/ProcessRecord;->isolated:Z

    if-eqz v0, :cond_4

    .line 7679
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mBatteryStatsService:Lcom/android/server/am/BatteryStatsService;

    iget v2, p1, Lcom/android/server/am/ProcessRecord;->uid:I

    iget-object v4, p1, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget v4, v4, Landroid/content/pm/ApplicationInfo;->uid:I

    invoke-virtual {v0, v2, v4}, Lcom/android/server/am/BatteryStatsService;->removeIsolatedUid(II)V

    .line 7680
    invoke-virtual {p0}, Lcom/android/server/am/ActivityManagerService;->getPackageManagerInternalLocked()Landroid/content/pm/PackageManagerInternal;

    move-result-object v0

    iget v2, p1, Lcom/android/server/am/ProcessRecord;->uid:I

    invoke-virtual {v0, v2}, Landroid/content/pm/PackageManagerInternal;->removeIsolatedUid(I)V

    goto :goto_0

    .line 7676
    :catchall_0
    move-exception p1

    :try_start_1
    monitor-exit v2
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    throw p1

    .line 7683
    :cond_4
    :goto_0
    nop

    .line 7684
    iget-boolean v0, p1, Lcom/android/server/am/ProcessRecord;->persistent:Z

    const/4 v2, 0x1

    if-eqz v0, :cond_6

    iget-boolean v0, p1, Lcom/android/server/am/ProcessRecord;->isolated:Z

    if-nez v0, :cond_6

    .line 7685
    if-nez p2, :cond_5

    .line 7686
    nop

    .line 7691
    move p2, v2

    move v0, v3

    goto :goto_1

    .line 7688
    :cond_5
    nop

    .line 7691
    move v0, v2

    move p2, v3

    goto :goto_1

    :cond_6
    move p2, v3

    move v0, p2

    :goto_1
    invoke-virtual {p1, p4, v2}, Lcom/android/server/am/ProcessRecord;->kill(Ljava/lang/String;Z)V

    .line 7692
    invoke-direct {p0, p1, p2, p3}, Lcom/android/server/am/ActivityManagerService;->handleAppDiedLocked(Lcom/android/server/am/ProcessRecord;ZZ)V

    .line 7693
    if-eqz p2, :cond_7

    .line 7694
    invoke-virtual {p0, p1}, Lcom/android/server/am/ActivityManagerService;->removeLruProcessLocked(Lcom/android/server/am/ProcessRecord;)V

    .line 7695
    iget-object p1, p1, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    invoke-virtual {p0, p1, v1, v3, v1}, Lcom/android/server/am/ActivityManagerService;->addAppLocked(Landroid/content/pm/ApplicationInfo;Ljava/lang/String;ZLjava/lang/String;)Lcom/android/server/am/ProcessRecord;

    .line 7697
    :cond_7
    goto :goto_2

    .line 7698
    :cond_8
    iget-object p2, p0, Lcom/android/server/am/ActivityManagerService;->mRemovedProcesses:Ljava/util/ArrayList;

    invoke-virtual {p2, p1}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    .line 7701
    move v0, v3

    :goto_2
    return v0
.end method

.method removeReceiverLocked(Lcom/android/server/am/ReceiverList;)V
    .locals 3

    .line 21330
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mRegisteredReceivers:Ljava/util/HashMap;

    iget-object v1, p1, Lcom/android/server/am/ReceiverList;->receiver:Landroid/content/IIntentReceiver;

    invoke-interface {v1}, Landroid/content/IIntentReceiver;->asBinder()Landroid/os/IBinder;

    move-result-object v1

    invoke-virtual {v0, v1}, Ljava/util/HashMap;->remove(Ljava/lang/Object;)Ljava/lang/Object;

    .line 21331
    invoke-virtual {p1}, Lcom/android/server/am/ReceiverList;->size()I

    move-result v0

    add-int/lit8 v0, v0, -0x1

    :goto_0
    if-ltz v0, :cond_0

    .line 21332
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mReceiverResolver:Lcom/android/server/IntentResolver;

    invoke-virtual {p1, v0}, Lcom/android/server/am/ReceiverList;->get(I)Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Lcom/android/server/am/BroadcastFilter;

    invoke-virtual {v1, v2}, Lcom/android/server/IntentResolver;->removeFilter(Landroid/content/IntentFilter;)V

    .line 21331
    add-int/lit8 v0, v0, -0x1

    goto :goto_0

    .line 21334
    :cond_0
    return-void
.end method

.method public removeStack(I)V
    .locals 5

    .line 11237
    const-string v0, "android.permission.MANAGE_ACTIVITY_STACKS"

    const-string/jumbo v1, "removeStack()"

    invoke-virtual {p0, v0, v1}, Lcom/android/server/am/ActivityManagerService;->enforceCallerIsRecentsOrHasPermission(Ljava/lang/String;Ljava/lang/String;)V

    .line 11238
    monitor-enter p0

    :try_start_0
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    .line 11239
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_1

    .line 11241
    :try_start_1
    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mStackSupervisor:Lcom/android/server/am/ActivityStackSupervisor;

    invoke-virtual {v2, p1}, Lcom/android/server/am/ActivityStackSupervisor;->getStack(I)Lcom/android/server/am/ActivityStack;

    move-result-object v2

    .line 11242
    if-nez v2, :cond_0

    .line 11243
    const-string v2, "ActivityManager"

    new-instance v3, Ljava/lang/StringBuilder;

    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v4, "removeStack: No stack with id="

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v3, p1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object p1

    invoke-static {v2, p1}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 11252
    :try_start_2
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    monitor-exit p0
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_1

    .line 11244
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    return-void

    .line 11246
    :cond_0
    :try_start_3
    invoke-virtual {v2}, Lcom/android/server/am/ActivityStack;->isActivityTypeStandardOrUndefined()Z

    move-result p1

    if-eqz p1, :cond_1

    .line 11250
    iget-object p1, p0, Lcom/android/server/am/ActivityManagerService;->mStackSupervisor:Lcom/android/server/am/ActivityStackSupervisor;

    invoke-virtual {p1, v2}, Lcom/android/server/am/ActivityStackSupervisor;->removeStack(Lcom/android/server/am/ActivityStack;)V
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_0

    .line 11252
    :try_start_4
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 11253
    nop

    .line 11254
    monitor-exit p0
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_1

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    .line 11255
    return-void

    .line 11247
    :cond_1
    :try_start_5
    new-instance p1, Ljava/lang/IllegalArgumentException;

    const-string v2, "Removing non-standard stack is not allowed."

    invoke-direct {p1, v2}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw p1
    :try_end_5
    .catchall {:try_start_5 .. :try_end_5} :catchall_0

    .line 11252
    :catchall_0
    move-exception p1

    :try_start_6
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    throw p1

    .line 11254
    :catchall_1
    move-exception p1

    monitor-exit p0
    :try_end_6
    .catchall {:try_start_6 .. :try_end_6} :catchall_1

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw p1
.end method

.method public removeStacksInWindowingModes([I)V
    .locals 3

    .line 11263
    const-string v0, "android.permission.MANAGE_ACTIVITY_STACKS"

    const-string/jumbo v1, "removeStacksInWindowingModes()"

    invoke-virtual {p0, v0, v1}, Lcom/android/server/am/ActivityManagerService;->enforceCallerIsRecentsOrHasPermission(Ljava/lang/String;Ljava/lang/String;)V

    .line 11265
    monitor-enter p0

    :try_start_0
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    .line 11266
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_1

    .line 11268
    :try_start_1
    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mStackSupervisor:Lcom/android/server/am/ActivityStackSupervisor;

    invoke-virtual {v2, p1}, Lcom/android/server/am/ActivityStackSupervisor;->removeStacksInWindowingModes([I)V
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 11270
    :try_start_2
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 11271
    nop

    .line 11272
    monitor-exit p0
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_1

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    .line 11273
    return-void

    .line 11270
    :catchall_0
    move-exception p1

    :try_start_3
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    throw p1

    .line 11272
    :catchall_1
    move-exception p1

    monitor-exit p0
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_1

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw p1
.end method

.method public removeStacksWithActivityTypes([I)V
    .locals 3

    .line 11277
    const-string v0, "android.permission.MANAGE_ACTIVITY_STACKS"

    const-string/jumbo v1, "removeStacksWithActivityTypes()"

    invoke-virtual {p0, v0, v1}, Lcom/android/server/am/ActivityManagerService;->enforceCallerIsRecentsOrHasPermission(Ljava/lang/String;Ljava/lang/String;)V

    .line 11279
    monitor-enter p0

    :try_start_0
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    .line 11280
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_1

    .line 11282
    :try_start_1
    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mStackSupervisor:Lcom/android/server/am/ActivityStackSupervisor;

    invoke-virtual {v2, p1}, Lcom/android/server/am/ActivityStackSupervisor;->removeStacksWithActivityTypes([I)V
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 11284
    :try_start_2
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 11285
    nop

    .line 11286
    monitor-exit p0
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_1

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    .line 11287
    return-void

    .line 11284
    :catchall_0
    move-exception p1

    :try_start_3
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    throw p1

    .line 11286
    :catchall_1
    move-exception p1

    monitor-exit p0
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_1

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw p1
.end method

.method public removeTask(I)Z
    .locals 5

    .line 11321
    const-string v0, "android.permission.REMOVE_TASKS"

    const-string/jumbo v1, "removeTask()"

    invoke-virtual {p0, v0, v1}, Lcom/android/server/am/ActivityManagerService;->enforceCallerIsRecentsOrHasPermission(Ljava/lang/String;Ljava/lang/String;)V

    .line 11322
    monitor-enter p0

    :try_start_0
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    .line 11323
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_1

    .line 11325
    :try_start_1
    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mStackSupervisor:Lcom/android/server/am/ActivityStackSupervisor;

    const-string/jumbo v3, "remove-task"

    const/4 v4, 0x1

    invoke-virtual {v2, p1, v4, v4, v3}, Lcom/android/server/am/ActivityStackSupervisor;->removeTaskByIdLocked(IZZLjava/lang/String;)Z

    move-result p1
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 11328
    :try_start_2
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    monitor-exit p0
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_1

    .line 11325
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    return p1

    .line 11328
    :catchall_0
    move-exception p1

    :try_start_3
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    throw p1

    .line 11330
    :catchall_1
    move-exception p1

    monitor-exit p0
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_1

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw p1
.end method

.method removeUriPermissionIfNeededLocked(Lcom/android/server/am/UriPermission;)V
    .locals 2
    .annotation build Lcom/android/internal/annotations/GuardedBy;
        value = "this"
    .end annotation

    .line 10209
    iget v0, p1, Lcom/android/server/am/UriPermission;->modeFlags:I

    if-nez v0, :cond_0

    .line 10210
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mGrantedUriPermissions:Landroid/util/SparseArray;

    iget v1, p1, Lcom/android/server/am/UriPermission;->targetUid:I

    invoke-virtual {v0, v1}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Landroid/util/ArrayMap;

    .line 10212
    if-eqz v0, :cond_0

    .line 10216
    iget-object v1, p1, Lcom/android/server/am/UriPermission;->uri:Lcom/android/server/am/ActivityManagerService$GrantUri;

    invoke-virtual {v0, v1}, Landroid/util/ArrayMap;->remove(Ljava/lang/Object;)Ljava/lang/Object;

    .line 10217
    invoke-virtual {v0}, Landroid/util/ArrayMap;->isEmpty()Z

    move-result v0

    if-eqz v0, :cond_0

    .line 10218
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mGrantedUriPermissions:Landroid/util/SparseArray;

    iget p1, p1, Lcom/android/server/am/UriPermission;->targetUid:I

    invoke-virtual {v0, p1}, Landroid/util/SparseArray;->remove(I)V

    .line 10222
    :cond_0
    return-void
.end method

.method public reportActivityFullyDrawn(Landroid/os/IBinder;Z)V
    .locals 0

    .line 5782
    monitor-enter p0

    :try_start_0
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    .line 5783
    invoke-static {p1}, Lcom/android/server/am/ActivityRecord;->isInStackLocked(Landroid/os/IBinder;)Lcom/android/server/am/ActivityRecord;

    move-result-object p1

    .line 5784
    if-nez p1, :cond_0

    .line 5785
    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    return-void

    .line 5787
    :cond_0
    :try_start_1
    invoke-virtual {p1, p2}, Lcom/android/server/am/ActivityRecord;->reportFullyDrawnLocked(Z)V

    .line 5788
    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    .line 5789
    return-void

    .line 5788
    :catchall_0
    move-exception p1

    :try_start_2
    monitor-exit p0
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw p1
.end method

.method public reportAssistContextExtras(Landroid/os/IBinder;Landroid/os/Bundle;Landroid/app/assist/AssistStructure;Landroid/app/assist/AssistContent;Landroid/net/Uri;)V
    .locals 1

    .line 14407
    check-cast p1, Lcom/android/server/am/ActivityManagerService$PendingAssistExtras;

    .line 14408
    monitor-enter p1

    .line 14409
    :try_start_0
    iput-object p2, p1, Lcom/android/server/am/ActivityManagerService$PendingAssistExtras;->result:Landroid/os/Bundle;

    .line 14410
    iput-object p3, p1, Lcom/android/server/am/ActivityManagerService$PendingAssistExtras;->structure:Landroid/app/assist/AssistStructure;

    .line 14411
    iput-object p4, p1, Lcom/android/server/am/ActivityManagerService$PendingAssistExtras;->content:Landroid/app/assist/AssistContent;

    .line 14412
    if-eqz p5, :cond_0

    .line 14413
    iget-object p4, p1, Lcom/android/server/am/ActivityManagerService$PendingAssistExtras;->extras:Landroid/os/Bundle;

    const-string v0, "android.intent.extra.REFERRER"

    invoke-virtual {p4, v0, p5}, Landroid/os/Bundle;->putParcelable(Ljava/lang/String;Landroid/os/Parcelable;)V

    .line 14415
    :cond_0
    if-eqz p3, :cond_1

    .line 14416
    iget-boolean p4, p1, Lcom/android/server/am/ActivityManagerService$PendingAssistExtras;->isHome:Z

    invoke-virtual {p3, p4}, Landroid/app/assist/AssistStructure;->setHomeActivity(Z)V

    .line 14418
    :cond_1
    const/4 p3, 0x1

    iput-boolean p3, p1, Lcom/android/server/am/ActivityManagerService$PendingAssistExtras;->haveResult:Z

    .line 14419
    invoke-virtual {p1}, Ljava/lang/Object;->notifyAll()V

    .line 14420
    iget-object p3, p1, Lcom/android/server/am/ActivityManagerService$PendingAssistExtras;->intent:Landroid/content/Intent;

    if-nez p3, :cond_2

    iget-object p3, p1, Lcom/android/server/am/ActivityManagerService$PendingAssistExtras;->receiver:Landroid/app/IAssistDataReceiver;

    if-nez p3, :cond_2

    .line 14422
    monitor-exit p1

    return-void

    .line 14424
    :cond_2
    monitor-exit p1
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_2

    .line 14426
    nop

    .line 14427
    const/4 p3, 0x0

    .line 14428
    monitor-enter p0

    :try_start_1
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    .line 14429
    invoke-direct {p0, p1, p2}, Lcom/android/server/am/ActivityManagerService;->buildAssistBundleLocked(Lcom/android/server/am/ActivityManagerService$PendingAssistExtras;Landroid/os/Bundle;)V

    .line 14430
    iget-object p2, p0, Lcom/android/server/am/ActivityManagerService;->mPendingAssistExtras:Ljava/util/ArrayList;

    invoke-virtual {p2, p1}, Ljava/util/ArrayList;->remove(Ljava/lang/Object;)Z

    move-result p2

    .line 14431
    iget-object p4, p0, Lcom/android/server/am/ActivityManagerService;->mUiHandler:Landroid/os/Handler;

    invoke-virtual {p4, p1}, Landroid/os/Handler;->removeCallbacks(Ljava/lang/Runnable;)V

    .line 14432
    if-nez p2, :cond_3

    .line 14434
    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_1

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    return-void

    .line 14437
    :cond_3
    :try_start_2
    iget-object p2, p1, Lcom/android/server/am/ActivityManagerService$PendingAssistExtras;->receiver:Landroid/app/IAssistDataReceiver;

    if-eqz p2, :cond_4

    .line 14439
    new-instance p3, Landroid/os/Bundle;

    invoke-direct {p3}, Landroid/os/Bundle;-><init>()V

    .line 14440
    const-string p4, "data"

    iget-object p5, p1, Lcom/android/server/am/ActivityManagerService$PendingAssistExtras;->extras:Landroid/os/Bundle;

    invoke-virtual {p3, p4, p5}, Landroid/os/Bundle;->putBundle(Ljava/lang/String;Landroid/os/Bundle;)V

    .line 14441
    const-string/jumbo p4, "structure"

    iget-object p5, p1, Lcom/android/server/am/ActivityManagerService$PendingAssistExtras;->structure:Landroid/app/assist/AssistStructure;

    invoke-virtual {p3, p4, p5}, Landroid/os/Bundle;->putParcelable(Ljava/lang/String;Landroid/os/Parcelable;)V

    .line 14442
    const-string p4, "content"

    iget-object p5, p1, Lcom/android/server/am/ActivityManagerService$PendingAssistExtras;->content:Landroid/app/assist/AssistContent;

    invoke-virtual {p3, p4, p5}, Landroid/os/Bundle;->putParcelable(Ljava/lang/String;Landroid/os/Parcelable;)V

    .line 14443
    const-string/jumbo p4, "receiverExtras"

    iget-object p5, p1, Lcom/android/server/am/ActivityManagerService$PendingAssistExtras;->receiverExtras:Landroid/os/Bundle;

    invoke-virtual {p3, p4, p5}, Landroid/os/Bundle;->putBundle(Ljava/lang/String;Landroid/os/Bundle;)V

    .line 14445
    :cond_4
    monitor-exit p0
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_1

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    .line 14446
    if-eqz p2, :cond_5

    .line 14448
    :try_start_3
    invoke-interface {p2, p3}, Landroid/app/IAssistDataReceiver;->onHandleAssistData(Landroid/os/Bundle;)V
    :try_end_3
    .catch Landroid/os/RemoteException; {:try_start_3 .. :try_end_3} :catch_0

    .line 14450
    goto :goto_0

    .line 14449
    :catch_0
    move-exception p1

    .line 14451
    :goto_0
    return-void

    .line 14454
    :cond_5
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide p2

    .line 14456
    :try_start_4
    iget-object p4, p1, Lcom/android/server/am/ActivityManagerService$PendingAssistExtras;->intent:Landroid/content/Intent;

    invoke-virtual {p4}, Landroid/content/Intent;->getAction()Ljava/lang/String;

    move-result-object p4

    const-string p5, "android.service.voice.VoiceInteractionService"

    invoke-static {p4, p5}, Landroid/text/TextUtils;->equals(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Z

    move-result p4

    if-eqz p4, :cond_6

    .line 14458
    iget-object p4, p1, Lcom/android/server/am/ActivityManagerService$PendingAssistExtras;->intent:Landroid/content/Intent;

    iget-object p5, p1, Lcom/android/server/am/ActivityManagerService$PendingAssistExtras;->extras:Landroid/os/Bundle;

    invoke-virtual {p4, p5}, Landroid/content/Intent;->putExtras(Landroid/os/Bundle;)Landroid/content/Intent;

    .line 14459
    iget-object p4, p0, Lcom/android/server/am/ActivityManagerService;->mContext:Landroid/content/Context;

    iget-object p5, p1, Lcom/android/server/am/ActivityManagerService$PendingAssistExtras;->intent:Landroid/content/Intent;

    new-instance v0, Landroid/os/UserHandle;

    iget p1, p1, Lcom/android/server/am/ActivityManagerService$PendingAssistExtras;->userHandle:I

    invoke-direct {v0, p1}, Landroid/os/UserHandle;-><init>(I)V

    invoke-virtual {p4, p5, v0}, Landroid/content/Context;->startServiceAsUser(Landroid/content/Intent;Landroid/os/UserHandle;)Landroid/content/ComponentName;

    goto :goto_1

    .line 14461
    :cond_6
    iget-object p4, p1, Lcom/android/server/am/ActivityManagerService$PendingAssistExtras;->intent:Landroid/content/Intent;

    iget-object p5, p1, Lcom/android/server/am/ActivityManagerService$PendingAssistExtras;->extras:Landroid/os/Bundle;

    invoke-virtual {p4, p5}, Landroid/content/Intent;->replaceExtras(Landroid/os/Bundle;)Landroid/content/Intent;

    .line 14462
    iget-object p4, p1, Lcom/android/server/am/ActivityManagerService$PendingAssistExtras;->intent:Landroid/content/Intent;

    const/high16 p5, 0x34000000

    invoke-virtual {p4, p5}, Landroid/content/Intent;->setFlags(I)Landroid/content/Intent;

    .line 14465
    const-string p4, "assist"

    invoke-virtual {p0, p4}, Lcom/android/server/am/ActivityManagerService;->closeSystemDialogs(Ljava/lang/String;)V
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_0

    .line 14468
    :try_start_5
    iget-object p4, p0, Lcom/android/server/am/ActivityManagerService;->mContext:Landroid/content/Context;

    iget-object p5, p1, Lcom/android/server/am/ActivityManagerService$PendingAssistExtras;->intent:Landroid/content/Intent;

    new-instance v0, Landroid/os/UserHandle;

    iget p1, p1, Lcom/android/server/am/ActivityManagerService$PendingAssistExtras;->userHandle:I

    invoke-direct {v0, p1}, Landroid/os/UserHandle;-><init>(I)V

    invoke-virtual {p4, p5, v0}, Landroid/content/Context;->startActivityAsUser(Landroid/content/Intent;Landroid/os/UserHandle;)V
    :try_end_5
    .catch Landroid/content/ActivityNotFoundException; {:try_start_5 .. :try_end_5} :catch_1
    .catchall {:try_start_5 .. :try_end_5} :catchall_0

    .line 14471
    goto :goto_1

    .line 14469
    :catch_1
    move-exception p1

    .line 14470
    :try_start_6
    const-string p4, "ActivityManager"

    const-string p5, "No activity to handle assist action."

    invoke-static {p4, p5, p1}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I
    :try_end_6
    .catchall {:try_start_6 .. :try_end_6} :catchall_0

    .line 14474
    :goto_1
    invoke-static {p2, p3}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 14475
    nop

    .line 14476
    return-void

    .line 14474
    :catchall_0
    move-exception p1

    invoke-static {p2, p3}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    throw p1

    .line 14445
    :catchall_1
    move-exception p1

    :try_start_7
    monitor-exit p0
    :try_end_7
    .catchall {:try_start_7 .. :try_end_7} :catchall_1

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw p1

    .line 14424
    :catchall_2
    move-exception p2

    :try_start_8
    monitor-exit p1
    :try_end_8
    .catchall {:try_start_8 .. :try_end_8} :catchall_2

    throw p2
.end method

.method reportCurKeyguardUsageEventLocked()V
    .locals 1

    .line 13552
    iget-boolean v0, p0, Lcom/android/server/am/ActivityManagerService;->mKeyguardShown:Z

    if-eqz v0, :cond_0

    .line 13553
    const/16 v0, 0x11

    goto :goto_0

    .line 13554
    :cond_0
    const/16 v0, 0x12

    .line 13552
    :goto_0
    invoke-virtual {p0, v0}, Lcom/android/server/am/ActivityManagerService;->reportGlobalUsageEventLocked(I)V

    .line 13555
    return-void
.end method

.method reportCurWakefulnessUsageEventLocked()V
    .locals 2

    .line 13546
    iget v0, p0, Lcom/android/server/am/ActivityManagerService;->mWakefulness:I

    const/4 v1, 0x1

    if-ne v0, v1, :cond_0

    .line 13547
    const/16 v0, 0xf

    goto :goto_0

    .line 13548
    :cond_0
    const/16 v0, 0x10

    .line 13546
    :goto_0
    invoke-virtual {p0, v0}, Lcom/android/server/am/ActivityManagerService;->reportGlobalUsageEventLocked(I)V

    .line 13549
    return-void
.end method

.method reportGlobalUsageEventLocked(I)V
    .locals 5

    .line 13536
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mUsageStatsService:Landroid/app/usage/UsageStatsManagerInternal;

    const-string v1, "android"

    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mUserController:Lcom/android/server/am/UserController;

    invoke-virtual {v2}, Lcom/android/server/am/UserController;->getCurrentUserId()I

    move-result v2

    invoke-virtual {v0, v1, v2, p1}, Landroid/app/usage/UsageStatsManagerInternal;->reportEvent(Ljava/lang/String;II)V

    .line 13537
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mUserController:Lcom/android/server/am/UserController;

    invoke-virtual {v0}, Lcom/android/server/am/UserController;->getCurrentProfileIds()[I

    move-result-object v0

    .line 13538
    if-eqz v0, :cond_0

    .line 13539
    array-length v1, v0

    add-int/lit8 v1, v1, -0x1

    :goto_0
    if-ltz v1, :cond_0

    .line 13540
    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mUsageStatsService:Landroid/app/usage/UsageStatsManagerInternal;

    const/4 v3, 0x0

    check-cast v3, Ljava/lang/String;

    aget v4, v0, v1

    invoke-virtual {v2, v3, v4, p1}, Landroid/app/usage/UsageStatsManagerInternal;->reportEvent(Ljava/lang/String;II)V

    .line 13539
    add-int/lit8 v1, v1, -0x1

    goto :goto_0

    .line 13543
    :cond_0
    return-void
.end method

.method reportMemUsage(Ljava/util/ArrayList;)V
    .locals 36
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "(",
            "Ljava/util/ArrayList<",
            "Lcom/android/server/am/ProcessMemInfo;",
            ">;)V"
        }
    .end annotation

    move-object/from16 v11, p0

    .line 20063
    move-object/from16 v0, p1

    new-instance v1, Landroid/util/SparseArray;

    invoke-virtual/range {p1 .. p1}, Ljava/util/ArrayList;->size()I

    move-result v2

    invoke-direct {v1, v2}, Landroid/util/SparseArray;-><init>(I)V

    .line 20064
    invoke-virtual/range {p1 .. p1}, Ljava/util/ArrayList;->size()I

    move-result v2

    const/4 v10, 0x0

    move v3, v10

    :goto_0
    if-ge v3, v2, :cond_0

    .line 20065
    invoke-virtual {v0, v3}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v4

    check-cast v4, Lcom/android/server/am/ProcessMemInfo;

    .line 20066
    iget v5, v4, Lcom/android/server/am/ProcessMemInfo;->pid:I

    invoke-virtual {v1, v5, v4}, Landroid/util/SparseArray;->put(ILjava/lang/Object;)V

    .line 20064
    add-int/lit8 v3, v3, 0x1

    goto :goto_0

    .line 20068
    :cond_0
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/am/ActivityManagerService;->updateCpuStatsNow()V

    .line 20069
    const/4 v12, 0x1

    new-array v2, v12, [J

    .line 20072
    iget-object v3, v11, Lcom/android/server/am/ActivityManagerService;->mProcessCpuTracker:Lcom/android/internal/os/ProcessCpuTracker;

    monitor-enter v3

    .line 20073
    :try_start_0
    iget-object v4, v11, Lcom/android/server/am/ActivityManagerService;->mProcessCpuTracker:Lcom/android/internal/os/ProcessCpuTracker;

    sget-object v5, Lcom/android/server/am/-$$Lambda$ActivityManagerService$dLQ66dH4nIti4hweaVJTGHj2tMU;->INSTANCE:Lcom/android/server/am/-$$Lambda$ActivityManagerService$dLQ66dH4nIti4hweaVJTGHj2tMU;

    invoke-virtual {v4, v5}, Lcom/android/internal/os/ProcessCpuTracker;->getStats(Lcom/android/internal/os/ProcessCpuTracker$FilterStats;)Ljava/util/List;

    move-result-object v4

    .line 20076
    monitor-exit v3
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_2

    .line 20077
    invoke-interface {v4}, Ljava/util/List;->size()I

    move-result v3

    .line 20078
    move v5, v10

    :goto_1
    const/4 v6, 0x0

    const-wide/16 v13, 0x0

    if-ge v5, v3, :cond_2

    .line 20079
    invoke-interface {v4, v5}, Ljava/util/List;->get(I)Ljava/lang/Object;

    move-result-object v7

    check-cast v7, Lcom/android/internal/os/ProcessCpuTracker$Stats;

    .line 20080
    iget v8, v7, Lcom/android/internal/os/ProcessCpuTracker$Stats;->pid:I

    invoke-static {v8, v6, v2}, Landroid/os/Debug;->getPss(I[J[J)J

    move-result-wide v8

    .line 20081
    cmp-long v6, v8, v13

    if-lez v6, :cond_1

    .line 20082
    iget v6, v7, Lcom/android/internal/os/ProcessCpuTracker$Stats;->pid:I

    invoke-virtual {v1, v6}, Landroid/util/SparseArray;->indexOfKey(I)I

    move-result v6

    if-gez v6, :cond_1

    .line 20083
    new-instance v6, Lcom/android/server/am/ProcessMemInfo;

    iget-object v14, v7, Lcom/android/internal/os/ProcessCpuTracker$Stats;->name:Ljava/lang/String;

    iget v15, v7, Lcom/android/internal/os/ProcessCpuTracker$Stats;->pid:I

    const/16 v16, -0x3e8

    const/16 v17, -0x1

    const-string v18, "native"

    const/16 v19, 0x0

    move-object v13, v6

    invoke-direct/range {v13 .. v19}, Lcom/android/server/am/ProcessMemInfo;-><init>(Ljava/lang/String;IIILjava/lang/String;Ljava/lang/String;)V

    .line 20085
    iput-wide v8, v6, Lcom/android/server/am/ProcessMemInfo;->pss:J

    .line 20086
    aget-wide v7, v2, v10

    iput-wide v7, v6, Lcom/android/server/am/ProcessMemInfo;->memtrack:J

    .line 20087
    invoke-virtual {v0, v6}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    .line 20078
    :cond_1
    add-int/lit8 v5, v5, 0x1

    goto :goto_1

    .line 20092
    :cond_2
    nop

    .line 20093
    nop

    .line 20094
    invoke-virtual/range {p1 .. p1}, Ljava/util/ArrayList;->size()I

    move-result v1

    move v3, v10

    move-wide v4, v13

    move-wide v7, v4

    :goto_2
    if-ge v3, v1, :cond_4

    .line 20095
    invoke-virtual {v0, v3}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v9

    check-cast v9, Lcom/android/server/am/ProcessMemInfo;

    .line 20096
    iget-wide v10, v9, Lcom/android/server/am/ProcessMemInfo;->pss:J

    cmp-long v10, v10, v13

    if-nez v10, :cond_3

    .line 20097
    iget v10, v9, Lcom/android/server/am/ProcessMemInfo;->pid:I

    invoke-static {v10, v6, v2}, Landroid/os/Debug;->getPss(I[J[J)J

    move-result-wide v10

    iput-wide v10, v9, Lcom/android/server/am/ProcessMemInfo;->pss:J

    .line 20098
    const/4 v10, 0x0

    aget-wide v13, v2, v10

    iput-wide v13, v9, Lcom/android/server/am/ProcessMemInfo;->memtrack:J

    .line 20100
    :cond_3
    iget-wide v10, v9, Lcom/android/server/am/ProcessMemInfo;->pss:J

    add-long/2addr v7, v10

    .line 20101
    iget-wide v9, v9, Lcom/android/server/am/ProcessMemInfo;->memtrack:J

    add-long/2addr v4, v9

    .line 20094
    add-int/lit8 v3, v3, 0x1

    const/4 v10, 0x0

    move-object/from16 v11, p0

    const-wide/16 v13, 0x0

    goto :goto_2

    .line 20103
    :cond_4
    new-instance v1, Lcom/android/server/am/ActivityManagerService$25;

    move-object/from16 v11, p0

    invoke-direct {v1, v11}, Lcom/android/server/am/ActivityManagerService$25;-><init>(Lcom/android/server/am/ActivityManagerService;)V

    invoke-static {v0, v1}, Ljava/util/Collections;->sort(Ljava/util/List;Ljava/util/Comparator;)V

    .line 20115
    new-instance v10, Ljava/lang/StringBuilder;

    const/16 v1, 0x80

    invoke-direct {v10, v1}, Ljava/lang/StringBuilder;-><init>(I)V

    .line 20116
    new-instance v13, Ljava/lang/StringBuilder;

    invoke-direct {v13, v1}, Ljava/lang/StringBuilder;-><init>(I)V

    .line 20117
    const-string v1, "Low on memory -- "

    invoke-virtual {v10, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 20118
    const-string/jumbo v1, "total"

    const/4 v2, 0x0

    invoke-static {v10, v7, v8, v1, v2}, Lcom/android/server/am/ActivityManagerService;->appendMemBucket(Ljava/lang/StringBuilder;JLjava/lang/String;Z)V

    .line 20119
    const-string/jumbo v1, "total"

    invoke-static {v13, v7, v8, v1, v12}, Lcom/android/server/am/ActivityManagerService;->appendMemBucket(Ljava/lang/StringBuilder;JLjava/lang/String;Z)V

    .line 20121
    new-instance v14, Ljava/lang/StringBuilder;

    const/16 v15, 0x400

    invoke-direct {v14, v15}, Ljava/lang/StringBuilder;-><init>(I)V

    .line 20122
    new-instance v9, Ljava/lang/StringBuilder;

    invoke-direct {v9, v15}, Ljava/lang/StringBuilder;-><init>(I)V

    .line 20123
    new-instance v6, Ljava/lang/StringBuilder;

    invoke-direct {v6, v15}, Ljava/lang/StringBuilder;-><init>(I)V

    .line 20125
    nop

    .line 20126
    const/high16 v1, -0x80000000

    .line 20127
    nop

    .line 20128
    nop

    .line 20129
    nop

    .line 20130
    invoke-virtual/range {p1 .. p1}, Ljava/util/ArrayList;->size()I

    move-result v3

    move/from16 v18, v12

    const/4 v2, 0x0

    const-wide/16 v16, 0x0

    const-wide/16 v19, 0x0

    const-wide/16 v21, 0x0

    :goto_3
    if-ge v2, v3, :cond_14

    .line 20131
    invoke-virtual {v0, v2}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v23

    move-object/from16 v15, v23

    check-cast v15, Lcom/android/server/am/ProcessMemInfo;

    .line 20133
    iget v12, v15, Lcom/android/server/am/ProcessMemInfo;->oomAdj:I

    move-wide/from16 v25, v4

    const/16 v4, 0x384

    if-lt v12, v4, :cond_5

    .line 20134
    iget-wide v4, v15, Lcom/android/server/am/ProcessMemInfo;->pss:J

    add-long v16, v16, v4

    .line 20137
    :cond_5
    iget v4, v15, Lcom/android/server/am/ProcessMemInfo;->oomAdj:I

    const/16 v5, -0x3e8

    if-eq v4, v5, :cond_f

    iget v4, v15, Lcom/android/server/am/ProcessMemInfo;->oomAdj:I

    const/16 v12, 0x1f4

    if-lt v4, v12, :cond_6

    iget v4, v15, Lcom/android/server/am/ProcessMemInfo;->oomAdj:I

    const/16 v12, 0x258

    if-eq v4, v12, :cond_6

    iget v4, v15, Lcom/android/server/am/ProcessMemInfo;->oomAdj:I

    const/16 v12, 0x2bc

    if-ne v4, v12, :cond_f

    .line 20141
    :cond_6
    iget v4, v15, Lcom/android/server/am/ProcessMemInfo;->oomAdj:I

    if-eq v1, v4, :cond_a

    .line 20142
    iget v1, v15, Lcom/android/server/am/ProcessMemInfo;->oomAdj:I

    .line 20143
    iget v4, v15, Lcom/android/server/am/ProcessMemInfo;->oomAdj:I

    if-gtz v4, :cond_7

    .line 20144
    const-string v4, " / "

    invoke-virtual {v10, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 20146
    :cond_7
    iget v4, v15, Lcom/android/server/am/ProcessMemInfo;->oomAdj:I

    if-ltz v4, :cond_9

    .line 20147
    if-eqz v18, :cond_8

    .line 20148
    const-string v4, ":"

    invoke-virtual {v13, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 20149
    nop

    .line 20151
    const/16 v18, 0x0

    :cond_8
    const-string v4, "\n\t at "

    invoke-virtual {v13, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    goto :goto_4

    .line 20153
    :cond_9
    const-string v4, "$"

    invoke-virtual {v13, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    goto :goto_4

    .line 20156
    :cond_a
    const-string v4, " "

    invoke-virtual {v10, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 20157
    const-string v4, "$"

    invoke-virtual {v13, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 20159
    :goto_4
    iget v4, v15, Lcom/android/server/am/ProcessMemInfo;->oomAdj:I

    if-gtz v4, :cond_b

    .line 20160
    move-object/from16 v27, v6

    iget-wide v5, v15, Lcom/android/server/am/ProcessMemInfo;->pss:J

    iget-object v4, v15, Lcom/android/server/am/ProcessMemInfo;->name:Ljava/lang/String;

    const/4 v12, 0x0

    invoke-static {v10, v5, v6, v4, v12}, Lcom/android/server/am/ActivityManagerService;->appendMemBucket(Ljava/lang/StringBuilder;JLjava/lang/String;Z)V

    goto :goto_5

    .line 20162
    :cond_b
    move-object/from16 v27, v6

    :goto_5
    iget-wide v4, v15, Lcom/android/server/am/ProcessMemInfo;->pss:J

    iget-object v6, v15, Lcom/android/server/am/ProcessMemInfo;->name:Ljava/lang/String;

    const/4 v12, 0x1

    invoke-static {v13, v4, v5, v6, v12}, Lcom/android/server/am/ActivityManagerService;->appendMemBucket(Ljava/lang/StringBuilder;JLjava/lang/String;Z)V

    .line 20163
    iget v4, v15, Lcom/android/server/am/ProcessMemInfo;->oomAdj:I

    if-ltz v4, :cond_10

    add-int/lit8 v4, v2, 0x1

    if-ge v4, v3, :cond_c

    .line 20164
    invoke-virtual {v0, v4}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v4

    check-cast v4, Lcom/android/server/am/ProcessMemInfo;

    iget v4, v4, Lcom/android/server/am/ProcessMemInfo;->oomAdj:I

    if-eq v4, v1, :cond_10

    .line 20165
    :cond_c
    const-string v4, "("

    invoke-virtual {v13, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 20166
    const/4 v4, 0x0

    :goto_6
    sget-object v5, Lcom/android/server/am/ActivityManagerService;->DUMP_MEM_OOM_ADJ:[I

    array-length v5, v5

    if-ge v4, v5, :cond_e

    .line 20167
    sget-object v5, Lcom/android/server/am/ActivityManagerService;->DUMP_MEM_OOM_ADJ:[I

    aget v5, v5, v4

    iget v6, v15, Lcom/android/server/am/ProcessMemInfo;->oomAdj:I

    if-ne v5, v6, :cond_d

    .line 20168
    sget-object v5, Lcom/android/server/am/ActivityManagerService;->DUMP_MEM_OOM_LABEL:[Ljava/lang/String;

    aget-object v5, v5, v4

    invoke-virtual {v13, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 20169
    const-string v5, ":"

    invoke-virtual {v13, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 20170
    sget-object v5, Lcom/android/server/am/ActivityManagerService;->DUMP_MEM_OOM_ADJ:[I

    aget v5, v5, v4

    invoke-virtual {v13, v5}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    .line 20166
    :cond_d
    add-int/lit8 v4, v4, 0x1

    goto :goto_6

    .line 20173
    :cond_e
    const-string v4, ")"

    invoke-virtual {v13, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    goto :goto_7

    .line 20177
    :cond_f
    move-object/from16 v27, v6

    :cond_10
    :goto_7
    move v12, v1

    invoke-direct {v11, v14, v15}, Lcom/android/server/am/ActivityManagerService;->appendMemInfo(Ljava/lang/StringBuilder;Lcom/android/server/am/ProcessMemInfo;)V

    .line 20178
    iget v1, v15, Lcom/android/server/am/ProcessMemInfo;->oomAdj:I

    const/16 v4, -0x3e8

    if-ne v1, v4, :cond_12

    .line 20180
    iget-wide v4, v15, Lcom/android/server/am/ProcessMemInfo;->pss:J

    const-wide/16 v23, 0x200

    cmp-long v1, v4, v23

    if-ltz v1, :cond_11

    .line 20181
    invoke-direct {v11, v9, v15}, Lcom/android/server/am/ActivityManagerService;->appendMemInfo(Ljava/lang/StringBuilder;Lcom/android/server/am/ProcessMemInfo;)V

    .line 20130
    :goto_8
    move/from16 v28, v2

    move/from16 v29, v3

    move-wide/from16 v33, v7

    move-object v0, v9

    move/from16 v31, v12

    move-object/from16 v30, v13

    move-wide/from16 v12, v25

    move-object/from16 v1, v27

    goto :goto_a

    .line 20183
    :cond_11
    iget-wide v4, v15, Lcom/android/server/am/ProcessMemInfo;->pss:J

    add-long v19, v19, v4

    .line 20184
    iget-wide v4, v15, Lcom/android/server/am/ProcessMemInfo;->memtrack:J

    add-long v21, v21, v4

    goto :goto_8

    .line 20189
    :cond_12
    const-wide/16 v4, 0x0

    cmp-long v1, v19, v4

    if-lez v1, :cond_13

    .line 20190
    const/16 v4, -0x3e8

    const/4 v5, -0x1

    const-string v23, "(Other native)"

    move-object v1, v11

    move/from16 v28, v2

    move-object v2, v9

    move/from16 v29, v3

    move v3, v4

    move/from16 v31, v12

    move-object/from16 v30, v13

    move-wide/from16 v12, v25

    move v4, v5

    move-object/from16 v32, v27

    move-wide/from16 v5, v19

    move-wide/from16 v33, v7

    move-wide/from16 v7, v21

    move-object v0, v9

    move-object/from16 v9, v23

    invoke-direct/range {v1 .. v9}, Lcom/android/server/am/ActivityManagerService;->appendBasicMemEntry(Ljava/lang/StringBuilder;IIJJLjava/lang/String;)V

    .line 20192
    const/16 v1, 0xa

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(C)Ljava/lang/StringBuilder;

    .line 20193
    nop

    .line 20195
    const-wide/16 v19, 0x0

    goto :goto_9

    :cond_13
    move/from16 v28, v2

    move/from16 v29, v3

    move-wide/from16 v33, v7

    move-object v0, v9

    move/from16 v31, v12

    move-object/from16 v30, v13

    move-wide/from16 v12, v25

    move-object/from16 v32, v27

    :goto_9
    move-object/from16 v1, v32

    invoke-direct {v11, v1, v15}, Lcom/android/server/am/ActivityManagerService;->appendMemInfo(Ljava/lang/StringBuilder;Lcom/android/server/am/ProcessMemInfo;)V

    .line 20130
    :goto_a
    add-int/lit8 v2, v28, 0x1

    move-object v9, v0

    move-object v6, v1

    move-wide v4, v12

    move/from16 v3, v29

    move-object/from16 v13, v30

    move/from16 v1, v31

    move-wide/from16 v7, v33

    move-object/from16 v0, p1

    const/4 v12, 0x1

    const/16 v15, 0x400

    goto/16 :goto_3

    .line 20199
    :cond_14
    move-object v1, v6

    move-wide/from16 v33, v7

    move-object v0, v9

    move-object/from16 v30, v13

    move-wide v12, v4

    const-string v2, "           "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 20200
    invoke-static {v1, v7, v8}, Lcom/android/server/am/ProcessList;->appendRamKb(Ljava/lang/StringBuilder;J)V

    .line 20201
    const-string v2, ": TOTAL"

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 20202
    const-wide/16 v2, 0x0

    cmp-long v4, v12, v2

    if-lez v4, :cond_15

    .line 20203
    const-string v2, " ("

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 20204
    invoke-static {v12, v13}, Lcom/android/server/am/ActivityManagerService;->stringifyKBSize(J)Ljava/lang/String;

    move-result-object v2

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 20205
    const-string v2, " memtrack)"

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 20208
    :cond_15
    const-string v2, "\n"

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 20210
    new-instance v2, Lcom/android/internal/util/MemInfoReader;

    invoke-direct {v2}, Lcom/android/internal/util/MemInfoReader;-><init>()V

    .line 20211
    invoke-virtual {v2}, Lcom/android/internal/util/MemInfoReader;->readMemInfo()V

    .line 20212
    invoke-virtual {v2}, Lcom/android/internal/util/MemInfoReader;->getRawInfo()[J

    move-result-object v3

    .line 20214
    new-instance v4, Ljava/lang/StringBuilder;

    const/16 v5, 0x400

    invoke-direct {v4, v5}, Ljava/lang/StringBuilder;-><init>(I)V

    .line 20215
    invoke-static {v3}, Landroid/os/Debug;->getMemInfo([J)V

    .line 20216
    const-string v5, "  MemInfo: "

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 20217
    const/4 v5, 0x5

    aget-wide v5, v3, v5

    invoke-static {v5, v6}, Lcom/android/server/am/ActivityManagerService;->stringifyKBSize(J)Ljava/lang/String;

    move-result-object v5

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v5, " slab, "

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 20218
    const/4 v5, 0x4

    aget-wide v5, v3, v5

    invoke-static {v5, v6}, Lcom/android/server/am/ActivityManagerService;->stringifyKBSize(J)Ljava/lang/String;

    move-result-object v5

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v5, " shmem, "

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 20219
    const/16 v5, 0xc

    aget-wide v5, v3, v5

    invoke-static {v5, v6}, Lcom/android/server/am/ActivityManagerService;->stringifyKBSize(J)Ljava/lang/String;

    move-result-object v5

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v5, " vm alloc, "

    .line 20220
    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 20221
    const/16 v5, 0xd

    aget-wide v5, v3, v5

    invoke-static {v5, v6}, Lcom/android/server/am/ActivityManagerService;->stringifyKBSize(J)Ljava/lang/String;

    move-result-object v5

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v5, " page tables "

    .line 20222
    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 20223
    const/16 v5, 0xe

    aget-wide v5, v3, v5

    invoke-static {v5, v6}, Lcom/android/server/am/ActivityManagerService;->stringifyKBSize(J)Ljava/lang/String;

    move-result-object v5

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v5, " kernel stack\n"

    .line 20224
    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 20225
    const-string v5, "           "

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 20226
    const/4 v5, 0x2

    aget-wide v12, v3, v5

    invoke-static {v12, v13}, Lcom/android/server/am/ActivityManagerService;->stringifyKBSize(J)Ljava/lang/String;

    move-result-object v6

    invoke-virtual {v4, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v6, " buffers, "

    invoke-virtual {v4, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 20227
    const/4 v6, 0x3

    aget-wide v12, v3, v6

    invoke-static {v12, v13}, Lcom/android/server/am/ActivityManagerService;->stringifyKBSize(J)Ljava/lang/String;

    move-result-object v9

    invoke-virtual {v4, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v9, " cached, "

    invoke-virtual {v4, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 20228
    const/16 v9, 0xb

    aget-wide v12, v3, v9

    invoke-static {v12, v13}, Lcom/android/server/am/ActivityManagerService;->stringifyKBSize(J)Ljava/lang/String;

    move-result-object v9

    invoke-virtual {v4, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v9, " mapped, "

    invoke-virtual {v4, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 20229
    const/4 v9, 0x1

    aget-wide v12, v3, v9

    invoke-static {v12, v13}, Lcom/android/server/am/ActivityManagerService;->stringifyKBSize(J)Ljava/lang/String;

    move-result-object v9

    invoke-virtual {v4, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v9, " free\n"

    invoke-virtual {v4, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 20230
    const/16 v9, 0xa

    aget-wide v12, v3, v9

    const-wide/16 v18, 0x0

    cmp-long v12, v12, v18

    if-eqz v12, :cond_16

    .line 20231
    const-string v12, "  ZRAM: "

    invoke-virtual {v4, v12}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 20232
    aget-wide v12, v3, v9

    invoke-static {v12, v13}, Lcom/android/server/am/ActivityManagerService;->stringifyKBSize(J)Ljava/lang/String;

    move-result-object v9

    invoke-virtual {v4, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 20233
    const-string v9, " RAM, "

    invoke-virtual {v4, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 20234
    const/16 v9, 0x8

    aget-wide v12, v3, v9

    invoke-static {v12, v13}, Lcom/android/server/am/ActivityManagerService;->stringifyKBSize(J)Ljava/lang/String;

    move-result-object v9

    invoke-virtual {v4, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 20235
    const-string v9, " swap total, "

    invoke-virtual {v4, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 20236
    const/16 v9, 0x9

    aget-wide v12, v3, v9

    invoke-static {v12, v13}, Lcom/android/server/am/ActivityManagerService;->stringifyKBSize(J)Ljava/lang/String;

    move-result-object v3

    invoke-virtual {v4, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 20237
    const-string v3, " swap free\n"

    invoke-virtual {v4, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 20239
    :cond_16
    invoke-direct/range {p0 .. p0}, Lcom/android/server/am/ActivityManagerService;->getKsmInfo()[J

    move-result-object v3

    .line 20240
    const/4 v9, 0x1

    aget-wide v12, v3, v9

    const-wide/16 v18, 0x0

    cmp-long v9, v12, v18

    if-nez v9, :cond_17

    const/4 v9, 0x0

    aget-wide v12, v3, v9

    cmp-long v9, v12, v18

    if-nez v9, :cond_17

    aget-wide v12, v3, v5

    cmp-long v9, v12, v18

    if-nez v9, :cond_17

    aget-wide v12, v3, v6

    cmp-long v9, v12, v18

    if-eqz v9, :cond_18

    .line 20242
    :cond_17
    const-string v9, "  KSM: "

    invoke-virtual {v4, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 20243
    const/4 v9, 0x1

    aget-wide v12, v3, v9

    invoke-static {v12, v13}, Lcom/android/server/am/ActivityManagerService;->stringifyKBSize(J)Ljava/lang/String;

    move-result-object v9

    invoke-virtual {v4, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 20244
    const-string v9, " saved from shared "

    invoke-virtual {v4, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 20245
    const/4 v9, 0x0

    aget-wide v12, v3, v9

    invoke-static {v12, v13}, Lcom/android/server/am/ActivityManagerService;->stringifyKBSize(J)Ljava/lang/String;

    move-result-object v9

    invoke-virtual {v4, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 20246
    const-string v9, "\n       "

    invoke-virtual {v4, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 20247
    aget-wide v12, v3, v5

    invoke-static {v12, v13}, Lcom/android/server/am/ActivityManagerService;->stringifyKBSize(J)Ljava/lang/String;

    move-result-object v5

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 20248
    const-string v5, " unshared; "

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 20249
    aget-wide v5, v3, v6

    invoke-static {v5, v6}, Lcom/android/server/am/ActivityManagerService;->stringifyKBSize(J)Ljava/lang/String;

    move-result-object v3

    invoke-virtual {v4, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 20250
    const-string v3, " volatile\n"

    invoke-virtual {v4, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 20252
    :cond_18
    const-string v3, "  Free RAM: "

    invoke-virtual {v4, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 20253
    invoke-virtual {v2}, Lcom/android/internal/util/MemInfoReader;->getCachedSizeKb()J

    move-result-wide v5

    add-long v5, v16, v5

    .line 20254
    invoke-virtual {v2}, Lcom/android/internal/util/MemInfoReader;->getFreeSizeKb()J

    move-result-wide v12

    add-long/2addr v5, v12

    .line 20253
    invoke-static {v5, v6}, Lcom/android/server/am/ActivityManagerService;->stringifyKBSize(J)Ljava/lang/String;

    move-result-object v3

    invoke-virtual {v4, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 20255
    const-string v3, "\n"

    invoke-virtual {v4, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 20256
    const-string v3, "  Used RAM: "

    invoke-virtual {v4, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 20257
    sub-long v5, v7, v16

    .line 20258
    invoke-virtual {v2}, Lcom/android/internal/util/MemInfoReader;->getKernelUsedSizeKb()J

    move-result-wide v12

    add-long/2addr v5, v12

    .line 20257
    invoke-static {v5, v6}, Lcom/android/server/am/ActivityManagerService;->stringifyKBSize(J)Ljava/lang/String;

    move-result-object v3

    invoke-virtual {v4, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 20259
    const-string v3, "\n"

    invoke-virtual {v4, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 20260
    const-string v3, "  Lost RAM: "

    invoke-virtual {v4, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 20261
    invoke-virtual {v2}, Lcom/android/internal/util/MemInfoReader;->getTotalSizeKb()J

    move-result-wide v5

    sub-long/2addr v5, v7

    .line 20262
    invoke-virtual {v2}, Lcom/android/internal/util/MemInfoReader;->getFreeSizeKb()J

    move-result-wide v7

    sub-long/2addr v5, v7

    invoke-virtual {v2}, Lcom/android/internal/util/MemInfoReader;->getCachedSizeKb()J

    move-result-wide v7

    sub-long/2addr v5, v7

    .line 20263
    invoke-virtual {v2}, Lcom/android/internal/util/MemInfoReader;->getKernelUsedSizeKb()J

    move-result-wide v7

    sub-long/2addr v5, v7

    invoke-virtual {v2}, Lcom/android/internal/util/MemInfoReader;->getZramTotalSizeKb()J

    move-result-wide v2

    sub-long/2addr v5, v2

    .line 20261
    invoke-static {v5, v6}, Lcom/android/server/am/ActivityManagerService;->stringifyKBSize(J)Ljava/lang/String;

    move-result-object v2

    invoke-virtual {v4, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 20264
    const-string v2, "\n"

    invoke-virtual {v4, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 20265
    const-string v2, "ActivityManager"

    const-string v3, "Low on memory:"

    invoke-static {v2, v3}, Landroid/util/Slog;->i(Ljava/lang/String;Ljava/lang/String;)I

    .line 20266
    const-string v2, "ActivityManager"

    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    invoke-static {v2, v0}, Landroid/util/Slog;->i(Ljava/lang/String;Ljava/lang/String;)I

    .line 20267
    const-string v0, "ActivityManager"

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v2

    invoke-static {v0, v2}, Landroid/util/Slog;->i(Ljava/lang/String;Ljava/lang/String;)I

    .line 20268
    const-string v0, "ActivityManager"

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v2

    invoke-static {v0, v2}, Landroid/util/Slog;->i(Ljava/lang/String;Ljava/lang/String;)I

    .line 20270
    new-instance v0, Ljava/lang/StringBuilder;

    const/16 v2, 0x400

    invoke-direct {v0, v2}, Ljava/lang/StringBuilder;-><init>(I)V

    .line 20281
    const-string v2, "Low on memory:"

    invoke-virtual {v0, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 20282
    move-object/from16 v2, v30

    invoke-virtual {v0, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/CharSequence;)Ljava/lang/StringBuilder;

    .line 20283
    const/16 v2, 0xa

    invoke-virtual {v0, v2}, Ljava/lang/StringBuilder;->append(C)Ljava/lang/StringBuilder;

    .line 20284
    invoke-virtual {v0, v14}, Ljava/lang/StringBuilder;->append(Ljava/lang/CharSequence;)Ljava/lang/StringBuilder;

    .line 20285
    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/CharSequence;)Ljava/lang/StringBuilder;

    .line 20286
    invoke-virtual {v0, v2}, Ljava/lang/StringBuilder;->append(C)Ljava/lang/StringBuilder;

    .line 20287
    invoke-virtual {v0, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/CharSequence;)Ljava/lang/StringBuilder;

    .line 20288
    invoke-virtual {v0, v2}, Ljava/lang/StringBuilder;->append(C)Ljava/lang/StringBuilder;

    .line 20293
    new-instance v9, Ljava/io/StringWriter;

    invoke-direct {v9}, Ljava/io/StringWriter;-><init>()V

    .line 20294
    monitor-enter p0

    :try_start_1
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    .line 20295
    new-instance v12, Lcom/android/internal/util/FastPrintWriter;

    const/16 v1, 0x100

    const/4 v2, 0x0

    invoke-direct {v12, v9, v2, v1}, Lcom/android/internal/util/FastPrintWriter;-><init>(Ljava/io/Writer;ZI)V

    .line 20296
    new-array v13, v2, [Ljava/lang/String;

    .line 20297
    invoke-virtual {v12}, Ljava/io/PrintWriter;->println()V

    .line 20298
    const/4 v2, 0x0

    const/4 v5, 0x0

    const/4 v6, 0x0

    const/4 v7, 0x0

    const/4 v8, -0x1

    move-object v1, v11

    move-object v3, v12

    move-object v4, v13

    invoke-virtual/range {v1 .. v8}, Lcom/android/server/am/ActivityManagerService;->dumpProcessesLocked(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;[Ljava/lang/String;IZLjava/lang/String;I)V

    .line 20299
    invoke-virtual {v12}, Ljava/io/PrintWriter;->println()V

    .line 20300
    iget-object v1, v11, Lcom/android/server/am/ActivityManagerService;->mServices:Lcom/android/server/am/ActiveServices;

    const/4 v2, 0x0

    const/4 v5, 0x0

    const/4 v6, 0x0

    const/4 v7, 0x0

    move-object v3, v12

    move-object v4, v13

    invoke-virtual/range {v1 .. v7}, Lcom/android/server/am/ActiveServices;->newServiceDumperLocked(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;[Ljava/lang/String;IZLjava/lang/String;)Lcom/android/server/am/ActiveServices$ServiceDumper;

    move-result-object v1

    .line 20301
    invoke-virtual {v1}, Lcom/android/server/am/ActiveServices$ServiceDumper;->dumpLocked()V

    .line 20302
    invoke-virtual {v12}, Ljava/io/PrintWriter;->println()V

    .line 20303
    const/4 v2, 0x0

    const/4 v5, 0x0

    const/4 v6, 0x0

    const/4 v7, 0x0

    const/4 v8, 0x0

    move-object v1, v11

    move-object v3, v12

    move-object v4, v13

    invoke-virtual/range {v1 .. v8}, Lcom/android/server/am/ActivityManagerService;->dumpActivitiesLocked(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;[Ljava/lang/String;IZZLjava/lang/String;)V

    .line 20304
    invoke-virtual {v12}, Ljava/io/PrintWriter;->flush()V

    .line 20305
    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_1

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    .line 20306
    invoke-virtual {v9}, Ljava/io/StringWriter;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 20307
    const/16 v1, 0x51

    invoke-static {v1}, Landroid/util/StatsLog;->write(I)I

    .line 20308
    const-string v2, "lowmem"

    const/4 v3, 0x0

    const-string/jumbo v4, "system_server"

    const/4 v5, 0x0

    const/4 v6, 0x0

    .line 20309
    invoke-virtual {v10}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v7

    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v8

    const/4 v9, 0x0

    const/4 v10, 0x0

    .line 20308
    move-object v1, v11

    invoke-virtual/range {v1 .. v10}, Lcom/android/server/am/ActivityManagerService;->addErrorToDropBox(Ljava/lang/String;Lcom/android/server/am/ProcessRecord;Ljava/lang/String;Lcom/android/server/am/ActivityRecord;Lcom/android/server/am/ActivityRecord;Ljava/lang/String;Ljava/lang/String;Ljava/io/File;Landroid/app/ApplicationErrorReport$CrashInfo;)V

    .line 20312
    monitor-enter p0

    :try_start_2
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    .line 20313
    invoke-static {}, Landroid/os/SystemClock;->uptimeMillis()J

    move-result-wide v0

    .line 20314
    iget-wide v2, v11, Lcom/android/server/am/ActivityManagerService;->mLastMemUsageReportTime:J

    cmp-long v2, v2, v0

    if-gez v2, :cond_19

    .line 20315
    iput-wide v0, v11, Lcom/android/server/am/ActivityManagerService;->mLastMemUsageReportTime:J

    .line 20317
    :cond_19
    monitor-exit p0
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    .line 20318
    return-void

    .line 20317
    :catchall_0
    move-exception v0

    :try_start_3
    monitor-exit p0
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw v0

    .line 20305
    :catchall_1
    move-exception v0

    :try_start_4
    monitor-exit p0
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_1

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw v0

    .line 20076
    :catchall_2
    move-exception v0

    :try_start_5
    monitor-exit v3
    :try_end_5
    .catchall {:try_start_5 .. :try_end_5} :catchall_2

    throw v0
.end method

.method reportOomAdjMessageLocked(Ljava/lang/String;Ljava/lang/String;)V
    .locals 1

    .line 5213
    invoke-static {p1, p2}, Landroid/util/Slog;->d(Ljava/lang/String;Ljava/lang/String;)I

    .line 5214
    iget-object p1, p0, Lcom/android/server/am/ActivityManagerService;->mCurOomAdjObserver:Lcom/android/server/am/ActivityManagerService$OomAdjObserver;

    if-eqz p1, :cond_0

    .line 5215
    iget-object p1, p0, Lcom/android/server/am/ActivityManagerService;->mUiHandler:Landroid/os/Handler;

    const/16 v0, 0x46

    invoke-virtual {p1, v0, p2}, Landroid/os/Handler;->obtainMessage(ILjava/lang/Object;)Landroid/os/Message;

    move-result-object p1

    invoke-virtual {p1}, Landroid/os/Message;->sendToTarget()V

    .line 5217
    :cond_0
    return-void
.end method

.method public reportSizeConfigurations(Landroid/os/IBinder;[I[I[I)V
    .locals 1

    .line 8427
    monitor-enter p0

    :try_start_0
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    .line 8428
    invoke-static {p1}, Lcom/android/server/am/ActivityRecord;->isInStackLocked(Landroid/os/IBinder;)Lcom/android/server/am/ActivityRecord;

    move-result-object v0

    .line 8429
    if-eqz v0, :cond_0

    .line 8433
    invoke-virtual {v0, p2, p3, p4}, Lcom/android/server/am/ActivityRecord;->setSizeConfigurations([I[I[I)V

    .line 8435
    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    .line 8436
    return-void

    .line 8430
    :cond_0
    :try_start_1
    new-instance p2, Ljava/lang/IllegalArgumentException;

    new-instance p3, Ljava/lang/StringBuilder;

    invoke-direct {p3}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo p4, "reportSizeConfigurations: ActivityRecord not found for: "

    invoke-virtual {p3, p4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {p3, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    invoke-virtual {p3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object p1

    invoke-direct {p2, p1}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw p2

    .line 8435
    :catchall_0
    move-exception p1

    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw p1
.end method

.method reportUidInfoMessageLocked(Ljava/lang/String;Ljava/lang/String;I)V
    .locals 0

    .line 5220
    const-string p1, "ActivityManager"

    invoke-static {p1, p2}, Landroid/util/Slog;->i(Ljava/lang/String;Ljava/lang/String;)I

    .line 5221
    iget-object p1, p0, Lcom/android/server/am/ActivityManagerService;->mCurOomAdjObserver:Lcom/android/server/am/ActivityManagerService$OomAdjObserver;

    if-eqz p1, :cond_0

    iget p1, p0, Lcom/android/server/am/ActivityManagerService;->mCurOomAdjUid:I

    if-ne p3, p1, :cond_0

    .line 5222
    iget-object p1, p0, Lcom/android/server/am/ActivityManagerService;->mUiHandler:Landroid/os/Handler;

    const/16 p3, 0x46

    invoke-virtual {p1, p3, p2}, Landroid/os/Handler;->obtainMessage(ILjava/lang/Object;)Landroid/os/Message;

    move-result-object p1

    invoke-virtual {p1}, Landroid/os/Message;->sendToTarget()V

    .line 5225
    :cond_0
    return-void
.end method

.method public requestAssistContextExtras(ILandroid/app/IAssistDataReceiver;Landroid/os/Bundle;Landroid/os/IBinder;ZZ)Z
    .locals 14

    .line 14295
    nop

    .line 14296
    invoke-static {}, Landroid/os/UserHandle;->getCallingUserId()I

    move-result v9

    .line 14295
    const/4 v2, 0x0

    const/4 v3, 0x0

    const/4 v10, 0x0

    const-wide/16 v11, 0x7d0

    const/4 v13, 0x0

    move-object v0, p0

    move v1, p1

    move-object/from16 v4, p2

    move-object/from16 v5, p3

    move-object/from16 v6, p4

    move/from16 v7, p5

    move/from16 v8, p6

    invoke-direct/range {v0 .. v13}, Lcom/android/server/am/ActivityManagerService;->enqueueAssistContext(ILandroid/content/Intent;Ljava/lang/String;Landroid/app/IAssistDataReceiver;Landroid/os/Bundle;Landroid/os/IBinder;ZZILandroid/os/Bundle;JI)Lcom/android/server/am/ActivityManagerService$PendingAssistExtras;

    move-result-object v0

    if-eqz v0, :cond_0

    const/4 v0, 0x1

    goto :goto_0

    :cond_0
    const/4 v0, 0x0

    :goto_0
    return v0
.end method

.method public requestAutofillData(Landroid/app/IAssistDataReceiver;Landroid/os/Bundle;Landroid/os/IBinder;I)Z
    .locals 14

    .line 14303
    nop

    .line 14304
    invoke-static {}, Landroid/os/UserHandle;->getCallingUserId()I

    move-result v9

    .line 14303
    const/4 v1, 0x2

    const/4 v2, 0x0

    const/4 v3, 0x0

    const/4 v7, 0x1

    const/4 v8, 0x1

    const/4 v10, 0x0

    const-wide/16 v11, 0x7d0

    move-object v0, p0

    move-object v4, p1

    move-object/from16 v5, p2

    move-object/from16 v6, p3

    move/from16 v13, p4

    invoke-direct/range {v0 .. v13}, Lcom/android/server/am/ActivityManagerService;->enqueueAssistContext(ILandroid/content/Intent;Ljava/lang/String;Landroid/app/IAssistDataReceiver;Landroid/os/Bundle;Landroid/os/IBinder;ZZILandroid/os/Bundle;JI)Lcom/android/server/am/ActivityManagerService$PendingAssistExtras;

    move-result-object v0

    if-eqz v0, :cond_0

    const/4 v0, 0x1

    goto :goto_0

    :cond_0
    const/4 v0, 0x0

    :goto_0
    return v0
.end method

.method public requestBugReport(I)V
    .locals 3
    .annotation runtime Ljava/lang/Deprecated;
    .end annotation

    .line 14047
    nop

    .line 14048
    packed-switch p1, :pswitch_data_0

    .line 14068
    new-instance v0, Ljava/lang/IllegalArgumentException;

    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string v2, "Provided bugreport type is not correct, value: "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v1, p1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object p1

    invoke-direct {v0, p1}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v0

    .line 14065
    :pswitch_0
    const-string p1, "bugreportwifi"

    .line 14066
    goto :goto_0

    .line 14062
    :pswitch_1
    const-string p1, "bugreporttelephony"

    .line 14063
    goto :goto_0

    .line 14059
    :pswitch_2
    const-string p1, "bugreportwear"

    .line 14060
    goto :goto_0

    .line 14056
    :pswitch_3
    const-string p1, "bugreportremote"

    .line 14057
    goto :goto_0

    .line 14053
    :pswitch_4
    const-string p1, "bugreportplus"

    .line 14054
    goto :goto_0

    .line 14051
    :pswitch_5
    nop

    .line 14072
    const/4 p1, 0x0

    :goto_0
    if-nez p1, :cond_0

    const-string v0, "bugreport"

    goto :goto_1

    .line 14073
    :cond_0
    move-object v0, p1

    :goto_1
    const-string v1, "ActivityManager"

    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    invoke-virtual {v2, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v0, " requested by UID "

    invoke-virtual {v2, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v0

    invoke-virtual {v2, v0}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    invoke-static {v1, v0}, Landroid/util/Slog;->i(Ljava/lang/String;Ljava/lang/String;)I

    .line 14075
    const-string v0, "android.permission.DUMP"

    const-string/jumbo v1, "requestBugReport"

    invoke-virtual {p0, v0, v1}, Lcom/android/server/am/ActivityManagerService;->enforceCallingPermission(Ljava/lang/String;Ljava/lang/String;)V

    .line 14076
    if-eqz p1, :cond_1

    .line 14077
    const-string v0, "dumpstate.options"

    invoke-static {v0, p1}, Landroid/os/SystemProperties;->set(Ljava/lang/String;Ljava/lang/String;)V

    .line 14079
    :cond_1
    const-string p1, "ctl.start"

    const-string v0, "bugreport"

    invoke-static {p1, v0}, Landroid/os/SystemProperties;->set(Ljava/lang/String;Ljava/lang/String;)V

    .line 14080
    return-void

    nop

    nop

    :pswitch_data_0
    .packed-switch 0x0
        :pswitch_5
        :pswitch_4
        :pswitch_3
        :pswitch_2
        :pswitch_1
        :pswitch_0
    .end packed-switch
.end method

.method requestPssAllProcsLocked(JZZ)V
    .locals 10

    .line 24473
    if-nez p3, :cond_1

    .line 24474
    iget-wide v0, p0, Lcom/android/server/am/ActivityManagerService;->mLastFullPssTime:J

    .line 24475
    if-eqz p4, :cond_0

    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mConstants:Lcom/android/server/am/ActivityManagerConstants;

    iget-wide v2, v2, Lcom/android/server/am/ActivityManagerConstants;->FULL_PSS_LOWERED_INTERVAL:J

    goto :goto_0

    .line 24476
    :cond_0
    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mConstants:Lcom/android/server/am/ActivityManagerConstants;

    iget-wide v2, v2, Lcom/android/server/am/ActivityManagerConstants;->FULL_PSS_MIN_INTERVAL:J

    :goto_0
    add-long/2addr v0, v2

    cmp-long v0, p1, v0

    if-gez v0, :cond_1

    .line 24477
    return-void

    .line 24481
    :cond_1
    iput-wide p1, p0, Lcom/android/server/am/ActivityManagerService;->mLastFullPssTime:J

    .line 24482
    const/4 v0, 0x1

    iput-boolean v0, p0, Lcom/android/server/am/ActivityManagerService;->mFullPssPending:Z

    .line 24483
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mPendingPssProcesses:Ljava/util/ArrayList;

    invoke-virtual {v1}, Ljava/util/ArrayList;->size()I

    move-result v1

    sub-int/2addr v1, v0

    :goto_1
    if-ltz v1, :cond_2

    .line 24484
    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mPendingPssProcesses:Ljava/util/ArrayList;

    invoke-virtual {v2, v1}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Lcom/android/server/am/ProcessRecord;

    iget-object v2, v2, Lcom/android/server/am/ProcessRecord;->procStateMemTracker:Lcom/android/server/am/ProcessList$ProcStateMemTracker;

    invoke-static {v2}, Lcom/android/server/am/ProcessList;->abortNextPssTime(Lcom/android/server/am/ProcessList$ProcStateMemTracker;)V

    .line 24483
    add-int/lit8 v1, v1, -0x1

    goto :goto_1

    .line 24486
    :cond_2
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mPendingPssProcesses:Ljava/util/ArrayList;

    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mLruProcesses:Ljava/util/ArrayList;

    invoke-virtual {v2}, Ljava/util/ArrayList;->size()I

    move-result v2

    invoke-virtual {v1, v2}, Ljava/util/ArrayList;->ensureCapacity(I)V

    .line 24487
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mPendingPssProcesses:Ljava/util/ArrayList;

    invoke-virtual {v1}, Ljava/util/ArrayList;->clear()V

    .line 24488
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mLruProcesses:Ljava/util/ArrayList;

    invoke-virtual {v1}, Ljava/util/ArrayList;->size()I

    move-result v1

    sub-int/2addr v1, v0

    :goto_2
    if-ltz v1, :cond_8

    .line 24489
    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mLruProcesses:Ljava/util/ArrayList;

    invoke-virtual {v2, v1}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Lcom/android/server/am/ProcessRecord;

    .line 24490
    iget-object v3, v2, Lcom/android/server/am/ProcessRecord;->thread:Landroid/app/IApplicationThread;

    if-eqz v3, :cond_7

    iget v3, v2, Lcom/android/server/am/ProcessRecord;->curProcState:I

    const/16 v4, 0x13

    if-ne v3, v4, :cond_3

    .line 24492
    goto :goto_4

    .line 24494
    :cond_3
    if-nez p4, :cond_5

    if-eqz p3, :cond_4

    iget-wide v3, v2, Lcom/android/server/am/ProcessRecord;->lastStateTime:J

    const-wide/16 v5, 0x3e8

    add-long/2addr v3, v5

    cmp-long v3, p1, v3

    if-gtz v3, :cond_5

    :cond_4
    iget-wide v3, v2, Lcom/android/server/am/ProcessRecord;->lastStateTime:J

    const-wide/32 v5, 0x124f80

    add-long/2addr v3, v5

    cmp-long v3, p1, v3

    if-lez v3, :cond_7

    .line 24497
    :cond_5
    iget v3, v2, Lcom/android/server/am/ProcessRecord;->setProcState:I

    iput v3, v2, Lcom/android/server/am/ProcessRecord;->pssProcState:I

    .line 24498
    if-eqz p3, :cond_6

    const/4 v3, 0x2

    goto :goto_3

    .line 24499
    :cond_6
    move v3, v0

    :goto_3
    iput v3, v2, Lcom/android/server/am/ProcessRecord;->pssStatType:I

    .line 24500
    iget v4, v2, Lcom/android/server/am/ProcessRecord;->curProcState:I

    iget-object v5, v2, Lcom/android/server/am/ProcessRecord;->procStateMemTracker:Lcom/android/server/am/ProcessList$ProcStateMemTracker;

    iget-boolean v6, p0, Lcom/android/server/am/ActivityManagerService;->mTestPssMode:Z

    .line 24501
    invoke-virtual {p0}, Lcom/android/server/am/ActivityManagerService;->isSleepingLocked()Z

    move-result v7

    .line 24500
    move-wide v8, p1

    invoke-static/range {v4 .. v9}, Lcom/android/server/am/ProcessList;->computeNextPssTime(ILcom/android/server/am/ProcessList$ProcStateMemTracker;ZZJ)J

    move-result-wide v3

    iput-wide v3, v2, Lcom/android/server/am/ProcessRecord;->nextPssTime:J

    .line 24502
    iget-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mPendingPssProcesses:Ljava/util/ArrayList;

    invoke-virtual {v3, v2}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    .line 24488
    :cond_7
    :goto_4
    add-int/lit8 v1, v1, -0x1

    goto :goto_2

    .line 24505
    :cond_8
    iget-object p1, p0, Lcom/android/server/am/ActivityManagerService;->mBgHandler:Landroid/os/Handler;

    invoke-virtual {p1, v0}, Landroid/os/Handler;->hasMessages(I)Z

    move-result p1

    if-nez p1, :cond_9

    .line 24506
    iget-object p1, p0, Lcom/android/server/am/ActivityManagerService;->mBgHandler:Landroid/os/Handler;

    invoke-virtual {p1, v0}, Landroid/os/Handler;->sendEmptyMessage(I)Z

    .line 24508
    :cond_9
    return-void
.end method

.method requestPssLocked(Lcom/android/server/am/ProcessRecord;I)Z
    .locals 3

    .line 24456
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mPendingPssProcesses:Ljava/util/ArrayList;

    invoke-virtual {v0, p1}, Ljava/util/ArrayList;->contains(Ljava/lang/Object;)Z

    move-result v0

    const/4 v1, 0x0

    if-eqz v0, :cond_0

    .line 24457
    return v1

    .line 24459
    :cond_0
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mPendingPssProcesses:Ljava/util/ArrayList;

    invoke-virtual {v0}, Ljava/util/ArrayList;->size()I

    move-result v0

    const/4 v2, 0x1

    if-nez v0, :cond_1

    .line 24460
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mBgHandler:Landroid/os/Handler;

    invoke-virtual {v0, v2}, Landroid/os/Handler;->sendEmptyMessage(I)Z

    .line 24463
    :cond_1
    iput p2, p1, Lcom/android/server/am/ProcessRecord;->pssProcState:I

    .line 24464
    iput v1, p1, Lcom/android/server/am/ProcessRecord;->pssStatType:I

    .line 24465
    iget-object p2, p0, Lcom/android/server/am/ActivityManagerService;->mPendingPssProcesses:Ljava/util/ArrayList;

    invoke-virtual {p2, p1}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    .line 24466
    return v2
.end method

.method public requestTelephonyBugReport(Ljava/lang/String;Ljava/lang/String;)V
    .locals 1
    .annotation runtime Ljava/lang/Deprecated;
    .end annotation

    .line 14129
    const/4 v0, 0x4

    invoke-direct {p0, p1, p2, v0}, Lcom/android/server/am/ActivityManagerService;->requestBugReportWithDescription(Ljava/lang/String;Ljava/lang/String;I)V

    .line 14131
    return-void
.end method

.method public requestWifiBugReport(Ljava/lang/String;Ljava/lang/String;)V
    .locals 1
    .annotation runtime Ljava/lang/Deprecated;
    .end annotation

    .line 14141
    const/4 v0, 0x5

    invoke-direct {p0, p1, p2, v0}, Lcom/android/server/am/ActivityManagerService;->requestBugReportWithDescription(Ljava/lang/String;Ljava/lang/String;I)V

    .line 14143
    return-void
.end method

.method public resizeDockedStack(Landroid/graphics/Rect;Landroid/graphics/Rect;Landroid/graphics/Rect;Landroid/graphics/Rect;Landroid/graphics/Rect;)V
    .locals 9

    .line 11760
    const-string v0, "android.permission.MANAGE_ACTIVITY_STACKS"

    const-string/jumbo v1, "resizeDockedStack()"

    invoke-virtual {p0, v0, v1}, Lcom/android/server/am/ActivityManagerService;->enforceCallerIsRecentsOrHasPermission(Ljava/lang/String;Ljava/lang/String;)V

    .line 11761
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v0

    .line 11763
    :try_start_0
    monitor-enter p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_1

    :try_start_1
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    .line 11764
    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mStackSupervisor:Lcom/android/server/am/ActivityStackSupervisor;

    const/4 v8, 0x1

    move-object v3, p1

    move-object v4, p2

    move-object v5, p3

    move-object v6, p4

    move-object v7, p5

    invoke-virtual/range {v2 .. v8}, Lcom/android/server/am/ActivityStackSupervisor;->resizeDockedStackLocked(Landroid/graphics/Rect;Landroid/graphics/Rect;Landroid/graphics/Rect;Landroid/graphics/Rect;Landroid/graphics/Rect;Z)V

    .line 11767
    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    :try_start_2
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_1

    .line 11769
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 11770
    nop

    .line 11771
    return-void

    .line 11767
    :catchall_0
    move-exception p1

    :try_start_3
    monitor-exit p0
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_0

    :try_start_4
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw p1
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_1

    .line 11769
    :catchall_1
    move-exception p1

    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    throw p1
.end method

.method public resizePinnedStack(Landroid/graphics/Rect;Landroid/graphics/Rect;)V
    .locals 3

    .line 11788
    const-string v0, "android.permission.MANAGE_ACTIVITY_STACKS"

    const-string/jumbo v1, "resizePinnedStack()"

    invoke-virtual {p0, v0, v1}, Lcom/android/server/am/ActivityManagerService;->enforceCallerIsRecentsOrHasPermission(Ljava/lang/String;Ljava/lang/String;)V

    .line 11789
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v0

    .line 11791
    :try_start_0
    monitor-enter p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_1

    :try_start_1
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    .line 11792
    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mStackSupervisor:Lcom/android/server/am/ActivityStackSupervisor;

    invoke-virtual {v2, p1, p2}, Lcom/android/server/am/ActivityStackSupervisor;->resizePinnedStackLocked(Landroid/graphics/Rect;Landroid/graphics/Rect;)V

    .line 11793
    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    :try_start_2
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_1

    .line 11795
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 11796
    nop

    .line 11797
    return-void

    .line 11793
    :catchall_0
    move-exception p1

    :try_start_3
    monitor-exit p0
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_0

    :try_start_4
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw p1
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_1

    .line 11795
    :catchall_1
    move-exception p1

    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    throw p1
.end method

.method public resizeStack(ILandroid/graphics/Rect;ZZZI)V
    .locals 14

    move-object v1, p0

    move v0, p1

    .line 11724
    const-string v2, "android.permission.MANAGE_ACTIVITY_STACKS"

    const-string/jumbo v3, "resizeStack()"

    invoke-virtual {v1, v2, v3}, Lcom/android/server/am/ActivityManagerService;->enforceCallerIsRecentsOrHasPermission(Ljava/lang/String;Ljava/lang/String;)V

    .line 11725
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v2

    .line 11727
    :try_start_0
    monitor-enter p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_1

    :try_start_1
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    .line 11728
    if-eqz p5, :cond_2

    .line 11729
    iget-object v4, v1, Lcom/android/server/am/ActivityManagerService;->mStackSupervisor:Lcom/android/server/am/ActivityStackSupervisor;

    invoke-virtual {v4, v0}, Lcom/android/server/am/ActivityStackSupervisor;->getStack(I)Lcom/android/server/am/ActivityStack;

    move-result-object v4

    check-cast v4, Lcom/android/server/am/PinnedActivityStack;

    .line 11730
    if-nez v4, :cond_0

    .line 11731
    const-string v4, "ActivityManager"

    new-instance v5, Ljava/lang/StringBuilder;

    invoke-direct {v5}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v6, "resizeStack: stackId "

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v5, v0}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v0, " not found."

    invoke-virtual {v5, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v5}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    invoke-static {v4, v0}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 11732
    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 11752
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    invoke-static {v2, v3}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 11732
    return-void

    .line 11734
    :cond_0
    :try_start_2
    invoke-virtual {v4}, Lcom/android/server/am/PinnedActivityStack;->getWindowingMode()I

    move-result v5

    const/4 v6, 0x2

    if-ne v5, v6, :cond_1

    .line 11738
    const/4 v0, 0x0

    const/4 v5, 0x0

    move-object/from16 v8, p2

    move/from16 v6, p6

    invoke-virtual {v4, v0, v8, v6, v5}, Lcom/android/server/am/PinnedActivityStack;->animateResizePinnedStack(Landroid/graphics/Rect;Landroid/graphics/Rect;IZ)V

    .line 11740
    goto :goto_0

    .line 11735
    :cond_1
    new-instance v4, Ljava/lang/IllegalArgumentException;

    new-instance v5, Ljava/lang/StringBuilder;

    invoke-direct {v5}, Ljava/lang/StringBuilder;-><init>()V

    const-string v6, "Stack: "

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v5, v0}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v0, " doesn\'t support animated resize."

    invoke-virtual {v5, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v5}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    invoke-direct {v4, v0}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v4

    .line 11741
    :cond_2
    move-object/from16 v8, p2

    iget-object v4, v1, Lcom/android/server/am/ActivityManagerService;->mStackSupervisor:Lcom/android/server/am/ActivityStackSupervisor;

    invoke-virtual {v4, v0}, Lcom/android/server/am/ActivityStackSupervisor;->getStack(I)Lcom/android/server/am/ActivityStack;

    move-result-object v7

    .line 11742
    if-nez v7, :cond_3

    .line 11743
    const-string v4, "ActivityManager"

    new-instance v5, Ljava/lang/StringBuilder;

    invoke-direct {v5}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v6, "resizeStack: stackId "

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v5, v0}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v0, " not found."

    invoke-virtual {v5, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v5}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    invoke-static {v4, v0}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 11744
    monitor-exit p0
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    .line 11752
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    invoke-static {v2, v3}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 11744
    return-void

    .line 11746
    :cond_3
    :try_start_3
    iget-object v6, v1, Lcom/android/server/am/ActivityManagerService;->mStackSupervisor:Lcom/android/server/am/ActivityStackSupervisor;

    const/4 v9, 0x0

    const/4 v10, 0x0

    const/4 v13, 0x0

    move/from16 v11, p4

    move/from16 v12, p3

    invoke-virtual/range {v6 .. v13}, Lcom/android/server/am/ActivityStackSupervisor;->resizeStackLocked(Lcom/android/server/am/ActivityStack;Landroid/graphics/Rect;Landroid/graphics/Rect;Landroid/graphics/Rect;ZZZ)V

    .line 11750
    :goto_0
    monitor-exit p0
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_0

    :try_start_4
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_1

    .line 11752
    invoke-static {v2, v3}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 11753
    nop

    .line 11754
    return-void

    .line 11750
    :catchall_0
    move-exception v0

    :try_start_5
    monitor-exit p0
    :try_end_5
    .catchall {:try_start_5 .. :try_end_5} :catchall_0

    :try_start_6
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw v0
    :try_end_6
    .catchall {:try_start_6 .. :try_end_6} :catchall_1

    .line 11752
    :catchall_1
    move-exception v0

    invoke-static {v2, v3}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    throw v0
.end method

.method public resizeTask(ILandroid/graphics/Rect;I)V
    .locals 11

    .line 11080
    const-string v0, "android.permission.MANAGE_ACTIVITY_STACKS"

    const-string/jumbo v1, "resizeTask()"

    invoke-virtual {p0, v0, v1}, Lcom/android/server/am/ActivityManagerService;->enforceCallingPermission(Ljava/lang/String;Ljava/lang/String;)V

    .line 11081
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v0

    .line 11083
    :try_start_0
    monitor-enter p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_1

    :try_start_1
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    .line 11084
    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mStackSupervisor:Lcom/android/server/am/ActivityStackSupervisor;

    invoke-virtual {v2, p1}, Lcom/android/server/am/ActivityStackSupervisor;->anyTaskForIdLocked(I)Lcom/android/server/am/TaskRecord;

    move-result-object v2

    .line 11085
    if-nez v2, :cond_0

    .line 11086
    const-string p2, "ActivityManager"

    new-instance p3, Ljava/lang/StringBuilder;

    invoke-direct {p3}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v2, "resizeTask: taskId="

    invoke-virtual {p3, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {p3, p1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string p1, " not found"

    invoke-virtual {p3, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {p3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object p1

    invoke-static {p2, p1}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 11087
    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 11122
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 11087
    return-void

    .line 11096
    :cond_0
    :try_start_2
    invoke-virtual {v2}, Lcom/android/server/am/TaskRecord;->getStack()Lcom/android/server/am/ActivityStack;

    move-result-object p1

    .line 11097
    invoke-virtual {v2}, Lcom/android/server/am/TaskRecord;->getWindowConfiguration()Landroid/app/WindowConfiguration;

    move-result-object v3

    invoke-virtual {v3}, Landroid/app/WindowConfiguration;->canResizeTask()Z

    move-result v3

    if-eqz v3, :cond_5

    .line 11100
    const/4 v3, 0x5

    const/4 v4, 0x1

    if-nez p2, :cond_1

    invoke-virtual {p1}, Lcom/android/server/am/ActivityStack;->getWindowingMode()I

    move-result v5

    if-ne v5, v3, :cond_1

    .line 11101
    invoke-virtual {p1}, Lcom/android/server/am/ActivityStack;->getDisplay()Lcom/android/server/am/ActivityDisplay;

    move-result-object v3

    .line 11102
    invoke-virtual {p1}, Lcom/android/server/am/ActivityStack;->getActivityType()I

    move-result p1

    .line 11101
    invoke-virtual {v3, v4, p1, v4}, Lcom/android/server/am/ActivityDisplay;->getOrCreateStack(IIZ)Lcom/android/server/am/ActivityStack;

    move-result-object p1

    goto :goto_0

    .line 11103
    :cond_1
    if-eqz p2, :cond_2

    invoke-virtual {p1}, Lcom/android/server/am/ActivityStack;->getWindowingMode()I

    move-result v5

    if-eq v5, v3, :cond_2

    .line 11104
    invoke-virtual {p1}, Lcom/android/server/am/ActivityStack;->getDisplay()Lcom/android/server/am/ActivityDisplay;

    move-result-object v5

    .line 11105
    invoke-virtual {p1}, Lcom/android/server/am/ActivityStack;->getActivityType()I

    move-result p1

    .line 11104
    invoke-virtual {v5, v3, p1, v4}, Lcom/android/server/am/ActivityDisplay;->getOrCreateStack(IIZ)Lcom/android/server/am/ActivityStack;

    move-result-object p1

    .line 11109
    :cond_2
    :goto_0
    and-int/lit8 v3, p3, 0x1

    const/4 v10, 0x0

    if-eqz v3, :cond_3

    goto :goto_1

    .line 11110
    :cond_3
    move v4, v10

    :goto_1
    invoke-virtual {v2}, Lcom/android/server/am/TaskRecord;->getStack()Lcom/android/server/am/ActivityStack;

    move-result-object v3

    if-eq p1, v3, :cond_4

    .line 11112
    const/4 v5, 0x1

    const/4 v6, 0x1

    const/4 v7, 0x1

    const/4 v8, 0x1

    const-string/jumbo v9, "resizeTask"

    move-object v3, v2

    move-object v4, p1

    invoke-virtual/range {v3 .. v9}, Lcom/android/server/am/TaskRecord;->reparent(Lcom/android/server/am/ActivityStack;ZIZZLjava/lang/String;)Z

    .line 11114
    nop

    .line 11119
    move v4, v10

    :cond_4
    invoke-virtual {v2, p2, p3, v4, v10}, Lcom/android/server/am/TaskRecord;->resize(Landroid/graphics/Rect;IZZ)Z

    .line 11120
    monitor-exit p0
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    :try_start_3
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_1

    .line 11122
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 11123
    nop

    .line 11124
    return-void

    .line 11098
    :cond_5
    :try_start_4
    new-instance p1, Ljava/lang/IllegalArgumentException;

    new-instance p2, Ljava/lang/StringBuilder;

    invoke-direct {p2}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo p3, "resizeTask not allowed on task="

    invoke-virtual {p2, p3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {p2, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    invoke-virtual {p2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object p2

    invoke-direct {p1, p2}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw p1

    .line 11120
    :catchall_0
    move-exception p1

    monitor-exit p0
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_0

    :try_start_5
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw p1
    :try_end_5
    .catchall {:try_start_5 .. :try_end_5} :catchall_1

    .line 11122
    :catchall_1
    move-exception p1

    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    throw p1
.end method

.method public restart()V
    .locals 4

    .line 15219
    const-string v0, "android.permission.SET_ACTIVITY_WATCHER"

    invoke-virtual {p0, v0}, Lcom/android/server/am/ActivityManagerService;->checkCallingPermission(Ljava/lang/String;)I

    move-result v0

    if-nez v0, :cond_0

    .line 15225
    const-string v0, "ActivityManager"

    const-string v1, "Sending shutdown broadcast..."

    invoke-static {v0, v1}, Landroid/util/Log;->i(Ljava/lang/String;Ljava/lang/String;)I

    .line 15227
    new-instance v0, Lcom/android/server/am/ActivityManagerService$18;

    invoke-direct {v0, p0}, Lcom/android/server/am/ActivityManagerService$18;-><init>(Lcom/android/server/am/ActivityManagerService;)V

    .line 15239
    new-instance v1, Landroid/content/Intent;

    const-string v2, "android.intent.action.ACTION_SHUTDOWN"

    invoke-direct {v1, v2}, Landroid/content/Intent;-><init>(Ljava/lang/String;)V

    .line 15240
    const/high16 v2, 0x10000000

    invoke-virtual {v1, v2}, Landroid/content/Intent;->addFlags(I)Landroid/content/Intent;

    .line 15241
    const-string v2, "android.intent.extra.SHUTDOWN_USERSPACE_ONLY"

    const/4 v3, 0x1

    invoke-virtual {v1, v2, v3}, Landroid/content/Intent;->putExtra(Ljava/lang/String;Z)Landroid/content/Intent;

    .line 15246
    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mContext:Landroid/content/Context;

    invoke-virtual {v0, v2, v1}, Landroid/content/BroadcastReceiver;->onReceive(Landroid/content/Context;Landroid/content/Intent;)V

    .line 15247
    return-void

    .line 15221
    :cond_0
    new-instance v0, Ljava/lang/SecurityException;

    const-string v1, "Requires permission android.permission.SET_ACTIVITY_WATCHER"

    invoke-direct {v0, v1}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v0
.end method

.method public restartUserInBackground(I)I
    .locals 2

    .line 27431
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mUserController:Lcom/android/server/am/UserController;

    const/4 v1, 0x0

    invoke-virtual {v0, p1, v1}, Lcom/android/server/am/UserController;->restartUser(IZ)I

    move-result p1

    return p1
.end method

.method public resumeAppSwitches()V
    .locals 2

    .line 13798
    const-string v0, "android.permission.STOP_APP_SWITCHES"

    const-string/jumbo v1, "resumeAppSwitches"

    invoke-virtual {p0, v0, v1}, Lcom/android/server/am/ActivityManagerService;->enforceCallerIsRecentsOrHasPermission(Ljava/lang/String;Ljava/lang/String;)V

    .line 13799
    monitor-enter p0

    :try_start_0
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    .line 13803
    const-wide/16 v0, 0x0

    iput-wide v0, p0, Lcom/android/server/am/ActivityManagerService;->mAppSwitchesAllowedTime:J

    .line 13804
    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    .line 13805
    return-void

    .line 13804
    :catchall_0
    move-exception v0

    :try_start_1
    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw v0
.end method

.method public revokeUriPermission(Landroid/app/IApplicationThread;Ljava/lang/String;Landroid/net/Uri;II)V
    .locals 2

    .line 10316
    const-string/jumbo v0, "revokeUriPermission"

    invoke-virtual {p0, v0}, Lcom/android/server/am/ActivityManagerService;->enforceNotIsolatedCaller(Ljava/lang/String;)V

    .line 10317
    monitor-enter p0

    :try_start_0
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    .line 10318
    invoke-virtual {p0, p1}, Lcom/android/server/am/ActivityManagerService;->getRecordForAppLocked(Landroid/app/IApplicationThread;)Lcom/android/server/am/ProcessRecord;

    move-result-object v0

    .line 10319
    if-eqz v0, :cond_3

    .line 10324
    if-nez p3, :cond_0

    .line 10325
    const-string p1, "ActivityManager"

    const-string/jumbo p2, "revokeUriPermission: null uri"

    invoke-static {p1, p2}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 10326
    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    return-void

    .line 10329
    :cond_0
    :try_start_1
    invoke-static {p4}, Landroid/content/Intent;->isAccessUriMode(I)Z

    move-result p1

    if-nez p1, :cond_1

    .line 10330
    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    return-void

    .line 10333
    :cond_1
    :try_start_2
    invoke-virtual {p3}, Landroid/net/Uri;->getAuthority()Ljava/lang/String;

    move-result-object p1

    .line 10334
    const/high16 v1, 0xc0000

    invoke-direct {p0, p1, p5, v1}, Lcom/android/server/am/ActivityManagerService;->getProviderInfoLocked(Ljava/lang/String;II)Landroid/content/pm/ProviderInfo;

    move-result-object p1

    .line 10336
    if-nez p1, :cond_2

    .line 10337
    const-string p1, "ActivityManager"

    new-instance p2, Ljava/lang/StringBuilder;

    invoke-direct {p2}, Ljava/lang/StringBuilder;-><init>()V

    const-string p4, "No content provider found for permission revoke: "

    invoke-virtual {p2, p4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 10338
    invoke-virtual {p3}, Landroid/net/Uri;->toSafeString()Ljava/lang/String;

    move-result-object p3

    invoke-virtual {p2, p3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {p2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object p2

    .line 10337
    invoke-static {p1, p2}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 10339
    monitor-exit p0
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    return-void

    .line 10342
    :cond_2
    :try_start_3
    iget p1, v0, Lcom/android/server/am/ProcessRecord;->uid:I

    new-instance v0, Lcom/android/server/am/ActivityManagerService$GrantUri;

    const/4 v1, 0x0

    invoke-direct {v0, p5, p3, v1}, Lcom/android/server/am/ActivityManagerService$GrantUri;-><init>(ILandroid/net/Uri;Z)V

    invoke-direct {p0, p2, p1, v0, p4}, Lcom/android/server/am/ActivityManagerService;->revokeUriPermissionLocked(Ljava/lang/String;ILcom/android/server/am/ActivityManagerService$GrantUri;I)V

    .line 10344
    monitor-exit p0
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    .line 10345
    return-void

    .line 10320
    :cond_3
    :try_start_4
    new-instance p2, Ljava/lang/SecurityException;

    new-instance p4, Ljava/lang/StringBuilder;

    invoke-direct {p4}, Ljava/lang/StringBuilder;-><init>()V

    const-string p5, "Unable to find app for caller "

    invoke-virtual {p4, p5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {p4, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    const-string p1, " when revoking permission to uri "

    invoke-virtual {p4, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {p4, p3}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    invoke-virtual {p4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object p1

    invoke-direct {p2, p1}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw p2

    .line 10344
    :catchall_0
    move-exception p1

    monitor-exit p0
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw p1
.end method

.method public revokeUriPermissionFromOwner(Landroid/os/IBinder;Landroid/net/Uri;II)V
    .locals 2

    .line 10474
    monitor-enter p0

    :try_start_0
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    .line 10475
    invoke-static {p1}, Lcom/android/server/am/UriPermissionOwner;->fromExternalToken(Landroid/os/IBinder;)Lcom/android/server/am/UriPermissionOwner;

    move-result-object v0

    .line 10476
    if-eqz v0, :cond_2

    .line 10480
    if-nez p2, :cond_0

    .line 10481
    invoke-virtual {v0, p3}, Lcom/android/server/am/UriPermissionOwner;->removeUriPermissionsLocked(I)V

    goto :goto_1

    .line 10483
    :cond_0
    and-int/lit16 p1, p3, 0x80

    if-eqz p1, :cond_1

    const/4 p1, 0x1

    goto :goto_0

    :cond_1
    const/4 p1, 0x0

    .line 10484
    :goto_0
    new-instance v1, Lcom/android/server/am/ActivityManagerService$GrantUri;

    invoke-direct {v1, p4, p2, p1}, Lcom/android/server/am/ActivityManagerService$GrantUri;-><init>(ILandroid/net/Uri;Z)V

    invoke-virtual {v0, v1, p3}, Lcom/android/server/am/UriPermissionOwner;->removeUriPermissionLocked(Lcom/android/server/am/ActivityManagerService$GrantUri;I)V

    .line 10486
    :goto_1
    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    .line 10487
    return-void

    .line 10477
    :cond_2
    :try_start_1
    new-instance p2, Ljava/lang/IllegalArgumentException;

    new-instance p3, Ljava/lang/StringBuilder;

    invoke-direct {p3}, Ljava/lang/StringBuilder;-><init>()V

    const-string p4, "Unknown owner: "

    invoke-virtual {p3, p4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {p3, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    invoke-virtual {p3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object p1

    invoke-direct {p2, p1}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw p2

    .line 10486
    :catchall_0
    move-exception p1

    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw p1
.end method

.method final rotateBroadcastStatsIfNeededLocked()V
    .locals 6

    .line 22178
    invoke-static {}, Landroid/os/SystemClock;->elapsedRealtime()J

    move-result-wide v0

    .line 22179
    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mCurBroadcastStats:Lcom/android/server/am/BroadcastStats;

    if-eqz v2, :cond_0

    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mCurBroadcastStats:Lcom/android/server/am/BroadcastStats;

    iget-wide v2, v2, Lcom/android/server/am/BroadcastStats;->mStartRealtime:J

    const-wide/32 v4, 0x5265c00

    add-long/2addr v2, v4

    cmp-long v0, v2, v0

    if-gez v0, :cond_2

    .line 22181
    :cond_0
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mCurBroadcastStats:Lcom/android/server/am/BroadcastStats;

    iput-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mLastBroadcastStats:Lcom/android/server/am/BroadcastStats;

    .line 22182
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mLastBroadcastStats:Lcom/android/server/am/BroadcastStats;

    if-eqz v0, :cond_1

    .line 22183
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mLastBroadcastStats:Lcom/android/server/am/BroadcastStats;

    invoke-static {}, Landroid/os/SystemClock;->elapsedRealtime()J

    move-result-wide v1

    iput-wide v1, v0, Lcom/android/server/am/BroadcastStats;->mEndRealtime:J

    .line 22184
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mLastBroadcastStats:Lcom/android/server/am/BroadcastStats;

    invoke-static {}, Landroid/os/SystemClock;->uptimeMillis()J

    move-result-wide v1

    iput-wide v1, v0, Lcom/android/server/am/BroadcastStats;->mEndUptime:J

    .line 22186
    :cond_1
    new-instance v0, Lcom/android/server/am/BroadcastStats;

    invoke-direct {v0}, Lcom/android/server/am/BroadcastStats;-><init>()V

    iput-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mCurBroadcastStats:Lcom/android/server/am/BroadcastStats;

    .line 22188
    :cond_2
    return-void
.end method

.method final runInBackgroundDisabled(I)V
    .locals 1

    .line 26061
    monitor-enter p0

    :try_start_0
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    .line 26062
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mActiveUids:Landroid/util/SparseArray;

    invoke-virtual {v0, p1}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Lcom/android/server/am/UidRecord;

    .line 26063
    if-eqz v0, :cond_0

    .line 26065
    iget-boolean p1, v0, Lcom/android/server/am/UidRecord;->idle:Z

    if-eqz p1, :cond_1

    .line 26066
    iget p1, v0, Lcom/android/server/am/UidRecord;->uid:I

    invoke-virtual {p0, p1, v0}, Lcom/android/server/am/ActivityManagerService;->doStopUidLocked(ILcom/android/server/am/UidRecord;)V

    goto :goto_0

    .line 26070
    :cond_0
    const/4 v0, 0x0

    invoke-virtual {p0, p1, v0}, Lcom/android/server/am/ActivityManagerService;->doStopUidLocked(ILcom/android/server/am/UidRecord;)V

    .line 26072
    :cond_1
    :goto_0
    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    .line 26073
    return-void

    .line 26072
    :catchall_0
    move-exception p1

    :try_start_1
    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw p1
.end method

.method final scheduleAppGcLocked(Lcom/android/server/am/ProcessRecord;)V
    .locals 6

    .line 24645
    invoke-static {}, Landroid/os/SystemClock;->uptimeMillis()J

    move-result-wide v0

    .line 24646
    iget-wide v2, p1, Lcom/android/server/am/ProcessRecord;->lastRequestedGc:J

    iget-object v4, p0, Lcom/android/server/am/ActivityManagerService;->mConstants:Lcom/android/server/am/ActivityManagerConstants;

    iget-wide v4, v4, Lcom/android/server/am/ActivityManagerConstants;->GC_MIN_INTERVAL:J

    add-long/2addr v2, v4

    cmp-long v0, v2, v0

    if-lez v0, :cond_0

    .line 24647
    return-void

    .line 24649
    :cond_0
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mProcessesToGc:Ljava/util/ArrayList;

    invoke-virtual {v0, p1}, Ljava/util/ArrayList;->contains(Ljava/lang/Object;)Z

    move-result v0

    if-nez v0, :cond_1

    .line 24650
    invoke-virtual {p0, p1}, Lcom/android/server/am/ActivityManagerService;->addProcessToGcListLocked(Lcom/android/server/am/ProcessRecord;)V

    .line 24651
    invoke-virtual {p0}, Lcom/android/server/am/ActivityManagerService;->scheduleAppGcsLocked()V

    .line 24653
    :cond_1
    return-void
.end method

.method final scheduleAppGcsLocked()V
    .locals 8

    .line 24603
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    const/4 v1, 0x5

    invoke-virtual {v0, v1}, Lcom/android/server/am/ActivityManagerService$MainHandler;->removeMessages(I)V

    .line 24605
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mProcessesToGc:Ljava/util/ArrayList;

    invoke-virtual {v0}, Ljava/util/ArrayList;->size()I

    move-result v0

    if-lez v0, :cond_1

    .line 24607
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mProcessesToGc:Ljava/util/ArrayList;

    const/4 v2, 0x0

    invoke-virtual {v0, v2}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Lcom/android/server/am/ProcessRecord;

    .line 24608
    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    invoke-virtual {v2, v1}, Lcom/android/server/am/ActivityManagerService$MainHandler;->obtainMessage(I)Landroid/os/Message;

    move-result-object v1

    .line 24610
    iget-wide v2, v0, Lcom/android/server/am/ProcessRecord;->lastRequestedGc:J

    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mConstants:Lcom/android/server/am/ActivityManagerConstants;

    iget-wide v4, v0, Lcom/android/server/am/ActivityManagerConstants;->GC_MIN_INTERVAL:J

    add-long/2addr v2, v4

    .line 24611
    invoke-static {}, Landroid/os/SystemClock;->uptimeMillis()J

    move-result-wide v4

    .line 24612
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mConstants:Lcom/android/server/am/ActivityManagerConstants;

    iget-wide v6, v0, Lcom/android/server/am/ActivityManagerConstants;->GC_TIMEOUT:J

    add-long/2addr v6, v4

    cmp-long v0, v2, v6

    if-gez v0, :cond_0

    .line 24613
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mConstants:Lcom/android/server/am/ActivityManagerConstants;

    iget-wide v2, v0, Lcom/android/server/am/ActivityManagerConstants;->GC_TIMEOUT:J

    add-long/2addr v2, v4

    .line 24615
    :cond_0
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    invoke-virtual {v0, v1, v2, v3}, Lcom/android/server/am/ActivityManagerService$MainHandler;->sendMessageAtTime(Landroid/os/Message;J)Z

    .line 24617
    :cond_1
    return-void
.end method

.method public scheduleApplicationInfoChanged(Ljava/util/List;I)V
    .locals 2
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "(",
            "Ljava/util/List<",
            "Ljava/lang/String;",
            ">;I)V"
        }
    .end annotation

    .line 27436
    const-string v0, "android.permission.CHANGE_CONFIGURATION"

    const-string/jumbo v1, "scheduleApplicationInfoChanged()"

    invoke-virtual {p0, v0, v1}, Lcom/android/server/am/ActivityManagerService;->enforceCallingPermission(Ljava/lang/String;Ljava/lang/String;)V

    .line 27439
    monitor-enter p0

    :try_start_0
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    .line 27440
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_1

    .line 27442
    :try_start_1
    invoke-virtual {p0, p1, p2}, Lcom/android/server/am/ActivityManagerService;->updateApplicationInfoLocked(Ljava/util/List;I)V
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 27444
    :try_start_2
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 27445
    nop

    .line 27446
    monitor-exit p0
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_1

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    .line 27447
    return-void

    .line 27444
    :catchall_0
    move-exception p1

    :try_start_3
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    throw p1

    .line 27446
    :catchall_1
    move-exception p1

    monitor-exit p0
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_1

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw p1
.end method

.method public sendIdleJobTrigger()V
    .locals 18

    .line 15320
    const-string v0, "android.permission.SET_ACTIVITY_WATCHER"

    move-object/from16 v1, p0

    invoke-virtual {v1, v0}, Lcom/android/server/am/ActivityManagerService;->checkCallingPermission(Ljava/lang/String;)I

    move-result v0

    if-nez v0, :cond_0

    .line 15326
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v14

    .line 15328
    :try_start_0
    new-instance v0, Landroid/content/Intent;

    const-string v2, "com.android.server.ACTION_TRIGGER_IDLE"

    invoke-direct {v0, v2}, Landroid/content/Intent;-><init>(Ljava/lang/String;)V

    const-string v2, "android"

    .line 15329
    invoke-virtual {v0, v2}, Landroid/content/Intent;->setPackage(Ljava/lang/String;)Landroid/content/Intent;

    move-result-object v0

    const/high16 v2, 0x40000000    # 2.0f

    .line 15330
    invoke-virtual {v0, v2}, Landroid/content/Intent;->addFlags(I)Landroid/content/Intent;

    move-result-object v3
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_1

    .line 15331
    const/4 v2, 0x0

    const/4 v4, 0x0

    const/4 v5, 0x0

    const/4 v6, 0x0

    const/4 v7, 0x0

    const/4 v8, 0x0

    const/4 v9, 0x0

    const/4 v10, -0x1

    const/4 v11, 0x0

    const/4 v12, 0x0

    const/4 v13, 0x0

    const/4 v0, -0x1

    move-wide/from16 v16, v14

    move v14, v0

    :try_start_1
    invoke-virtual/range {v1 .. v14}, Lcom/android/server/am/ActivityManagerService;->broadcastIntent(Landroid/app/IApplicationThread;Landroid/content/Intent;Ljava/lang/String;Landroid/content/IIntentReceiver;ILjava/lang/String;Landroid/os/Bundle;[Ljava/lang/String;ILandroid/os/Bundle;ZZI)I
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 15334
    move-wide/from16 v1, v16

    invoke-static {v1, v2}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 15335
    nop

    .line 15336
    return-void

    .line 15334
    :catchall_0
    move-exception v0

    move-wide/from16 v1, v16

    goto :goto_0

    :catchall_1
    move-exception v0

    move-wide v1, v14

    :goto_0
    invoke-static {v1, v2}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    throw v0

    .line 15322
    :cond_0
    new-instance v0, Ljava/lang/SecurityException;

    const-string v1, "Requires permission android.permission.SET_ACTIVITY_WATCHER"

    invoke-direct {v0, v1}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v0
.end method

.method public sendIntentSender(Landroid/content/IIntentSender;Landroid/os/IBinder;ILandroid/content/Intent;Ljava/lang/String;Landroid/content/IIntentReceiver;Ljava/lang/String;Landroid/os/Bundle;)I
    .locals 11

    move-object v0, p1

    .line 8656
    instance-of v1, v0, Lcom/android/server/am/PendingIntentRecord;

    if-eqz v1, :cond_0

    .line 8657
    move-object v2, v0

    check-cast v2, Lcom/android/server/am/PendingIntentRecord;

    move v3, p3

    move-object v4, p4

    move-object/from16 v5, p5

    move-object v6, p2

    move-object/from16 v7, p6

    move-object/from16 v8, p7

    move-object/from16 v9, p8

    invoke-virtual/range {v2 .. v9}, Lcom/android/server/am/PendingIntentRecord;->sendWithResult(ILandroid/content/Intent;Ljava/lang/String;Landroid/os/IBinder;Landroid/content/IIntentReceiver;Ljava/lang/String;Landroid/os/Bundle;)I

    move-result v0

    return v0

    .line 8660
    :cond_0
    if-nez p4, :cond_1

    .line 8666
    const-string v1, "ActivityManager"

    const-string v2, "Can\'t use null intent with direct IIntentSender call"

    invoke-static {v1, v2}, Landroid/util/Slog;->wtf(Ljava/lang/String;Ljava/lang/String;)I

    .line 8667
    new-instance v1, Landroid/content/Intent;

    const-string v2, "android.intent.action.MAIN"

    invoke-direct {v1, v2}, Landroid/content/Intent;-><init>(Ljava/lang/String;)V

    .line 8670
    move-object v9, v1

    goto :goto_0

    :cond_1
    move-object v9, p4

    :goto_0
    const/4 v6, 0x0

    move-object v1, v0

    move v2, p3

    move-object v3, v9

    move-object/from16 v4, p5

    move-object v5, p2

    move-object/from16 v7, p7

    move-object/from16 v8, p8

    :try_start_0
    invoke-interface/range {v1 .. v8}, Landroid/content/IIntentSender;->send(ILandroid/content/Intent;Ljava/lang/String;Landroid/os/IBinder;Landroid/content/IIntentReceiver;Ljava/lang/String;Landroid/os/Bundle;)V
    :try_end_0
    .catch Landroid/os/RemoteException; {:try_start_0 .. :try_end_0} :catch_0

    .line 8673
    goto :goto_1

    .line 8672
    :catch_0
    move-exception v0

    .line 8678
    :goto_1
    if-eqz p6, :cond_2

    .line 8680
    const/4 v5, 0x0

    const/4 v6, 0x0

    const/4 v7, 0x0

    const/4 v8, 0x0

    const/4 v0, 0x0

    .line 8681
    :try_start_1
    invoke-static {}, Landroid/os/UserHandle;->getCallingUserId()I

    move-result v10

    .line 8680
    move-object/from16 v3, p6

    move-object v4, v9

    move v9, v0

    invoke-interface/range {v3 .. v10}, Landroid/content/IIntentReceiver;->performReceive(Landroid/content/Intent;ILjava/lang/String;Landroid/os/Bundle;ZZI)V
    :try_end_1
    .catch Landroid/os/RemoteException; {:try_start_1 .. :try_end_1} :catch_1

    .line 8683
    goto :goto_2

    .line 8682
    :catch_1
    move-exception v0

    .line 8685
    :cond_2
    :goto_2
    const/4 v0, 0x0

    return v0
.end method

.method sendPendingBroadcastsLocked(Lcom/android/server/am/ProcessRecord;)Z
    .locals 5

    .line 21104
    nop

    .line 21105
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mBroadcastQueues:[Lcom/android/server/am/BroadcastQueue;

    array-length v1, v0

    const/4 v2, 0x0

    move v3, v2

    :goto_0
    if-ge v2, v1, :cond_0

    aget-object v4, v0, v2

    .line 21106
    invoke-virtual {v4, p1}, Lcom/android/server/am/BroadcastQueue;->sendPendingBroadcastsLocked(Lcom/android/server/am/ProcessRecord;)Z

    move-result v4

    or-int/2addr v3, v4

    .line 21105
    add-int/lit8 v2, v2, 0x1

    goto :goto_0

    .line 21108
    :cond_0
    return v3
.end method

.method public serviceDoneExecuting(Landroid/os/IBinder;III)V
    .locals 1

    .line 20854
    monitor-enter p0

    :try_start_0
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    .line 20855
    instance-of v0, p1, Lcom/android/server/am/ServiceRecord;

    if-eqz v0, :cond_0

    .line 20859
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mServices:Lcom/android/server/am/ActiveServices;

    check-cast p1, Lcom/android/server/am/ServiceRecord;

    invoke-virtual {v0, p1, p2, p3, p4}, Lcom/android/server/am/ActiveServices;->serviceDoneExecutingLocked(Lcom/android/server/am/ServiceRecord;III)V

    .line 20860
    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    .line 20861
    return-void

    .line 20856
    :cond_0
    :try_start_1
    const-string p2, "ActivityManager"

    new-instance p3, Ljava/lang/StringBuilder;

    invoke-direct {p3}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo p4, "serviceDoneExecuting: Invalid service token="

    invoke-virtual {p3, p4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {p3, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    invoke-virtual {p3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object p1

    invoke-static {p2, p1}, Landroid/util/Slog;->e(Ljava/lang/String;Ljava/lang/String;)I

    .line 20857
    new-instance p1, Ljava/lang/IllegalArgumentException;

    const-string p2, "Invalid service token"

    invoke-direct {p1, p2}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw p1

    .line 20860
    :catchall_0
    move-exception p1

    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw p1
.end method

.method public setActivityController(Landroid/app/IActivityController;Z)V
    .locals 2

    .line 14004
    const-string v0, "android.permission.SET_ACTIVITY_WATCHER"

    const-string/jumbo v1, "setActivityController()"

    invoke-virtual {p0, v0, v1}, Lcom/android/server/am/ActivityManagerService;->enforceCallingPermission(Ljava/lang/String;Ljava/lang/String;)V

    .line 14006
    monitor-enter p0

    :try_start_0
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    .line 14007
    iput-object p1, p0, Lcom/android/server/am/ActivityManagerService;->mController:Landroid/app/IActivityController;

    .line 14008
    iput-boolean p2, p0, Lcom/android/server/am/ActivityManagerService;->mControllerIsAMonkey:Z

    .line 14009
    invoke-static {}, Lcom/android/server/Watchdog;->getInstance()Lcom/android/server/Watchdog;

    move-result-object p2

    invoke-virtual {p2, p1}, Lcom/android/server/Watchdog;->setActivityController(Landroid/app/IActivityController;)V

    .line 14010
    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    .line 14011
    return-void

    .line 14010
    :catchall_0
    move-exception p1

    :try_start_1
    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw p1
.end method

.method public setAgentApp(Ljava/lang/String;Ljava/lang/String;)V
    .locals 3

    .line 13905
    monitor-enter p0

    :try_start_0
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    .line 13908
    const-string v0, "android.permission.SET_ACTIVITY_WATCHER"

    invoke-virtual {p0, v0}, Lcom/android/server/am/ActivityManagerService;->checkCallingPermission(Ljava/lang/String;)I

    move-result v0

    if-nez v0, :cond_4

    .line 13915
    if-nez p2, :cond_0

    .line 13916
    iget-object p2, p0, Lcom/android/server/am/ActivityManagerService;->mAppAgentMap:Ljava/util/Map;

    if-eqz p2, :cond_3

    .line 13917
    iget-object p2, p0, Lcom/android/server/am/ActivityManagerService;->mAppAgentMap:Ljava/util/Map;

    invoke-interface {p2, p1}, Ljava/util/Map;->remove(Ljava/lang/Object;)Ljava/lang/Object;

    .line 13918
    iget-object p1, p0, Lcom/android/server/am/ActivityManagerService;->mAppAgentMap:Ljava/util/Map;

    invoke-interface {p1}, Ljava/util/Map;->isEmpty()Z

    move-result p1

    if-eqz p1, :cond_3

    .line 13919
    const/4 p1, 0x0

    iput-object p1, p0, Lcom/android/server/am/ActivityManagerService;->mAppAgentMap:Ljava/util/Map;

    goto :goto_0

    .line 13923
    :cond_0
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mAppAgentMap:Ljava/util/Map;

    if-nez v0, :cond_1

    .line 13924
    new-instance v0, Ljava/util/HashMap;

    invoke-direct {v0}, Ljava/util/HashMap;-><init>()V

    iput-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mAppAgentMap:Ljava/util/Map;

    .line 13926
    :cond_1
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mAppAgentMap:Ljava/util/Map;

    invoke-interface {v0}, Ljava/util/Map;->size()I

    move-result v0

    const/16 v1, 0x64

    if-lt v0, v1, :cond_2

    .line 13928
    const-string v0, "ActivityManager"

    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string v2, "App agent map has too many entries, cannot add "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v1, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string p1, "/"

    invoke-virtual {v1, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v1, p2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object p1

    invoke-static {v0, p1}, Landroid/util/Slog;->e(Ljava/lang/String;Ljava/lang/String;)I

    .line 13930
    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    return-void

    .line 13932
    :cond_2
    :try_start_1
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mAppAgentMap:Ljava/util/Map;

    invoke-interface {v0, p1, p2}, Ljava/util/Map;->put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    .line 13934
    :cond_3
    :goto_0
    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    .line 13935
    return-void

    .line 13911
    :cond_4
    :try_start_2
    new-instance p1, Ljava/lang/SecurityException;

    const-string p2, "Requires permission android.permission.SET_ACTIVITY_WATCHER"

    invoke-direct {p1, p2}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw p1

    .line 13934
    :catchall_0
    move-exception p1

    monitor-exit p0
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw p1
.end method

.method public setAlwaysFinish(Z)V
    .locals 4

    .line 13985
    const-string v0, "android.permission.SET_ALWAYS_FINISH"

    const-string/jumbo v1, "setAlwaysFinish()"

    invoke-virtual {p0, v0, v1}, Lcom/android/server/am/ActivityManagerService;->enforceCallingPermission(Ljava/lang/String;Ljava/lang/String;)V

    .line 13988
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v0

    .line 13990
    :try_start_0
    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mContext:Landroid/content/Context;

    .line 13991
    invoke-virtual {v2}, Landroid/content/Context;->getContentResolver()Landroid/content/ContentResolver;

    move-result-object v2

    const-string v3, "always_finish_activities"

    .line 13992
    nop

    .line 13990
    invoke-static {v2, v3, p1}, Landroid/provider/Settings$Global;->putInt(Landroid/content/ContentResolver;Ljava/lang/String;I)Z

    .line 13994
    monitor-enter p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_1

    :try_start_1
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    .line 13995
    iput-boolean p1, p0, Lcom/android/server/am/ActivityManagerService;->mAlwaysFinishActivities:Z

    .line 13996
    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    :try_start_2
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_1

    .line 13998
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 13999
    nop

    .line 14000
    return-void

    .line 13996
    :catchall_0
    move-exception p1

    :try_start_3
    monitor-exit p0
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_0

    :try_start_4
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw p1
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_1

    .line 13998
    :catchall_1
    move-exception p1

    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    throw p1
.end method

.method final setAppIdTempWhitelistStateLocked(IZ)V
    .locals 5
    .annotation build Lcom/android/internal/annotations/GuardedBy;
        value = "this"
    .end annotation

    .line 26176
    nop

    .line 26177
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mActiveUids:Landroid/util/SparseArray;

    invoke-virtual {v0}, Landroid/util/SparseArray;->size()I

    move-result v0

    const/4 v1, 0x1

    sub-int/2addr v0, v1

    const/4 v2, 0x0

    :goto_0
    if-ltz v0, :cond_1

    .line 26178
    iget-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mActiveUids:Landroid/util/SparseArray;

    invoke-virtual {v3, v0}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;

    move-result-object v3

    check-cast v3, Lcom/android/server/am/UidRecord;

    .line 26179
    iget v4, v3, Lcom/android/server/am/UidRecord;->uid:I

    invoke-static {v4}, Landroid/os/UserHandle;->getAppId(I)I

    move-result v4

    if-ne v4, p1, :cond_0

    iget-boolean v4, v3, Lcom/android/server/am/UidRecord;->curWhitelist:Z

    if-eq v4, p2, :cond_0

    .line 26180
    iput-boolean p2, v3, Lcom/android/server/am/UidRecord;->curWhitelist:Z

    .line 26181
    nop

    .line 26177
    move v2, v1

    :cond_0
    add-int/lit8 v0, v0, -0x1

    goto :goto_0

    .line 26184
    :cond_1
    if-eqz v2, :cond_2

    .line 26185
    invoke-virtual {p0}, Lcom/android/server/am/ActivityManagerService;->updateOomAdjLocked()V

    .line 26187
    :cond_2
    return-void
.end method

.method setCheckedForSetup(Z)V
    .locals 0

    .line 4861
    iput-boolean p1, p0, Lcom/android/server/am/ActivityManagerService;->mCheckedForSetup:Z

    .line 4862
    return-void
.end method

.method public setDebugApp(Ljava/lang/String;ZZ)V
    .locals 12

    .line 13855
    const-string v0, "android.permission.SET_DEBUG_APP"

    const-string/jumbo v1, "setDebugApp()"

    invoke-virtual {p0, v0, v1}, Lcom/android/server/am/ActivityManagerService;->enforceCallingPermission(Ljava/lang/String;Ljava/lang/String;)V

    .line 13858
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v0

    .line 13863
    if-eqz p3, :cond_0

    .line 13864
    :try_start_0
    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mContext:Landroid/content/Context;

    invoke-virtual {v2}, Landroid/content/Context;->getContentResolver()Landroid/content/ContentResolver;

    move-result-object v2

    .line 13865
    const-string v3, "debug_app"

    invoke-static {v2, v3, p1}, Landroid/provider/Settings$Global;->putString(Landroid/content/ContentResolver;Ljava/lang/String;Ljava/lang/String;)Z

    .line 13868
    const-string/jumbo v3, "wait_for_debugger"

    .line 13870
    nop

    .line 13868
    invoke-static {v2, v3, p2}, Landroid/provider/Settings$Global;->putInt(Landroid/content/ContentResolver;Ljava/lang/String;I)Z

    goto :goto_0

    .line 13887
    :catchall_0
    move-exception p1

    goto :goto_1

    .line 13873
    :cond_0
    :goto_0
    monitor-enter p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    :try_start_1
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    .line 13874
    if-nez p3, :cond_1

    .line 13875
    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mDebugApp:Ljava/lang/String;

    iput-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mOrigDebugApp:Ljava/lang/String;

    .line 13876
    iget-boolean v2, p0, Lcom/android/server/am/ActivityManagerService;->mWaitForDebugger:Z

    iput-boolean v2, p0, Lcom/android/server/am/ActivityManagerService;->mOrigWaitForDebugger:Z

    .line 13878
    :cond_1
    iput-object p1, p0, Lcom/android/server/am/ActivityManagerService;->mDebugApp:Ljava/lang/String;

    .line 13879
    iput-boolean p2, p0, Lcom/android/server/am/ActivityManagerService;->mWaitForDebugger:Z

    .line 13880
    xor-int/lit8 p2, p3, 0x1

    iput-boolean p2, p0, Lcom/android/server/am/ActivityManagerService;->mDebugTransient:Z

    .line 13881
    if-eqz p1, :cond_2

    .line 13882
    const/4 v4, -0x1

    const/4 v5, 0x0

    const/4 v6, 0x0

    const/4 v7, 0x1

    const/4 v8, 0x1

    const/4 v9, 0x0

    const/4 v10, -0x1

    const-string/jumbo v11, "set debug app"

    move-object v2, p0

    move-object v3, p1

    invoke-virtual/range {v2 .. v11}, Lcom/android/server/am/ActivityManagerService;->forceStopPackageLocked(Ljava/lang/String;IZZZZZILjava/lang/String;)Z

    .line 13885
    :cond_2
    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_1

    :try_start_2
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    .line 13887
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 13888
    nop

    .line 13889
    return-void

    .line 13885
    :catchall_1
    move-exception p1

    :try_start_3
    monitor-exit p0
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_1

    :try_start_4
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw p1
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_0

    .line 13887
    :goto_1
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    throw p1
.end method

.method public setDisablePreviewScreenshots(Landroid/os/IBinder;Z)V
    .locals 3
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Landroid/os/RemoteException;
        }
    .end annotation

    .line 12040
    monitor-enter p0

    :try_start_0
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    .line 12041
    invoke-static {p1}, Lcom/android/server/am/ActivityRecord;->isInStackLocked(Landroid/os/IBinder;)Lcom/android/server/am/ActivityRecord;

    move-result-object v0

    .line 12042
    if-nez v0, :cond_0

    .line 12043
    const-string p2, "ActivityManager"

    new-instance v0, Ljava/lang/StringBuilder;

    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v1, "setDisablePreviewScreenshots: Unable to find activity for token="

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object p1

    invoke-static {p2, p1}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 12045
    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_1

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    return-void

    .line 12047
    :cond_0
    :try_start_1
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v1
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_1

    .line 12049
    :try_start_2
    invoke-virtual {v0, p2}, Lcom/android/server/am/ActivityRecord;->setDisablePreviewScreenshots(Z)V
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    .line 12051
    :try_start_3
    invoke-static {v1, v2}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 12052
    nop

    .line 12053
    monitor-exit p0
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_1

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    .line 12054
    return-void

    .line 12051
    :catchall_0
    move-exception p1

    :try_start_4
    invoke-static {v1, v2}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    throw p1

    .line 12053
    :catchall_1
    move-exception p1

    monitor-exit p0
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_1

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw p1
.end method

.method public setDumpHeapDebugLimit(Ljava/lang/String;IJLjava/lang/String;)V
    .locals 3

    .line 26448
    if-eqz p1, :cond_0

    .line 26449
    const-string v0, "android.permission.SET_DEBUG_APP"

    const-string/jumbo v1, "setDumpHeapDebugLimit()"

    invoke-virtual {p0, v0, v1}, Lcom/android/server/am/ActivityManagerService;->enforceCallingPermission(Ljava/lang/String;Ljava/lang/String;)V

    goto :goto_2

    .line 26452
    :cond_0
    iget-object p1, p0, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Landroid/util/SparseArray;

    monitor-enter p1

    .line 26453
    :try_start_0
    iget-object p2, p0, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Landroid/util/SparseArray;

    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result v0

    invoke-virtual {p2, v0}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    move-result-object p2

    check-cast p2, Lcom/android/server/am/ProcessRecord;

    .line 26454
    if-eqz p2, :cond_7

    .line 26458
    sget-boolean v0, Landroid/os/Build;->IS_DEBUGGABLE:Z

    if-nez v0, :cond_2

    iget-object v0, p2, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget v0, v0, Landroid/content/pm/ApplicationInfo;->flags:I

    and-int/lit8 v0, v0, 0x2

    if-eqz v0, :cond_1

    goto :goto_0

    .line 26460
    :cond_1
    new-instance p2, Ljava/lang/SecurityException;

    const-string p3, "Not running a debuggable build"

    invoke-direct {p2, p3}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw p2

    .line 26462
    :cond_2
    :goto_0
    iget-object v0, p2, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;

    .line 26463
    iget v1, p2, Lcom/android/server/am/ProcessRecord;->uid:I

    .line 26464
    if-eqz p5, :cond_4

    iget-object v2, p2, Lcom/android/server/am/ProcessRecord;->pkgList:Landroid/util/ArrayMap;

    invoke-virtual {v2, p5}, Landroid/util/ArrayMap;->containsKey(Ljava/lang/Object;)Z

    move-result v2

    if-eqz v2, :cond_3

    goto :goto_1

    .line 26465
    :cond_3
    new-instance p3, Ljava/lang/SecurityException;

    new-instance p4, Ljava/lang/StringBuilder;

    invoke-direct {p4}, Ljava/lang/StringBuilder;-><init>()V

    const-string v0, "Package "

    invoke-virtual {p4, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {p4, p5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string p5, " is not running in "

    invoke-virtual {p4, p5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {p4, p2}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    invoke-virtual {p4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object p2

    invoke-direct {p3, p2}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw p3

    .line 26468
    :cond_4
    :goto_1
    monitor-exit p1
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_1

    .line 26470
    move-object p1, v0

    move p2, v1

    :goto_2
    monitor-enter p0

    :try_start_1
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    .line 26471
    const-wide/16 v0, 0x0

    cmp-long v0, p3, v0

    if-lez v0, :cond_5

    .line 26472
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mMemWatchProcesses:Lcom/android/internal/app/ProcessMap;

    new-instance v1, Landroid/util/Pair;

    invoke-static {p3, p4}, Ljava/lang/Long;->valueOf(J)Ljava/lang/Long;

    move-result-object p3

    invoke-direct {v1, p3, p5}, Landroid/util/Pair;-><init>(Ljava/lang/Object;Ljava/lang/Object;)V

    invoke-virtual {v0, p1, p2, v1}, Lcom/android/internal/app/ProcessMap;->put(Ljava/lang/String;ILjava/lang/Object;)Ljava/lang/Object;

    goto :goto_3

    .line 26474
    :cond_5
    if-eqz p2, :cond_6

    .line 26475
    iget-object p3, p0, Lcom/android/server/am/ActivityManagerService;->mMemWatchProcesses:Lcom/android/internal/app/ProcessMap;

    invoke-virtual {p3, p1, p2}, Lcom/android/internal/app/ProcessMap;->remove(Ljava/lang/String;I)Ljava/lang/Object;

    goto :goto_3

    .line 26477
    :cond_6
    iget-object p2, p0, Lcom/android/server/am/ActivityManagerService;->mMemWatchProcesses:Lcom/android/internal/app/ProcessMap;

    invoke-virtual {p2}, Lcom/android/internal/app/ProcessMap;->getMap()Landroid/util/ArrayMap;

    move-result-object p2

    invoke-virtual {p2, p1}, Landroid/util/ArrayMap;->remove(Ljava/lang/Object;)Ljava/lang/Object;

    .line 26480
    :goto_3
    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    .line 26481
    return-void

    .line 26480
    :catchall_0
    move-exception p1

    :try_start_2
    monitor-exit p0
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw p1

    .line 26455
    :cond_7
    :try_start_3
    new-instance p2, Ljava/lang/SecurityException;

    new-instance p3, Ljava/lang/StringBuilder;

    invoke-direct {p3}, Ljava/lang/StringBuilder;-><init>()V

    const-string p4, "No process found for calling pid "

    invoke-virtual {p3, p4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 26456
    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result p4

    invoke-virtual {p3, p4}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {p3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object p3

    invoke-direct {p2, p3}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw p2

    .line 26468
    :catchall_1
    move-exception p2

    monitor-exit p1
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_1

    throw p2
.end method

.method public setFocusedStack(I)V
    .locals 5

    .line 3706
    const-string v0, "android.permission.MANAGE_ACTIVITY_STACKS"

    const-string/jumbo v1, "setFocusedStack()"

    invoke-virtual {p0, v0, v1}, Lcom/android/server/am/ActivityManagerService;->enforceCallingPermission(Ljava/lang/String;Ljava/lang/String;)V

    .line 3708
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v0

    .line 3710
    :try_start_0
    monitor-enter p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_1

    :try_start_1
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    .line 3711
    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mStackSupervisor:Lcom/android/server/am/ActivityStackSupervisor;

    invoke-virtual {v2, p1}, Lcom/android/server/am/ActivityStackSupervisor;->getStack(I)Lcom/android/server/am/ActivityStack;

    move-result-object v2

    .line 3712
    if-nez v2, :cond_0

    .line 3713
    const-string v2, "ActivityManager"

    new-instance v3, Ljava/lang/StringBuilder;

    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v4, "setFocusedStack: No stack with id="

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v3, p1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object p1

    invoke-static {v2, p1}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 3714
    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 3722
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 3714
    return-void

    .line 3716
    :cond_0
    :try_start_2
    invoke-virtual {v2}, Lcom/android/server/am/ActivityStack;->topRunningActivityLocked()Lcom/android/server/am/ActivityRecord;

    move-result-object p1

    .line 3717
    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mStackSupervisor:Lcom/android/server/am/ActivityStackSupervisor;

    const-string/jumbo v3, "setFocusedStack"

    invoke-virtual {v2, p1, v3}, Lcom/android/server/am/ActivityStackSupervisor;->moveFocusableActivityStackToFrontLocked(Lcom/android/server/am/ActivityRecord;Ljava/lang/String;)Z

    move-result p1

    if-eqz p1, :cond_1

    .line 3718
    iget-object p1, p0, Lcom/android/server/am/ActivityManagerService;->mStackSupervisor:Lcom/android/server/am/ActivityStackSupervisor;

    invoke-virtual {p1}, Lcom/android/server/am/ActivityStackSupervisor;->resumeFocusedStackTopActivityLocked()Z

    .line 3720
    :cond_1
    monitor-exit p0
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    :try_start_3
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_1

    .line 3722
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 3723
    nop

    .line 3724
    return-void

    .line 3720
    :catchall_0
    move-exception p1

    :try_start_4
    monitor-exit p0
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_0

    :try_start_5
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw p1
    :try_end_5
    .catchall {:try_start_5 .. :try_end_5} :catchall_1

    .line 3722
    :catchall_1
    move-exception p1

    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    throw p1
.end method

.method public setFocusedTask(I)V
    .locals 4

    .line 3728
    const-string v0, "android.permission.MANAGE_ACTIVITY_STACKS"

    const-string/jumbo v1, "setFocusedTask()"

    invoke-virtual {p0, v0, v1}, Lcom/android/server/am/ActivityManagerService;->enforceCallingPermission(Ljava/lang/String;Ljava/lang/String;)V

    .line 3730
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v0

    .line 3732
    :try_start_0
    monitor-enter p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_1

    :try_start_1
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    .line 3733
    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mStackSupervisor:Lcom/android/server/am/ActivityStackSupervisor;

    invoke-virtual {v2, p1}, Lcom/android/server/am/ActivityStackSupervisor;->anyTaskForIdLocked(I)Lcom/android/server/am/TaskRecord;

    move-result-object p1

    .line 3734
    if-nez p1, :cond_0

    .line 3735
    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 3743
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 3735
    return-void

    .line 3737
    :cond_0
    :try_start_2
    invoke-virtual {p1}, Lcom/android/server/am/TaskRecord;->topRunningActivityLocked()Lcom/android/server/am/ActivityRecord;

    move-result-object p1

    .line 3738
    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mStackSupervisor:Lcom/android/server/am/ActivityStackSupervisor;

    const-string/jumbo v3, "setFocusedTask"

    invoke-virtual {v2, p1, v3}, Lcom/android/server/am/ActivityStackSupervisor;->moveFocusableActivityStackToFrontLocked(Lcom/android/server/am/ActivityRecord;Ljava/lang/String;)Z

    move-result p1

    if-eqz p1, :cond_1

    .line 3739
    iget-object p1, p0, Lcom/android/server/am/ActivityManagerService;->mStackSupervisor:Lcom/android/server/am/ActivityStackSupervisor;

    invoke-virtual {p1}, Lcom/android/server/am/ActivityStackSupervisor;->resumeFocusedStackTopActivityLocked()Z

    .line 3741
    :cond_1
    monitor-exit p0
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    :try_start_3
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_1

    .line 3743
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 3744
    nop

    .line 3745
    return-void

    .line 3741
    :catchall_0
    move-exception p1

    :try_start_4
    monitor-exit p0
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_0

    :try_start_5
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw p1
    :try_end_5
    .catchall {:try_start_5 .. :try_end_5} :catchall_1

    .line 3743
    :catchall_1
    move-exception p1

    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    throw p1
.end method

.method public setFrontActivityScreenCompatMode(I)V
    .locals 2

    .line 4884
    const-string v0, "android.permission.SET_SCREEN_COMPATIBILITY"

    const-string/jumbo v1, "setFrontActivityScreenCompatMode"

    invoke-virtual {p0, v0, v1}, Lcom/android/server/am/ActivityManagerService;->enforceCallingPermission(Ljava/lang/String;Ljava/lang/String;)V

    .line 4886
    monitor-enter p0

    :try_start_0
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    .line 4887
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mCompatModePackages:Lcom/android/server/am/CompatModePackages;

    invoke-virtual {v0, p1}, Lcom/android/server/am/CompatModePackages;->setFrontActivityScreenCompatModeLocked(I)V

    .line 4888
    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    .line 4889
    return-void

    .line 4888
    :catchall_0
    move-exception p1

    :try_start_1
    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw p1
.end method

.method public setHasTopUi(Z)V
    .locals 7
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Landroid/os/RemoteException;
        }
    .end annotation

    .line 14863
    const-string v0, "android.permission.INTERNAL_SYSTEM_WINDOW"

    invoke-virtual {p0, v0}, Lcom/android/server/am/ActivityManagerService;->checkCallingPermission(Ljava/lang/String;)I

    move-result v0

    if-nez v0, :cond_3

    .line 14871
    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result v0

    .line 14872
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v1

    .line 14874
    :try_start_0
    monitor-enter p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_2

    :try_start_1
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    .line 14875
    const/4 v3, 0x0

    .line 14877
    iget-object v4, p0, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Landroid/util/SparseArray;

    monitor-enter v4
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_1

    .line 14878
    :try_start_2
    iget-object v5, p0, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Landroid/util/SparseArray;

    invoke-virtual {v5, v0}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    move-result-object v5

    check-cast v5, Lcom/android/server/am/ProcessRecord;

    .line 14879
    if-nez v5, :cond_0

    .line 14880
    const-string p1, "ActivityManager"

    new-instance v3, Ljava/lang/StringBuilder;

    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v5, "setHasTopUi called on unknown pid: "

    invoke-virtual {v3, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v3, v0}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    invoke-static {p1, v0}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 14881
    monitor-exit v4
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    :try_start_3
    monitor-exit p0
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_1

    .line 14896
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    invoke-static {v1, v2}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 14881
    return-void

    .line 14883
    :cond_0
    :try_start_4
    iget-boolean v0, v5, Lcom/android/server/am/ProcessRecord;->hasTopUi:Z

    const/4 v6, 0x1

    if-eq v0, p1, :cond_1

    .line 14887
    iput-boolean p1, v5, Lcom/android/server/am/ProcessRecord;->hasTopUi:Z

    .line 14888
    nop

    .line 14890
    move v3, v6

    :cond_1
    monitor-exit v4
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_0

    .line 14891
    if-eqz v3, :cond_2

    .line 14892
    :try_start_5
    invoke-virtual {p0, v5, v6}, Lcom/android/server/am/ActivityManagerService;->updateOomAdjLocked(Lcom/android/server/am/ProcessRecord;Z)Z

    .line 14894
    :cond_2
    monitor-exit p0
    :try_end_5
    .catchall {:try_start_5 .. :try_end_5} :catchall_1

    :try_start_6
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V
    :try_end_6
    .catchall {:try_start_6 .. :try_end_6} :catchall_2

    .line 14896
    invoke-static {v1, v2}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 14897
    nop

    .line 14898
    return-void

    .line 14890
    :catchall_0
    move-exception p1

    :try_start_7
    monitor-exit v4
    :try_end_7
    .catchall {:try_start_7 .. :try_end_7} :catchall_0

    :try_start_8
    throw p1

    .line 14894
    :catchall_1
    move-exception p1

    monitor-exit p0
    :try_end_8
    .catchall {:try_start_8 .. :try_end_8} :catchall_1

    :try_start_9
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw p1
    :try_end_9
    .catchall {:try_start_9 .. :try_end_9} :catchall_2

    .line 14896
    :catchall_2
    move-exception p1

    invoke-static {v1, v2}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    throw p1

    .line 14864
    :cond_3
    new-instance p1, Ljava/lang/StringBuilder;

    invoke-direct {p1}, Ljava/lang/StringBuilder;-><init>()V

    const-string v0, "Permission Denial: setHasTopUi() from pid="

    invoke-virtual {p1, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 14865
    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result v0

    invoke-virtual {p1, v0}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v0, ", uid="

    invoke-virtual {p1, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 14866
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v0

    invoke-virtual {p1, v0}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v0, " requires "

    invoke-virtual {p1, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v0, "android.permission.INTERNAL_SYSTEM_WINDOW"

    invoke-virtual {p1, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {p1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object p1

    .line 14868
    const-string v0, "ActivityManager"

    invoke-static {v0, p1}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 14869
    new-instance v0, Ljava/lang/SecurityException;

    invoke-direct {v0, p1}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v0
.end method

.method public setImmersive(Landroid/os/IBinder;Z)V
    .locals 0

    .line 14618
    monitor-enter p0

    :try_start_0
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    .line 14619
    invoke-static {p1}, Lcom/android/server/am/ActivityRecord;->isInStackLocked(Landroid/os/IBinder;)Lcom/android/server/am/ActivityRecord;

    move-result-object p1

    .line 14620
    if-eqz p1, :cond_1

    .line 14623
    iput-boolean p2, p1, Lcom/android/server/am/ActivityRecord;->immersive:Z

    .line 14626
    iget-object p2, p0, Lcom/android/server/am/ActivityManagerService;->mStackSupervisor:Lcom/android/server/am/ActivityStackSupervisor;

    invoke-virtual {p2}, Lcom/android/server/am/ActivityStackSupervisor;->getResumedActivityLocked()Lcom/android/server/am/ActivityRecord;

    move-result-object p2

    if-ne p1, p2, :cond_0

    .line 14628
    invoke-virtual {p0, p1}, Lcom/android/server/am/ActivityManagerService;->applyUpdateLockStateLocked(Lcom/android/server/am/ActivityRecord;)V

    .line 14630
    :cond_0
    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    .line 14631
    return-void

    .line 14621
    :cond_1
    :try_start_1
    new-instance p1, Ljava/lang/IllegalArgumentException;

    invoke-direct {p1}, Ljava/lang/IllegalArgumentException;-><init>()V

    throw p1

    .line 14630
    :catchall_0
    move-exception p1

    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw p1
.end method

.method public setInstaller(Lcom/android/server/pm/Installer;)V
    .locals 0

    .line 3329
    iput-object p1, p0, Lcom/android/server/am/ActivityManagerService;->mInstaller:Lcom/android/server/pm/Installer;

    .line 3330
    return-void
.end method

.method public setLockScreenShown(ZZI)V
    .locals 3

    .line 13713
    const-string v0, "android.permission.DEVICE_POWER"

    invoke-virtual {p0, v0}, Lcom/android/server/am/ActivityManagerService;->checkCallingPermission(Ljava/lang/String;)I

    move-result v0

    if-nez v0, :cond_1

    .line 13719
    monitor-enter p0

    :try_start_0
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    .line 13720
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v0

    .line 13721
    iget-boolean v2, p0, Lcom/android/server/am/ActivityManagerService;->mKeyguardShown:Z

    if-eq v2, p1, :cond_0

    .line 13722
    iput-boolean p1, p0, Lcom/android/server/am/ActivityManagerService;->mKeyguardShown:Z

    .line 13723
    invoke-virtual {p0}, Lcom/android/server/am/ActivityManagerService;->reportCurKeyguardUsageEventLocked()V
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_1

    .line 13726
    :cond_0
    :try_start_1
    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mKeyguardController:Lcom/android/server/am/KeyguardController;

    invoke-virtual {v2, p1, p2, p3}, Lcom/android/server/am/KeyguardController;->setKeyguardShown(ZZI)V
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 13729
    :try_start_2
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 13730
    nop

    .line 13731
    monitor-exit p0
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_1

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    .line 13733
    iget-object p2, p0, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    const/16 p3, 0x41

    const/4 v0, 0x0

    invoke-virtual {p2, p3, p1, v0}, Lcom/android/server/am/ActivityManagerService$MainHandler;->obtainMessage(III)Landroid/os/Message;

    move-result-object p1

    .line 13734
    invoke-virtual {p1}, Landroid/os/Message;->sendToTarget()V

    .line 13735
    return-void

    .line 13729
    :catchall_0
    move-exception p1

    :try_start_3
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    throw p1

    .line 13731
    :catchall_1
    move-exception p1

    monitor-exit p0
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_1

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw p1

    .line 13715
    :cond_1
    new-instance p1, Ljava/lang/SecurityException;

    const-string p2, "Requires permission android.permission.DEVICE_POWER"

    invoke-direct {p1, p2}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw p1
.end method

.method setNativeDebuggingAppLocked(Landroid/content/pm/ApplicationInfo;Ljava/lang/String;)V
    .locals 3

    .line 13974
    const-string v0, "1"

    const-string/jumbo v1, "ro.debuggable"

    const-string v2, "0"

    invoke-static {v1, v2}, Landroid/os/SystemProperties;->get(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;

    move-result-object v1

    invoke-virtual {v0, v1}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v0

    .line 13975
    if-nez v0, :cond_1

    .line 13976
    iget v0, p1, Landroid/content/pm/ApplicationInfo;->flags:I

    and-int/lit8 v0, v0, 0x2

    if-eqz v0, :cond_0

    goto :goto_0

    .line 13977
    :cond_0
    new-instance p2, Ljava/lang/SecurityException;

    new-instance v0, Ljava/lang/StringBuilder;

    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V

    const-string v1, "Process not debuggable: "

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget-object p1, p1, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;

    invoke-virtual {v0, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object p1

    invoke-direct {p2, p1}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw p2

    .line 13980
    :cond_1
    :goto_0
    iput-object p2, p0, Lcom/android/server/am/ActivityManagerService;->mNativeDebuggingApp:Ljava/lang/String;

    .line 13981
    return-void
.end method

.method setOomAdjObserver(ILcom/android/server/am/ActivityManagerService$OomAdjObserver;)V
    .locals 0

    .line 5199
    monitor-enter p0

    :try_start_0
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    .line 5200
    iput p1, p0, Lcom/android/server/am/ActivityManagerService;->mCurOomAdjUid:I

    .line 5201
    iput-object p2, p0, Lcom/android/server/am/ActivityManagerService;->mCurOomAdjObserver:Lcom/android/server/am/ActivityManagerService$OomAdjObserver;

    .line 5202
    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    .line 5203
    return-void

    .line 5202
    :catchall_0
    move-exception p1

    :try_start_1
    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw p1
.end method

.method public setPackageAskScreenCompat(Ljava/lang/String;Z)V
    .locals 2

    .line 4918
    const-string v0, "android.permission.SET_SCREEN_COMPATIBILITY"

    const-string/jumbo v1, "setPackageAskScreenCompat"

    invoke-virtual {p0, v0, v1}, Lcom/android/server/am/ActivityManagerService;->enforceCallingPermission(Ljava/lang/String;Ljava/lang/String;)V

    .line 4920
    monitor-enter p0

    :try_start_0
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    .line 4921
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mCompatModePackages:Lcom/android/server/am/CompatModePackages;

    invoke-virtual {v0, p1, p2}, Lcom/android/server/am/CompatModePackages;->setPackageAskCompatModeLocked(Ljava/lang/String;Z)V

    .line 4922
    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    .line 4923
    return-void

    .line 4922
    :catchall_0
    move-exception p1

    :try_start_1
    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw p1
.end method

.method public setPackageScreenCompatMode(Ljava/lang/String;I)V
    .locals 2

    .line 4901
    const-string v0, "android.permission.SET_SCREEN_COMPATIBILITY"

    const-string/jumbo v1, "setPackageScreenCompatMode"

    invoke-virtual {p0, v0, v1}, Lcom/android/server/am/ActivityManagerService;->enforceCallingPermission(Ljava/lang/String;Ljava/lang/String;)V

    .line 4903
    monitor-enter p0

    :try_start_0
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    .line 4904
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mCompatModePackages:Lcom/android/server/am/CompatModePackages;

    invoke-virtual {v0, p1, p2}, Lcom/android/server/am/CompatModePackages;->setPackageScreenCompatModeLocked(Ljava/lang/String;I)V

    .line 4905
    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    .line 4906
    return-void

    .line 4905
    :catchall_0
    move-exception p1

    :try_start_1
    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw p1
.end method

.method public setPersistentVrThread(I)V
    .locals 4

    .line 14658
    const-string v0, "android.permission.RESTRICTED_VR_ACCESS"

    invoke-virtual {p0, v0}, Lcom/android/server/am/ActivityManagerService;->checkCallingPermission(Ljava/lang/String;)I

    move-result v0

    if-nez v0, :cond_0

    .line 14666
    invoke-direct {p0}, Lcom/android/server/am/ActivityManagerService;->enforceSystemHasVrFeature()V

    .line 14667
    monitor-enter p0

    :try_start_0
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    .line 14668
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Landroid/util/SparseArray;

    monitor-enter v0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_1

    .line 14669
    :try_start_1
    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result v1

    .line 14670
    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Landroid/util/SparseArray;

    invoke-virtual {v2, v1}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Lcom/android/server/am/ProcessRecord;

    .line 14671
    iget-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mVrController:Lcom/android/server/am/VrController;

    invoke-virtual {v3, p1, v1, v2}, Lcom/android/server/am/VrController;->setPersistentVrThreadLocked(IILcom/android/server/am/ProcessRecord;)V

    .line 14672
    monitor-exit v0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 14673
    :try_start_2
    monitor-exit p0
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_1

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    .line 14674
    return-void

    .line 14672
    :catchall_0
    move-exception p1

    :try_start_3
    monitor-exit v0
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_0

    :try_start_4
    throw p1

    .line 14673
    :catchall_1
    move-exception p1

    monitor-exit p0
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_1

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw p1

    .line 14659
    :cond_0
    new-instance p1, Ljava/lang/StringBuilder;

    invoke-direct {p1}, Ljava/lang/StringBuilder;-><init>()V

    const-string v0, "Permission Denial: setPersistentVrThread() from pid="

    invoke-virtual {p1, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 14660
    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result v0

    invoke-virtual {p1, v0}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v0, ", uid="

    invoke-virtual {p1, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 14661
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v0

    invoke-virtual {p1, v0}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v0, " requires "

    invoke-virtual {p1, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v0, "android.permission.RESTRICTED_VR_ACCESS"

    invoke-virtual {p1, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {p1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object p1

    .line 14663
    const-string v0, "ActivityManager"

    invoke-static {v0, p1}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 14664
    new-instance v0, Ljava/lang/SecurityException;

    invoke-direct {v0, p1}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v0
.end method

.method public setPictureInPictureParams(Landroid/os/IBinder;Landroid/app/PictureInPictureParams;)V
    .locals 4

    .line 9113
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v0

    .line 9115
    :try_start_0
    monitor-enter p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_1

    :try_start_1
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    .line 9116
    const-string/jumbo v2, "setPictureInPictureParams"

    invoke-direct {p0, v2, p1, p2}, Lcom/android/server/am/ActivityManagerService;->ensureValidPictureInPictureActivityParamsLocked(Ljava/lang/String;Landroid/os/IBinder;Landroid/app/PictureInPictureParams;)Lcom/android/server/am/ActivityRecord;

    move-result-object p1

    .line 9120
    iget-object v2, p1, Lcom/android/server/am/ActivityRecord;->pictureInPictureArgs:Landroid/app/PictureInPictureParams;

    invoke-virtual {v2, p2}, Landroid/app/PictureInPictureParams;->copyOnlySet(Landroid/app/PictureInPictureParams;)V

    .line 9121
    invoke-virtual {p1}, Lcom/android/server/am/ActivityRecord;->inPinnedWindowingMode()Z

    move-result v2

    if-eqz v2, :cond_0

    .line 9125
    invoke-virtual {p1}, Lcom/android/server/am/ActivityRecord;->getStack()Lcom/android/server/am/ActivityStack;

    move-result-object v2

    check-cast v2, Lcom/android/server/am/PinnedActivityStack;

    .line 9126
    invoke-virtual {v2}, Lcom/android/server/am/PinnedActivityStack;->isAnimatingBoundsToFullscreen()Z

    move-result v3

    if-nez v3, :cond_0

    .line 9127
    iget-object v3, p1, Lcom/android/server/am/ActivityRecord;->pictureInPictureArgs:Landroid/app/PictureInPictureParams;

    .line 9128
    invoke-virtual {v3}, Landroid/app/PictureInPictureParams;->getAspectRatio()F

    move-result v3

    .line 9127
    invoke-virtual {v2, v3}, Lcom/android/server/am/PinnedActivityStack;->setPictureInPictureAspectRatio(F)V

    .line 9129
    iget-object p1, p1, Lcom/android/server/am/ActivityRecord;->pictureInPictureArgs:Landroid/app/PictureInPictureParams;

    invoke-virtual {p1}, Landroid/app/PictureInPictureParams;->getActions()Ljava/util/List;

    move-result-object p1

    invoke-virtual {v2, p1}, Lcom/android/server/am/PinnedActivityStack;->setPictureInPictureActions(Ljava/util/List;)V

    .line 9132
    :cond_0
    invoke-direct {p0, p2}, Lcom/android/server/am/ActivityManagerService;->logPictureInPictureArgs(Landroid/app/PictureInPictureParams;)V

    .line 9133
    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    :try_start_2
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_1

    .line 9135
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 9136
    nop

    .line 9137
    return-void

    .line 9133
    :catchall_0
    move-exception p1

    :try_start_3
    monitor-exit p0
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_0

    :try_start_4
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw p1
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_1

    .line 9135
    :catchall_1
    move-exception p1

    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    throw p1
.end method

.method public setProcessImportant(Landroid/os/IBinder;IZLjava/lang/String;)V
    .locals 6

    .line 8929
    const-string v0, "android.permission.SET_PROCESS_LIMIT"

    const-string/jumbo v1, "setProcessImportant()"

    invoke-virtual {p0, v0, v1}, Lcom/android/server/am/ActivityManagerService;->enforceCallingPermission(Ljava/lang/String;Ljava/lang/String;)V

    .line 8931
    monitor-enter p0

    :try_start_0
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    .line 8932
    nop

    .line 8934
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Landroid/util/SparseArray;

    monitor-enter v0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_1

    .line 8935
    :try_start_1
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Landroid/util/SparseArray;

    invoke-virtual {v1, p2}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    move-result-object v1

    check-cast v1, Lcom/android/server/am/ProcessRecord;

    .line 8936
    if-nez v1, :cond_0

    if-eqz p3, :cond_0

    .line 8937
    const-string p1, "ActivityManager"

    new-instance p3, Ljava/lang/StringBuilder;

    invoke-direct {p3}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo p4, "setProcessForeground called on unknown pid: "

    invoke-virtual {p3, p4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {p3, p2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {p3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object p2

    invoke-static {p1, p2}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 8938
    monitor-exit v0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    :try_start_2
    monitor-exit p0
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_1

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    return-void

    .line 8940
    :cond_0
    :try_start_3
    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mImportantProcesses:Landroid/util/SparseArray;

    invoke-virtual {v2, p2}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Lcom/android/server/am/ActivityManagerService$ImportanceToken;

    .line 8941
    const/4 v3, 0x1

    const/4 v4, 0x0

    if-eqz v2, :cond_2

    .line 8942
    iget-object v5, v2, Lcom/android/server/am/ActivityManagerService$ImportanceToken;->token:Landroid/os/IBinder;

    invoke-interface {v5, v2, v4}, Landroid/os/IBinder;->unlinkToDeath(Landroid/os/IBinder$DeathRecipient;I)Z

    .line 8943
    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mImportantProcesses:Landroid/util/SparseArray;

    invoke-virtual {v2, p2}, Landroid/util/SparseArray;->remove(I)V

    .line 8944
    if-eqz v1, :cond_1

    .line 8945
    const/4 v2, 0x0

    iput-object v2, v1, Lcom/android/server/am/ProcessRecord;->forcingToImportant:Ljava/lang/Object;

    .line 8947
    :cond_1
    nop

    .line 8949
    move v2, v3

    goto :goto_0

    :cond_2
    move v2, v4

    :goto_0
    if-eqz p3, :cond_3

    if-eqz p1, :cond_3

    .line 8950
    new-instance p3, Lcom/android/server/am/ActivityManagerService$12;

    invoke-direct {p3, p0, p2, p1, p4}, Lcom/android/server/am/ActivityManagerService$12;-><init>(Lcom/android/server/am/ActivityManagerService;ILandroid/os/IBinder;Ljava/lang/String;)V
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_0

    .line 8957
    :try_start_4
    invoke-interface {p1, p3, v4}, Landroid/os/IBinder;->linkToDeath(Landroid/os/IBinder$DeathRecipient;I)V

    .line 8958
    iget-object p1, p0, Lcom/android/server/am/ActivityManagerService;->mImportantProcesses:Landroid/util/SparseArray;

    invoke-virtual {p1, p2, p3}, Landroid/util/SparseArray;->put(ILjava/lang/Object;)V

    .line 8959
    iput-object p3, v1, Lcom/android/server/am/ProcessRecord;->forcingToImportant:Ljava/lang/Object;
    :try_end_4
    .catch Landroid/os/RemoteException; {:try_start_4 .. :try_end_4} :catch_0
    .catchall {:try_start_4 .. :try_end_4} :catchall_0

    .line 8960
    nop

    .line 8964
    nop

    .line 8966
    move v2, v3

    goto :goto_1

    .line 8961
    :catch_0
    move-exception p1

    .line 8966
    :cond_3
    :goto_1
    :try_start_5
    monitor-exit v0
    :try_end_5
    .catchall {:try_start_5 .. :try_end_5} :catchall_0

    .line 8968
    if-eqz v2, :cond_4

    .line 8969
    :try_start_6
    invoke-virtual {p0}, Lcom/android/server/am/ActivityManagerService;->updateOomAdjLocked()V

    .line 8971
    :cond_4
    monitor-exit p0
    :try_end_6
    .catchall {:try_start_6 .. :try_end_6} :catchall_1

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    .line 8972
    return-void

    .line 8966
    :catchall_0
    move-exception p1

    :try_start_7
    monitor-exit v0
    :try_end_7
    .catchall {:try_start_7 .. :try_end_7} :catchall_0

    :try_start_8
    throw p1

    .line 8971
    :catchall_1
    move-exception p1

    monitor-exit p0
    :try_end_8
    .catchall {:try_start_8 .. :try_end_8} :catchall_1

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw p1
.end method

.method public setProcessLimit(I)V
    .locals 2

    .line 8891
    const-string v0, "android.permission.SET_PROCESS_LIMIT"

    const-string/jumbo v1, "setProcessLimit()"

    invoke-virtual {p0, v0, v1}, Lcom/android/server/am/ActivityManagerService;->enforceCallingPermission(Ljava/lang/String;Ljava/lang/String;)V

    .line 8893
    monitor-enter p0

    :try_start_0
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    .line 8894
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mConstants:Lcom/android/server/am/ActivityManagerConstants;

    invoke-virtual {v0, p1}, Lcom/android/server/am/ActivityManagerConstants;->setOverrideMaxCachedProcesses(I)V

    .line 8895
    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    .line 8896
    invoke-virtual {p0}, Lcom/android/server/am/ActivityManagerService;->trimApplications()V

    .line 8897
    return-void

    .line 8895
    :catchall_0
    move-exception p1

    :try_start_1
    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw p1
.end method

.method public setProcessMemoryTrimLevel(Ljava/lang/String;II)Z
    .locals 1
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Landroid/os/RemoteException;
        }
    .end annotation

    .line 4960
    monitor-enter p0

    :try_start_0
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    .line 4961
    const-string/jumbo v0, "setProcessMemoryTrimLevel"

    invoke-direct {p0, p1, p2, v0}, Lcom/android/server/am/ActivityManagerService;->findProcessLocked(Ljava/lang/String;ILjava/lang/String;)Lcom/android/server/am/ProcessRecord;

    move-result-object p2

    .line 4962
    if-eqz p2, :cond_4

    .line 4965
    iget-object p1, p2, Lcom/android/server/am/ProcessRecord;->thread:Landroid/app/IApplicationThread;

    if-eqz p1, :cond_3

    .line 4968
    iget p1, p2, Lcom/android/server/am/ProcessRecord;->trimMemoryLevel:I

    if-ge p1, p3, :cond_2

    .line 4972
    const/16 p1, 0x14

    if-lt p3, p1, :cond_1

    iget p1, p2, Lcom/android/server/am/ProcessRecord;->curProcState:I

    const/4 v0, 0x5

    if-le p1, v0, :cond_0

    goto :goto_0

    .line 4974
    :cond_0
    new-instance p1, Ljava/lang/IllegalArgumentException;

    const-string p2, "Unable to set a background trim level on a foreground process"

    invoke-direct {p1, p2}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw p1

    .line 4977
    :cond_1
    :goto_0
    iget-object p1, p2, Lcom/android/server/am/ProcessRecord;->thread:Landroid/app/IApplicationThread;

    invoke-interface {p1, p3}, Landroid/app/IApplicationThread;->scheduleTrimMemory(I)V

    .line 4978
    iput p3, p2, Lcom/android/server/am/ProcessRecord;->trimMemoryLevel:I

    .line 4979
    const/4 p1, 0x1

    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    return p1

    .line 4969
    :cond_2
    :try_start_1
    new-instance p1, Ljava/lang/IllegalArgumentException;

    const-string p2, "Unable to set a higher trim level than current level"

    invoke-direct {p1, p2}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw p1

    .line 4966
    :cond_3
    new-instance p1, Ljava/lang/IllegalArgumentException;

    const-string p2, "Process has no app thread"

    invoke-direct {p1, p2}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw p1

    .line 4963
    :cond_4
    new-instance p2, Ljava/lang/IllegalArgumentException;

    new-instance p3, Ljava/lang/StringBuilder;

    invoke-direct {p3}, Ljava/lang/StringBuilder;-><init>()V

    const-string v0, "Unknown process: "

    invoke-virtual {p3, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {p3, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {p3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object p1

    invoke-direct {p2, p1}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw p2

    .line 4980
    :catchall_0
    move-exception p1

    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw p1
.end method

.method setProfileApp(Landroid/content/pm/ApplicationInfo;Ljava/lang/String;Landroid/app/ProfilerInfo;)V
    .locals 3

    .line 13951
    monitor-enter p0

    :try_start_0
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    .line 13952
    const-string v0, "1"

    const-string/jumbo v1, "ro.debuggable"

    const-string v2, "0"

    invoke-static {v1, v2}, Landroid/os/SystemProperties;->get(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;

    move-result-object v1

    invoke-virtual {v0, v1}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v0

    .line 13953
    if-nez v0, :cond_1

    .line 13954
    iget v0, p1, Landroid/content/pm/ApplicationInfo;->flags:I

    and-int/lit8 v0, v0, 0x2

    if-eqz v0, :cond_0

    goto :goto_0

    .line 13955
    :cond_0
    new-instance p2, Ljava/lang/SecurityException;

    new-instance p3, Ljava/lang/StringBuilder;

    invoke-direct {p3}, Ljava/lang/StringBuilder;-><init>()V

    const-string v0, "Process not debuggable: "

    invoke-virtual {p3, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget-object p1, p1, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;

    invoke-virtual {p3, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {p3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object p1

    invoke-direct {p2, p1}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw p2

    .line 13958
    :cond_1
    :goto_0
    iput-object p2, p0, Lcom/android/server/am/ActivityManagerService;->mProfileApp:Ljava/lang/String;

    .line 13960
    iget-object p1, p0, Lcom/android/server/am/ActivityManagerService;->mProfilerInfo:Landroid/app/ProfilerInfo;

    if-eqz p1, :cond_2

    .line 13961
    iget-object p1, p0, Lcom/android/server/am/ActivityManagerService;->mProfilerInfo:Landroid/app/ProfilerInfo;

    iget-object p1, p1, Landroid/app/ProfilerInfo;->profileFd:Landroid/os/ParcelFileDescriptor;
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    if-eqz p1, :cond_2

    .line 13963
    :try_start_1
    iget-object p1, p0, Lcom/android/server/am/ActivityManagerService;->mProfilerInfo:Landroid/app/ProfilerInfo;

    iget-object p1, p1, Landroid/app/ProfilerInfo;->profileFd:Landroid/os/ParcelFileDescriptor;

    invoke-virtual {p1}, Landroid/os/ParcelFileDescriptor;->close()V
    :try_end_1
    .catch Ljava/io/IOException; {:try_start_1 .. :try_end_1} :catch_0
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 13965
    goto :goto_1

    .line 13964
    :catch_0
    move-exception p1

    .line 13968
    :cond_2
    :goto_1
    :try_start_2
    new-instance p1, Landroid/app/ProfilerInfo;

    invoke-direct {p1, p3}, Landroid/app/ProfilerInfo;-><init>(Landroid/app/ProfilerInfo;)V

    iput-object p1, p0, Lcom/android/server/am/ActivityManagerService;->mProfilerInfo:Landroid/app/ProfilerInfo;

    .line 13969
    const/4 p1, 0x0

    iput p1, p0, Lcom/android/server/am/ActivityManagerService;->mProfileType:I

    .line 13970
    monitor-exit p0
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    .line 13971
    return-void

    .line 13970
    :catchall_0
    move-exception p1

    :try_start_3
    monitor-exit p0
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw p1
.end method

.method public setRenderThread(I)V
    .locals 4

    .line 14737
    monitor-enter p0

    :try_start_0
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    .line 14739
    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result v0

    .line 14740
    invoke-static {}, Landroid/os/Process;->myPid()I

    move-result v1

    if-ne v0, v1, :cond_0

    .line 14741
    invoke-direct {p0, p1}, Lcom/android/server/am/ActivityManagerService;->demoteSystemServerRenderThread(I)V

    .line 14742
    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_1

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    return-void

    .line 14744
    :cond_0
    :try_start_1
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Landroid/util/SparseArray;

    monitor-enter v1
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_1

    .line 14745
    :try_start_2
    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Landroid/util/SparseArray;

    invoke-virtual {v2, v0}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Lcom/android/server/am/ProcessRecord;

    .line 14746
    if-eqz v2, :cond_3

    iget v3, v2, Lcom/android/server/am/ProcessRecord;->renderThreadTid:I

    if-nez v3, :cond_3

    if-lez p1, :cond_3

    .line 14748
    invoke-static {v0, p1}, Landroid/os/Process;->isThreadInProcess(II)Z

    move-result v0

    if-eqz v0, :cond_2

    .line 14752
    iput p1, v2, Lcom/android/server/am/ProcessRecord;->renderThreadTid:I

    .line 14757
    iget p1, v2, Lcom/android/server/am/ProcessRecord;->curSchedGroup:I

    const/4 v0, 0x3

    if-ne p1, v0, :cond_3

    .line 14759
    iget-boolean p1, p0, Lcom/android/server/am/ActivityManagerService;->mUseFifoUiScheduling:Z

    if-eqz p1, :cond_1

    .line 14760
    iget p1, v2, Lcom/android/server/am/ProcessRecord;->renderThreadTid:I

    const v0, 0x40000001    # 2.0000002f

    const/4 v2, 0x1

    invoke-static {p1, v0, v2}, Landroid/os/Process;->setThreadScheduler(III)V

    goto :goto_0

    .line 14763
    :cond_1
    iget p1, v2, Lcom/android/server/am/ProcessRecord;->renderThreadTid:I

    const/16 v0, -0xa

    invoke-static {p1, v0}, Landroid/os/Process;->setThreadPriority(II)V

    goto :goto_0

    .line 14749
    :cond_2
    new-instance p1, Ljava/lang/IllegalArgumentException;

    const-string v0, "Render thread does not belong to process"

    invoke-direct {p1, v0}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw p1

    .line 14773
    :cond_3
    :goto_0
    monitor-exit v1
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    .line 14774
    :try_start_3
    monitor-exit p0
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_1

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    .line 14775
    return-void

    .line 14773
    :catchall_0
    move-exception p1

    :try_start_4
    monitor-exit v1
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_0

    :try_start_5
    throw p1

    .line 14774
    :catchall_1
    move-exception p1

    monitor-exit p0
    :try_end_5
    .catchall {:try_start_5 .. :try_end_5} :catchall_1

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw p1
.end method

.method public setRequestedOrientation(Landroid/os/IBinder;I)V
    .locals 2

    .line 5793
    monitor-enter p0

    :try_start_0
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    .line 5794
    invoke-static {p1}, Lcom/android/server/am/ActivityRecord;->isInStackLocked(Landroid/os/IBinder;)Lcom/android/server/am/ActivityRecord;

    move-result-object p1

    .line 5795
    if-nez p1, :cond_0

    .line 5796
    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_1

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    return-void

    .line 5798
    :cond_0
    :try_start_1
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_1

    .line 5800
    :try_start_2
    invoke-virtual {p1, p2}, Lcom/android/server/am/ActivityRecord;->setRequestedOrientation(I)V
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    .line 5802
    :try_start_3
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 5803
    nop

    .line 5804
    monitor-exit p0
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_1

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    .line 5805
    return-void

    .line 5802
    :catchall_0
    move-exception p1

    :try_start_4
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    throw p1

    .line 5804
    :catchall_1
    move-exception p1

    monitor-exit p0
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_1

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw p1
.end method

.method setResumedActivityUncheckLocked(Lcom/android/server/am/ActivityRecord;Ljava/lang/String;)V
    .locals 5
    .annotation build Lcom/android/internal/annotations/GuardedBy;
        value = "this"
    .end annotation

    .line 3621
    invoke-virtual {p1}, Lcom/android/server/am/ActivityRecord;->getTask()Lcom/android/server/am/TaskRecord;

    move-result-object v0

    .line 3622
    invoke-virtual {v0}, Lcom/android/server/am/TaskRecord;->isActivityTypeStandard()Z

    move-result v1

    const/4 v2, 0x0

    if-eqz v1, :cond_2

    .line 3623
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mCurAppTimeTracker:Lcom/android/server/am/AppTimeTracker;

    iget-object v3, p1, Lcom/android/server/am/ActivityRecord;->appTimeTracker:Lcom/android/server/am/AppTimeTracker;

    if-eq v1, v3, :cond_1

    .line 3625
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mCurAppTimeTracker:Lcom/android/server/am/AppTimeTracker;

    if-eqz v1, :cond_0

    .line 3626
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mCurAppTimeTracker:Lcom/android/server/am/AppTimeTracker;

    invoke-virtual {v1}, Lcom/android/server/am/AppTimeTracker;->stop()V

    .line 3627
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    const/16 v3, 0x36

    iget-object v4, p0, Lcom/android/server/am/ActivityManagerService;->mCurAppTimeTracker:Lcom/android/server/am/AppTimeTracker;

    invoke-virtual {v1, v3, v4}, Lcom/android/server/am/ActivityManagerService$MainHandler;->obtainMessage(ILjava/lang/Object;)Landroid/os/Message;

    move-result-object v1

    .line 3628
    invoke-virtual {v1}, Landroid/os/Message;->sendToTarget()V

    .line 3629
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mStackSupervisor:Lcom/android/server/am/ActivityStackSupervisor;

    iget-object v3, p1, Lcom/android/server/am/ActivityRecord;->appTimeTracker:Lcom/android/server/am/AppTimeTracker;

    invoke-virtual {v1, v3}, Lcom/android/server/am/ActivityStackSupervisor;->clearOtherAppTimeTrackers(Lcom/android/server/am/AppTimeTracker;)V

    .line 3630
    iput-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mCurAppTimeTracker:Lcom/android/server/am/AppTimeTracker;

    .line 3632
    :cond_0
    iget-object v1, p1, Lcom/android/server/am/ActivityRecord;->appTimeTracker:Lcom/android/server/am/AppTimeTracker;

    if-eqz v1, :cond_3

    .line 3633
    iget-object v1, p1, Lcom/android/server/am/ActivityRecord;->appTimeTracker:Lcom/android/server/am/AppTimeTracker;

    iput-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mCurAppTimeTracker:Lcom/android/server/am/AppTimeTracker;

    .line 3634
    invoke-virtual {p0}, Lcom/android/server/am/ActivityManagerService;->startTimeTrackingFocusedActivityLocked()V

    goto :goto_0

    .line 3637
    :cond_1
    invoke-virtual {p0}, Lcom/android/server/am/ActivityManagerService;->startTimeTrackingFocusedActivityLocked()V

    goto :goto_0

    .line 3640
    :cond_2
    iput-object v2, p1, Lcom/android/server/am/ActivityRecord;->appTimeTracker:Lcom/android/server/am/AppTimeTracker;

    .line 3645
    :cond_3
    :goto_0
    iget-object v1, v0, Lcom/android/server/am/TaskRecord;->voiceInteractor:Lcom/android/internal/app/IVoiceInteractor;

    if-eqz v1, :cond_4

    .line 3646
    iget-object v0, v0, Lcom/android/server/am/TaskRecord;->voiceSession:Landroid/service/voice/IVoiceInteractionSession;

    iget-object v1, p1, Lcom/android/server/am/ActivityRecord;->info:Landroid/content/pm/ActivityInfo;

    iget-object v1, v1, Landroid/content/pm/ActivityInfo;->applicationInfo:Landroid/content/pm/ApplicationInfo;

    iget v1, v1, Landroid/content/pm/ApplicationInfo;->uid:I

    invoke-virtual {p0, v0, v1}, Lcom/android/server/am/ActivityManagerService;->startRunningVoiceLocked(Landroid/service/voice/IVoiceInteractionSession;I)V

    goto :goto_2

    .line 3648
    :cond_4
    invoke-virtual {p0}, Lcom/android/server/am/ActivityManagerService;->finishRunningVoiceLocked()V

    .line 3650
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mLastResumedActivity:Lcom/android/server/am/ActivityRecord;

    if-eqz v0, :cond_6

    .line 3653
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mLastResumedActivity:Lcom/android/server/am/ActivityRecord;

    invoke-virtual {v0}, Lcom/android/server/am/ActivityRecord;->getTask()Lcom/android/server/am/TaskRecord;

    move-result-object v0

    .line 3654
    if-eqz v0, :cond_5

    iget-object v1, v0, Lcom/android/server/am/TaskRecord;->voiceSession:Landroid/service/voice/IVoiceInteractionSession;

    if-eqz v1, :cond_5

    .line 3656
    iget-object v0, v0, Lcom/android/server/am/TaskRecord;->voiceSession:Landroid/service/voice/IVoiceInteractionSession;

    goto :goto_1

    .line 3658
    :cond_5
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mLastResumedActivity:Lcom/android/server/am/ActivityRecord;

    iget-object v0, v0, Lcom/android/server/am/ActivityRecord;->voiceSession:Landroid/service/voice/IVoiceInteractionSession;

    .line 3661
    :goto_1
    if-eqz v0, :cond_6

    .line 3666
    invoke-virtual {p0, v0}, Lcom/android/server/am/ActivityManagerService;->finishVoiceTask(Landroid/service/voice/IVoiceInteractionSession;)V

    .line 3671
    :cond_6
    :goto_2
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mLastResumedActivity:Lcom/android/server/am/ActivityRecord;

    if-eqz v0, :cond_7

    iget v0, p1, Lcom/android/server/am/ActivityRecord;->userId:I

    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mLastResumedActivity:Lcom/android/server/am/ActivityRecord;

    iget v1, v1, Lcom/android/server/am/ActivityRecord;->userId:I

    if-eq v0, v1, :cond_7

    .line 3672
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mUserController:Lcom/android/server/am/UserController;

    iget v1, p1, Lcom/android/server/am/ActivityRecord;->userId:I

    invoke-virtual {v0, v1}, Lcom/android/server/am/UserController;->sendForegroundProfileChanged(I)V

    .line 3674
    :cond_7
    invoke-direct {p0, p1}, Lcom/android/server/am/ActivityManagerService;->updateResumedAppTrace(Lcom/android/server/am/ActivityRecord;)V

    .line 3675
    iput-object p1, p0, Lcom/android/server/am/ActivityManagerService;->mLastResumedActivity:Lcom/android/server/am/ActivityRecord;

    .line 3677
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mWindowManager:Lcom/android/server/wm/WindowManagerService;

    iget-object v1, p1, Lcom/android/server/am/ActivityRecord;->appToken:Landroid/view/IApplicationToken$Stub;

    const/4 v2, 0x1

    invoke-virtual {v0, v1, v2}, Lcom/android/server/wm/WindowManagerService;->setFocusedApp(Landroid/os/IBinder;Z)V

    .line 3679
    invoke-virtual {p0, p1}, Lcom/android/server/am/ActivityManagerService;->applyUpdateLockStateLocked(Lcom/android/server/am/ActivityRecord;)V

    .line 3680
    invoke-virtual {p0, p1}, Lcom/android/server/am/ActivityManagerService;->applyUpdateVrModeLocked(Lcom/android/server/am/ActivityRecord;)V

    .line 3683
    if-nez p1, :cond_8

    const/4 v0, -0x1

    goto :goto_3

    :cond_8
    iget v0, p1, Lcom/android/server/am/ActivityRecord;->userId:I

    .line 3684
    :goto_3
    if-nez p1, :cond_9

    const-string p1, "NULL"

    goto :goto_4

    :cond_9
    iget-object p1, p1, Lcom/android/server/am/ActivityRecord;->shortComponentName:Ljava/lang/String;

    .line 3682
    :goto_4
    invoke-static {v0, p1, p2}, Lcom/android/server/am/EventLogTags;->writeAmSetResumedActivity(ILjava/lang/String;Ljava/lang/String;)V

    .line 3686
    return-void
.end method

.method setRunningRemoteAnimation(IZ)V
    .locals 3

    .line 14901
    invoke-static {}, Landroid/os/Process;->myPid()I

    move-result v0

    if-ne p1, v0, :cond_0

    .line 14902
    const-string p1, "ActivityManager"

    const-string/jumbo p2, "system can\'t run remote animation"

    invoke-static {p1, p2}, Landroid/util/Slog;->wtf(Ljava/lang/String;Ljava/lang/String;)I

    .line 14903
    return-void

    .line 14905
    :cond_0
    monitor-enter p0

    :try_start_0
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    .line 14907
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Landroid/util/SparseArray;

    monitor-enter v0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_1

    .line 14908
    :try_start_1
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Landroid/util/SparseArray;

    invoke-virtual {v1, p1}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    move-result-object v1

    check-cast v1, Lcom/android/server/am/ProcessRecord;

    .line 14909
    if-nez v1, :cond_1

    .line 14910
    const-string p2, "ActivityManager"

    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v2, "setRunningRemoteAnimation called on unknown pid: "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v1, p1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object p1

    invoke-static {p2, p1}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 14911
    monitor-exit v0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    :try_start_2
    monitor-exit p0
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_1

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    return-void

    .line 14913
    :cond_1
    :try_start_3
    monitor-exit v0
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_0

    .line 14914
    :try_start_4
    iget-boolean p1, v1, Lcom/android/server/am/ProcessRecord;->runningRemoteAnimation:Z

    if-ne p1, p2, :cond_2

    .line 14915
    monitor-exit p0
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_1

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    return-void

    .line 14917
    :cond_2
    :try_start_5
    iput-boolean p2, v1, Lcom/android/server/am/ProcessRecord;->runningRemoteAnimation:Z

    .line 14922
    const/4 p1, 0x1

    invoke-virtual {p0, v1, p1}, Lcom/android/server/am/ActivityManagerService;->updateOomAdjLocked(Lcom/android/server/am/ProcessRecord;Z)Z

    .line 14923
    monitor-exit p0
    :try_end_5
    .catchall {:try_start_5 .. :try_end_5} :catchall_1

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    .line 14924
    return-void

    .line 14913
    :catchall_0
    move-exception p1

    :try_start_6
    monitor-exit v0
    :try_end_6
    .catchall {:try_start_6 .. :try_end_6} :catchall_0

    :try_start_7
    throw p1

    .line 14923
    :catchall_1
    move-exception p1

    monitor-exit p0
    :try_end_7
    .catchall {:try_start_7 .. :try_end_7} :catchall_1

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw p1
.end method

.method public setServiceForeground(Landroid/content/ComponentName;Landroid/os/IBinder;ILandroid/app/Notification;I)V
    .locals 6

    .line 20743
    monitor-enter p0

    :try_start_0
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    .line 20744
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mServices:Lcom/android/server/am/ActiveServices;

    move-object v1, p1

    move-object v2, p2

    move v3, p3

    move-object v4, p4

    move v5, p5

    invoke-virtual/range {v0 .. v5}, Lcom/android/server/am/ActiveServices;->setServiceForegroundLocked(Landroid/content/ComponentName;Landroid/os/IBinder;ILandroid/app/Notification;I)V

    .line 20745
    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    .line 20746
    return-void

    .line 20745
    :catchall_0
    move-exception p1

    :try_start_1
    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw p1
.end method

.method public setShowWhenLocked(Landroid/os/IBinder;Z)V
    .locals 2
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Landroid/os/RemoteException;
        }
    .end annotation

    .line 27553
    monitor-enter p0

    :try_start_0
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    .line 27554
    invoke-static {p1}, Lcom/android/server/am/ActivityRecord;->isInStackLocked(Landroid/os/IBinder;)Lcom/android/server/am/ActivityRecord;

    move-result-object p1

    .line 27555
    if-nez p1, :cond_0

    .line 27556
    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_1

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    return-void

    .line 27558
    :cond_0
    :try_start_1
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_1

    .line 27560
    :try_start_2
    invoke-virtual {p1, p2}, Lcom/android/server/am/ActivityRecord;->setShowWhenLocked(Z)V
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    .line 27562
    :try_start_3
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 27563
    nop

    .line 27564
    monitor-exit p0
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_1

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    .line 27565
    return-void

    .line 27562
    :catchall_0
    move-exception p1

    :try_start_4
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    throw p1

    .line 27564
    :catchall_1
    move-exception p1

    monitor-exit p0
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_1

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw p1
.end method

.method public setSplitScreenResizing(Z)V
    .locals 3

    .line 11775
    const-string v0, "android.permission.MANAGE_ACTIVITY_STACKS"

    const-string/jumbo v1, "setSplitScreenResizing()"

    invoke-virtual {p0, v0, v1}, Lcom/android/server/am/ActivityManagerService;->enforceCallerIsRecentsOrHasPermission(Ljava/lang/String;Ljava/lang/String;)V

    .line 11776
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v0

    .line 11778
    :try_start_0
    monitor-enter p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_1

    :try_start_1
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    .line 11779
    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mStackSupervisor:Lcom/android/server/am/ActivityStackSupervisor;

    invoke-virtual {v2, p1}, Lcom/android/server/am/ActivityStackSupervisor;->setSplitScreenResizing(Z)V

    .line 11780
    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    :try_start_2
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_1

    .line 11782
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 11783
    nop

    .line 11784
    return-void

    .line 11780
    :catchall_0
    move-exception p1

    :try_start_3
    monitor-exit p0
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_0

    :try_start_4
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw p1
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_1

    .line 11782
    :catchall_1
    move-exception p1

    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    throw p1
.end method

.method public setSystemProcess()V
    .locals 5

    .line 2836
    :try_start_0
    const-string v0, "activity"

    const/16 v1, 0x15

    const/4 v2, 0x1

    invoke-static {v0, p0, v2, v1}, Landroid/os/ServiceManager;->addService(Ljava/lang/String;Landroid/os/IBinder;ZI)V

    .line 2838
    const-string/jumbo v0, "procstats"

    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mProcessStats:Lcom/android/server/am/ProcessStatsService;

    invoke-static {v0, v1}, Landroid/os/ServiceManager;->addService(Ljava/lang/String;Landroid/os/IBinder;)V

    .line 2839
    const-string v0, "meminfo"

    new-instance v1, Lcom/android/server/am/ActivityManagerService$MemBinder;

    invoke-direct {v1, p0}, Lcom/android/server/am/ActivityManagerService$MemBinder;-><init>(Lcom/android/server/am/ActivityManagerService;)V

    const/4 v3, 0x2

    const/4 v4, 0x0

    invoke-static {v0, v1, v4, v3}, Landroid/os/ServiceManager;->addService(Ljava/lang/String;Landroid/os/IBinder;ZI)V

    .line 2841
    const-string v0, "gfxinfo"

    new-instance v1, Lcom/android/server/am/ActivityManagerService$GraphicsBinder;

    invoke-direct {v1, p0}, Lcom/android/server/am/ActivityManagerService$GraphicsBinder;-><init>(Lcom/android/server/am/ActivityManagerService;)V

    invoke-static {v0, v1}, Landroid/os/ServiceManager;->addService(Ljava/lang/String;Landroid/os/IBinder;)V

    .line 2842
    const-string v0, "dbinfo"

    new-instance v1, Lcom/android/server/am/ActivityManagerService$DbBinder;

    invoke-direct {v1, p0}, Lcom/android/server/am/ActivityManagerService$DbBinder;-><init>(Lcom/android/server/am/ActivityManagerService;)V

    invoke-static {v0, v1}, Landroid/os/ServiceManager;->addService(Ljava/lang/String;Landroid/os/IBinder;)V

    .line 2844
    const-string v0, "cpuinfo"

    new-instance v1, Lcom/android/server/am/ActivityManagerService$CpuBinder;

    invoke-direct {v1, p0}, Lcom/android/server/am/ActivityManagerService$CpuBinder;-><init>(Lcom/android/server/am/ActivityManagerService;)V

    invoke-static {v0, v1, v4, v2}, Landroid/os/ServiceManager;->addService(Ljava/lang/String;Landroid/os/IBinder;ZI)V

    .line 2847
    const-string/jumbo v0, "permission"

    new-instance v1, Lcom/android/server/am/ActivityManagerService$PermissionController;

    invoke-direct {v1, p0}, Lcom/android/server/am/ActivityManagerService$PermissionController;-><init>(Lcom/android/server/am/ActivityManagerService;)V

    invoke-static {v0, v1}, Landroid/os/ServiceManager;->addService(Ljava/lang/String;Landroid/os/IBinder;)V

    .line 2848
    const-string/jumbo v0, "processinfo"

    new-instance v1, Lcom/android/server/am/ActivityManagerService$ProcessInfoService;

    invoke-direct {v1, p0}, Lcom/android/server/am/ActivityManagerService$ProcessInfoService;-><init>(Lcom/android/server/am/ActivityManagerService;)V

    invoke-static {v0, v1}, Landroid/os/ServiceManager;->addService(Ljava/lang/String;Landroid/os/IBinder;)V

    .line 2850
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mContext:Landroid/content/Context;

    invoke-virtual {v0}, Landroid/content/Context;->getPackageManager()Landroid/content/pm/PackageManager;

    move-result-object v0

    const-string v1, "android"

    const v3, 0x100400

    invoke-virtual {v0, v1, v3}, Landroid/content/pm/PackageManager;->getApplicationInfo(Ljava/lang/String;I)Landroid/content/pm/ApplicationInfo;

    move-result-object v0

    .line 2852
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mSystemThread:Landroid/app/ActivityThread;

    invoke-virtual {p0}, Ljava/lang/Object;->getClass()Ljava/lang/Class;

    move-result-object v3

    invoke-virtual {v3}, Ljava/lang/Class;->getClassLoader()Ljava/lang/ClassLoader;

    move-result-object v3

    invoke-virtual {v1, v0, v3}, Landroid/app/ActivityThread;->installSystemApplicationInfo(Landroid/content/pm/ApplicationInfo;Ljava/lang/ClassLoader;)V

    .line 2854
    monitor-enter p0
    :try_end_0
    .catch Landroid/content/pm/PackageManager$NameNotFoundException; {:try_start_0 .. :try_end_0} :catch_0

    :try_start_1
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    .line 2855
    iget-object v1, v0, Landroid/content/pm/ApplicationInfo;->processName:Ljava/lang/String;

    invoke-virtual {p0, v0, v1, v4, v4}, Lcom/android/server/am/ActivityManagerService;->newProcessRecordLocked(Landroid/content/pm/ApplicationInfo;Ljava/lang/String;ZI)Lcom/android/server/am/ProcessRecord;

    move-result-object v0

    .line 2856
    iput-boolean v2, v0, Lcom/android/server/am/ProcessRecord;->persistent:Z

    .line 2857
    sget v1, Lcom/android/server/am/ActivityManagerService;->MY_PID:I

    iput v1, v0, Lcom/android/server/am/ProcessRecord;->pid:I

    .line 2858
    const/16 v1, -0x384

    iput v1, v0, Lcom/android/server/am/ProcessRecord;->maxAdj:I

    .line 2859
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mSystemThread:Landroid/app/ActivityThread;

    invoke-virtual {v1}, Landroid/app/ActivityThread;->getApplicationThread()Landroid/app/ActivityThread$ApplicationThread;

    move-result-object v1

    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mProcessStats:Lcom/android/server/am/ProcessStatsService;

    invoke-virtual {v0, v1, v2}, Lcom/android/server/am/ProcessRecord;->makeActive(Landroid/app/IApplicationThread;Lcom/android/server/am/ProcessStatsService;)V

    .line 2860
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Landroid/util/SparseArray;

    monitor-enter v1
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_1

    .line 2861
    :try_start_2
    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Landroid/util/SparseArray;

    iget v3, v0, Lcom/android/server/am/ProcessRecord;->pid:I

    invoke-virtual {v2, v3, v0}, Landroid/util/SparseArray;->put(ILjava/lang/Object;)V

    .line 2862
    monitor-exit v1
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    .line 2863
    const/4 v1, 0x0

    :try_start_3
    invoke-virtual {p0, v0, v4, v1}, Lcom/android/server/am/ActivityManagerService;->updateLruProcessLocked(Lcom/android/server/am/ProcessRecord;ZLcom/android/server/am/ProcessRecord;)V

    .line 2864
    invoke-virtual {p0}, Lcom/android/server/am/ActivityManagerService;->updateOomAdjLocked()V

    .line 2865
    monitor-exit p0
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_1

    :try_start_4
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V
    :try_end_4
    .catch Landroid/content/pm/PackageManager$NameNotFoundException; {:try_start_4 .. :try_end_4} :catch_0

    .line 2869
    nop

    .line 2872
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mAppOpsService:Lcom/android/server/AppOpsService;

    const/16 v2, 0x3f

    new-instance v3, Lcom/android/server/am/ActivityManagerService$4;

    invoke-direct {v3, p0}, Lcom/android/server/am/ActivityManagerService$4;-><init>(Lcom/android/server/am/ActivityManagerService;)V

    invoke-virtual {v0, v2, v1, v3}, Lcom/android/server/AppOpsService;->startWatchingMode(ILjava/lang/String;Lcom/android/internal/app/IAppOpsCallback;)V

    .line 2883
    return-void

    .line 2862
    :catchall_0
    move-exception v0

    :try_start_5
    monitor-exit v1
    :try_end_5
    .catchall {:try_start_5 .. :try_end_5} :catchall_0

    :try_start_6
    throw v0

    .line 2865
    :catchall_1
    move-exception v0

    monitor-exit p0
    :try_end_6
    .catchall {:try_start_6 .. :try_end_6} :catchall_1

    :try_start_7
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw v0
    :try_end_7
    .catch Landroid/content/pm/PackageManager$NameNotFoundException; {:try_start_7 .. :try_end_7} :catch_0

    .line 2866
    :catch_0
    move-exception v0

    .line 2867
    new-instance v1, Ljava/lang/RuntimeException;

    const-string v2, "Unable to find android system package"

    invoke-direct {v1, v2, v0}, Ljava/lang/RuntimeException;-><init>(Ljava/lang/String;Ljava/lang/Throwable;)V

    throw v1
.end method

.method public setSystemServiceManager(Lcom/android/server/SystemServiceManager;)V
    .locals 0

    .line 3325
    iput-object p1, p0, Lcom/android/server/am/ActivityManagerService;->mSystemServiceManager:Lcom/android/server/SystemServiceManager;

    .line 3326
    return-void
.end method

.method public setTaskDescription(Landroid/os/IBinder;Landroid/app/ActivityManager$TaskDescription;)V
    .locals 1

    .line 11054
    monitor-enter p0

    :try_start_0
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    .line 11055
    invoke-static {p1}, Lcom/android/server/am/ActivityRecord;->isInStackLocked(Landroid/os/IBinder;)Lcom/android/server/am/ActivityRecord;

    move-result-object p1

    .line 11056
    if-eqz p1, :cond_0

    .line 11057
    invoke-virtual {p1, p2}, Lcom/android/server/am/ActivityRecord;->setTaskDescription(Landroid/app/ActivityManager$TaskDescription;)V

    .line 11058
    invoke-virtual {p1}, Lcom/android/server/am/ActivityRecord;->getTask()Lcom/android/server/am/TaskRecord;

    move-result-object p1

    .line 11059
    invoke-virtual {p1}, Lcom/android/server/am/TaskRecord;->updateTaskDescription()V

    .line 11060
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mTaskChangeNotificationController:Lcom/android/server/am/TaskChangeNotificationController;

    iget p1, p1, Lcom/android/server/am/TaskRecord;->taskId:I

    invoke-virtual {v0, p1, p2}, Lcom/android/server/am/TaskChangeNotificationController;->notifyTaskDescriptionChanged(ILandroid/app/ActivityManager$TaskDescription;)V

    .line 11062
    :cond_0
    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    .line 11063
    return-void

    .line 11062
    :catchall_0
    move-exception p1

    :try_start_1
    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw p1
.end method

.method public setTaskResizeable(II)V
    .locals 2

    .line 11067
    monitor-enter p0

    :try_start_0
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    .line 11068
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mStackSupervisor:Lcom/android/server/am/ActivityStackSupervisor;

    const/4 v1, 0x1

    invoke-virtual {v0, p1, v1}, Lcom/android/server/am/ActivityStackSupervisor;->anyTaskForIdLocked(II)Lcom/android/server/am/TaskRecord;

    move-result-object v0

    .line 11070
    if-nez v0, :cond_0

    .line 11071
    const-string p2, "ActivityManager"

    new-instance v0, Ljava/lang/StringBuilder;

    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v1, "setTaskResizeable: taskId="

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0, p1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string p1, " not found"

    invoke-virtual {v0, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object p1

    invoke-static {p2, p1}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 11072
    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    return-void

    .line 11074
    :cond_0
    :try_start_1
    invoke-virtual {v0, p2}, Lcom/android/server/am/TaskRecord;->setResizeMode(I)V

    .line 11075
    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    .line 11076
    return-void

    .line 11075
    :catchall_0
    move-exception p1

    :try_start_2
    monitor-exit p0
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw p1
.end method

.method public setTaskWindowingMode(IIZ)V
    .locals 8

    .line 11497
    const/4 v0, 0x3

    if-ne p2, v0, :cond_0

    .line 11498
    const/4 v3, 0x0

    const/4 v5, 0x1

    const/4 v6, 0x0

    const/4 v7, 0x1

    move-object v1, p0

    move v2, p1

    move v4, p3

    invoke-virtual/range {v1 .. v7}, Lcom/android/server/am/ActivityManagerService;->setTaskWindowingModeSplitScreenPrimary(IIZZLandroid/graphics/Rect;Z)Z

    .line 11500
    return-void

    .line 11502
    :cond_0
    const-string v0, "android.permission.MANAGE_ACTIVITY_STACKS"

    const-string/jumbo v1, "setTaskWindowingMode()"

    invoke-virtual {p0, v0, v1}, Lcom/android/server/am/ActivityManagerService;->enforceCallerIsRecentsOrHasPermission(Ljava/lang/String;Ljava/lang/String;)V

    .line 11503
    monitor-enter p0

    :try_start_0
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    .line 11504
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_1

    .line 11506
    :try_start_1
    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mStackSupervisor:Lcom/android/server/am/ActivityStackSupervisor;

    invoke-virtual {v2, p1}, Lcom/android/server/am/ActivityStackSupervisor;->anyTaskForIdLocked(I)Lcom/android/server/am/TaskRecord;

    move-result-object v2

    .line 11507
    if-nez v2, :cond_1

    .line 11508
    const-string p2, "ActivityManager"

    new-instance p3, Ljava/lang/StringBuilder;

    invoke-direct {p3}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v2, "setTaskWindowingMode: No task for id="

    invoke-virtual {p3, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {p3, p1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {p3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object p1

    invoke-static {p2, p1}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 11527
    :try_start_2
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    monitor-exit p0
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_1

    .line 11509
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    return-void

    .line 11515
    :cond_1
    :try_start_3
    invoke-virtual {v2}, Lcom/android/server/am/TaskRecord;->isActivityTypeStandardOrUndefined()Z

    move-result v3

    if-eqz v3, :cond_3

    .line 11521
    invoke-virtual {v2}, Lcom/android/server/am/TaskRecord;->getStack()Lcom/android/server/am/ActivityStack;

    move-result-object p1

    .line 11522
    if-eqz p3, :cond_2

    .line 11523
    const-string/jumbo p3, "setTaskWindowingMode"

    invoke-virtual {p1, p3, v2}, Lcom/android/server/am/ActivityStack;->moveToFront(Ljava/lang/String;Lcom/android/server/am/TaskRecord;)V

    .line 11525
    :cond_2
    invoke-virtual {p1, p2}, Lcom/android/server/am/ActivityStack;->setWindowingMode(I)V
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_0

    .line 11527
    :try_start_4
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 11528
    nop

    .line 11529
    monitor-exit p0
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_1

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    .line 11530
    return-void

    .line 11516
    :cond_3
    :try_start_5
    new-instance p3, Ljava/lang/IllegalArgumentException;

    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v3, "setTaskWindowingMode: Attempt to move non-standard task "

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v2, p1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string p1, " to windowing mode="

    invoke-virtual {v2, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v2, p2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object p1

    invoke-direct {p3, p1}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw p3
    :try_end_5
    .catchall {:try_start_5 .. :try_end_5} :catchall_0

    .line 11527
    :catchall_0
    move-exception p1

    :try_start_6
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    throw p1

    .line 11529
    :catchall_1
    move-exception p1

    monitor-exit p0
    :try_end_6
    .catchall {:try_start_6 .. :try_end_6} :catchall_1

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw p1
.end method

.method public setTaskWindowingModeSplitScreenPrimary(IIZZLandroid/graphics/Rect;Z)Z
    .locals 12

    move-object v1, p0

    move v0, p1

    .line 11551
    const-string v2, "android.permission.MANAGE_ACTIVITY_STACKS"

    const-string/jumbo v3, "setTaskWindowingModeSplitScreenPrimary()"

    invoke-virtual {v1, v2, v3}, Lcom/android/server/am/ActivityManagerService;->enforceCallerIsRecentsOrHasPermission(Ljava/lang/String;Ljava/lang/String;)V

    .line 11553
    monitor-enter p0

    :try_start_0
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    .line 11554
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v2
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_1

    .line 11556
    :try_start_1
    iget-object v4, v1, Lcom/android/server/am/ActivityManagerService;->mStackSupervisor:Lcom/android/server/am/ActivityStackSupervisor;

    invoke-virtual {v4, v0}, Lcom/android/server/am/ActivityStackSupervisor;->anyTaskForIdLocked(I)Lcom/android/server/am/TaskRecord;

    move-result-object v4

    .line 11557
    const/4 v5, 0x0

    if-nez v4, :cond_0

    .line 11558
    const-string v4, "ActivityManager"

    new-instance v6, Ljava/lang/StringBuilder;

    invoke-direct {v6}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v7, "setTaskWindowingModeSplitScreenPrimary: No task for id="

    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v6, v0}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v6}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    invoke-static {v4, v0}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 11559
    nop

    .line 11579
    :try_start_2
    invoke-static {v2, v3}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    monitor-exit p0
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_1

    .line 11559
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    return v5

    .line 11564
    :cond_0
    :try_start_3
    invoke-virtual {v4}, Lcom/android/server/am/TaskRecord;->isActivityTypeStandardOrUndefined()Z

    move-result v6

    if-eqz v6, :cond_3

    .line 11569
    iget-object v0, v1, Lcom/android/server/am/ActivityManagerService;->mWindowManager:Lcom/android/server/wm/WindowManagerService;

    move v6, p2

    move-object/from16 v7, p5

    invoke-virtual {v0, v6, v7}, Lcom/android/server/wm/WindowManagerService;->setDockedStackCreateState(ILandroid/graphics/Rect;)V

    .line 11570
    invoke-virtual {v4}, Lcom/android/server/am/TaskRecord;->getWindowingMode()I

    move-result v0

    .line 11571
    invoke-virtual {v4}, Lcom/android/server/am/TaskRecord;->getStack()Lcom/android/server/am/ActivityStack;

    move-result-object v6

    .line 11572
    if-eqz p3, :cond_1

    .line 11573
    const-string/jumbo v7, "setTaskWindowingModeSplitScreenPrimary"

    invoke-virtual {v6, v7, v4}, Lcom/android/server/am/ActivityStack;->moveToFront(Ljava/lang/String;Lcom/android/server/am/TaskRecord;)V

    .line 11575
    :cond_1
    const/4 v7, 0x3

    const/4 v10, 0x0

    const/4 v11, 0x0

    move/from16 v8, p4

    move/from16 v9, p6

    invoke-virtual/range {v6 .. v11}, Lcom/android/server/am/ActivityStack;->setWindowingMode(IZZZZ)V

    .line 11577
    invoke-virtual {v4}, Lcom/android/server/am/TaskRecord;->getWindowingMode()I

    move-result v4
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_0

    if-eq v0, v4, :cond_2

    const/4 v5, 0x1

    nop

    .line 11579
    :cond_2
    :try_start_4
    invoke-static {v2, v3}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    monitor-exit p0
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_1

    .line 11577
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    return v5

    .line 11565
    :cond_3
    :try_start_5
    new-instance v4, Ljava/lang/IllegalArgumentException;

    new-instance v5, Ljava/lang/StringBuilder;

    invoke-direct {v5}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v6, "setTaskWindowingMode: Attempt to move non-standard task "

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v5, v0}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v0, " to split-screen windowing mode"

    invoke-virtual {v5, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v5}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    invoke-direct {v4, v0}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v4
    :try_end_5
    .catchall {:try_start_5 .. :try_end_5} :catchall_0

    .line 11579
    :catchall_0
    move-exception v0

    :try_start_6
    invoke-static {v2, v3}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    throw v0

    .line 11581
    :catchall_1
    move-exception v0

    monitor-exit p0
    :try_end_6
    .catchall {:try_start_6 .. :try_end_6} :catchall_1

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw v0
.end method

.method public setTestPssMode(Z)V
    .locals 2

    .line 24511
    monitor-enter p0

    :try_start_0
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    .line 24512
    iput-boolean p1, p0, Lcom/android/server/am/ActivityManagerService;->mTestPssMode:Z

    .line 24513
    if-eqz p1, :cond_0

    .line 24516
    invoke-static {}, Landroid/os/SystemClock;->uptimeMillis()J

    move-result-wide v0

    const/4 p1, 0x1

    invoke-virtual {p0, v0, v1, p1, p1}, Lcom/android/server/am/ActivityManagerService;->requestPssAllProcsLocked(JZZ)V

    .line 24518
    :cond_0
    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    .line 24519
    return-void

    .line 24518
    :catchall_0
    move-exception p1

    :try_start_1
    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw p1
.end method

.method setTrackAllocationApp(Landroid/content/pm/ApplicationInfo;Ljava/lang/String;)V
    .locals 3

    .line 13938
    monitor-enter p0

    :try_start_0
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    .line 13939
    const-string v0, "1"

    const-string/jumbo v1, "ro.debuggable"

    const-string v2, "0"

    invoke-static {v1, v2}, Landroid/os/SystemProperties;->get(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;

    move-result-object v1

    invoke-virtual {v0, v1}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v0

    .line 13940
    if-nez v0, :cond_1

    .line 13941
    iget v0, p1, Landroid/content/pm/ApplicationInfo;->flags:I

    and-int/lit8 v0, v0, 0x2

    if-eqz v0, :cond_0

    goto :goto_0

    .line 13942
    :cond_0
    new-instance p2, Ljava/lang/SecurityException;

    new-instance v0, Ljava/lang/StringBuilder;

    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V

    const-string v1, "Process not debuggable: "

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget-object p1, p1, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;

    invoke-virtual {v0, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object p1

    invoke-direct {p2, p1}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw p2

    .line 13946
    :cond_1
    :goto_0
    iput-object p2, p0, Lcom/android/server/am/ActivityManagerService;->mTrackAllocationApp:Ljava/lang/String;

    .line 13947
    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    .line 13948
    return-void

    .line 13947
    :catchall_0
    move-exception p1

    :try_start_1
    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw p1
.end method

.method public setTurnScreenOn(Landroid/os/IBinder;Z)V
    .locals 2
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Landroid/os/RemoteException;
        }
    .end annotation

    .line 27569
    monitor-enter p0

    :try_start_0
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    .line 27570
    invoke-static {p1}, Lcom/android/server/am/ActivityRecord;->isInStackLocked(Landroid/os/IBinder;)Lcom/android/server/am/ActivityRecord;

    move-result-object p1

    .line 27571
    if-nez p1, :cond_0

    .line 27572
    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_1

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    return-void

    .line 27574
    :cond_0
    :try_start_1
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_1

    .line 27576
    :try_start_2
    invoke-virtual {p1, p2}, Lcom/android/server/am/ActivityRecord;->setTurnScreenOn(Z)V
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    .line 27578
    :try_start_3
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 27579
    nop

    .line 27580
    monitor-exit p0
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_1

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    .line 27581
    return-void

    .line 27578
    :catchall_0
    move-exception p1

    :try_start_4
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    throw p1

    .line 27580
    :catchall_1
    move-exception p1

    monitor-exit p0
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_1

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw p1
.end method

.method final setUidTempWhitelistStateLocked(IZ)V
    .locals 1
    .annotation build Lcom/android/internal/annotations/GuardedBy;
        value = "this"
    .end annotation

    .line 26191
    nop

    .line 26192
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mActiveUids:Landroid/util/SparseArray;

    invoke-virtual {v0, p1}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    move-result-object p1

    check-cast p1, Lcom/android/server/am/UidRecord;

    .line 26193
    if-eqz p1, :cond_0

    iget-boolean v0, p1, Lcom/android/server/am/UidRecord;->curWhitelist:Z

    if-eq v0, p2, :cond_0

    .line 26194
    iput-boolean p2, p1, Lcom/android/server/am/UidRecord;->curWhitelist:Z

    .line 26195
    invoke-virtual {p0}, Lcom/android/server/am/ActivityManagerService;->updateOomAdjLocked()V

    .line 26197
    :cond_0
    return-void
.end method

.method public setUsageStatsManager(Landroid/app/usage/UsageStatsManagerInternal;)V
    .locals 0

    .line 2894
    iput-object p1, p0, Lcom/android/server/am/ActivityManagerService;->mUsageStatsService:Landroid/app/usage/UsageStatsManagerInternal;

    .line 2895
    return-void
.end method

.method public setUserIsMonkey(Z)V
    .locals 4

    .line 14015
    monitor-enter p0

    :try_start_0
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    .line 14016
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Landroid/util/SparseArray;

    monitor-enter v0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_1

    .line 14017
    :try_start_1
    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result v1

    .line 14018
    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Landroid/util/SparseArray;

    invoke-virtual {v2, v1}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Lcom/android/server/am/ProcessRecord;

    .line 14019
    if-eqz v2, :cond_1

    .line 14022
    iget-object v1, v2, Lcom/android/server/am/ProcessRecord;->instr:Lcom/android/server/am/ActiveInstrumentation;

    if-eqz v1, :cond_0

    iget-object v1, v2, Lcom/android/server/am/ProcessRecord;->instr:Lcom/android/server/am/ActiveInstrumentation;

    iget-object v1, v1, Lcom/android/server/am/ActiveInstrumentation;->mUiAutomationConnection:Landroid/app/IUiAutomationConnection;

    if-eqz v1, :cond_0

    .line 14026
    monitor-exit v0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 14027
    :try_start_2
    iput-boolean p1, p0, Lcom/android/server/am/ActivityManagerService;->mUserIsMonkey:Z

    .line 14028
    monitor-exit p0
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_1

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    .line 14029
    return-void

    .line 14023
    :cond_0
    :try_start_3
    new-instance p1, Ljava/lang/SecurityException;

    const-string v1, "Only an instrumentation process with a UiAutomation can call setUserIsMonkey"

    invoke-direct {p1, v1}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw p1

    .line 14020
    :cond_1
    new-instance p1, Ljava/lang/SecurityException;

    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    const-string v3, "Unknown process: "

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v2, v1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-direct {p1, v1}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw p1

    .line 14026
    :catchall_0
    move-exception p1

    monitor-exit v0
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_0

    :try_start_4
    throw p1

    .line 14028
    :catchall_1
    move-exception p1

    monitor-exit p0
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_1

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw p1
.end method

.method public setVoiceKeepAwake(Landroid/service/voice/IVoiceInteractionSession;Z)V
    .locals 1

    .line 5615
    monitor-enter p0

    :try_start_0
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    .line 5616
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mRunningVoice:Landroid/service/voice/IVoiceInteractionSession;

    if-eqz v0, :cond_1

    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mRunningVoice:Landroid/service/voice/IVoiceInteractionSession;

    invoke-interface {v0}, Landroid/service/voice/IVoiceInteractionSession;->asBinder()Landroid/os/IBinder;

    move-result-object v0

    invoke-interface {p1}, Landroid/service/voice/IVoiceInteractionSession;->asBinder()Landroid/os/IBinder;

    move-result-object p1

    if-ne v0, p1, :cond_1

    .line 5617
    if-eqz p2, :cond_0

    .line 5618
    iget-object p1, p0, Lcom/android/server/am/ActivityManagerService;->mVoiceWakeLock:Landroid/os/PowerManager$WakeLock;

    invoke-virtual {p1}, Landroid/os/PowerManager$WakeLock;->acquire()V

    goto :goto_0

    .line 5620
    :cond_0
    iget-object p1, p0, Lcom/android/server/am/ActivityManagerService;->mVoiceWakeLock:Landroid/os/PowerManager$WakeLock;

    invoke-virtual {p1}, Landroid/os/PowerManager$WakeLock;->release()V

    .line 5623
    :cond_1
    :goto_0
    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    .line 5624
    return-void

    .line 5623
    :catchall_0
    move-exception p1

    :try_start_1
    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw p1
.end method

.method public setVrMode(Landroid/os/IBinder;ZLandroid/content/ComponentName;)I
    .locals 2

    .line 14789
    invoke-direct {p0}, Lcom/android/server/am/ActivityManagerService;->enforceSystemHasVrFeature()V

    .line 14791
    const-class v0, Lcom/android/server/vr/VrManagerInternal;

    invoke-static {v0}, Lcom/android/server/LocalServices;->getService(Ljava/lang/Class;)Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Lcom/android/server/vr/VrManagerInternal;

    .line 14794
    monitor-enter p0

    :try_start_0
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    .line 14795
    invoke-static {p1}, Lcom/android/server/am/ActivityRecord;->isInStackLocked(Landroid/os/IBinder;)Lcom/android/server/am/ActivityRecord;

    move-result-object p1

    .line 14796
    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_2

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    .line 14798
    if-eqz p1, :cond_3

    .line 14803
    iget v1, p1, Lcom/android/server/am/ActivityRecord;->userId:I

    invoke-virtual {v0, p3, v1}, Lcom/android/server/vr/VrManagerInternal;->hasVrPackage(Landroid/content/ComponentName;I)I

    move-result v0

    if-eqz v0, :cond_0

    .line 14805
    return v0

    .line 14809
    :cond_0
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v0

    .line 14811
    :try_start_1
    monitor-enter p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_1

    :try_start_2
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    .line 14812
    if-eqz p2, :cond_1

    goto :goto_0

    :cond_1
    const/4 p3, 0x0

    :goto_0
    iput-object p3, p1, Lcom/android/server/am/ActivityRecord;->requestedVrComponent:Landroid/content/ComponentName;

    .line 14815
    iget-object p2, p0, Lcom/android/server/am/ActivityManagerService;->mStackSupervisor:Lcom/android/server/am/ActivityStackSupervisor;

    invoke-virtual {p2}, Lcom/android/server/am/ActivityStackSupervisor;->getResumedActivityLocked()Lcom/android/server/am/ActivityRecord;

    move-result-object p2

    if-ne p1, p2, :cond_2

    .line 14816
    invoke-virtual {p0, p1}, Lcom/android/server/am/ActivityManagerService;->applyUpdateVrModeLocked(Lcom/android/server/am/ActivityRecord;)V

    .line 14818
    :cond_2
    const/4 p1, 0x0

    monitor-exit p0
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    .line 14821
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 14818
    return p1

    .line 14819
    :catchall_0
    move-exception p1

    :try_start_3
    monitor-exit p0
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_0

    :try_start_4
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw p1
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_1

    .line 14821
    :catchall_1
    move-exception p1

    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    throw p1

    .line 14799
    :cond_3
    new-instance p1, Ljava/lang/IllegalArgumentException;

    invoke-direct {p1}, Ljava/lang/IllegalArgumentException;-><init>()V

    throw p1

    .line 14796
    :catchall_2
    move-exception p1

    :try_start_5
    monitor-exit p0
    :try_end_5
    .catchall {:try_start_5 .. :try_end_5} :catchall_2

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw p1
.end method

.method public setVrThread(I)V
    .locals 4

    .line 14646
    invoke-direct {p0}, Lcom/android/server/am/ActivityManagerService;->enforceSystemHasVrFeature()V

    .line 14647
    monitor-enter p0

    :try_start_0
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    .line 14648
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Landroid/util/SparseArray;

    monitor-enter v0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_1

    .line 14649
    :try_start_1
    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result v1

    .line 14650
    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Landroid/util/SparseArray;

    invoke-virtual {v2, v1}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Lcom/android/server/am/ProcessRecord;

    .line 14651
    iget-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mVrController:Lcom/android/server/am/VrController;

    invoke-virtual {v3, p1, v1, v2}, Lcom/android/server/am/VrController;->setVrThreadLocked(IILcom/android/server/am/ProcessRecord;)V

    .line 14652
    monitor-exit v0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 14653
    :try_start_2
    monitor-exit p0
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_1

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    .line 14654
    return-void

    .line 14652
    :catchall_0
    move-exception p1

    :try_start_3
    monitor-exit v0
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_0

    :try_start_4
    throw p1

    .line 14653
    :catchall_1
    move-exception p1

    monitor-exit p0
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_1

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw p1
.end method

.method public setWindowManager(Lcom/android/server/wm/WindowManagerService;)V
    .locals 1

    .line 2886
    monitor-enter p0

    :try_start_0
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    .line 2887
    iput-object p1, p0, Lcom/android/server/am/ActivityManagerService;->mWindowManager:Lcom/android/server/wm/WindowManagerService;

    .line 2888
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mStackSupervisor:Lcom/android/server/am/ActivityStackSupervisor;

    invoke-virtual {v0, p1}, Lcom/android/server/am/ActivityStackSupervisor;->setWindowManager(Lcom/android/server/wm/WindowManagerService;)V

    .line 2889
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mLockTaskController:Lcom/android/server/am/LockTaskController;

    invoke-virtual {v0, p1}, Lcom/android/server/am/LockTaskController;->setWindowManager(Lcom/android/server/wm/WindowManagerService;)V

    .line 2890
    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    .line 2891
    return-void

    .line 2890
    :catchall_0
    move-exception p1

    :try_start_1
    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw p1
.end method

.method shouldDisableNonVrUiLocked()Z
    .locals 1

    .line 14847
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mVrController:Lcom/android/server/am/VrController;

    invoke-virtual {v0}, Lcom/android/server/am/VrController;->shouldDisableNonVrUiLocked()Z

    move-result v0

    return v0
.end method

.method public shouldForceCutoutFullscreen(Ljava/lang/String;)Z
    .locals 1

    .line 27672
    monitor-enter p0

    :try_start_0
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    .line 27673
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mCutoutFullscreenController:Lcom/android/internal/util/custom/cutout/CutoutFullscreenController;

    invoke-virtual {v0, p1}, Lcom/android/internal/util/custom/cutout/CutoutFullscreenController;->shouldForceCutoutFullscreen(Ljava/lang/String;)Z

    move-result p1

    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    return p1

    .line 27674
    :catchall_0
    move-exception p1

    :try_start_1
    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw p1
.end method

.method public shouldUpRecreateTask(Landroid/os/IBinder;Ljava/lang/String;)Z
    .locals 1

    .line 23176
    monitor-enter p0

    :try_start_0
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    .line 23177
    invoke-static {p1}, Lcom/android/server/am/ActivityRecord;->forTokenLocked(Landroid/os/IBinder;)Lcom/android/server/am/ActivityRecord;

    move-result-object p1

    .line 23178
    if-eqz p1, :cond_0

    .line 23179
    invoke-virtual {p1}, Lcom/android/server/am/ActivityRecord;->getStack()Lcom/android/server/am/ActivityStack;

    move-result-object v0

    invoke-virtual {v0, p1, p2}, Lcom/android/server/am/ActivityStack;->shouldUpRecreateTaskLocked(Lcom/android/server/am/ActivityRecord;Ljava/lang/String;)Z

    move-result p1

    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    return p1

    .line 23181
    :cond_0
    :try_start_1
    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    .line 23182
    const/4 p1, 0x0

    return p1

    .line 23181
    :catchall_0
    move-exception p1

    :try_start_2
    monitor-exit p0
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw p1
.end method

.method final showAppWarningsIfNeededLocked(Lcom/android/server/am/ActivityRecord;)V
    .locals 1

    .line 3822
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mAppWarnings:Lcom/android/server/am/AppWarnings;

    invoke-virtual {v0, p1}, Lcom/android/server/am/AppWarnings;->showUnsupportedCompileSdkDialogIfNeeded(Lcom/android/server/am/ActivityRecord;)V

    .line 3823
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mAppWarnings:Lcom/android/server/am/AppWarnings;

    invoke-virtual {v0, p1}, Lcom/android/server/am/AppWarnings;->showUnsupportedDisplaySizeDialogIfNeeded(Lcom/android/server/am/ActivityRecord;)V

    .line 3824
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mAppWarnings:Lcom/android/server/am/AppWarnings;

    invoke-virtual {v0, p1}, Lcom/android/server/am/AppWarnings;->showDeprecatedTargetDialogIfNeeded(Lcom/android/server/am/ActivityRecord;)V

    .line 3825
    return-void
.end method

.method final showAskCompatModeDialogLocked(Lcom/android/server/am/ActivityRecord;)V
    .locals 2

    .line 3806
    invoke-static {}, Landroid/os/Message;->obtain()Landroid/os/Message;

    move-result-object v0

    .line 3807
    const/16 v1, 0x1e

    iput v1, v0, Landroid/os/Message;->what:I

    .line 3808
    invoke-virtual {p1}, Lcom/android/server/am/ActivityRecord;->getTask()Lcom/android/server/am/TaskRecord;

    move-result-object v1

    iget-boolean v1, v1, Lcom/android/server/am/TaskRecord;->askedCompatMode:Z

    if-eqz v1, :cond_0

    const/4 p1, 0x0

    :cond_0
    iput-object p1, v0, Landroid/os/Message;->obj:Ljava/lang/Object;

    .line 3809
    iget-object p1, p0, Lcom/android/server/am/ActivityManagerService;->mUiHandler:Landroid/os/Handler;

    invoke-virtual {p1, v0}, Landroid/os/Handler;->sendMessage(Landroid/os/Message;)Z

    .line 3810
    return-void
.end method

.method public showAssistFromActivity(Landroid/os/IBinder;Landroid/os/Bundle;)Z
    .locals 6

    .line 14269
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v0

    .line 14271
    :try_start_0
    monitor-enter p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_1

    :try_start_1
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    .line 14272
    invoke-static {p1}, Lcom/android/server/am/ActivityRecord;->forTokenLocked(Landroid/os/IBinder;)Lcom/android/server/am/ActivityRecord;

    move-result-object v2

    .line 14273
    invoke-virtual {p0}, Lcom/android/server/am/ActivityManagerService;->getFocusedStack()Lcom/android/server/am/ActivityStack;

    move-result-object v3

    invoke-virtual {v3}, Lcom/android/server/am/ActivityStack;->getTopActivity()Lcom/android/server/am/ActivityRecord;

    move-result-object v3

    .line 14274
    const/4 v4, 0x0

    if-eq v3, v2, :cond_0

    .line 14275
    const-string p1, "ActivityManager"

    new-instance p2, Ljava/lang/StringBuilder;

    invoke-direct {p2}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v5, "showAssistFromActivity failed: caller "

    invoke-virtual {p2, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {p2, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    const-string v2, " is not current top "

    invoke-virtual {p2, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {p2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    invoke-virtual {p2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object p2

    invoke-static {p1, p2}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 14277
    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 14288
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 14277
    return v4

    .line 14279
    :cond_0
    :try_start_2
    iget-boolean v3, v3, Lcom/android/server/am/ActivityRecord;->nowVisible:Z

    if-nez v3, :cond_1

    .line 14280
    const-string p1, "ActivityManager"

    new-instance p2, Ljava/lang/StringBuilder;

    invoke-direct {p2}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v3, "showAssistFromActivity failed: caller "

    invoke-virtual {p2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {p2, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    const-string v2, " is not visible"

    invoke-virtual {p2, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {p2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object p2

    invoke-static {p1, p2}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 14282
    monitor-exit p0
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    .line 14288
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 14282
    return v4

    .line 14284
    :cond_1
    :try_start_3
    monitor-exit p0
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_0

    :try_start_4
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    .line 14285
    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mAssistUtils:Lcom/android/internal/app/AssistUtils;

    const/16 v3, 0x8

    const/4 v4, 0x0

    invoke-virtual {v2, p2, v3, v4, p1}, Lcom/android/internal/app/AssistUtils;->showSessionForActiveService(Landroid/os/Bundle;ILcom/android/internal/app/IVoiceInteractionSessionShowCallback;Landroid/os/IBinder;)Z

    move-result p1
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_1

    .line 14288
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 14285
    return p1

    .line 14284
    :catchall_0
    move-exception p1

    :try_start_5
    monitor-exit p0
    :try_end_5
    .catchall {:try_start_5 .. :try_end_5} :catchall_0

    :try_start_6
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw p1
    :try_end_6
    .catchall {:try_start_6 .. :try_end_6} :catchall_1

    .line 14288
    :catchall_1
    move-exception p1

    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    throw p1
.end method

.method public showBootMessage(Ljava/lang/CharSequence;Z)V
    .locals 2

    .line 8192
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v0

    invoke-static {}, Landroid/os/Process;->myUid()I

    move-result v1

    if-ne v0, v1, :cond_0

    .line 8195
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mWindowManager:Lcom/android/server/wm/WindowManagerService;

    invoke-virtual {v0, p1, p2}, Lcom/android/server/wm/WindowManagerService;->showBootMessage(Ljava/lang/CharSequence;Z)V

    .line 8196
    return-void

    .line 8193
    :cond_0
    new-instance p1, Ljava/lang/SecurityException;

    invoke-direct {p1}, Ljava/lang/SecurityException;-><init>()V

    throw p1
.end method

.method final showLaunchWarningLocked(Lcom/android/server/am/ActivityRecord;Lcom/android/server/am/ActivityRecord;)V
    .locals 2
    .annotation build Lcom/android/internal/annotations/GuardedBy;
        value = "this"
    .end annotation

    .line 6695
    iget-boolean v0, p0, Lcom/android/server/am/ActivityManagerService;->mLaunchWarningShown:Z

    if-nez v0, :cond_0

    .line 6696
    const/4 v0, 0x1

    iput-boolean v0, p0, Lcom/android/server/am/ActivityManagerService;->mLaunchWarningShown:Z

    .line 6697
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mUiHandler:Landroid/os/Handler;

    new-instance v1, Lcom/android/server/am/ActivityManagerService$6;

    invoke-direct {v1, p0, p1, p2}, Lcom/android/server/am/ActivityManagerService$6;-><init>(Lcom/android/server/am/ActivityManagerService;Lcom/android/server/am/ActivityRecord;Lcom/android/server/am/ActivityRecord;)V

    invoke-virtual {v0, v1}, Landroid/os/Handler;->post(Ljava/lang/Runnable;)Z

    .line 6716
    :cond_0
    return-void
.end method

.method public showLockTaskEscapeMessage(Landroid/os/IBinder;)V
    .locals 0

    .line 12028
    monitor-enter p0

    :try_start_0
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    .line 12029
    invoke-static {p1}, Lcom/android/server/am/ActivityRecord;->forTokenLocked(Landroid/os/IBinder;)Lcom/android/server/am/ActivityRecord;

    move-result-object p1

    .line 12030
    if-nez p1, :cond_0

    .line 12031
    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    return-void

    .line 12033
    :cond_0
    :try_start_1
    iget-object p1, p0, Lcom/android/server/am/ActivityManagerService;->mLockTaskController:Lcom/android/server/am/LockTaskController;

    invoke-virtual {p1}, Lcom/android/server/am/LockTaskController;->showLockTaskToast()V

    .line 12034
    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    .line 12035
    return-void

    .line 12034
    :catchall_0
    move-exception p1

    :try_start_2
    monitor-exit p0
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw p1
.end method

.method public final showSafeModeOverlay()V
    .locals 4

    .line 14942
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mContext:Landroid/content/Context;

    invoke-static {v0}, Landroid/view/LayoutInflater;->from(Landroid/content/Context;)Landroid/view/LayoutInflater;

    move-result-object v0

    const v1, 0x10900db

    const/4 v2, 0x0

    invoke-virtual {v0, v1, v2}, Landroid/view/LayoutInflater;->inflate(ILandroid/view/ViewGroup;)Landroid/view/View;

    move-result-object v0

    .line 14944
    new-instance v1, Landroid/view/WindowManager$LayoutParams;

    invoke-direct {v1}, Landroid/view/WindowManager$LayoutParams;-><init>()V

    .line 14945
    const/16 v2, 0x7df

    iput v2, v1, Landroid/view/WindowManager$LayoutParams;->type:I

    .line 14946
    const/4 v2, -0x2

    iput v2, v1, Landroid/view/WindowManager$LayoutParams;->width:I

    .line 14947
    iput v2, v1, Landroid/view/WindowManager$LayoutParams;->height:I

    .line 14948
    const v2, 0x800053

    iput v2, v1, Landroid/view/WindowManager$LayoutParams;->gravity:I

    .line 14949
    invoke-virtual {v0}, Landroid/view/View;->getBackground()Landroid/graphics/drawable/Drawable;

    move-result-object v2

    invoke-virtual {v2}, Landroid/graphics/drawable/Drawable;->getOpacity()I

    move-result v2

    iput v2, v1, Landroid/view/WindowManager$LayoutParams;->format:I

    .line 14950
    const/16 v2, 0x18

    iput v2, v1, Landroid/view/WindowManager$LayoutParams;->flags:I

    .line 14952
    iget v2, v1, Landroid/view/WindowManager$LayoutParams;->privateFlags:I

    or-int/lit8 v2, v2, 0x10

    iput v2, v1, Landroid/view/WindowManager$LayoutParams;->privateFlags:I

    .line 14953
    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mContext:Landroid/content/Context;

    const-string/jumbo v3, "window"

    invoke-virtual {v2, v3}, Landroid/content/Context;->getSystemService(Ljava/lang/String;)Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Landroid/view/WindowManager;

    .line 14954
    invoke-interface {v2, v0, v1}, Landroid/view/WindowManager;->addView(Landroid/view/View;Landroid/view/ViewGroup$LayoutParams;)V

    .line 14955
    return-void
.end method

.method public showWaitingForDebugger(Landroid/app/IApplicationThread;Z)V
    .locals 2

    .line 10847
    monitor-enter p0

    :try_start_0
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    .line 10849
    if-eqz p1, :cond_0

    invoke-virtual {p0, p1}, Lcom/android/server/am/ActivityManagerService;->getRecordForAppLocked(Landroid/app/IApplicationThread;)Lcom/android/server/am/ProcessRecord;

    move-result-object p1

    goto :goto_0

    :cond_0
    const/4 p1, 0x0

    .line 10850
    :goto_0
    if-nez p1, :cond_1

    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    return-void

    .line 10852
    :cond_1
    :try_start_1
    invoke-static {}, Landroid/os/Message;->obtain()Landroid/os/Message;

    move-result-object v0

    .line 10853
    const/4 v1, 0x6

    iput v1, v0, Landroid/os/Message;->what:I

    .line 10854
    iput-object p1, v0, Landroid/os/Message;->obj:Ljava/lang/Object;

    .line 10855
    iput p2, v0, Landroid/os/Message;->arg1:I

    .line 10856
    iget-object p1, p0, Lcom/android/server/am/ActivityManagerService;->mUiHandler:Landroid/os/Handler;

    invoke-virtual {p1, v0}, Landroid/os/Handler;->sendMessage(Landroid/os/Message;)Z

    .line 10857
    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    .line 10858
    return-void

    .line 10857
    :catchall_0
    move-exception p1

    :try_start_2
    monitor-exit p0
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw p1
.end method

.method public shutdown(I)Z
    .locals 2

    .line 13649
    const-string v0, "android.permission.SHUTDOWN"

    invoke-virtual {p0, v0}, Lcom/android/server/am/ActivityManagerService;->checkCallingPermission(Ljava/lang/String;)I

    move-result v0

    if-nez v0, :cond_1

    .line 13655
    nop

    .line 13657
    monitor-enter p0

    :try_start_0
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    .line 13658
    const/4 v0, 0x1

    iput-boolean v0, p0, Lcom/android/server/am/ActivityManagerService;->mShuttingDown:Z

    .line 13659
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mStackSupervisor:Lcom/android/server/am/ActivityStackSupervisor;

    invoke-virtual {v1}, Lcom/android/server/am/ActivityStackSupervisor;->prepareForShutdownLocked()V

    .line 13660
    invoke-direct {p0}, Lcom/android/server/am/ActivityManagerService;->updateEventDispatchingLocked()V

    .line 13661
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mStackSupervisor:Lcom/android/server/am/ActivityStackSupervisor;

    invoke-virtual {v1, p1}, Lcom/android/server/am/ActivityStackSupervisor;->shutdownLocked(I)Z

    move-result p1

    .line 13662
    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_1

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    .line 13664
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mAppOpsService:Lcom/android/server/AppOpsService;

    invoke-virtual {v1}, Lcom/android/server/AppOpsService;->shutdown()V

    .line 13665
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mUsageStatsService:Landroid/app/usage/UsageStatsManagerInternal;

    if-eqz v1, :cond_0

    .line 13666
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mUsageStatsService:Landroid/app/usage/UsageStatsManagerInternal;

    invoke-virtual {v1}, Landroid/app/usage/UsageStatsManagerInternal;->prepareShutdown()V

    .line 13668
    :cond_0
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mBatteryStatsService:Lcom/android/server/am/BatteryStatsService;

    invoke-virtual {v1}, Lcom/android/server/am/BatteryStatsService;->shutdown()V

    .line 13669
    monitor-enter p0

    :try_start_1
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    .line 13670
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mProcessStats:Lcom/android/server/am/ProcessStatsService;

    invoke-virtual {v1}, Lcom/android/server/am/ProcessStatsService;->shutdownLocked()V

    .line 13671
    const/4 v1, 0x0

    invoke-virtual {p0, v1, v0}, Lcom/android/server/am/ActivityManagerService;->notifyTaskPersisterLocked(Lcom/android/server/am/TaskRecord;Z)V

    .line 13672
    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    .line 13674
    return p1

    .line 13672
    :catchall_0
    move-exception p1

    :try_start_2
    monitor-exit p0
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw p1

    .line 13662
    :catchall_1
    move-exception p1

    :try_start_3
    monitor-exit p0
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_1

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw p1

    .line 13651
    :cond_1
    new-instance p1, Ljava/lang/SecurityException;

    const-string v0, "Requires permission android.permission.SHUTDOWN"

    invoke-direct {p1, v0}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw p1
.end method

.method public signalPersistentProcesses(I)V
    .locals 3
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Landroid/os/RemoteException;
        }
    .end annotation

    .line 26242
    const/16 v0, 0xa

    if-ne p1, v0, :cond_3

    .line 26246
    monitor-enter p0

    :try_start_0
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    .line 26247
    const-string v0, "android.permission.SIGNAL_PERSISTENT_PROCESSES"

    invoke-virtual {p0, v0}, Lcom/android/server/am/ActivityManagerService;->checkCallingPermission(Ljava/lang/String;)I

    move-result v0

    if-nez v0, :cond_2

    .line 26253
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mLruProcesses:Ljava/util/ArrayList;

    invoke-virtual {v0}, Ljava/util/ArrayList;->size()I

    move-result v0

    add-int/lit8 v0, v0, -0x1

    :goto_0
    if-ltz v0, :cond_1

    .line 26254
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mLruProcesses:Ljava/util/ArrayList;

    invoke-virtual {v1, v0}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v1

    check-cast v1, Lcom/android/server/am/ProcessRecord;

    .line 26255
    iget-object v2, v1, Lcom/android/server/am/ProcessRecord;->thread:Landroid/app/IApplicationThread;

    if-eqz v2, :cond_0

    iget-boolean v2, v1, Lcom/android/server/am/ProcessRecord;->persistent:Z

    if-eqz v2, :cond_0

    .line 26256
    iget v1, v1, Lcom/android/server/am/ProcessRecord;->pid:I

    invoke-static {v1, p1}, Landroid/os/Process;->sendSignal(II)V

    .line 26253
    :cond_0
    add-int/lit8 v0, v0, -0x1

    goto :goto_0

    .line 26259
    :cond_1
    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    .line 26260
    return-void

    .line 26249
    :cond_2
    :try_start_1
    new-instance p1, Ljava/lang/SecurityException;

    const-string v0, "Requires permission android.permission.SIGNAL_PERSISTENT_PROCESSES"

    invoke-direct {p1, v0}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw p1

    .line 26259
    :catchall_0
    move-exception p1

    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw p1

    .line 26243
    :cond_3
    new-instance p1, Ljava/lang/SecurityException;

    const-string v0, "Only SIGNAL_USR1 is allowed"

    invoke-direct {p1, v0}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw p1
.end method

.method skipCurrentReceiverLocked(Lcom/android/server/am/ProcessRecord;)V
    .locals 4

    .line 15670
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mBroadcastQueues:[Lcom/android/server/am/BroadcastQueue;

    array-length v1, v0

    const/4 v2, 0x0

    :goto_0
    if-ge v2, v1, :cond_0

    aget-object v3, v0, v2

    .line 15671
    invoke-virtual {v3, p1}, Lcom/android/server/am/BroadcastQueue;->skipCurrentReceiverLocked(Lcom/android/server/am/ProcessRecord;)V

    .line 15670
    add-int/lit8 v2, v2, 0x1

    goto :goto_0

    .line 15673
    :cond_0
    return-void
.end method

.method skipPendingBroadcastLocked(I)V
    .locals 4

    .line 21096
    const-string v0, "ActivityManager"

    const-string v1, "Unattached app died before broadcast acknowledged, skipping"

    invoke-static {v0, v1}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 21097
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mBroadcastQueues:[Lcom/android/server/am/BroadcastQueue;

    array-length v1, v0

    const/4 v2, 0x0

    :goto_0
    if-ge v2, v1, :cond_0

    aget-object v3, v0, v2

    .line 21098
    invoke-virtual {v3, p1}, Lcom/android/server/am/BroadcastQueue;->skipPendingBroadcastLocked(I)V

    .line 21097
    add-int/lit8 v2, v2, 0x1

    goto :goto_0

    .line 21100
    :cond_0
    return-void
.end method

.method public final startActivities(Landroid/app/IApplicationThread;Ljava/lang/String;[Landroid/content/Intent;[Ljava/lang/String;Landroid/os/IBinder;Landroid/os/Bundle;I)I
    .locals 23

    move-object/from16 v0, p0

    .line 5769
    const-string/jumbo v1, "startActivities"

    invoke-virtual {v0, v1}, Lcom/android/server/am/ActivityManagerService;->enforceNotIsolatedCaller(Ljava/lang/String;)V

    .line 5770
    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mUserController:Lcom/android/server/am/UserController;

    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result v3

    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v4

    const-string/jumbo v8, "startActivities"

    const/4 v6, 0x0

    const/4 v7, 0x2

    const/4 v9, 0x0

    move/from16 v5, p7

    invoke-virtual/range {v2 .. v9}, Lcom/android/server/am/UserController;->handleIncomingUser(IIIZILjava/lang/String;Ljava/lang/String;)I

    move-result v20

    .line 5773
    iget-object v10, v0, Lcom/android/server/am/ActivityManagerService;->mActivityStartController:Lcom/android/server/am/ActivityStartController;

    .line 5775
    invoke-static/range {p6 .. p6}, Lcom/android/server/am/SafeActivityOptions;->fromBundle(Landroid/os/Bundle;)Lcom/android/server/am/SafeActivityOptions;

    move-result-object v19

    const-string/jumbo v21, "startActivities"

    .line 5773
    const/4 v12, -0x1

    const/4 v13, 0x0

    const/16 v14, -0x2710

    const/16 v22, 0x0

    move-object/from16 v11, p1

    move-object/from16 v15, p2

    move-object/from16 v16, p3

    move-object/from16 v17, p4

    move-object/from16 v18, p5

    invoke-virtual/range {v10 .. v22}, Lcom/android/server/am/ActivityStartController;->startActivities(Landroid/app/IApplicationThread;IIILjava/lang/String;[Landroid/content/Intent;[Ljava/lang/String;Landroid/os/IBinder;Lcom/android/server/am/SafeActivityOptions;ILjava/lang/String;Lcom/android/server/am/PendingIntentRecord;)I

    move-result v0

    .line 5777
    return v0
.end method

.method public final startActivity(Landroid/app/IApplicationThread;Ljava/lang/String;Landroid/content/Intent;Ljava/lang/String;Landroid/os/IBinder;Ljava/lang/String;IILandroid/app/ProfilerInfo;Landroid/os/Bundle;)I
    .locals 12

    .line 5231
    nop

    .line 5233
    invoke-static {}, Landroid/os/UserHandle;->getCallingUserId()I

    move-result v11

    .line 5231
    move-object v0, p0

    move-object v1, p1

    move-object v2, p2

    move-object v3, p3

    move-object/from16 v4, p4

    move-object/from16 v5, p5

    move-object/from16 v6, p6

    move/from16 v7, p7

    move/from16 v8, p8

    move-object/from16 v9, p9

    move-object/from16 v10, p10

    invoke-virtual/range {v0 .. v11}, Lcom/android/server/am/ActivityManagerService;->startActivityAsUser(Landroid/app/IApplicationThread;Ljava/lang/String;Landroid/content/Intent;Ljava/lang/String;Landroid/os/IBinder;Ljava/lang/String;IILandroid/app/ProfilerInfo;Landroid/os/Bundle;I)I

    move-result v0

    return v0
.end method

.method public final startActivityAndWait(Landroid/app/IApplicationThread;Ljava/lang/String;Landroid/content/Intent;Ljava/lang/String;Landroid/os/IBinder;Ljava/lang/String;IILandroid/app/ProfilerInfo;Landroid/os/Bundle;I)Landroid/app/WaitResult;
    .locals 10

    move-object v0, p0

    .line 5398
    const-string/jumbo v1, "startActivityAndWait"

    invoke-virtual {v0, v1}, Lcom/android/server/am/ActivityManagerService;->enforceNotIsolatedCaller(Ljava/lang/String;)V

    .line 5399
    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mUserController:Lcom/android/server/am/UserController;

    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result v3

    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v4

    const-string/jumbo v8, "startActivityAndWait"

    const/4 v6, 0x0

    const/4 v7, 0x2

    const/4 v9, 0x0

    move/from16 v5, p11

    invoke-virtual/range {v2 .. v9}, Lcom/android/server/am/UserController;->handleIncomingUser(IIIZILjava/lang/String;Ljava/lang/String;)I

    move-result v1

    .line 5401
    new-instance v2, Landroid/app/WaitResult;

    invoke-direct {v2}, Landroid/app/WaitResult;-><init>()V

    .line 5403
    iget-object v0, v0, Lcom/android/server/am/ActivityManagerService;->mActivityStartController:Lcom/android/server/am/ActivityStartController;

    const-string/jumbo v3, "startActivityAndWait"

    move-object v4, p3

    invoke-virtual {v0, v4, v3}, Lcom/android/server/am/ActivityStartController;->obtainStarter(Landroid/content/Intent;Ljava/lang/String;)Lcom/android/server/am/ActivityStarter;

    move-result-object v0

    .line 5404
    move-object v3, p1

    invoke-virtual {v0, v3}, Lcom/android/server/am/ActivityStarter;->setCaller(Landroid/app/IApplicationThread;)Lcom/android/server/am/ActivityStarter;

    move-result-object v0

    .line 5405
    move-object v3, p2

    invoke-virtual {v0, v3}, Lcom/android/server/am/ActivityStarter;->setCallingPackage(Ljava/lang/String;)Lcom/android/server/am/ActivityStarter;

    move-result-object v0

    .line 5406
    move-object v3, p4

    invoke-virtual {v0, v3}, Lcom/android/server/am/ActivityStarter;->setResolvedType(Ljava/lang/String;)Lcom/android/server/am/ActivityStarter;

    move-result-object v0

    .line 5407
    move-object v3, p5

    invoke-virtual {v0, v3}, Lcom/android/server/am/ActivityStarter;->setResultTo(Landroid/os/IBinder;)Lcom/android/server/am/ActivityStarter;

    move-result-object v0

    .line 5408
    move-object/from16 v3, p6

    invoke-virtual {v0, v3}, Lcom/android/server/am/ActivityStarter;->setResultWho(Ljava/lang/String;)Lcom/android/server/am/ActivityStarter;

    move-result-object v0

    .line 5409
    move/from16 v3, p7

    invoke-virtual {v0, v3}, Lcom/android/server/am/ActivityStarter;->setRequestCode(I)Lcom/android/server/am/ActivityStarter;

    move-result-object v0

    .line 5410
    move/from16 v3, p8

    invoke-virtual {v0, v3}, Lcom/android/server/am/ActivityStarter;->setStartFlags(I)Lcom/android/server/am/ActivityStarter;

    move-result-object v0

    .line 5411
    move-object/from16 v3, p10

    invoke-virtual {v0, v3}, Lcom/android/server/am/ActivityStarter;->setActivityOptions(Landroid/os/Bundle;)Lcom/android/server/am/ActivityStarter;

    move-result-object v0

    .line 5412
    invoke-virtual {v0, v1}, Lcom/android/server/am/ActivityStarter;->setMayWait(I)Lcom/android/server/am/ActivityStarter;

    move-result-object v0

    .line 5413
    move-object/from16 v1, p9

    invoke-virtual {v0, v1}, Lcom/android/server/am/ActivityStarter;->setProfilerInfo(Landroid/app/ProfilerInfo;)Lcom/android/server/am/ActivityStarter;

    move-result-object v0

    .line 5414
    invoke-virtual {v0, v2}, Lcom/android/server/am/ActivityStarter;->setWaitResult(Landroid/app/WaitResult;)Lcom/android/server/am/ActivityStarter;

    move-result-object v0

    .line 5415
    invoke-virtual {v0}, Lcom/android/server/am/ActivityStarter;->execute()I

    .line 5416
    return-object v2
.end method

.method public final startActivityAsCaller(Landroid/app/IApplicationThread;Ljava/lang/String;Landroid/content/Intent;Ljava/lang/String;Landroid/os/IBinder;Ljava/lang/String;IILandroid/app/ProfilerInfo;Landroid/os/Bundle;ZI)I
    .locals 2

    .line 5319
    monitor-enter p0

    :try_start_0
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    .line 5320
    if-eqz p5, :cond_a

    .line 5323
    iget-object p1, p0, Lcom/android/server/am/ActivityManagerService;->mStackSupervisor:Lcom/android/server/am/ActivityStackSupervisor;

    invoke-virtual {p1, p5}, Lcom/android/server/am/ActivityStackSupervisor;->isInAnyStackLocked(Landroid/os/IBinder;)Lcom/android/server/am/ActivityRecord;

    move-result-object p1

    .line 5324
    if-eqz p1, :cond_9

    .line 5327
    iget-object p2, p1, Lcom/android/server/am/ActivityRecord;->info:Landroid/content/pm/ActivityInfo;

    iget-object p2, p2, Landroid/content/pm/ActivityInfo;->packageName:Ljava/lang/String;

    const-string p9, "android"

    invoke-virtual {p2, p9}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result p2

    if-eqz p2, :cond_8

    .line 5331
    iget-object p2, p1, Lcom/android/server/am/ActivityRecord;->app:Lcom/android/server/am/ProcessRecord;

    if-eqz p2, :cond_7

    .line 5334
    iget-object p2, p1, Lcom/android/server/am/ActivityRecord;->app:Lcom/android/server/am/ProcessRecord;

    iget p2, p2, Lcom/android/server/am/ProcessRecord;->uid:I

    invoke-static {p2}, Landroid/os/UserHandle;->getAppId(I)I

    move-result p2

    const/16 p9, 0x3e8

    if-eq p2, p9, :cond_1

    .line 5337
    iget-object p2, p1, Lcom/android/server/am/ActivityRecord;->app:Lcom/android/server/am/ProcessRecord;

    iget p2, p2, Lcom/android/server/am/ProcessRecord;->uid:I

    iget p9, p1, Lcom/android/server/am/ActivityRecord;->launchedFromUid:I

    if-ne p2, p9, :cond_0

    goto :goto_0

    .line 5338
    :cond_0
    new-instance p2, Ljava/lang/SecurityException;

    new-instance p3, Ljava/lang/StringBuilder;

    invoke-direct {p3}, Ljava/lang/StringBuilder;-><init>()V

    const-string p4, "Calling activity in uid "

    invoke-virtual {p3, p4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget-object p4, p1, Lcom/android/server/am/ActivityRecord;->app:Lcom/android/server/am/ProcessRecord;

    iget p4, p4, Lcom/android/server/am/ProcessRecord;->uid:I

    invoke-virtual {p3, p4}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string p4, " must be system uid or original calling uid "

    invoke-virtual {p3, p4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget p1, p1, Lcom/android/server/am/ActivityRecord;->launchedFromUid:I

    invoke-virtual {p3, p1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {p3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object p1

    invoke-direct {p2, p1}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw p2

    .line 5344
    :cond_1
    :goto_0
    if-eqz p11, :cond_4

    .line 5345
    invoke-virtual {p3}, Landroid/content/Intent;->getComponent()Landroid/content/ComponentName;

    move-result-object p2

    if-eqz p2, :cond_3

    .line 5349
    invoke-virtual {p3}, Landroid/content/Intent;->getSelector()Landroid/content/Intent;

    move-result-object p2

    if-nez p2, :cond_2

    goto :goto_1

    .line 5350
    :cond_2
    new-instance p1, Ljava/lang/SecurityException;

    const-string p2, "Selector not allowed with ignoreTargetSecurity"

    invoke-direct {p1, p2}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw p1

    .line 5346
    :cond_3
    new-instance p1, Ljava/lang/SecurityException;

    const-string p2, "Component must be specified with ignoreTargetSecurity"

    invoke-direct {p1, p2}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw p1

    .line 5354
    :cond_4
    :goto_1
    iget p2, p1, Lcom/android/server/am/ActivityRecord;->launchedFromUid:I

    .line 5355
    iget-object p9, p1, Lcom/android/server/am/ActivityRecord;->launchedFromPackage:Ljava/lang/String;

    .line 5356
    invoke-virtual {p1}, Lcom/android/server/am/ActivityRecord;->isResolverOrChildActivity()Z

    move-result v0

    .line 5357
    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    .line 5359
    const/16 v1, -0x2710

    if-ne p12, v1, :cond_5

    .line 5360
    iget-object p1, p1, Lcom/android/server/am/ActivityRecord;->app:Lcom/android/server/am/ProcessRecord;

    iget p1, p1, Lcom/android/server/am/ProcessRecord;->uid:I

    invoke-static {p1}, Landroid/os/UserHandle;->getUserId(I)I

    move-result p12

    .line 5365
    :cond_5
    :try_start_1
    iget-object p1, p0, Lcom/android/server/am/ActivityManagerService;->mActivityStartController:Lcom/android/server/am/ActivityStartController;

    const-string/jumbo v1, "startActivityAsCaller"

    invoke-virtual {p1, p3, v1}, Lcom/android/server/am/ActivityStartController;->obtainStarter(Landroid/content/Intent;Ljava/lang/String;)Lcom/android/server/am/ActivityStarter;

    move-result-object p1

    .line 5366
    invoke-virtual {p1, p2}, Lcom/android/server/am/ActivityStarter;->setCallingUid(I)Lcom/android/server/am/ActivityStarter;

    move-result-object p1

    .line 5367
    invoke-virtual {p1, p9}, Lcom/android/server/am/ActivityStarter;->setCallingPackage(Ljava/lang/String;)Lcom/android/server/am/ActivityStarter;

    move-result-object p1

    .line 5368
    invoke-virtual {p1, p4}, Lcom/android/server/am/ActivityStarter;->setResolvedType(Ljava/lang/String;)Lcom/android/server/am/ActivityStarter;

    move-result-object p1

    .line 5369
    invoke-virtual {p1, p5}, Lcom/android/server/am/ActivityStarter;->setResultTo(Landroid/os/IBinder;)Lcom/android/server/am/ActivityStarter;

    move-result-object p1

    .line 5370
    invoke-virtual {p1, p6}, Lcom/android/server/am/ActivityStarter;->setResultWho(Ljava/lang/String;)Lcom/android/server/am/ActivityStarter;

    move-result-object p1

    .line 5371
    invoke-virtual {p1, p7}, Lcom/android/server/am/ActivityStarter;->setRequestCode(I)Lcom/android/server/am/ActivityStarter;

    move-result-object p1

    .line 5372
    invoke-virtual {p1, p8}, Lcom/android/server/am/ActivityStarter;->setStartFlags(I)Lcom/android/server/am/ActivityStarter;

    move-result-object p1

    .line 5373
    invoke-virtual {p1, p10}, Lcom/android/server/am/ActivityStarter;->setActivityOptions(Landroid/os/Bundle;)Lcom/android/server/am/ActivityStarter;

    move-result-object p1

    .line 5374
    invoke-virtual {p1, p12}, Lcom/android/server/am/ActivityStarter;->setMayWait(I)Lcom/android/server/am/ActivityStarter;

    move-result-object p1

    .line 5375
    invoke-virtual {p1, p11}, Lcom/android/server/am/ActivityStarter;->setIgnoreTargetSecurity(Z)Lcom/android/server/am/ActivityStarter;

    move-result-object p1

    .line 5376
    if-eqz v0, :cond_6

    const/4 p2, 0x0

    :cond_6
    invoke-virtual {p1, p2}, Lcom/android/server/am/ActivityStarter;->setFilterCallingUid(I)Lcom/android/server/am/ActivityStarter;

    move-result-object p1

    .line 5377
    invoke-virtual {p1}, Lcom/android/server/am/ActivityStarter;->execute()I

    move-result p1
    :try_end_1
    .catch Ljava/lang/SecurityException; {:try_start_1 .. :try_end_1} :catch_0

    .line 5365
    return p1

    .line 5378
    :catch_0
    move-exception p1

    .line 5390
    throw p1

    .line 5332
    :cond_7
    :try_start_2
    new-instance p1, Ljava/lang/SecurityException;

    const-string p2, "Called without a process attached to activity"

    invoke-direct {p1, p2}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw p1

    .line 5328
    :cond_8
    new-instance p1, Ljava/lang/SecurityException;

    const-string p2, "Must be called from an activity that is declared in the android package"

    invoke-direct {p1, p2}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw p1

    .line 5325
    :cond_9
    new-instance p1, Ljava/lang/SecurityException;

    new-instance p2, Ljava/lang/StringBuilder;

    invoke-direct {p2}, Ljava/lang/StringBuilder;-><init>()V

    const-string p3, "Called with bad activity token: "

    invoke-virtual {p2, p3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {p2, p5}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    invoke-virtual {p2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object p2

    invoke-direct {p1, p2}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw p1

    .line 5321
    :cond_a
    new-instance p1, Ljava/lang/SecurityException;

    const-string p2, "Must be called from an activity"

    invoke-direct {p1, p2}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw p1

    .line 5357
    :catchall_0
    move-exception p1

    monitor-exit p0
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw p1
.end method

.method public final startActivityAsUser(Landroid/app/IApplicationThread;Ljava/lang/String;Landroid/content/Intent;Ljava/lang/String;Landroid/os/IBinder;Ljava/lang/String;IILandroid/app/ProfilerInfo;Landroid/os/Bundle;I)I
    .locals 13

    .line 5240
    const/4 v12, 0x1

    move-object v0, p0

    move-object v1, p1

    move-object v2, p2

    move-object/from16 v3, p3

    move-object/from16 v4, p4

    move-object/from16 v5, p5

    move-object/from16 v6, p6

    move/from16 v7, p7

    move/from16 v8, p8

    move-object/from16 v9, p9

    move-object/from16 v10, p10

    move/from16 v11, p11

    invoke-virtual/range {v0 .. v12}, Lcom/android/server/am/ActivityManagerService;->startActivityAsUser(Landroid/app/IApplicationThread;Ljava/lang/String;Landroid/content/Intent;Ljava/lang/String;Landroid/os/IBinder;Ljava/lang/String;IILandroid/app/ProfilerInfo;Landroid/os/Bundle;IZ)I

    move-result v0

    return v0
.end method

.method public final startActivityAsUser(Landroid/app/IApplicationThread;Ljava/lang/String;Landroid/content/Intent;Ljava/lang/String;Landroid/os/IBinder;Ljava/lang/String;IILandroid/app/ProfilerInfo;Landroid/os/Bundle;IZ)I
    .locals 8

    move-object v0, p0

    .line 5249
    const-string/jumbo v1, "startActivity"

    invoke-virtual {v0, v1}, Lcom/android/server/am/ActivityManagerService;->enforceNotIsolatedCaller(Ljava/lang/String;)V

    .line 5251
    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mActivityStartController:Lcom/android/server/am/ActivityStartController;

    .line 5252
    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result v5

    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v6

    const-string/jumbo v7, "startActivityAsUser"

    .line 5251
    move/from16 v3, p11

    move/from16 v4, p12

    invoke-virtual/range {v2 .. v7}, Lcom/android/server/am/ActivityStartController;->checkTargetUser(IZIILjava/lang/String;)I

    move-result v1

    .line 5255
    iget-object v0, v0, Lcom/android/server/am/ActivityManagerService;->mActivityStartController:Lcom/android/server/am/ActivityStartController;

    const-string/jumbo v2, "startActivityAsUser"

    move-object v3, p3

    invoke-virtual {v0, v3, v2}, Lcom/android/server/am/ActivityStartController;->obtainStarter(Landroid/content/Intent;Ljava/lang/String;)Lcom/android/server/am/ActivityStarter;

    move-result-object v0

    .line 5256
    move-object v2, p1

    invoke-virtual {v0, v2}, Lcom/android/server/am/ActivityStarter;->setCaller(Landroid/app/IApplicationThread;)Lcom/android/server/am/ActivityStarter;

    move-result-object v0

    .line 5257
    move-object v2, p2

    invoke-virtual {v0, v2}, Lcom/android/server/am/ActivityStarter;->setCallingPackage(Ljava/lang/String;)Lcom/android/server/am/ActivityStarter;

    move-result-object v0

    .line 5258
    move-object v2, p4

    invoke-virtual {v0, v2}, Lcom/android/server/am/ActivityStarter;->setResolvedType(Ljava/lang/String;)Lcom/android/server/am/ActivityStarter;

    move-result-object v0

    .line 5259
    move-object v2, p5

    invoke-virtual {v0, v2}, Lcom/android/server/am/ActivityStarter;->setResultTo(Landroid/os/IBinder;)Lcom/android/server/am/ActivityStarter;

    move-result-object v0

    .line 5260
    move-object v2, p6

    invoke-virtual {v0, v2}, Lcom/android/server/am/ActivityStarter;->setResultWho(Ljava/lang/String;)Lcom/android/server/am/ActivityStarter;

    move-result-object v0

    .line 5261
    move v2, p7

    invoke-virtual {v0, v2}, Lcom/android/server/am/ActivityStarter;->setRequestCode(I)Lcom/android/server/am/ActivityStarter;

    move-result-object v0

    .line 5262
    move/from16 v2, p8

    invoke-virtual {v0, v2}, Lcom/android/server/am/ActivityStarter;->setStartFlags(I)Lcom/android/server/am/ActivityStarter;

    move-result-object v0

    .line 5263
    move-object/from16 v2, p9

    invoke-virtual {v0, v2}, Lcom/android/server/am/ActivityStarter;->setProfilerInfo(Landroid/app/ProfilerInfo;)Lcom/android/server/am/ActivityStarter;

    move-result-object v0

    .line 5264
    move-object/from16 v2, p10

    invoke-virtual {v0, v2}, Lcom/android/server/am/ActivityStarter;->setActivityOptions(Landroid/os/Bundle;)Lcom/android/server/am/ActivityStarter;

    move-result-object v0

    .line 5265
    invoke-virtual {v0, v1}, Lcom/android/server/am/ActivityStarter;->setMayWait(I)Lcom/android/server/am/ActivityStarter;

    move-result-object v0

    .line 5266
    invoke-virtual {v0}, Lcom/android/server/am/ActivityStarter;->execute()I

    move-result v0

    .line 5255
    return v0
.end method

.method final startActivityAsUserEmpty(Landroid/app/IApplicationThread;Ljava/lang/String;Landroid/content/Intent;Ljava/lang/String;Landroid/os/IBinder;Ljava/lang/String;IILandroid/app/ProfilerInfo;Landroid/os/Bundle;I)I
    .locals 14

    move-object v11, p0

    .line 5273
    const-string/jumbo v0, "start_empty_apps"

    move-object/from16 v1, p10

    invoke-virtual {v1, v0}, Landroid/os/Bundle;->getStringArrayList(Ljava/lang/String;)Ljava/util/ArrayList;

    move-result-object v0

    .line 5274
    const/4 v12, 0x1

    if-eqz v0, :cond_4

    invoke-virtual {v0}, Ljava/util/ArrayList;->size()I

    move-result v1

    if-lez v1, :cond_4

    .line 5275
    invoke-virtual {v0}, Ljava/util/ArrayList;->iterator()Ljava/util/Iterator;

    move-result-object v13

    .line 5276
    :goto_0
    invoke-interface {v13}, Ljava/util/Iterator;->hasNext()Z

    move-result v0

    if-eqz v0, :cond_4

    .line 5277
    nop

    .line 5278
    invoke-interface {v13}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v0

    move-object v2, v0

    check-cast v2, Ljava/lang/String;

    .line 5279
    if-nez v2, :cond_0

    .line 5280
    goto :goto_0

    .line 5281
    :cond_0
    monitor-enter p0

    :try_start_0
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 5282
    nop

    .line 5284
    :try_start_1
    iget-object v0, v11, Lcom/android/server/am/ActivityManagerService;->mContext:Landroid/content/Context;

    invoke-virtual {v0}, Landroid/content/Context;->getPackageManager()Landroid/content/pm/PackageManager;

    move-result-object v0

    invoke-virtual {v0, v2}, Landroid/content/pm/PackageManager;->getLaunchIntentForPackage(Ljava/lang/String;)Landroid/content/Intent;

    move-result-object v4
    :try_end_1
    .catch Ljava/lang/Exception; {:try_start_1 .. :try_end_1} :catch_0
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 5285
    if-nez v4, :cond_1

    .line 5286
    :try_start_2
    monitor-exit p0
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    goto :goto_0

    .line 5287
    :cond_1
    :try_start_3
    iget-object v3, v11, Lcom/android/server/am/ActivityManagerService;->mStackSupervisor:Lcom/android/server/am/ActivityStackSupervisor;

    const/4 v5, 0x0

    const/4 v6, 0x0

    const/4 v7, 0x0

    const/4 v8, 0x0

    const/4 v9, 0x0

    invoke-virtual/range {v3 .. v9}, Lcom/android/server/am/ActivityStackSupervisor;->resolveActivity(Landroid/content/Intent;Ljava/lang/String;ILandroid/app/ProfilerInfo;II)Landroid/content/pm/ActivityInfo;

    move-result-object v0
    :try_end_3
    .catch Ljava/lang/Exception; {:try_start_3 .. :try_end_3} :catch_0
    .catchall {:try_start_3 .. :try_end_3} :catchall_0

    .line 5289
    if-nez v0, :cond_2

    .line 5290
    :try_start_4
    monitor-exit p0
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    goto :goto_0

    .line 5291
    :cond_2
    :try_start_5
    iget-object v3, v0, Landroid/content/pm/ActivityInfo;->applicationInfo:Landroid/content/pm/ApplicationInfo;

    const/4 v4, 0x0

    const/4 v5, 0x0

    const-string v6, "activity"

    const/4 v7, 0x0

    const/4 v8, 0x0

    const/4 v9, 0x0

    const/4 v10, 0x1

    move-object v1, v11

    invoke-virtual/range {v1 .. v10}, Lcom/android/server/am/ActivityManagerService;->startProcessLocked(Ljava/lang/String;Landroid/content/pm/ApplicationInfo;ZILjava/lang/String;Landroid/content/ComponentName;ZZZ)Lcom/android/server/am/ProcessRecord;

    move-result-object v0

    .line 5293
    if-eqz v0, :cond_3

    .line 5294
    invoke-virtual {v11, v0, v12}, Lcom/android/server/am/ActivityManagerService;->updateOomAdjLocked(Lcom/android/server/am/ProcessRecord;Z)Z
    :try_end_5
    .catch Ljava/lang/Exception; {:try_start_5 .. :try_end_5} :catch_0
    .catchall {:try_start_5 .. :try_end_5} :catchall_0

    .line 5298
    :cond_3
    goto :goto_1

    .line 5295
    :catch_0
    move-exception v0

    .line 5299
    :goto_1
    :try_start_6
    monitor-exit p0
    :try_end_6
    .catchall {:try_start_6 .. :try_end_6} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    .line 5300
    goto :goto_0

    .line 5299
    :catchall_0
    move-exception v0

    :try_start_7
    monitor-exit p0
    :try_end_7
    .catchall {:try_start_7 .. :try_end_7} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw v0

    .line 5302
    :cond_4
    return v12
.end method

.method public final startActivityFromRecents(ILandroid/os/Bundle;)I
    .locals 5

    .line 5747
    const-string v0, "android.permission.START_TASKS_FROM_RECENTS"

    const-string/jumbo v1, "startActivityFromRecents()"

    invoke-virtual {p0, v0, v1}, Lcom/android/server/am/ActivityManagerService;->enforceCallerIsRecentsOrHasPermission(Ljava/lang/String;Ljava/lang/String;)V

    .line 5750
    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result v0

    .line 5751
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v1

    .line 5752
    invoke-static {p2}, Lcom/android/server/am/SafeActivityOptions;->fromBundle(Landroid/os/Bundle;)Lcom/android/server/am/SafeActivityOptions;

    move-result-object p2

    .line 5753
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v2

    .line 5755
    :try_start_0
    monitor-enter p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_1

    :try_start_1
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    .line 5756
    iget-object v4, p0, Lcom/android/server/am/ActivityManagerService;->mStackSupervisor:Lcom/android/server/am/ActivityStackSupervisor;

    invoke-virtual {v4, v0, v1, p1, p2}, Lcom/android/server/am/ActivityStackSupervisor;->startActivityFromRecents(IIILcom/android/server/am/SafeActivityOptions;)I

    move-result p1

    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 5760
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    invoke-static {v2, v3}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 5756
    return p1

    .line 5758
    :catchall_0
    move-exception p1

    :try_start_2
    monitor-exit p0
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    :try_start_3
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw p1
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_1

    .line 5760
    :catchall_1
    move-exception p1

    invoke-static {v2, v3}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    throw p1
.end method

.method public startActivityIntentSender(Landroid/app/IApplicationThread;Landroid/content/IIntentSender;Landroid/os/IBinder;Landroid/content/Intent;Ljava/lang/String;Landroid/os/IBinder;Ljava/lang/String;IIILandroid/os/Bundle;)I
    .locals 16
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Landroid/os/TransactionTooLargeException;
        }
    .end annotation

    move-object/from16 v1, p0

    move-object/from16 v0, p2

    .line 5446
    const-string/jumbo v2, "startActivityIntentSender"

    invoke-virtual {v1, v2}, Lcom/android/server/am/ActivityManagerService;->enforceNotIsolatedCaller(Ljava/lang/String;)V

    .line 5448
    if-eqz p4, :cond_1

    invoke-virtual/range {p4 .. p4}, Landroid/content/Intent;->hasFileDescriptors()Z

    move-result v3

    if-nez v3, :cond_0

    goto :goto_0

    .line 5449
    :cond_0
    new-instance v0, Ljava/lang/IllegalArgumentException;

    const-string v1, "File descriptors passed in Intent"

    invoke-direct {v0, v1}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v0

    .line 5452
    :cond_1
    :goto_0
    instance-of v3, v0, Lcom/android/server/am/PendingIntentRecord;

    if-eqz v3, :cond_3

    .line 5456
    move-object v3, v0

    check-cast v3, Lcom/android/server/am/PendingIntentRecord;

    .line 5458
    monitor-enter p0

    :try_start_0
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    .line 5461
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/am/ActivityManagerService;->getFocusedStack()Lcom/android/server/am/ActivityStack;

    move-result-object v0

    .line 5462
    iget-object v4, v0, Lcom/android/server/am/ActivityStack;->mResumedActivity:Lcom/android/server/am/ActivityRecord;

    if-eqz v4, :cond_2

    iget-object v0, v0, Lcom/android/server/am/ActivityStack;->mResumedActivity:Lcom/android/server/am/ActivityRecord;

    iget-object v0, v0, Lcom/android/server/am/ActivityRecord;->info:Landroid/content/pm/ActivityInfo;

    iget-object v0, v0, Landroid/content/pm/ActivityInfo;->applicationInfo:Landroid/content/pm/ApplicationInfo;

    iget v0, v0, Landroid/content/pm/ApplicationInfo;->uid:I

    .line 5463
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v4

    if-ne v0, v4, :cond_2

    .line 5464
    const-wide/16 v4, 0x0

    iput-wide v4, v1, Lcom/android/server/am/ActivityManagerService;->mAppSwitchesAllowedTime:J

    .line 5466
    :cond_2
    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    .line 5467
    const/4 v4, 0x0

    const/4 v8, 0x0

    const/4 v9, 0x0

    move-object/from16 v5, p4

    move-object/from16 v6, p5

    move-object/from16 v7, p3

    move-object/from16 v10, p6

    move-object/from16 v11, p7

    move/from16 v12, p8

    move/from16 v13, p9

    move/from16 v14, p10

    move-object/from16 v15, p11

    invoke-virtual/range {v3 .. v15}, Lcom/android/server/am/PendingIntentRecord;->sendInner(ILandroid/content/Intent;Ljava/lang/String;Landroid/os/IBinder;Landroid/content/IIntentReceiver;Ljava/lang/String;Landroid/os/IBinder;Ljava/lang/String;IIILandroid/os/Bundle;)I

    move-result v0

    .line 5469
    return v0

    .line 5466
    :catchall_0
    move-exception v0

    :try_start_1
    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw v0

    .line 5453
    :cond_3
    new-instance v0, Ljava/lang/IllegalArgumentException;

    const-string v1, "Bad PendingIntent object"

    invoke-direct {v0, v1}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v0
.end method

.method public final startActivityWithConfig(Landroid/app/IApplicationThread;Ljava/lang/String;Landroid/content/Intent;Ljava/lang/String;Landroid/os/IBinder;Ljava/lang/String;IILandroid/content/res/Configuration;Landroid/os/Bundle;I)I
    .locals 10

    move-object v0, p0

    .line 5423
    const-string/jumbo v1, "startActivityWithConfig"

    invoke-virtual {v0, v1}, Lcom/android/server/am/ActivityManagerService;->enforceNotIsolatedCaller(Ljava/lang/String;)V

    .line 5424
    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mUserController:Lcom/android/server/am/UserController;

    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result v3

    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v4

    const-string/jumbo v8, "startActivityWithConfig"

    const/4 v6, 0x0

    const/4 v7, 0x2

    const/4 v9, 0x0

    move/from16 v5, p11

    invoke-virtual/range {v2 .. v9}, Lcom/android/server/am/UserController;->handleIncomingUser(IIIZILjava/lang/String;Ljava/lang/String;)I

    move-result v1

    .line 5427
    iget-object v0, v0, Lcom/android/server/am/ActivityManagerService;->mActivityStartController:Lcom/android/server/am/ActivityStartController;

    const-string/jumbo v2, "startActivityWithConfig"

    move-object v3, p3

    invoke-virtual {v0, v3, v2}, Lcom/android/server/am/ActivityStartController;->obtainStarter(Landroid/content/Intent;Ljava/lang/String;)Lcom/android/server/am/ActivityStarter;

    move-result-object v0

    .line 5428
    move-object v2, p1

    invoke-virtual {v0, v2}, Lcom/android/server/am/ActivityStarter;->setCaller(Landroid/app/IApplicationThread;)Lcom/android/server/am/ActivityStarter;

    move-result-object v0

    .line 5429
    move-object v2, p2

    invoke-virtual {v0, v2}, Lcom/android/server/am/ActivityStarter;->setCallingPackage(Ljava/lang/String;)Lcom/android/server/am/ActivityStarter;

    move-result-object v0

    .line 5430
    move-object v2, p4

    invoke-virtual {v0, v2}, Lcom/android/server/am/ActivityStarter;->setResolvedType(Ljava/lang/String;)Lcom/android/server/am/ActivityStarter;

    move-result-object v0

    .line 5431
    move-object v2, p5

    invoke-virtual {v0, v2}, Lcom/android/server/am/ActivityStarter;->setResultTo(Landroid/os/IBinder;)Lcom/android/server/am/ActivityStarter;

    move-result-object v0

    .line 5432
    move-object/from16 v2, p6

    invoke-virtual {v0, v2}, Lcom/android/server/am/ActivityStarter;->setResultWho(Ljava/lang/String;)Lcom/android/server/am/ActivityStarter;

    move-result-object v0

    .line 5433
    move/from16 v2, p7

    invoke-virtual {v0, v2}, Lcom/android/server/am/ActivityStarter;->setRequestCode(I)Lcom/android/server/am/ActivityStarter;

    move-result-object v0

    .line 5434
    move/from16 v2, p8

    invoke-virtual {v0, v2}, Lcom/android/server/am/ActivityStarter;->setStartFlags(I)Lcom/android/server/am/ActivityStarter;

    move-result-object v0

    .line 5435
    move-object/from16 v2, p9

    invoke-virtual {v0, v2}, Lcom/android/server/am/ActivityStarter;->setGlobalConfiguration(Landroid/content/res/Configuration;)Lcom/android/server/am/ActivityStarter;

    move-result-object v0

    .line 5436
    move-object/from16 v2, p10

    invoke-virtual {v0, v2}, Lcom/android/server/am/ActivityStarter;->setActivityOptions(Landroid/os/Bundle;)Lcom/android/server/am/ActivityStarter;

    move-result-object v0

    .line 5437
    invoke-virtual {v0, v1}, Lcom/android/server/am/ActivityStarter;->setMayWait(I)Lcom/android/server/am/ActivityStarter;

    move-result-object v0

    .line 5438
    invoke-virtual {v0}, Lcom/android/server/am/ActivityStarter;->execute()I

    move-result v0

    .line 5427
    return v0
.end method

.method public startAssistantActivity(Ljava/lang/String;IILandroid/content/Intent;Ljava/lang/String;Landroid/os/Bundle;I)I
    .locals 11

    move-object v0, p0

    .line 5500
    const-string v1, "android.permission.BIND_VOICE_INTERACTION"

    const-string/jumbo v2, "startAssistantActivity()"

    invoke-virtual {v0, v1, v2}, Lcom/android/server/am/ActivityManagerService;->enforceCallingPermission(Ljava/lang/String;Ljava/lang/String;)V

    .line 5501
    iget-object v3, v0, Lcom/android/server/am/ActivityManagerService;->mUserController:Lcom/android/server/am/UserController;

    const-string/jumbo v9, "startAssistantActivity"

    const/4 v7, 0x0

    const/4 v8, 0x2

    const/4 v10, 0x0

    move v4, p2

    move v5, p3

    move/from16 v6, p7

    invoke-virtual/range {v3 .. v10}, Lcom/android/server/am/UserController;->handleIncomingUser(IIIZILjava/lang/String;Ljava/lang/String;)I

    move-result v1

    .line 5504
    iget-object v0, v0, Lcom/android/server/am/ActivityManagerService;->mActivityStartController:Lcom/android/server/am/ActivityStartController;

    const-string/jumbo v2, "startAssistantActivity"

    move-object v3, p4

    invoke-virtual {v0, v3, v2}, Lcom/android/server/am/ActivityStartController;->obtainStarter(Landroid/content/Intent;Ljava/lang/String;)Lcom/android/server/am/ActivityStarter;

    move-result-object v0

    .line 5505
    move v2, p3

    invoke-virtual {v0, v2}, Lcom/android/server/am/ActivityStarter;->setCallingUid(I)Lcom/android/server/am/ActivityStarter;

    move-result-object v0

    .line 5506
    move-object v2, p1

    invoke-virtual {v0, v2}, Lcom/android/server/am/ActivityStarter;->setCallingPackage(Ljava/lang/String;)Lcom/android/server/am/ActivityStarter;

    move-result-object v0

    .line 5507
    move-object/from16 v2, p5

    invoke-virtual {v0, v2}, Lcom/android/server/am/ActivityStarter;->setResolvedType(Ljava/lang/String;)Lcom/android/server/am/ActivityStarter;

    move-result-object v0

    .line 5508
    move-object/from16 v2, p6

    invoke-virtual {v0, v2}, Lcom/android/server/am/ActivityStarter;->setActivityOptions(Landroid/os/Bundle;)Lcom/android/server/am/ActivityStarter;

    move-result-object v0

    .line 5509
    invoke-virtual {v0, v1}, Lcom/android/server/am/ActivityStarter;->setMayWait(I)Lcom/android/server/am/ActivityStarter;

    move-result-object v0

    .line 5510
    invoke-virtual {v0}, Lcom/android/server/am/ActivityStarter;->execute()I

    move-result v0

    .line 5504
    return v0
.end method

.method startAssociationLocked(ILjava/lang/String;IILandroid/content/ComponentName;Ljava/lang/String;)Lcom/android/server/am/ActivityManagerService$Association;
    .locals 8

    .line 23250
    iget-boolean v0, p0, Lcom/android/server/am/ActivityManagerService;->mTrackingAssociations:Z

    if-nez v0, :cond_0

    .line 23251
    const/4 p1, 0x0

    return-object p1

    .line 23253
    :cond_0
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mAssociations:Landroid/util/SparseArray;

    .line 23254
    invoke-virtual {v0, p4}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Landroid/util/ArrayMap;

    .line 23255
    if-nez v0, :cond_1

    .line 23256
    new-instance v0, Landroid/util/ArrayMap;

    invoke-direct {v0}, Landroid/util/ArrayMap;-><init>()V

    .line 23257
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mAssociations:Landroid/util/SparseArray;

    invoke-virtual {v1, p4, v0}, Landroid/util/SparseArray;->put(ILjava/lang/Object;)V

    .line 23259
    :cond_1
    invoke-virtual {v0, p5}, Landroid/util/ArrayMap;->get(Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object v1

    check-cast v1, Landroid/util/SparseArray;

    .line 23260
    if-nez v1, :cond_2

    .line 23261
    new-instance v1, Landroid/util/SparseArray;

    invoke-direct {v1}, Landroid/util/SparseArray;-><init>()V

    .line 23262
    invoke-virtual {v0, p5, v1}, Landroid/util/ArrayMap;->put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    .line 23264
    :cond_2
    invoke-virtual {v1, p1}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Landroid/util/ArrayMap;

    .line 23265
    if-nez v0, :cond_3

    .line 23266
    new-instance v0, Landroid/util/ArrayMap;

    invoke-direct {v0}, Landroid/util/ArrayMap;-><init>()V

    .line 23267
    invoke-virtual {v1, p1, v0}, Landroid/util/SparseArray;->put(ILjava/lang/Object;)V

    .line 23269
    :cond_3
    invoke-virtual {v0, p2}, Landroid/util/ArrayMap;->get(Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object v1

    check-cast v1, Lcom/android/server/am/ActivityManagerService$Association;

    .line 23270
    if-nez v1, :cond_4

    .line 23271
    new-instance v1, Lcom/android/server/am/ActivityManagerService$Association;

    move-object v2, v1

    move v3, p1

    move-object v4, p2

    move v5, p4

    move-object v6, p5

    move-object v7, p6

    invoke-direct/range {v2 .. v7}, Lcom/android/server/am/ActivityManagerService$Association;-><init>(ILjava/lang/String;ILandroid/content/ComponentName;Ljava/lang/String;)V

    .line 23273
    invoke-virtual {v0, p2, v1}, Landroid/util/ArrayMap;->put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    .line 23275
    :cond_4
    iget p1, v1, Lcom/android/server/am/ActivityManagerService$Association;->mCount:I

    const/4 p2, 0x1

    add-int/2addr p1, p2

    iput p1, v1, Lcom/android/server/am/ActivityManagerService$Association;->mCount:I

    .line 23276
    iget p1, v1, Lcom/android/server/am/ActivityManagerService$Association;->mNesting:I

    add-int/2addr p1, p2

    iput p1, v1, Lcom/android/server/am/ActivityManagerService$Association;->mNesting:I

    .line 23277
    iget p1, v1, Lcom/android/server/am/ActivityManagerService$Association;->mNesting:I

    if-ne p1, p2, :cond_5

    .line 23278
    invoke-static {}, Landroid/os/SystemClock;->uptimeMillis()J

    move-result-wide p1

    iput-wide p1, v1, Lcom/android/server/am/ActivityManagerService$Association;->mLastStateUptime:J

    iput-wide p1, v1, Lcom/android/server/am/ActivityManagerService$Association;->mStartTime:J

    .line 23279
    iput p3, v1, Lcom/android/server/am/ActivityManagerService$Association;->mLastState:I

    .line 23281
    :cond_5
    return-object v1
.end method

.method public startBinderTracking()Z
    .locals 4
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Landroid/os/RemoteException;
        }
    .end annotation

    .line 26640
    monitor-enter p0

    :try_start_0
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    .line 26641
    const/4 v0, 0x1

    iput-boolean v0, p0, Lcom/android/server/am/ActivityManagerService;->mBinderTransactionTrackingEnabled:Z

    .line 26644
    const-string v1, "android.permission.SET_ACTIVITY_WATCHER"

    invoke-virtual {p0, v1}, Lcom/android/server/am/ActivityManagerService;->checkCallingPermission(Ljava/lang/String;)I

    move-result v1

    if-nez v1, :cond_2

    .line 26650
    const/4 v1, 0x0

    :goto_0
    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mLruProcesses:Ljava/util/ArrayList;

    invoke-virtual {v2}, Ljava/util/ArrayList;->size()I

    move-result v2

    if-ge v1, v2, :cond_1

    .line 26651
    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mLruProcesses:Ljava/util/ArrayList;

    invoke-virtual {v2, v1}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Lcom/android/server/am/ProcessRecord;

    .line 26652
    invoke-direct {p0, v2}, Lcom/android/server/am/ActivityManagerService;->processSanityChecksLocked(Lcom/android/server/am/ProcessRecord;)Z

    move-result v3
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    if-nez v3, :cond_0

    .line 26653
    goto :goto_1

    .line 26656
    :cond_0
    :try_start_1
    iget-object v2, v2, Lcom/android/server/am/ProcessRecord;->thread:Landroid/app/IApplicationThread;

    invoke-interface {v2}, Landroid/app/IApplicationThread;->startBinderTracking()V
    :try_end_1
    .catch Landroid/os/RemoteException; {:try_start_1 .. :try_end_1} :catch_0
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 26659
    goto :goto_1

    .line 26657
    :catch_0
    move-exception v2

    .line 26658
    :try_start_2
    const-string v2, "ActivityManager"

    const-string v3, "Process disappared"

    invoke-static {v2, v3}, Landroid/util/Log;->v(Ljava/lang/String;Ljava/lang/String;)I

    .line 26650
    :goto_1
    add-int/lit8 v1, v1, 0x1

    goto :goto_0

    .line 26661
    :cond_1
    monitor-exit p0
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    return v0

    .line 26646
    :cond_2
    :try_start_3
    new-instance v0, Ljava/lang/SecurityException;

    const-string v1, "Requires permission android.permission.SET_ACTIVITY_WATCHER"

    invoke-direct {v0, v1}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v0

    .line 26662
    :catchall_0
    move-exception v0

    monitor-exit p0
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw v0
.end method

.method public startConfirmDeviceCredentialIntent(Landroid/content/Intent;Landroid/os/Bundle;)V
    .locals 4

    .line 13766
    const-string v0, "android.permission.MANAGE_ACTIVITY_STACKS"

    const-string/jumbo v1, "startConfirmDeviceCredentialIntent"

    invoke-virtual {p0, v0, v1}, Lcom/android/server/am/ActivityManagerService;->enforceCallingPermission(Ljava/lang/String;Ljava/lang/String;)V

    .line 13767
    monitor-enter p0

    :try_start_0
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    .line 13768
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_1

    .line 13770
    const v2, 0x10804000

    :try_start_1
    invoke-virtual {p1, v2}, Landroid/content/Intent;->addFlags(I)Landroid/content/Intent;

    .line 13773
    if-eqz p2, :cond_0

    .line 13774
    new-instance v2, Landroid/app/ActivityOptions;

    invoke-direct {v2, p2}, Landroid/app/ActivityOptions;-><init>(Landroid/os/Bundle;)V

    goto :goto_0

    .line 13775
    :cond_0
    invoke-static {}, Landroid/app/ActivityOptions;->makeBasic()Landroid/app/ActivityOptions;

    move-result-object v2

    .line 13776
    :goto_0
    iget-object p2, p0, Lcom/android/server/am/ActivityManagerService;->mStackSupervisor:Lcom/android/server/am/ActivityStackSupervisor;

    .line 13777
    invoke-virtual {p2}, Lcom/android/server/am/ActivityStackSupervisor;->getHomeActivity()Lcom/android/server/am/ActivityRecord;

    move-result-object p2

    invoke-virtual {p2}, Lcom/android/server/am/ActivityRecord;->getTask()Lcom/android/server/am/TaskRecord;

    move-result-object p2

    iget p2, p2, Lcom/android/server/am/TaskRecord;->taskId:I

    .line 13776
    invoke-virtual {v2, p2}, Landroid/app/ActivityOptions;->setLaunchTaskId(I)V

    .line 13778
    iget-object p2, p0, Lcom/android/server/am/ActivityManagerService;->mContext:Landroid/content/Context;

    invoke-virtual {v2}, Landroid/app/ActivityOptions;->toBundle()Landroid/os/Bundle;

    move-result-object v2

    sget-object v3, Landroid/os/UserHandle;->CURRENT:Landroid/os/UserHandle;

    invoke-virtual {p2, p1, v2, v3}, Landroid/content/Context;->startActivityAsUser(Landroid/content/Intent;Landroid/os/Bundle;Landroid/os/UserHandle;)V
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 13781
    :try_start_2
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 13782
    nop

    .line 13783
    monitor-exit p0
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_1

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    .line 13784
    return-void

    .line 13781
    :catchall_0
    move-exception p1

    :try_start_3
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    throw p1

    .line 13783
    :catchall_1
    move-exception p1

    monitor-exit p0
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_1

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw p1
.end method

.method startHomeActivityLocked(ILjava/lang/String;)Z
    .locals 6

    .line 4800
    iget v0, p0, Lcom/android/server/am/ActivityManagerService;->mFactoryTest:I

    const/4 v1, 0x1

    if-ne v0, v1, :cond_0

    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mTopAction:Ljava/lang/String;

    if-nez v0, :cond_0

    .line 4805
    const/4 p1, 0x0

    return p1

    .line 4807
    :cond_0
    invoke-virtual {p0}, Lcom/android/server/am/ActivityManagerService;->getHomeIntent()Landroid/content/Intent;

    move-result-object v0

    .line 4808
    const/16 v2, 0x400

    invoke-direct {p0, v0, v2, p1}, Lcom/android/server/am/ActivityManagerService;->resolveActivityInfo(Landroid/content/Intent;II)Landroid/content/pm/ActivityInfo;

    move-result-object v2

    .line 4809
    if-eqz v2, :cond_3

    .line 4810
    new-instance v3, Landroid/content/ComponentName;

    iget-object v4, v2, Landroid/content/pm/ActivityInfo;->applicationInfo:Landroid/content/pm/ApplicationInfo;

    iget-object v4, v4, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;

    iget-object v5, v2, Landroid/content/pm/ActivityInfo;->name:Ljava/lang/String;

    invoke-direct {v3, v4, v5}, Landroid/content/ComponentName;-><init>(Ljava/lang/String;Ljava/lang/String;)V

    invoke-virtual {v0, v3}, Landroid/content/Intent;->setComponent(Landroid/content/ComponentName;)Landroid/content/Intent;

    .line 4813
    new-instance v3, Landroid/content/pm/ActivityInfo;

    invoke-direct {v3, v2}, Landroid/content/pm/ActivityInfo;-><init>(Landroid/content/pm/ActivityInfo;)V

    .line 4814
    iget-object v2, v3, Landroid/content/pm/ActivityInfo;->applicationInfo:Landroid/content/pm/ApplicationInfo;

    invoke-virtual {p0, v2, p1}, Lcom/android/server/am/ActivityManagerService;->getAppInfoForUser(Landroid/content/pm/ApplicationInfo;I)Landroid/content/pm/ApplicationInfo;

    move-result-object v2

    iput-object v2, v3, Landroid/content/pm/ActivityInfo;->applicationInfo:Landroid/content/pm/ApplicationInfo;

    .line 4815
    iget-object v2, v3, Landroid/content/pm/ActivityInfo;->processName:Ljava/lang/String;

    iget-object v4, v3, Landroid/content/pm/ActivityInfo;->applicationInfo:Landroid/content/pm/ApplicationInfo;

    iget v4, v4, Landroid/content/pm/ApplicationInfo;->uid:I

    invoke-virtual {p0, v2, v4, v1}, Lcom/android/server/am/ActivityManagerService;->getProcessRecordLocked(Ljava/lang/String;IZ)Lcom/android/server/am/ProcessRecord;

    move-result-object v2

    .line 4817
    if-eqz v2, :cond_1

    iget-object v2, v2, Lcom/android/server/am/ProcessRecord;->instr:Lcom/android/server/am/ActiveInstrumentation;

    if-nez v2, :cond_2

    .line 4818
    :cond_1
    invoke-virtual {v0}, Landroid/content/Intent;->getFlags()I

    move-result v2

    const/high16 v4, 0x10000000

    or-int/2addr v2, v4

    invoke-virtual {v0, v2}, Landroid/content/Intent;->setFlags(I)Landroid/content/Intent;

    .line 4819
    iget-object v2, v3, Landroid/content/pm/ActivityInfo;->applicationInfo:Landroid/content/pm/ApplicationInfo;

    iget v2, v2, Landroid/content/pm/ApplicationInfo;->uid:I

    invoke-static {v2}, Landroid/os/UserHandle;->getUserId(I)I

    move-result v2

    .line 4822
    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    invoke-virtual {v4, p2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string p2, ":"

    invoke-virtual {v4, p2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v4, p1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string p1, ":"

    invoke-virtual {v4, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v4, v2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object p1

    .line 4823
    iget-object p2, p0, Lcom/android/server/am/ActivityManagerService;->mActivityStartController:Lcom/android/server/am/ActivityStartController;

    invoke-virtual {p2, v0, v3, p1}, Lcom/android/server/am/ActivityStartController;->startHomeActivity(Landroid/content/Intent;Landroid/content/pm/ActivityInfo;Ljava/lang/String;)V

    .line 4825
    :cond_2
    goto :goto_0

    .line 4826
    :cond_3
    const-string p1, "ActivityManager"

    new-instance p2, Ljava/lang/StringBuilder;

    invoke-direct {p2}, Ljava/lang/StringBuilder;-><init>()V

    const-string v2, "No home screen found for "

    invoke-virtual {p2, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {p2, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    invoke-virtual {p2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object p2

    new-instance v0, Ljava/lang/Throwable;

    invoke-direct {v0}, Ljava/lang/Throwable;-><init>()V

    invoke-static {p1, p2, v0}, Landroid/util/Slog;->wtf(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I

    .line 4829
    :goto_0
    return v1
.end method

.method public startInPlaceAnimationOnFrontMostApplication(Landroid/os/Bundle;)V
    .locals 3
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Landroid/os/RemoteException;
        }
    .end annotation

    .line 11219
    invoke-static {p1}, Lcom/android/server/am/SafeActivityOptions;->fromBundle(Landroid/os/Bundle;)Lcom/android/server/am/SafeActivityOptions;

    move-result-object p1

    .line 11220
    if-eqz p1, :cond_0

    .line 11221
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mStackSupervisor:Lcom/android/server/am/ActivityStackSupervisor;

    invoke-virtual {p1, v0}, Lcom/android/server/am/SafeActivityOptions;->getOptions(Lcom/android/server/am/ActivityStackSupervisor;)Landroid/app/ActivityOptions;

    move-result-object p1

    goto :goto_0

    .line 11222
    :cond_0
    const/4 p1, 0x0

    .line 11223
    :goto_0
    if-eqz p1, :cond_1

    .line 11224
    invoke-virtual {p1}, Landroid/app/ActivityOptions;->getAnimationType()I

    move-result v0

    const/16 v1, 0xa

    if-ne v0, v1, :cond_1

    .line 11225
    invoke-virtual {p1}, Landroid/app/ActivityOptions;->getCustomInPlaceResId()I

    move-result v0

    if-eqz v0, :cond_1

    .line 11229
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mWindowManager:Lcom/android/server/wm/WindowManagerService;

    const/16 v1, 0x11

    const/4 v2, 0x0

    invoke-virtual {v0, v1, v2}, Lcom/android/server/wm/WindowManagerService;->prepareAppTransition(IZ)V

    .line 11230
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mWindowManager:Lcom/android/server/wm/WindowManagerService;

    invoke-virtual {p1}, Landroid/app/ActivityOptions;->getPackageName()Ljava/lang/String;

    move-result-object v1

    .line 11231
    invoke-virtual {p1}, Landroid/app/ActivityOptions;->getCustomInPlaceResId()I

    move-result p1

    .line 11230
    invoke-virtual {v0, v1, p1}, Lcom/android/server/wm/WindowManagerService;->overridePendingAppTransitionInPlace(Ljava/lang/String;I)V

    .line 11232
    iget-object p1, p0, Lcom/android/server/am/ActivityManagerService;->mWindowManager:Lcom/android/server/wm/WindowManagerService;

    invoke-virtual {p1}, Lcom/android/server/wm/WindowManagerService;->executeAppTransition()V

    .line 11233
    return-void

    .line 11226
    :cond_1
    new-instance p1, Ljava/lang/IllegalArgumentException;

    const-string v0, "Expected in-place ActivityOption with valid animation"

    invoke-direct {p1, v0}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw p1
.end method

.method public startInstrumentation(Landroid/content/ComponentName;Ljava/lang/String;ILandroid/os/Bundle;Landroid/app/IInstrumentationWatcher;Landroid/app/IUiAutomationConnection;ILjava/lang/String;)Z
    .locals 22

    move-object/from16 v11, p0

    move-object/from16 v1, p1

    move-object/from16 v2, p4

    move-object/from16 v3, p5

    .line 22376
    const-string/jumbo v0, "startInstrumentation"

    invoke-virtual {v11, v0}, Lcom/android/server/am/ActivityManagerService;->enforceNotIsolatedCaller(Ljava/lang/String;)V

    .line 22377
    iget-object v12, v11, Lcom/android/server/am/ActivityManagerService;->mUserController:Lcom/android/server/am/UserController;

    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result v13

    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v14

    const-string/jumbo v18, "startInstrumentation"

    const/16 v16, 0x0

    const/16 v17, 0x2

    const/16 v19, 0x0

    move/from16 v15, p7

    invoke-virtual/range {v12 .. v19}, Lcom/android/server/am/UserController;->handleIncomingUser(IIIZILjava/lang/String;Ljava/lang/String;)I

    move-result v12

    .line 22380
    if-eqz v2, :cond_1

    invoke-virtual/range {p4 .. p4}, Landroid/os/Bundle;->hasFileDescriptors()Z

    move-result v0

    if-nez v0, :cond_0

    goto :goto_0

    .line 22381
    :cond_0
    new-instance v0, Ljava/lang/IllegalArgumentException;

    const-string v1, "File descriptors passed in Bundle"

    invoke-direct {v0, v1}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v0

    .line 22384
    :cond_1
    :goto_0
    monitor-enter p0

    :try_start_0
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 22385
    nop

    .line 22386
    nop

    .line 22388
    const/4 v4, 0x0

    :try_start_1
    iget-object v0, v11, Lcom/android/server/am/ActivityManagerService;->mContext:Landroid/content/Context;

    invoke-virtual {v0}, Landroid/content/Context;->getPackageManager()Landroid/content/pm/PackageManager;

    move-result-object v0

    const/16 v5, 0x400

    invoke-virtual {v0, v1, v5}, Landroid/content/pm/PackageManager;->getInstrumentationInfo(Landroid/content/ComponentName;I)Landroid/content/pm/InstrumentationInfo;

    move-result-object v6
    :try_end_1
    .catch Landroid/content/pm/PackageManager$NameNotFoundException; {:try_start_1 .. :try_end_1} :catch_3
    .catch Landroid/os/RemoteException; {:try_start_1 .. :try_end_1} :catch_2
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 22390
    :try_start_2
    invoke-static {}, Landroid/app/AppGlobals;->getPackageManager()Landroid/content/pm/IPackageManager;

    move-result-object v0

    iget-object v7, v6, Landroid/content/pm/InstrumentationInfo;->targetPackage:Ljava/lang/String;

    invoke-interface {v0, v7, v5, v12}, Landroid/content/pm/IPackageManager;->getApplicationInfo(Ljava/lang/String;II)Landroid/content/pm/ApplicationInfo;

    move-result-object v0
    :try_end_2
    .catch Landroid/content/pm/PackageManager$NameNotFoundException; {:try_start_2 .. :try_end_2} :catch_1
    .catch Landroid/os/RemoteException; {:try_start_2 .. :try_end_2} :catch_0
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    .line 22394
    nop

    .line 22395
    move-object v13, v0

    goto :goto_4

    .line 22393
    :catch_0
    move-exception v0

    goto :goto_1

    .line 22392
    :catch_1
    move-exception v0

    goto :goto_2

    .line 22393
    :catch_2
    move-exception v0

    move-object v6, v4

    :goto_1
    goto :goto_3

    .line 22392
    :catch_3
    move-exception v0

    move-object v6, v4

    .line 22394
    :goto_2
    nop

    .line 22395
    :goto_3
    move-object v13, v4

    :goto_4
    move-object v0, v6

    const/4 v14, 0x0

    if-nez v0, :cond_2

    .line 22396
    :try_start_3
    new-instance v0, Ljava/lang/StringBuilder;

    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V

    const-string v2, "Unable to find instrumentation info for: "

    invoke-virtual {v0, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    invoke-direct {v11, v3, v1, v0}, Lcom/android/server/am/ActivityManagerService;->reportStartInstrumentationFailureLocked(Landroid/app/IInstrumentationWatcher;Landroid/content/ComponentName;Ljava/lang/String;)V

    .line 22398
    monitor-exit p0
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    return v14

    .line 22400
    :cond_2
    if-nez v13, :cond_3

    .line 22401
    :try_start_4
    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    const-string v4, "Unable to find instrumentation target package: "

    invoke-virtual {v2, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget-object v0, v0, Landroid/content/pm/InstrumentationInfo;->targetPackage:Ljava/lang/String;

    invoke-virtual {v2, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    invoke-direct {v11, v3, v1, v0}, Lcom/android/server/am/ActivityManagerService;->reportStartInstrumentationFailureLocked(Landroid/app/IInstrumentationWatcher;Landroid/content/ComponentName;Ljava/lang/String;)V

    .line 22403
    monitor-exit p0
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    return v14

    .line 22405
    :cond_3
    :try_start_5
    invoke-virtual {v13}, Landroid/content/pm/ApplicationInfo;->hasCode()Z

    move-result v4

    if-nez v4, :cond_4

    .line 22406
    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    const-string v4, "Instrumentation target has no code: "

    invoke-virtual {v2, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget-object v0, v0, Landroid/content/pm/InstrumentationInfo;->targetPackage:Ljava/lang/String;

    invoke-virtual {v2, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    invoke-direct {v11, v3, v1, v0}, Lcom/android/server/am/ActivityManagerService;->reportStartInstrumentationFailureLocked(Landroid/app/IInstrumentationWatcher;Landroid/content/ComponentName;Ljava/lang/String;)V

    .line 22408
    monitor-exit p0
    :try_end_5
    .catchall {:try_start_5 .. :try_end_5} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    return v14

    .line 22411
    :cond_4
    :try_start_6
    iget-object v4, v11, Lcom/android/server/am/ActivityManagerService;->mContext:Landroid/content/Context;

    invoke-virtual {v4}, Landroid/content/Context;->getPackageManager()Landroid/content/pm/PackageManager;

    move-result-object v4

    iget-object v5, v0, Landroid/content/pm/InstrumentationInfo;->targetPackage:Ljava/lang/String;

    iget-object v6, v0, Landroid/content/pm/InstrumentationInfo;->packageName:Ljava/lang/String;

    invoke-virtual {v4, v5, v6}, Landroid/content/pm/PackageManager;->checkSignatures(Ljava/lang/String;Ljava/lang/String;)I

    move-result v4

    .line 22413
    if-gez v4, :cond_6

    const/4 v5, -0x1

    if-ne v4, v5, :cond_5

    goto :goto_5

    .line 22414
    :cond_5
    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    const-string v4, "Permission Denial: starting instrumentation "

    invoke-virtual {v2, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v2, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    const-string v4, " from pid="

    invoke-virtual {v2, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 22416
    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result v4

    invoke-virtual {v2, v4}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v4, ", uid="

    invoke-virtual {v2, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 22417
    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result v4

    invoke-virtual {v2, v4}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v4, " not allowed because package "

    invoke-virtual {v2, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget-object v4, v0, Landroid/content/pm/InstrumentationInfo;->packageName:Ljava/lang/String;

    invoke-virtual {v2, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v4, " does not have a signature matching the target "

    invoke-virtual {v2, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget-object v0, v0, Landroid/content/pm/InstrumentationInfo;->targetPackage:Ljava/lang/String;

    invoke-virtual {v2, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    .line 22421
    invoke-direct {v11, v3, v1, v0}, Lcom/android/server/am/ActivityManagerService;->reportStartInstrumentationFailureLocked(Landroid/app/IInstrumentationWatcher;Landroid/content/ComponentName;Ljava/lang/String;)V

    .line 22422
    new-instance v1, Ljava/lang/SecurityException;

    invoke-direct {v1, v0}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v1

    .line 22425
    :cond_6
    :goto_5
    new-instance v15, Lcom/android/server/am/ActiveInstrumentation;

    invoke-direct {v15, v11}, Lcom/android/server/am/ActiveInstrumentation;-><init>(Lcom/android/server/am/ActivityManagerService;)V

    .line 22426
    iput-object v1, v15, Lcom/android/server/am/ActiveInstrumentation;->mClass:Landroid/content/ComponentName;

    .line 22427
    iget-object v4, v13, Landroid/content/pm/ApplicationInfo;->processName:Ljava/lang/String;

    .line 22428
    iget-object v5, v0, Landroid/content/pm/InstrumentationInfo;->targetProcesses:Ljava/lang/String;

    const/4 v10, 0x1

    if-nez v5, :cond_7

    .line 22429
    new-array v5, v10, [Ljava/lang/String;

    iget-object v6, v13, Landroid/content/pm/ApplicationInfo;->processName:Ljava/lang/String;

    aput-object v6, v5, v14

    iput-object v5, v15, Lcom/android/server/am/ActiveInstrumentation;->mTargetProcesses:[Ljava/lang/String;

    goto :goto_6

    .line 22430
    :cond_7
    iget-object v5, v0, Landroid/content/pm/InstrumentationInfo;->targetProcesses:Ljava/lang/String;

    const-string v6, "*"

    invoke-virtual {v5, v6}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v5

    if-eqz v5, :cond_8

    .line 22431
    new-array v5, v14, [Ljava/lang/String;

    iput-object v5, v15, Lcom/android/server/am/ActiveInstrumentation;->mTargetProcesses:[Ljava/lang/String;

    .line 22436
    :goto_6
    move-object/from16 v16, v4

    goto :goto_7

    .line 22433
    :cond_8
    iget-object v4, v0, Landroid/content/pm/InstrumentationInfo;->targetProcesses:Ljava/lang/String;

    const-string v5, ","

    invoke-virtual {v4, v5}, Ljava/lang/String;->split(Ljava/lang/String;)[Ljava/lang/String;

    move-result-object v4

    iput-object v4, v15, Lcom/android/server/am/ActiveInstrumentation;->mTargetProcesses:[Ljava/lang/String;

    .line 22434
    iget-object v4, v15, Lcom/android/server/am/ActiveInstrumentation;->mTargetProcesses:[Ljava/lang/String;

    aget-object v4, v4, v14

    goto :goto_6

    .line 22436
    :goto_7
    iput-object v13, v15, Lcom/android/server/am/ActiveInstrumentation;->mTargetInfo:Landroid/content/pm/ApplicationInfo;

    .line 22437
    move-object/from16 v4, p2

    iput-object v4, v15, Lcom/android/server/am/ActiveInstrumentation;->mProfileFile:Ljava/lang/String;

    .line 22438
    iput-object v2, v15, Lcom/android/server/am/ActiveInstrumentation;->mArguments:Landroid/os/Bundle;

    .line 22439
    iput-object v3, v15, Lcom/android/server/am/ActiveInstrumentation;->mWatcher:Landroid/app/IInstrumentationWatcher;

    .line 22440
    move-object/from16 v2, p6

    iput-object v2, v15, Lcom/android/server/am/ActiveInstrumentation;->mUiAutomationConnection:Landroid/app/IUiAutomationConnection;

    .line 22441
    iput-object v1, v15, Lcom/android/server/am/ActiveInstrumentation;->mResultClass:Landroid/content/ComponentName;

    .line 22443
    and-int/lit8 v1, p3, 0x1

    if-eqz v1, :cond_9

    .line 22445
    move/from16 v17, v10

    goto :goto_8

    .line 22443
    :cond_9
    nop

    .line 22445
    move/from16 v17, v14

    :goto_8
    if-eqz v17, :cond_a

    .line 22446
    const-string v1, "android.permission.DISABLE_HIDDEN_API_CHECKS"

    const-string v2, "disable hidden API checks"

    invoke-virtual {v11, v1, v2}, Lcom/android/server/am/ActivityManagerService;->enforceCallingPermission(Ljava/lang/String;Ljava/lang/String;)V

    .line 22450
    :cond_a
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v8

    .line 22452
    iget-object v2, v0, Landroid/content/pm/InstrumentationInfo;->targetPackage:Ljava/lang/String;

    const/4 v3, -0x1

    const/4 v4, 0x1

    const/4 v5, 0x0

    const/4 v6, 0x1

    const/4 v7, 0x1

    const/16 v18, 0x0

    const-string/jumbo v19, "start instr"

    move-object v1, v11

    move-wide/from16 v20, v8

    move/from16 v8, v18

    move v9, v12

    move/from16 v18, v10

    move-object/from16 v10, v19

    invoke-virtual/range {v1 .. v10}, Lcom/android/server/am/ActivityManagerService;->forceStopPackageLocked(Ljava/lang/String;IZZZZZILjava/lang/String;)Z

    .line 22455
    iget-object v1, v11, Lcom/android/server/am/ActivityManagerService;->mUsageStatsService:Landroid/app/usage/UsageStatsManagerInternal;

    if-eqz v1, :cond_b

    .line 22456
    iget-object v1, v11, Lcom/android/server/am/ActivityManagerService;->mUsageStatsService:Landroid/app/usage/UsageStatsManagerInternal;

    iget-object v0, v0, Landroid/content/pm/InstrumentationInfo;->targetPackage:Ljava/lang/String;

    const/4 v2, 0x6

    invoke-virtual {v1, v0, v12, v2}, Landroid/app/usage/UsageStatsManagerInternal;->reportEvent(Ljava/lang/String;II)V

    .line 22460
    :cond_b
    const/4 v4, 0x0

    move-object v1, v11

    move-object v2, v13

    move-object/from16 v3, v16

    move/from16 v5, v17

    move-object/from16 v6, p8

    invoke-virtual/range {v1 .. v6}, Lcom/android/server/am/ActivityManagerService;->addAppLocked(Landroid/content/pm/ApplicationInfo;Ljava/lang/String;ZZLjava/lang/String;)Lcom/android/server/am/ProcessRecord;

    move-result-object v0

    .line 22462
    iput-object v15, v0, Lcom/android/server/am/ProcessRecord;->instr:Lcom/android/server/am/ActiveInstrumentation;

    .line 22463
    iput-boolean v14, v15, Lcom/android/server/am/ActiveInstrumentation;->mFinished:Z

    .line 22464
    iget-object v1, v15, Lcom/android/server/am/ActiveInstrumentation;->mRunningProcesses:Ljava/util/ArrayList;

    invoke-virtual {v1, v0}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    .line 22465
    iget-object v0, v11, Lcom/android/server/am/ActivityManagerService;->mActiveInstrumentation:Ljava/util/ArrayList;

    invoke-virtual {v0, v15}, Ljava/util/ArrayList;->contains(Ljava/lang/Object;)Z

    move-result v0

    if-nez v0, :cond_c

    .line 22466
    iget-object v0, v11, Lcom/android/server/am/ActivityManagerService;->mActiveInstrumentation:Ljava/util/ArrayList;

    invoke-virtual {v0, v15}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    .line 22468
    :cond_c
    move-wide/from16 v0, v20

    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 22469
    monitor-exit p0
    :try_end_6
    .catchall {:try_start_6 .. :try_end_6} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    .line 22471
    return v18

    .line 22469
    :catchall_0
    move-exception v0

    :try_start_7
    monitor-exit p0
    :try_end_7
    .catchall {:try_start_7 .. :try_end_7} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw v0
.end method

.method startIsolatedProcess(Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;ILjava/lang/Runnable;)Z
    .locals 17

    .line 4151
    monitor-enter p0

    :try_start_0
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    .line 4152
    new-instance v3, Landroid/content/pm/ApplicationInfo;

    invoke-direct {v3}, Landroid/content/pm/ApplicationInfo;-><init>()V

    .line 4161
    const/16 v0, 0x3e8

    iput v0, v3, Landroid/content/pm/ApplicationInfo;->uid:I

    .line 4162
    move-object/from16 v0, p3

    iput-object v0, v3, Landroid/content/pm/ApplicationInfo;->processName:Ljava/lang/String;

    .line 4163
    move-object/from16 v13, p1

    iput-object v13, v3, Landroid/content/pm/ApplicationInfo;->className:Ljava/lang/String;

    .line 4164
    const-string v1, "android"

    iput-object v1, v3, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;

    .line 4165
    const-string v1, ":complete"

    iput-object v1, v3, Landroid/content/pm/ApplicationInfo;->seInfoUser:Ljava/lang/String;

    .line 4166
    sget v1, Landroid/os/Build$VERSION;->SDK_INT:I

    iput v1, v3, Landroid/content/pm/ApplicationInfo;->targetSdkVersion:I

    .line 4167
    const/4 v4, 0x0

    const/4 v5, 0x0

    const-string v6, ""

    const/4 v7, 0x0

    const/4 v8, 0x1

    const/4 v9, 0x1

    const/4 v11, 0x1

    move-object/from16 v1, p0

    move-object v2, v0

    move/from16 v10, p5

    move-object/from16 v12, p4

    move-object/from16 v14, p2

    move-object/from16 v15, p6

    invoke-virtual/range {v1 .. v15}, Lcom/android/server/am/ActivityManagerService;->startProcessLocked(Ljava/lang/String;Landroid/content/pm/ApplicationInfo;ZILjava/lang/String;Landroid/content/ComponentName;ZZIZLjava/lang/String;Ljava/lang/String;[Ljava/lang/String;Ljava/lang/Runnable;)Lcom/android/server/am/ProcessRecord;

    move-result-object v0

    .line 4172
    if-eqz v0, :cond_0

    const/4 v0, 0x1

    goto :goto_0

    :cond_0
    const/4 v0, 0x0

    :goto_0
    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    return v0

    .line 4173
    :catchall_0
    move-exception v0

    :try_start_1
    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw v0
.end method

.method public startLocalVoiceInteraction(Landroid/os/IBinder;Landroid/os/Bundle;)V
    .locals 2
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Landroid/os/RemoteException;
        }
    .end annotation

    .line 5555
    const-string v0, "ActivityManager"

    const-string v1, "Activity tried to startVoiceInteraction"

    invoke-static {v0, v1}, Landroid/util/Slog;->i(Ljava/lang/String;Ljava/lang/String;)I

    .line 5556
    monitor-enter p0

    :try_start_0
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    .line 5557
    invoke-virtual {p0}, Lcom/android/server/am/ActivityManagerService;->getFocusedStack()Lcom/android/server/am/ActivityStack;

    move-result-object v0

    invoke-virtual {v0}, Lcom/android/server/am/ActivityStack;->getTopActivity()Lcom/android/server/am/ActivityRecord;

    move-result-object v0

    .line 5558
    invoke-static {p1}, Lcom/android/server/am/ActivityRecord;->forTokenLocked(Landroid/os/IBinder;)Lcom/android/server/am/ActivityRecord;

    move-result-object v1

    if-ne v1, v0, :cond_3

    .line 5561
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mRunningVoice:Landroid/service/voice/IVoiceInteractionSession;

    if-nez v1, :cond_2

    invoke-virtual {v0}, Lcom/android/server/am/ActivityRecord;->getTask()Lcom/android/server/am/TaskRecord;

    move-result-object v1

    iget-object v1, v1, Lcom/android/server/am/TaskRecord;->voiceSession:Landroid/service/voice/IVoiceInteractionSession;

    if-nez v1, :cond_2

    iget-object v1, v0, Lcom/android/server/am/ActivityRecord;->voiceSession:Landroid/service/voice/IVoiceInteractionSession;

    if-eqz v1, :cond_0

    goto :goto_0

    .line 5566
    :cond_0
    iget-boolean v1, v0, Lcom/android/server/am/ActivityRecord;->pendingVoiceInteractionStart:Z

    if-eqz v1, :cond_1

    .line 5567
    const-string p1, "ActivityManager"

    const-string p2, "Pending start of voice interaction already."

    invoke-static {p1, p2}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 5568
    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    return-void

    .line 5570
    :cond_1
    const/4 v1, 0x1

    :try_start_1
    iput-boolean v1, v0, Lcom/android/server/am/ActivityRecord;->pendingVoiceInteractionStart:Z

    .line 5571
    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    .line 5572
    const-class v0, Landroid/service/voice/VoiceInteractionManagerInternal;

    invoke-static {v0}, Lcom/android/server/LocalServices;->getService(Ljava/lang/Class;)Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Landroid/service/voice/VoiceInteractionManagerInternal;

    .line 5573
    invoke-virtual {v0, p1, p2}, Landroid/service/voice/VoiceInteractionManagerInternal;->startLocalVoiceInteraction(Landroid/os/IBinder;Landroid/os/Bundle;)V

    .line 5574
    return-void

    .line 5563
    :cond_2
    :goto_0
    :try_start_2
    const-string p1, "ActivityManager"

    const-string p2, "Already in a voice interaction, cannot start new voice interaction"

    invoke-static {p1, p2}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 5564
    monitor-exit p0
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    return-void

    .line 5559
    :cond_3
    :try_start_3
    new-instance p1, Ljava/lang/SecurityException;

    const-string p2, "Only focused activity can call startVoiceInteraction"

    invoke-direct {p1, p2}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw p1

    .line 5571
    :catchall_0
    move-exception p1

    monitor-exit p0
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw p1
.end method

.method public startLockTaskModeByToken(Landroid/os/IBinder;)V
    .locals 1

    .line 11948
    monitor-enter p0

    :try_start_0
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    .line 11949
    invoke-static {p1}, Lcom/android/server/am/ActivityRecord;->forTokenLocked(Landroid/os/IBinder;)Lcom/android/server/am/ActivityRecord;

    move-result-object p1

    .line 11950
    if-nez p1, :cond_0

    .line 11951
    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    return-void

    .line 11953
    :cond_0
    :try_start_1
    invoke-virtual {p1}, Lcom/android/server/am/ActivityRecord;->getTask()Lcom/android/server/am/TaskRecord;

    move-result-object p1

    const/4 v0, 0x0

    invoke-direct {p0, p1, v0}, Lcom/android/server/am/ActivityManagerService;->startLockTaskModeLocked(Lcom/android/server/am/TaskRecord;Z)V

    .line 11954
    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    .line 11955
    return-void

    .line 11954
    :catchall_0
    move-exception p1

    :try_start_2
    monitor-exit p0
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw p1
.end method

.method public startNextMatchingActivity(Landroid/os/IBinder;Landroid/content/Intent;Landroid/os/Bundle;)Z
    .locals 12

    .line 5630
    const/4 v0, 0x1

    if-eqz p2, :cond_1

    invoke-virtual {p2}, Landroid/content/Intent;->hasFileDescriptors()Z

    move-result v1

    if-eq v1, v0, :cond_0

    goto :goto_0

    .line 5631
    :cond_0
    new-instance p1, Ljava/lang/IllegalArgumentException;

    const-string p2, "File descriptors passed in Intent"

    invoke-direct {p1, p2}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw p1

    .line 5633
    :cond_1
    :goto_0
    invoke-static {p3}, Lcom/android/server/am/SafeActivityOptions;->fromBundle(Landroid/os/Bundle;)Lcom/android/server/am/SafeActivityOptions;

    move-result-object p3

    .line 5635
    monitor-enter p0

    :try_start_0
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    .line 5636
    invoke-static {p1}, Lcom/android/server/am/ActivityRecord;->isInStackLocked(Landroid/os/IBinder;)Lcom/android/server/am/ActivityRecord;

    move-result-object p1

    .line 5637
    const/4 v1, 0x0

    if-nez p1, :cond_2

    .line 5638
    invoke-static {p3}, Lcom/android/server/am/SafeActivityOptions;->abort(Lcom/android/server/am/SafeActivityOptions;)V

    .line 5639
    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    return v1

    .line 5641
    :cond_2
    :try_start_1
    iget-object v2, p1, Lcom/android/server/am/ActivityRecord;->app:Lcom/android/server/am/ProcessRecord;

    if-eqz v2, :cond_10

    iget-object v2, p1, Lcom/android/server/am/ActivityRecord;->app:Lcom/android/server/am/ProcessRecord;

    iget-object v2, v2, Lcom/android/server/am/ProcessRecord;->thread:Landroid/app/IApplicationThread;

    if-nez v2, :cond_3

    goto/16 :goto_8

    .line 5646
    :cond_3
    new-instance v2, Landroid/content/Intent;

    invoke-direct {v2, p2}, Landroid/content/Intent;-><init>(Landroid/content/Intent;)V

    .line 5648
    iget-object p2, p1, Lcom/android/server/am/ActivityRecord;->intent:Landroid/content/Intent;

    invoke-virtual {p2}, Landroid/content/Intent;->getData()Landroid/net/Uri;

    move-result-object p2

    iget-object v3, p1, Lcom/android/server/am/ActivityRecord;->intent:Landroid/content/Intent;

    invoke-virtual {v3}, Landroid/content/Intent;->getType()Ljava/lang/String;

    move-result-object v3

    invoke-virtual {v2, p2, v3}, Landroid/content/Intent;->setDataAndType(Landroid/net/Uri;Ljava/lang/String;)Landroid/content/Intent;

    .line 5650
    const/4 p2, 0x0

    invoke-virtual {v2, p2}, Landroid/content/Intent;->setComponent(Landroid/content/ComponentName;)Landroid/content/Intent;

    .line 5652
    invoke-virtual {v2}, Landroid/content/Intent;->getFlags()I

    move-result v3
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    and-int/lit8 v3, v3, 0x8

    if-eqz v3, :cond_4

    .line 5654
    move v3, v0

    goto :goto_1

    .line 5652
    :cond_4
    nop

    .line 5654
    move v3, v1

    .line 5657
    :goto_1
    :try_start_2
    invoke-static {}, Landroid/app/AppGlobals;->getPackageManager()Landroid/content/pm/IPackageManager;

    move-result-object v4

    iget-object v5, p1, Lcom/android/server/am/ActivityRecord;->resolvedType:Ljava/lang/String;

    const v6, 0x10400

    .line 5660
    invoke-static {}, Landroid/os/UserHandle;->getCallingUserId()I

    move-result v7

    .line 5657
    invoke-interface {v4, v2, v5, v6, v7}, Landroid/content/pm/IPackageManager;->queryIntentActivities(Landroid/content/Intent;Ljava/lang/String;II)Landroid/content/pm/ParceledListSlice;

    move-result-object v4

    .line 5660
    invoke-virtual {v4}, Landroid/content/pm/ParceledListSlice;->getList()Ljava/util/List;

    move-result-object v4

    .line 5663
    if-eqz v4, :cond_5

    invoke-interface {v4}, Ljava/util/List;->size()I

    move-result v5

    goto :goto_2

    .line 5664
    :cond_5
    move v5, v1

    :goto_2
    move v6, v1

    :goto_3
    if-ge v6, v5, :cond_9

    .line 5665
    invoke-interface {v4, v6}, Ljava/util/List;->get(I)Ljava/lang/Object;

    move-result-object v7

    check-cast v7, Landroid/content/pm/ResolveInfo;

    .line 5666
    iget-object v8, v7, Landroid/content/pm/ResolveInfo;->activityInfo:Landroid/content/pm/ActivityInfo;

    iget-object v8, v8, Landroid/content/pm/ActivityInfo;->packageName:Ljava/lang/String;

    iget-object v9, p1, Lcom/android/server/am/ActivityRecord;->packageName:Ljava/lang/String;

    invoke-virtual {v8, v9}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v8

    if-eqz v8, :cond_8

    iget-object v7, v7, Landroid/content/pm/ResolveInfo;->activityInfo:Landroid/content/pm/ActivityInfo;

    iget-object v7, v7, Landroid/content/pm/ActivityInfo;->name:Ljava/lang/String;

    iget-object v8, p1, Lcom/android/server/am/ActivityRecord;->info:Landroid/content/pm/ActivityInfo;

    iget-object v8, v8, Landroid/content/pm/ActivityInfo;->name:Ljava/lang/String;

    .line 5667
    invoke-virtual {v7, v8}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v7

    if-eqz v7, :cond_8

    .line 5670
    add-int/2addr v6, v0

    .line 5671
    if-ge v6, v5, :cond_6

    .line 5672
    invoke-interface {v4, v6}, Ljava/util/List;->get(I)Ljava/lang/Object;

    move-result-object v4

    check-cast v4, Landroid/content/pm/ResolveInfo;

    iget-object v4, v4, Landroid/content/pm/ResolveInfo;->activityInfo:Landroid/content/pm/ActivityInfo;
    :try_end_2
    .catch Landroid/os/RemoteException; {:try_start_2 .. :try_end_2} :catch_1
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    goto :goto_4

    .line 5674
    :cond_6
    move-object v4, p2

    :goto_4
    if-eqz v3, :cond_a

    .line 5675
    :try_start_3
    const-string v5, "ActivityManager"

    new-instance v6, Ljava/lang/StringBuilder;

    invoke-direct {v6}, Ljava/lang/StringBuilder;-><init>()V

    const-string v7, "Next matching activity: found current "

    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget-object v7, p1, Lcom/android/server/am/ActivityRecord;->packageName:Ljava/lang/String;

    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v7, "/"

    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget-object v7, p1, Lcom/android/server/am/ActivityRecord;->info:Landroid/content/pm/ActivityInfo;

    iget-object v7, v7, Landroid/content/pm/ActivityInfo;->name:Ljava/lang/String;

    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v6}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v6

    invoke-static {v5, v6}, Landroid/util/Slog;->v(Ljava/lang/String;Ljava/lang/String;)I

    .line 5677
    const-string v5, "ActivityManager"

    new-instance v6, Ljava/lang/StringBuilder;

    invoke-direct {v6}, Ljava/lang/StringBuilder;-><init>()V

    const-string v7, "Next matching activity: next is "

    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    if-nez v4, :cond_7

    .line 5678
    const-string v7, "null"

    goto :goto_5

    :cond_7
    new-instance v7, Ljava/lang/StringBuilder;

    invoke-direct {v7}, Ljava/lang/StringBuilder;-><init>()V

    iget-object v8, v4, Landroid/content/pm/ActivityInfo;->packageName:Ljava/lang/String;

    invoke-virtual {v7, v8}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v8, "/"

    invoke-virtual {v7, v8}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget-object v8, v4, Landroid/content/pm/ActivityInfo;->name:Ljava/lang/String;

    invoke-virtual {v7, v8}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v7}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v7

    :goto_5
    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v6}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v6

    .line 5677
    invoke-static {v5, v6}, Landroid/util/Slog;->v(Ljava/lang/String;Ljava/lang/String;)I
    :try_end_3
    .catch Landroid/os/RemoteException; {:try_start_3 .. :try_end_3} :catch_0
    .catchall {:try_start_3 .. :try_end_3} :catchall_0

    goto :goto_6

    .line 5683
    :catch_0
    move-exception v5

    goto :goto_7

    .line 5664
    :cond_8
    add-int/lit8 v6, v6, 0x1

    goto/16 :goto_3

    .line 5684
    :cond_9
    move-object v4, p2

    :cond_a
    :goto_6
    goto :goto_7

    .line 5683
    :catch_1
    move-exception v4

    move-object v4, p2

    .line 5686
    :goto_7
    if-nez v4, :cond_c

    .line 5688
    :try_start_4
    invoke-static {p3}, Lcom/android/server/am/SafeActivityOptions;->abort(Lcom/android/server/am/SafeActivityOptions;)V

    .line 5689
    if-eqz v3, :cond_b

    const-string p1, "ActivityManager"

    const-string p2, "Next matching activity: nothing found"

    invoke-static {p1, p2}, Landroid/util/Slog;->d(Ljava/lang/String;Ljava/lang/String;)I

    .line 5690
    :cond_b
    monitor-exit p0
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    return v1

    .line 5693
    :cond_c
    :try_start_5
    new-instance v3, Landroid/content/ComponentName;

    iget-object v5, v4, Landroid/content/pm/ActivityInfo;->applicationInfo:Landroid/content/pm/ApplicationInfo;

    iget-object v5, v5, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;

    iget-object v6, v4, Landroid/content/pm/ActivityInfo;->name:Ljava/lang/String;

    invoke-direct {v3, v5, v6}, Landroid/content/ComponentName;-><init>(Ljava/lang/String;Ljava/lang/String;)V

    invoke-virtual {v2, v3}, Landroid/content/Intent;->setComponent(Landroid/content/ComponentName;)Landroid/content/Intent;

    .line 5695
    invoke-virtual {v2}, Landroid/content/Intent;->getFlags()I

    move-result v3

    const v5, -0x1e000001

    and-int/2addr v3, v5

    invoke-virtual {v2, v3}, Landroid/content/Intent;->setFlags(I)Landroid/content/Intent;

    .line 5706
    iget-boolean v3, p1, Lcom/android/server/am/ActivityRecord;->finishing:Z

    .line 5707
    iput-boolean v0, p1, Lcom/android/server/am/ActivityRecord;->finishing:Z

    .line 5710
    iget-object v5, p1, Lcom/android/server/am/ActivityRecord;->resultTo:Lcom/android/server/am/ActivityRecord;

    .line 5711
    iget-object v6, p1, Lcom/android/server/am/ActivityRecord;->resultWho:Ljava/lang/String;

    .line 5712
    iget v7, p1, Lcom/android/server/am/ActivityRecord;->requestCode:I

    .line 5713
    iput-object p2, p1, Lcom/android/server/am/ActivityRecord;->resultTo:Lcom/android/server/am/ActivityRecord;

    .line 5714
    if-eqz v5, :cond_d

    .line 5715
    invoke-virtual {v5, p1, v6, v7}, Lcom/android/server/am/ActivityRecord;->removeResultsLocked(Lcom/android/server/am/ActivityRecord;Ljava/lang/String;I)V

    .line 5718
    :cond_d
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v8

    .line 5720
    iget-object v10, p0, Lcom/android/server/am/ActivityManagerService;->mActivityStartController:Lcom/android/server/am/ActivityStartController;

    const-string/jumbo v11, "startNextMatchingActivity"

    .line 5721
    invoke-virtual {v10, v2, v11}, Lcom/android/server/am/ActivityStartController;->obtainStarter(Landroid/content/Intent;Ljava/lang/String;)Lcom/android/server/am/ActivityStarter;

    move-result-object v2

    iget-object v10, p1, Lcom/android/server/am/ActivityRecord;->app:Lcom/android/server/am/ProcessRecord;

    iget-object v10, v10, Lcom/android/server/am/ProcessRecord;->thread:Landroid/app/IApplicationThread;

    .line 5722
    invoke-virtual {v2, v10}, Lcom/android/server/am/ActivityStarter;->setCaller(Landroid/app/IApplicationThread;)Lcom/android/server/am/ActivityStarter;

    move-result-object v2

    iget-object v10, p1, Lcom/android/server/am/ActivityRecord;->resolvedType:Ljava/lang/String;

    .line 5723
    invoke-virtual {v2, v10}, Lcom/android/server/am/ActivityStarter;->setResolvedType(Ljava/lang/String;)Lcom/android/server/am/ActivityStarter;

    move-result-object v2

    .line 5724
    invoke-virtual {v2, v4}, Lcom/android/server/am/ActivityStarter;->setActivityInfo(Landroid/content/pm/ActivityInfo;)Lcom/android/server/am/ActivityStarter;

    move-result-object v2

    .line 5725
    if-eqz v5, :cond_e

    iget-object p2, v5, Lcom/android/server/am/ActivityRecord;->appToken:Landroid/view/IApplicationToken$Stub;

    nop

    :cond_e
    invoke-virtual {v2, p2}, Lcom/android/server/am/ActivityStarter;->setResultTo(Landroid/os/IBinder;)Lcom/android/server/am/ActivityStarter;

    move-result-object p2

    .line 5726
    invoke-virtual {p2, v6}, Lcom/android/server/am/ActivityStarter;->setResultWho(Ljava/lang/String;)Lcom/android/server/am/ActivityStarter;

    move-result-object p2

    .line 5727
    invoke-virtual {p2, v7}, Lcom/android/server/am/ActivityStarter;->setRequestCode(I)Lcom/android/server/am/ActivityStarter;

    move-result-object p2

    .line 5728
    const/4 v2, -0x1

    invoke-virtual {p2, v2}, Lcom/android/server/am/ActivityStarter;->setCallingPid(I)Lcom/android/server/am/ActivityStarter;

    move-result-object p2

    iget v4, p1, Lcom/android/server/am/ActivityRecord;->launchedFromUid:I

    .line 5729
    invoke-virtual {p2, v4}, Lcom/android/server/am/ActivityStarter;->setCallingUid(I)Lcom/android/server/am/ActivityStarter;

    move-result-object p2

    iget-object v4, p1, Lcom/android/server/am/ActivityRecord;->launchedFromPackage:Ljava/lang/String;

    .line 5730
    invoke-virtual {p2, v4}, Lcom/android/server/am/ActivityStarter;->setCallingPackage(Ljava/lang/String;)Lcom/android/server/am/ActivityStarter;

    move-result-object p2

    .line 5731
    invoke-virtual {p2, v2}, Lcom/android/server/am/ActivityStarter;->setRealCallingPid(I)Lcom/android/server/am/ActivityStarter;

    move-result-object p2

    iget v2, p1, Lcom/android/server/am/ActivityRecord;->launchedFromUid:I

    .line 5732
    invoke-virtual {p2, v2}, Lcom/android/server/am/ActivityStarter;->setRealCallingUid(I)Lcom/android/server/am/ActivityStarter;

    move-result-object p2

    .line 5733
    invoke-virtual {p2, p3}, Lcom/android/server/am/ActivityStarter;->setActivityOptions(Lcom/android/server/am/SafeActivityOptions;)Lcom/android/server/am/ActivityStarter;

    move-result-object p2

    .line 5734
    invoke-virtual {p2}, Lcom/android/server/am/ActivityStarter;->execute()I

    move-result p2

    .line 5735
    invoke-static {v8, v9}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 5737
    iput-boolean v3, p1, Lcom/android/server/am/ActivityRecord;->finishing:Z

    .line 5738
    if-eqz p2, :cond_f

    .line 5739
    monitor-exit p0
    :try_end_5
    .catchall {:try_start_5 .. :try_end_5} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    return v1

    .line 5741
    :cond_f
    :try_start_6
    monitor-exit p0
    :try_end_6
    .catchall {:try_start_6 .. :try_end_6} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    return v0

    .line 5643
    :cond_10
    :goto_8
    :try_start_7
    invoke-static {p3}, Lcom/android/server/am/SafeActivityOptions;->abort(Lcom/android/server/am/SafeActivityOptions;)V

    .line 5644
    monitor-exit p0
    :try_end_7
    .catchall {:try_start_7 .. :try_end_7} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    return v1

    .line 5742
    :catchall_0
    move-exception p1

    :try_start_8
    monitor-exit p0
    :try_end_8
    .catchall {:try_start_8 .. :try_end_8} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw p1
.end method

.method public startObservingNativeCrashes()V
    .locals 1

    .line 2898
    new-instance v0, Lcom/android/server/am/NativeCrashListener;

    invoke-direct {v0, p0}, Lcom/android/server/am/NativeCrashListener;-><init>(Lcom/android/server/am/ActivityManagerService;)V

    .line 2899
    invoke-virtual {v0}, Lcom/android/server/am/NativeCrashListener;->start()V

    .line 2900
    return-void
.end method

.method startPersistentApps(I)V
    .locals 3

    .line 13179
    iget v0, p0, Lcom/android/server/am/ActivityManagerService;->mFactoryTest:I

    const/4 v1, 0x1

    if-ne v0, v1, :cond_0

    return-void

    .line 13181
    :cond_0
    monitor-enter p0

    :try_start_0
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    .line 13183
    invoke-static {}, Landroid/app/AppGlobals;->getPackageManager()Landroid/content/pm/IPackageManager;

    move-result-object v0

    const/16 v1, 0x400

    or-int/2addr p1, v1

    .line 13184
    invoke-interface {v0, p1}, Landroid/content/pm/IPackageManager;->getPersistentApplications(I)Landroid/content/pm/ParceledListSlice;

    move-result-object p1

    invoke-virtual {p1}, Landroid/content/pm/ParceledListSlice;->getList()Ljava/util/List;

    move-result-object p1

    .line 13185
    invoke-interface {p1}, Ljava/util/List;->iterator()Ljava/util/Iterator;

    move-result-object p1

    :goto_0
    invoke-interface {p1}, Ljava/util/Iterator;->hasNext()Z

    move-result v0

    if-eqz v0, :cond_2

    invoke-interface {p1}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Landroid/content/pm/ApplicationInfo;

    .line 13186
    const-string v1, "android"

    iget-object v2, v0, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;

    invoke-virtual {v1, v2}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v1

    if-nez v1, :cond_1

    .line 13187
    const/4 v1, 0x0

    const/4 v2, 0x0

    invoke-virtual {p0, v0, v2, v1, v2}, Lcom/android/server/am/ActivityManagerService;->addAppLocked(Landroid/content/pm/ApplicationInfo;Ljava/lang/String;ZLjava/lang/String;)Lcom/android/server/am/ProcessRecord;
    :try_end_0
    .catch Landroid/os/RemoteException; {:try_start_0 .. :try_end_0} :catch_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 13189
    :cond_1
    goto :goto_0

    .line 13191
    :cond_2
    goto :goto_1

    .line 13192
    :catchall_0
    move-exception p1

    goto :goto_2

    .line 13190
    :catch_0
    move-exception p1

    .line 13192
    :goto_1
    :try_start_1
    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    .line 13193
    return-void

    .line 13192
    :goto_2
    :try_start_2
    monitor-exit p0
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw p1
.end method

.method final startProcessLocked(Ljava/lang/String;Landroid/content/pm/ApplicationInfo;ZILjava/lang/String;Landroid/content/ComponentName;ZZIZLjava/lang/String;Ljava/lang/String;[Ljava/lang/String;Ljava/lang/Runnable;)Lcom/android/server/am/ProcessRecord;
    .locals 14
    .annotation build Lcom/android/internal/annotations/GuardedBy;
        value = "this"
    .end annotation

    move-object v0, p0

    move-object v1, p1

    move-object/from16 v2, p2

    move/from16 v3, p8

    .line 4192
    invoke-static {}, Landroid/os/SystemClock;->elapsedRealtime()J

    move-result-wide v4

    .line 4194
    const/4 v6, 0x1

    const/4 v7, 0x0

    if-nez v3, :cond_1

    .line 4195
    iget v8, v2, Landroid/content/pm/ApplicationInfo;->uid:I

    move/from16 v9, p10

    invoke-virtual {v0, v1, v8, v9}, Lcom/android/server/am/ActivityManagerService;->getProcessRecordLocked(Ljava/lang/String;IZ)Lcom/android/server/am/ProcessRecord;

    move-result-object v8

    .line 4196
    const-string/jumbo v9, "startProcess: after getProcessRecord"

    invoke-direct {v0, v4, v5, v9}, Lcom/android/server/am/ActivityManagerService;->checkTime(JLjava/lang/String;)V

    .line 4198
    and-int/lit8 v9, p4, 0x4

    if-eqz v9, :cond_0

    .line 4201
    iget-object v9, v0, Lcom/android/server/am/ActivityManagerService;->mAppErrors:Lcom/android/server/am/AppErrors;

    invoke-virtual {v9, v2}, Lcom/android/server/am/AppErrors;->isBadProcessLocked(Landroid/content/pm/ApplicationInfo;)Z

    move-result v9

    if-eqz v9, :cond_2

    .line 4204
    return-object v7

    .line 4213
    :cond_0
    iget-object v9, v0, Lcom/android/server/am/ActivityManagerService;->mAppErrors:Lcom/android/server/am/AppErrors;

    invoke-virtual {v9, v2}, Lcom/android/server/am/AppErrors;->resetProcessCrashTimeLocked(Landroid/content/pm/ApplicationInfo;)V

    .line 4214
    iget-object v9, v0, Lcom/android/server/am/ActivityManagerService;->mAppErrors:Lcom/android/server/am/AppErrors;

    invoke-virtual {v9, v2}, Lcom/android/server/am/AppErrors;->isBadProcessLocked(Landroid/content/pm/ApplicationInfo;)Z

    move-result v9

    if-eqz v9, :cond_2

    .line 4215
    const/16 v9, 0x7540

    const/4 v10, 0x3

    new-array v10, v10, [Ljava/lang/Object;

    iget v11, v2, Landroid/content/pm/ApplicationInfo;->uid:I

    .line 4216
    invoke-static {v11}, Landroid/os/UserHandle;->getUserId(I)I

    move-result v11

    invoke-static {v11}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v11

    const/4 v12, 0x0

    aput-object v11, v10, v12

    iget v11, v2, Landroid/content/pm/ApplicationInfo;->uid:I

    invoke-static {v11}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v11

    aput-object v11, v10, v6

    const/4 v11, 0x2

    iget-object v13, v2, Landroid/content/pm/ApplicationInfo;->processName:Ljava/lang/String;

    aput-object v13, v10, v11

    .line 4215
    invoke-static {v9, v10}, Landroid/util/EventLog;->writeEvent(I[Ljava/lang/Object;)I

    .line 4218
    iget-object v9, v0, Lcom/android/server/am/ActivityManagerService;->mAppErrors:Lcom/android/server/am/AppErrors;

    invoke-virtual {v9, v2}, Lcom/android/server/am/AppErrors;->clearBadProcessLocked(Landroid/content/pm/ApplicationInfo;)V

    .line 4219
    if-eqz v8, :cond_2

    .line 4220
    iput-boolean v12, v8, Lcom/android/server/am/ProcessRecord;->bad:Z

    goto :goto_0

    .line 4226
    :cond_1
    nop

    .line 4239
    move-object v8, v7

    :cond_2
    :goto_0
    if-eqz v8, :cond_6

    iget v9, v8, Lcom/android/server/am/ProcessRecord;->pid:I

    if-lez v9, :cond_6

    .line 4240
    if-nez p3, :cond_3

    iget-boolean v9, v8, Lcom/android/server/am/ProcessRecord;->killed:Z

    if-eqz v9, :cond_4

    :cond_3
    iget-object v9, v8, Lcom/android/server/am/ProcessRecord;->thread:Landroid/app/IApplicationThread;

    if-nez v9, :cond_5

    .line 4245
    :cond_4
    iget-object v1, v2, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;

    iget v2, v2, Landroid/content/pm/ApplicationInfo;->versionCode:I

    int-to-long v2, v2

    iget-object v6, v0, Lcom/android/server/am/ActivityManagerService;->mProcessStats:Lcom/android/server/am/ProcessStatsService;

    invoke-virtual {v8, v1, v2, v3, v6}, Lcom/android/server/am/ProcessRecord;->addPackage(Ljava/lang/String;JLcom/android/server/am/ProcessStatsService;)Z

    .line 4246
    const-string/jumbo v1, "startProcess: done, added package to proc"

    invoke-direct {v0, v4, v5, v1}, Lcom/android/server/am/ActivityManagerService;->checkTime(JLjava/lang/String;)V

    .line 4247
    return-object v8

    .line 4253
    :cond_5
    const-string/jumbo v9, "startProcess: bad proc running, killing"

    invoke-direct {v0, v4, v5, v9}, Lcom/android/server/am/ActivityManagerService;->checkTime(JLjava/lang/String;)V

    .line 4254
    iget v9, v8, Lcom/android/server/am/ProcessRecord;->uid:I

    iget v10, v8, Lcom/android/server/am/ProcessRecord;->pid:I

    invoke-static {v9, v10}, Lcom/android/server/am/ActivityManagerService;->killProcessGroup(II)V

    .line 4255
    invoke-direct {v0, v8, v6, v6}, Lcom/android/server/am/ActivityManagerService;->handleAppDiedLocked(Lcom/android/server/am/ProcessRecord;ZZ)V

    .line 4256
    const-string/jumbo v6, "startProcess: done killing old proc"

    invoke-direct {v0, v4, v5, v6}, Lcom/android/server/am/ActivityManagerService;->checkTime(JLjava/lang/String;)V

    .line 4259
    :cond_6
    if-eqz p6, :cond_7

    .line 4260
    invoke-virtual/range {p6 .. p6}, Landroid/content/ComponentName;->flattenToShortString()Ljava/lang/String;

    move-result-object v6

    goto :goto_1

    .line 4262
    :cond_7
    move-object v6, v7

    :goto_1
    if-nez v8, :cond_9

    .line 4263
    const-string/jumbo v8, "startProcess: creating new process record"

    invoke-direct {v0, v4, v5, v8}, Lcom/android/server/am/ActivityManagerService;->checkTime(JLjava/lang/String;)V

    .line 4264
    move/from16 v8, p9

    invoke-virtual {v0, v2, v1, v3, v8}, Lcom/android/server/am/ActivityManagerService;->newProcessRecordLocked(Landroid/content/pm/ApplicationInfo;Ljava/lang/String;ZI)Lcom/android/server/am/ProcessRecord;

    move-result-object v8

    .line 4265
    if-nez v8, :cond_8

    .line 4266
    const-string v0, "ActivityManager"

    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    const-string v5, "Failed making new process record for "

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v4, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v1, "/"

    invoke-virtual {v4, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget v1, v2, Landroid/content/pm/ApplicationInfo;->uid:I

    invoke-virtual {v4, v1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v1, " isolated="

    invoke-virtual {v4, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v4, v3}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-static {v0, v1}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 4268
    return-object v7

    .line 4270
    :cond_8
    move-object/from16 v1, p14

    iput-object v1, v8, Lcom/android/server/am/ProcessRecord;->crashHandler:Ljava/lang/Runnable;

    .line 4271
    move-object/from16 v1, p12

    iput-object v1, v8, Lcom/android/server/am/ProcessRecord;->isolatedEntryPoint:Ljava/lang/String;

    .line 4272
    move-object/from16 v1, p13

    iput-object v1, v8, Lcom/android/server/am/ProcessRecord;->isolatedEntryPointArgs:[Ljava/lang/String;

    .line 4273
    const-string/jumbo v1, "startProcess: done creating new process record"

    invoke-direct {v0, v4, v5, v1}, Lcom/android/server/am/ActivityManagerService;->checkTime(JLjava/lang/String;)V

    goto :goto_2

    .line 4276
    :cond_9
    iget-object v1, v2, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;

    iget v3, v2, Landroid/content/pm/ApplicationInfo;->versionCode:I

    int-to-long v9, v3

    iget-object v3, v0, Lcom/android/server/am/ActivityManagerService;->mProcessStats:Lcom/android/server/am/ProcessStatsService;

    invoke-virtual {v8, v1, v9, v10, v3}, Lcom/android/server/am/ProcessRecord;->addPackage(Ljava/lang/String;JLcom/android/server/am/ProcessStatsService;)Z

    .line 4277
    const-string/jumbo v1, "startProcess: added package to existing proc"

    invoke-direct {v0, v4, v5, v1}, Lcom/android/server/am/ActivityManagerService;->checkTime(JLjava/lang/String;)V

    .line 4282
    :goto_2
    iget-boolean v1, v0, Lcom/android/server/am/ActivityManagerService;->mProcessesReady:Z

    if-nez v1, :cond_b

    .line 4283
    invoke-virtual {v0, v2}, Lcom/android/server/am/ActivityManagerService;->isAllowedWhileBooting(Landroid/content/pm/ApplicationInfo;)Z

    move-result v1

    if-nez v1, :cond_b

    if-nez p7, :cond_b

    .line 4285
    iget-object v1, v0, Lcom/android/server/am/ActivityManagerService;->mProcessesOnHold:Ljava/util/ArrayList;

    invoke-virtual {v1, v8}, Ljava/util/ArrayList;->contains(Ljava/lang/Object;)Z

    move-result v1

    if-nez v1, :cond_a

    .line 4286
    iget-object v1, v0, Lcom/android/server/am/ActivityManagerService;->mProcessesOnHold:Ljava/util/ArrayList;

    invoke-virtual {v1, v8}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    .line 4290
    :cond_a
    const-string/jumbo v1, "startProcess: returning with proc on hold"

    invoke-direct {v0, v4, v5, v1}, Lcom/android/server/am/ActivityManagerService;->checkTime(JLjava/lang/String;)V

    .line 4291
    return-object v8

    .line 4294
    :cond_b
    const-string/jumbo v1, "startProcess: stepping in to startProcess"

    invoke-direct {v0, v4, v5, v1}, Lcom/android/server/am/ActivityManagerService;->checkTime(JLjava/lang/String;)V

    .line 4295
    move-object/from16 v1, p5

    move-object/from16 v2, p11

    invoke-direct {v0, v8, v1, v6, v2}, Lcom/android/server/am/ActivityManagerService;->startProcessLocked(Lcom/android/server/am/ProcessRecord;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Z

    move-result v1

    .line 4296
    const-string/jumbo v2, "startProcess: done starting proc!"

    invoke-direct {v0, v4, v5, v2}, Lcom/android/server/am/ActivityManagerService;->checkTime(JLjava/lang/String;)V

    .line 4297
    if-eqz v1, :cond_c

    move-object v7, v8

    nop

    :cond_c
    return-object v7
.end method

.method final startProcessLocked(Ljava/lang/String;Landroid/content/pm/ApplicationInfo;ZILjava/lang/String;Landroid/content/ComponentName;ZZZ)Lcom/android/server/am/ProcessRecord;
    .locals 15
    .annotation build Lcom/android/internal/annotations/GuardedBy;
        value = "this"
    .end annotation

    .line 4181
    const/4 v9, 0x0

    const/4 v11, 0x0

    const/4 v12, 0x0

    const/4 v13, 0x0

    const/4 v14, 0x0

    move-object v0, p0

    move-object/from16 v1, p1

    move-object/from16 v2, p2

    move/from16 v3, p3

    move/from16 v4, p4

    move-object/from16 v5, p5

    move-object/from16 v6, p6

    move/from16 v7, p7

    move/from16 v8, p8

    move/from16 v10, p9

    invoke-virtual/range {v0 .. v14}, Lcom/android/server/am/ActivityManagerService;->startProcessLocked(Ljava/lang/String;Landroid/content/pm/ApplicationInfo;ZILjava/lang/String;Landroid/content/ComponentName;ZZIZLjava/lang/String;Ljava/lang/String;[Ljava/lang/String;Ljava/lang/Runnable;)Lcom/android/server/am/ProcessRecord;

    move-result-object v0

    return-object v0
.end method

.method public startRecentsActivity(Landroid/content/Intent;Landroid/app/IAssistDataReceiver;Landroid/view/IRecentsAnimationRunner;)V
    .locals 13

    move-object v8, p0

    .line 5516
    const-string v0, "android.permission.MANAGE_ACTIVITY_STACKS"

    const-string/jumbo v1, "startRecentsActivity()"

    invoke-virtual {v8, v0, v1}, Lcom/android/server/am/ActivityManagerService;->enforceCallerIsRecentsOrHasPermission(Ljava/lang/String;Ljava/lang/String;)V

    .line 5517
    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result v7

    .line 5518
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v9

    .line 5520
    :try_start_0
    monitor-enter p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_1

    :try_start_1
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    .line 5521
    iget-object v0, v8, Lcom/android/server/am/ActivityManagerService;->mRecentTasks:Lcom/android/server/am/RecentTasks;

    invoke-virtual {v0}, Lcom/android/server/am/RecentTasks;->getRecentsComponent()Landroid/content/ComponentName;

    move-result-object v0

    .line 5522
    iget-object v1, v8, Lcom/android/server/am/ActivityManagerService;->mRecentTasks:Lcom/android/server/am/RecentTasks;

    invoke-virtual {v1}, Lcom/android/server/am/RecentTasks;->getRecentsComponentUid()I

    move-result v11

    .line 5525
    new-instance v12, Lcom/android/server/am/RecentsAnimation;

    iget-object v3, v8, Lcom/android/server/am/ActivityManagerService;->mStackSupervisor:Lcom/android/server/am/ActivityStackSupervisor;

    iget-object v4, v8, Lcom/android/server/am/ActivityManagerService;->mActivityStartController:Lcom/android/server/am/ActivityStartController;

    iget-object v5, v8, Lcom/android/server/am/ActivityManagerService;->mWindowManager:Lcom/android/server/wm/WindowManagerService;

    iget-object v6, v8, Lcom/android/server/am/ActivityManagerService;->mUserController:Lcom/android/server/am/UserController;

    move-object v1, v12

    move-object v2, v8

    invoke-direct/range {v1 .. v7}, Lcom/android/server/am/RecentsAnimation;-><init>(Lcom/android/server/am/ActivityManagerService;Lcom/android/server/am/ActivityStackSupervisor;Lcom/android/server/am/ActivityStartController;Lcom/android/server/wm/WindowManagerService;Lcom/android/server/am/UserController;I)V

    .line 5527
    move-object v1, v12

    move-object v2, p1

    move-object/from16 v3, p3

    move-object v4, v0

    move v5, v11

    move-object v6, p2

    invoke-virtual/range {v1 .. v6}, Lcom/android/server/am/RecentsAnimation;->startRecentsActivity(Landroid/content/Intent;Landroid/view/IRecentsAnimationRunner;Landroid/content/ComponentName;ILandroid/app/IAssistDataReceiver;)V

    .line 5529
    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    :try_start_2
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_1

    .line 5531
    invoke-static {v9, v10}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 5532
    nop

    .line 5533
    return-void

    .line 5529
    :catchall_0
    move-exception v0

    :try_start_3
    monitor-exit p0
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_0

    :try_start_4
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw v0
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_1

    .line 5531
    :catchall_1
    move-exception v0

    invoke-static {v9, v10}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    throw v0
.end method

.method startRunningVoiceLocked(Landroid/service/voice/IVoiceInteractionSession;I)V
    .locals 2
    .annotation build Lcom/android/internal/annotations/GuardedBy;
        value = "this"
    .end annotation

    .line 13694
    const-string v0, "ActivityManager"

    const-string v1, "<<<  startRunningVoiceLocked()"

    invoke-static {v0, v1}, Landroid/util/Slog;->d(Ljava/lang/String;Ljava/lang/String;)I

    .line 13695
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mVoiceWakeLock:Landroid/os/PowerManager$WakeLock;

    new-instance v1, Landroid/os/WorkSource;

    invoke-direct {v1, p2}, Landroid/os/WorkSource;-><init>(I)V

    invoke-virtual {v0, v1}, Landroid/os/PowerManager$WakeLock;->setWorkSource(Landroid/os/WorkSource;)V

    .line 13696
    iget-object p2, p0, Lcom/android/server/am/ActivityManagerService;->mRunningVoice:Landroid/service/voice/IVoiceInteractionSession;

    if-eqz p2, :cond_0

    iget-object p2, p0, Lcom/android/server/am/ActivityManagerService;->mRunningVoice:Landroid/service/voice/IVoiceInteractionSession;

    invoke-interface {p2}, Landroid/service/voice/IVoiceInteractionSession;->asBinder()Landroid/os/IBinder;

    move-result-object p2

    invoke-interface {p1}, Landroid/service/voice/IVoiceInteractionSession;->asBinder()Landroid/os/IBinder;

    move-result-object v0

    if-eq p2, v0, :cond_2

    .line 13697
    :cond_0
    iget-object p2, p0, Lcom/android/server/am/ActivityManagerService;->mRunningVoice:Landroid/service/voice/IVoiceInteractionSession;

    if-eqz p2, :cond_1

    const/4 p2, 0x1

    goto :goto_0

    :cond_1
    const/4 p2, 0x0

    .line 13698
    :goto_0
    iput-object p1, p0, Lcom/android/server/am/ActivityManagerService;->mRunningVoice:Landroid/service/voice/IVoiceInteractionSession;

    .line 13699
    if-nez p2, :cond_2

    .line 13700
    iget-object p1, p0, Lcom/android/server/am/ActivityManagerService;->mVoiceWakeLock:Landroid/os/PowerManager$WakeLock;

    invoke-virtual {p1}, Landroid/os/PowerManager$WakeLock;->acquire()V

    .line 13701
    invoke-virtual {p0}, Lcom/android/server/am/ActivityManagerService;->updateSleepIfNeededLocked()V

    .line 13704
    :cond_2
    return-void
.end method

.method public startService(Landroid/app/IApplicationThread;Landroid/content/Intent;Ljava/lang/String;ZLjava/lang/String;I)Landroid/content/ComponentName;
    .locals 13
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Landroid/os/TransactionTooLargeException;
        }
    .end annotation

    move-object v1, p0

    .line 20655
    const-string/jumbo v0, "startService"

    invoke-virtual {v1, v0}, Lcom/android/server/am/ActivityManagerService;->enforceNotIsolatedCaller(Ljava/lang/String;)V

    .line 20657
    if-eqz p2, :cond_1

    invoke-virtual {p2}, Landroid/content/Intent;->hasFileDescriptors()Z

    move-result v2

    const/4 v3, 0x1

    if-eq v2, v3, :cond_0

    goto :goto_0

    .line 20658
    :cond_0
    new-instance v0, Ljava/lang/IllegalArgumentException;

    const-string v1, "File descriptors passed in Intent"

    invoke-direct {v0, v1}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v0

    .line 20661
    :cond_1
    :goto_0
    if-eqz p5, :cond_2

    .line 20667
    monitor-enter p0

    :try_start_0
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    .line 20668
    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result v6

    .line 20669
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v7

    .line 20670
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v11
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_1

    .line 20673
    :try_start_1
    iget-object v2, v1, Lcom/android/server/am/ActivityManagerService;->mServices:Lcom/android/server/am/ActiveServices;

    move-object v3, p1

    move-object v4, p2

    move-object/from16 v5, p3

    move/from16 v8, p4

    move-object/from16 v9, p5

    move/from16 v10, p6

    invoke-virtual/range {v2 .. v10}, Lcom/android/server/am/ActiveServices;->startServiceLocked(Landroid/app/IApplicationThread;Landroid/content/Intent;Ljava/lang/String;IIZLjava/lang/String;I)Landroid/content/ComponentName;

    move-result-object v0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 20677
    :try_start_2
    invoke-static {v11, v12}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 20678
    nop

    .line 20679
    monitor-exit p0
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_1

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    return-object v0

    .line 20677
    :catchall_0
    move-exception v0

    :try_start_3
    invoke-static {v11, v12}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    throw v0

    .line 20680
    :catchall_1
    move-exception v0

    monitor-exit p0
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_1

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw v0

    .line 20662
    :cond_2
    new-instance v0, Ljava/lang/IllegalArgumentException;

    const-string v1, "callingPackage cannot be null"

    invoke-direct {v0, v1}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v0
.end method

.method startServiceInPackage(ILandroid/content/Intent;Ljava/lang/String;ZLjava/lang/String;I)Landroid/content/ComponentName;
    .locals 13
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Landroid/os/TransactionTooLargeException;
        }
    .end annotation

    move-object v1, p0

    .line 20686
    monitor-enter p0

    :try_start_0
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    .line 20689
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v2
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_1

    .line 20692
    :try_start_1
    iget-object v4, v1, Lcom/android/server/am/ActivityManagerService;->mServices:Lcom/android/server/am/ActiveServices;

    const/4 v5, 0x0

    const/4 v8, -0x1

    move-object v6, p2

    move-object/from16 v7, p3

    move v9, p1

    move/from16 v10, p4

    move-object/from16 v11, p5

    move/from16 v12, p6

    invoke-virtual/range {v4 .. v12}, Lcom/android/server/am/ActiveServices;->startServiceLocked(Landroid/app/IApplicationThread;Landroid/content/Intent;Ljava/lang/String;IIZLjava/lang/String;I)Landroid/content/ComponentName;

    move-result-object v0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 20695
    :try_start_2
    invoke-static {v2, v3}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 20696
    nop

    .line 20697
    monitor-exit p0
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_1

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    return-object v0

    .line 20695
    :catchall_0
    move-exception v0

    :try_start_3
    invoke-static {v2, v3}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    throw v0

    .line 20698
    :catchall_1
    move-exception v0

    monitor-exit p0
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_1

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw v0
.end method

.method public startSystemLockTaskMode(I)V
    .locals 4
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Landroid/os/RemoteException;
        }
    .end annotation

    .line 11959
    const-string v0, "android.permission.MANAGE_ACTIVITY_STACKS"

    const-string/jumbo v1, "startSystemLockTaskMode"

    invoke-virtual {p0, v0, v1}, Lcom/android/server/am/ActivityManagerService;->enforceCallingPermission(Ljava/lang/String;Ljava/lang/String;)V

    .line 11961
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v0

    .line 11963
    :try_start_0
    monitor-enter p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_1

    :try_start_1
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    .line 11964
    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mStackSupervisor:Lcom/android/server/am/ActivityStackSupervisor;

    invoke-virtual {v2, p1}, Lcom/android/server/am/ActivityStackSupervisor;->anyTaskForIdLocked(I)Lcom/android/server/am/TaskRecord;

    move-result-object p1

    .line 11967
    invoke-virtual {p1}, Lcom/android/server/am/TaskRecord;->getStack()Lcom/android/server/am/ActivityStack;

    move-result-object v2

    const-string/jumbo v3, "startSystemLockTaskMode"

    invoke-virtual {v2, v3}, Lcom/android/server/am/ActivityStack;->moveToFront(Ljava/lang/String;)V

    .line 11968
    const/4 v2, 0x1

    invoke-direct {p0, p1, v2}, Lcom/android/server/am/ActivityManagerService;->startLockTaskModeLocked(Lcom/android/server/am/TaskRecord;Z)V

    .line 11969
    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    :try_start_2
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_1

    .line 11971
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 11972
    nop

    .line 11973
    return-void

    .line 11969
    :catchall_0
    move-exception p1

    :try_start_3
    monitor-exit p0
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_0

    :try_start_4
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw p1
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_1

    .line 11971
    :catchall_1
    move-exception p1

    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    throw p1
.end method

.method startTimeTrackingFocusedActivityLocked()V
    .locals 2

    .line 13584
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mStackSupervisor:Lcom/android/server/am/ActivityStackSupervisor;

    invoke-virtual {v0}, Lcom/android/server/am/ActivityStackSupervisor;->getResumedActivityLocked()Lcom/android/server/am/ActivityRecord;

    move-result-object v0

    .line 13585
    iget-boolean v1, p0, Lcom/android/server/am/ActivityManagerService;->mSleeping:Z

    if-nez v1, :cond_0

    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mCurAppTimeTracker:Lcom/android/server/am/AppTimeTracker;

    if-eqz v1, :cond_0

    if-eqz v0, :cond_0

    .line 13586
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mCurAppTimeTracker:Lcom/android/server/am/AppTimeTracker;

    iget-object v0, v0, Lcom/android/server/am/ActivityRecord;->packageName:Ljava/lang/String;

    invoke-virtual {v1, v0}, Lcom/android/server/am/AppTimeTracker;->start(Ljava/lang/String;)V

    .line 13588
    :cond_0
    return-void
.end method

.method public startUserInBackground(I)Z
    .locals 1

    .line 26529
    const/4 v0, 0x0

    invoke-virtual {p0, p1, v0}, Lcom/android/server/am/ActivityManagerService;->startUserInBackgroundWithListener(ILandroid/os/IProgressListener;)Z

    move-result p1

    return p1
.end method

.method public startUserInBackgroundWithListener(ILandroid/os/IProgressListener;)Z
    .locals 2

    .line 26535
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mUserController:Lcom/android/server/am/UserController;

    const/4 v1, 0x0

    invoke-virtual {v0, p1, v1, p2}, Lcom/android/server/am/UserController;->startUser(IZLandroid/os/IProgressListener;)Z

    move-result p1

    return p1
.end method

.method public startVoiceActivity(Ljava/lang/String;IILandroid/content/Intent;Ljava/lang/String;Landroid/service/voice/IVoiceInteractionSession;Lcom/android/internal/app/IVoiceInteractor;ILandroid/app/ProfilerInfo;Landroid/os/Bundle;I)I
    .locals 13

    move-object v0, p0

    move-object/from16 v1, p6

    move-object/from16 v2, p7

    .line 5477
    const-string v3, "android.permission.BIND_VOICE_INTERACTION"

    const-string/jumbo v4, "startVoiceActivity()"

    invoke-virtual {v0, v3, v4}, Lcom/android/server/am/ActivityManagerService;->enforceCallingPermission(Ljava/lang/String;Ljava/lang/String;)V

    .line 5478
    if-eqz v1, :cond_0

    if-eqz v2, :cond_0

    .line 5481
    iget-object v5, v0, Lcom/android/server/am/ActivityManagerService;->mUserController:Lcom/android/server/am/UserController;

    const/4 v9, 0x0

    const/4 v10, 0x2

    const-string/jumbo v11, "startVoiceActivity"

    const/4 v12, 0x0

    move v6, p2

    move/from16 v7, p3

    move/from16 v8, p11

    invoke-virtual/range {v5 .. v12}, Lcom/android/server/am/UserController;->handleIncomingUser(IIIZILjava/lang/String;Ljava/lang/String;)I

    move-result v3

    .line 5484
    iget-object v0, v0, Lcom/android/server/am/ActivityManagerService;->mActivityStartController:Lcom/android/server/am/ActivityStartController;

    const-string/jumbo v4, "startVoiceActivity"

    move-object/from16 v5, p4

    invoke-virtual {v0, v5, v4}, Lcom/android/server/am/ActivityStartController;->obtainStarter(Landroid/content/Intent;Ljava/lang/String;)Lcom/android/server/am/ActivityStarter;

    move-result-object v0

    .line 5485
    move/from16 v4, p3

    invoke-virtual {v0, v4}, Lcom/android/server/am/ActivityStarter;->setCallingUid(I)Lcom/android/server/am/ActivityStarter;

    move-result-object v0

    .line 5486
    move-object v4, p1

    invoke-virtual {v0, v4}, Lcom/android/server/am/ActivityStarter;->setCallingPackage(Ljava/lang/String;)Lcom/android/server/am/ActivityStarter;

    move-result-object v0

    .line 5487
    move-object/from16 v4, p5

    invoke-virtual {v0, v4}, Lcom/android/server/am/ActivityStarter;->setResolvedType(Ljava/lang/String;)Lcom/android/server/am/ActivityStarter;

    move-result-object v0

    .line 5488
    invoke-virtual {v0, v1}, Lcom/android/server/am/ActivityStarter;->setVoiceSession(Landroid/service/voice/IVoiceInteractionSession;)Lcom/android/server/am/ActivityStarter;

    move-result-object v0

    .line 5489
    invoke-virtual {v0, v2}, Lcom/android/server/am/ActivityStarter;->setVoiceInteractor(Lcom/android/internal/app/IVoiceInteractor;)Lcom/android/server/am/ActivityStarter;

    move-result-object v0

    .line 5490
    move/from16 v1, p8

    invoke-virtual {v0, v1}, Lcom/android/server/am/ActivityStarter;->setStartFlags(I)Lcom/android/server/am/ActivityStarter;

    move-result-object v0

    .line 5491
    move-object/from16 v1, p9

    invoke-virtual {v0, v1}, Lcom/android/server/am/ActivityStarter;->setProfilerInfo(Landroid/app/ProfilerInfo;)Lcom/android/server/am/ActivityStarter;

    move-result-object v0

    .line 5492
    move-object/from16 v1, p10

    invoke-virtual {v0, v1}, Lcom/android/server/am/ActivityStarter;->setActivityOptions(Landroid/os/Bundle;)Lcom/android/server/am/ActivityStarter;

    move-result-object v0

    .line 5493
    invoke-virtual {v0, v3}, Lcom/android/server/am/ActivityStarter;->setMayWait(I)Lcom/android/server/am/ActivityStarter;

    move-result-object v0

    .line 5494
    invoke-virtual {v0}, Lcom/android/server/am/ActivityStarter;->execute()I

    move-result v0

    .line 5484
    return v0

    .line 5479
    :cond_0
    new-instance v0, Ljava/lang/NullPointerException;

    const-string v1, "null session or interactor"

    invoke-direct {v0, v1}, Ljava/lang/NullPointerException;-><init>(Ljava/lang/String;)V

    throw v0
.end method

.method public stopAppSwitches()V
    .locals 4

    .line 13788
    const-string v0, "android.permission.STOP_APP_SWITCHES"

    const-string/jumbo v1, "stopAppSwitches"

    invoke-virtual {p0, v0, v1}, Lcom/android/server/am/ActivityManagerService;->enforceCallerIsRecentsOrHasPermission(Ljava/lang/String;Ljava/lang/String;)V

    .line 13789
    monitor-enter p0

    :try_start_0
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    .line 13790
    invoke-static {}, Landroid/os/SystemClock;->uptimeMillis()J

    move-result-wide v0

    const-wide/16 v2, 0x3e8

    add-long/2addr v0, v2

    iput-wide v0, p0, Lcom/android/server/am/ActivityManagerService;->mAppSwitchesAllowedTime:J

    .line 13792
    const/4 v0, 0x0

    iput-boolean v0, p0, Lcom/android/server/am/ActivityManagerService;->mDidAppSwitch:Z

    .line 13793
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mActivityStartController:Lcom/android/server/am/ActivityStartController;

    invoke-virtual {v0, v2, v3}, Lcom/android/server/am/ActivityStartController;->schedulePendingActivityLaunches(J)V

    .line 13794
    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    .line 13795
    return-void

    .line 13794
    :catchall_0
    move-exception v0

    :try_start_1
    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw v0
.end method

.method stopAssociationLocked(ILjava/lang/String;ILandroid/content/ComponentName;)V
    .locals 5

    .line 23286
    iget-boolean v0, p0, Lcom/android/server/am/ActivityManagerService;->mTrackingAssociations:Z

    if-nez v0, :cond_0

    .line 23287
    return-void

    .line 23289
    :cond_0
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mAssociations:Landroid/util/SparseArray;

    .line 23290
    invoke-virtual {v0, p3}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    move-result-object p3

    check-cast p3, Landroid/util/ArrayMap;

    .line 23291
    if-nez p3, :cond_1

    .line 23292
    return-void

    .line 23294
    :cond_1
    invoke-virtual {p3, p4}, Landroid/util/ArrayMap;->get(Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object p3

    check-cast p3, Landroid/util/SparseArray;

    .line 23295
    if-nez p3, :cond_2

    .line 23296
    return-void

    .line 23298
    :cond_2
    invoke-virtual {p3, p1}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    move-result-object p1

    check-cast p1, Landroid/util/ArrayMap;

    .line 23299
    if-nez p1, :cond_3

    .line 23300
    return-void

    .line 23302
    :cond_3
    invoke-virtual {p1, p2}, Landroid/util/ArrayMap;->get(Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object p1

    check-cast p1, Lcom/android/server/am/ActivityManagerService$Association;

    .line 23303
    if-eqz p1, :cond_6

    iget p2, p1, Lcom/android/server/am/ActivityManagerService$Association;->mNesting:I

    if-gtz p2, :cond_4

    goto :goto_0

    .line 23306
    :cond_4
    iget p2, p1, Lcom/android/server/am/ActivityManagerService$Association;->mNesting:I

    add-int/lit8 p2, p2, -0x1

    iput p2, p1, Lcom/android/server/am/ActivityManagerService$Association;->mNesting:I

    .line 23307
    iget p2, p1, Lcom/android/server/am/ActivityManagerService$Association;->mNesting:I

    if-nez p2, :cond_5

    .line 23308
    invoke-static {}, Landroid/os/SystemClock;->uptimeMillis()J

    move-result-wide p2

    .line 23309
    iget-wide v0, p1, Lcom/android/server/am/ActivityManagerService$Association;->mTime:J

    iget-wide v2, p1, Lcom/android/server/am/ActivityManagerService$Association;->mStartTime:J

    sub-long v2, p2, v2

    add-long/2addr v0, v2

    iput-wide v0, p1, Lcom/android/server/am/ActivityManagerService$Association;->mTime:J

    .line 23310
    iget-object p4, p1, Lcom/android/server/am/ActivityManagerService$Association;->mStateTimes:[J

    iget v0, p1, Lcom/android/server/am/ActivityManagerService$Association;->mLastState:I

    add-int/lit8 v0, v0, 0x0

    aget-wide v1, p4, v0

    iget-wide v3, p1, Lcom/android/server/am/ActivityManagerService$Association;->mLastStateUptime:J

    sub-long/2addr p2, v3

    add-long/2addr v1, p2

    aput-wide v1, p4, v0

    .line 23312
    const/16 p2, 0x15

    iput p2, p1, Lcom/android/server/am/ActivityManagerService$Association;->mLastState:I

    .line 23314
    :cond_5
    return-void

    .line 23304
    :cond_6
    :goto_0
    return-void
.end method

.method public stopBinderTrackingAndDump(Landroid/os/ParcelFileDescriptor;)Z
    .locals 6
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Landroid/os/RemoteException;
        }
    .end annotation

    .line 26667
    :try_start_0
    monitor-enter p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_2

    :try_start_1
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    .line 26668
    const/4 v0, 0x0

    iput-boolean v0, p0, Lcom/android/server/am/ActivityManagerService;->mBinderTransactionTrackingEnabled:Z

    .line 26671
    const-string v0, "android.permission.SET_ACTIVITY_WATCHER"

    invoke-virtual {p0, v0}, Lcom/android/server/am/ActivityManagerService;->checkCallingPermission(Ljava/lang/String;)I

    move-result v0

    if-nez v0, :cond_3

    .line 26677
    if-eqz p1, :cond_2

    .line 26681
    new-instance v0, Lcom/android/internal/util/FastPrintWriter;

    new-instance v1, Ljava/io/FileOutputStream;

    invoke-virtual {p1}, Landroid/os/ParcelFileDescriptor;->getFileDescriptor()Ljava/io/FileDescriptor;

    move-result-object v2

    invoke-direct {v1, v2}, Ljava/io/FileOutputStream;-><init>(Ljava/io/FileDescriptor;)V

    invoke-direct {v0, v1}, Lcom/android/internal/util/FastPrintWriter;-><init>(Ljava/io/OutputStream;)V

    .line 26682
    const-string v1, "Binder transaction traces for all processes.\n"

    invoke-virtual {v0, v1}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 26683
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mLruProcesses:Ljava/util/ArrayList;

    invoke-virtual {v1}, Ljava/util/ArrayList;->iterator()Ljava/util/Iterator;

    move-result-object v1

    :goto_0
    invoke-interface {v1}, Ljava/util/Iterator;->hasNext()Z

    move-result v2

    if-eqz v2, :cond_1

    invoke-interface {v1}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Lcom/android/server/am/ProcessRecord;

    .line 26684
    invoke-direct {p0, v2}, Lcom/android/server/am/ActivityManagerService;->processSanityChecksLocked(Lcom/android/server/am/ProcessRecord;)Z

    move-result v3

    if-nez v3, :cond_0

    .line 26685
    goto :goto_0

    .line 26688
    :cond_0
    new-instance v3, Ljava/lang/StringBuilder;

    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V

    const-string v4, "Traces for process: "

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget-object v4, v2, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v3

    invoke-virtual {v0, v3}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 26689
    invoke-virtual {v0}, Ljava/io/PrintWriter;->flush()V
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_1

    .line 26691
    :try_start_2
    new-instance v3, Lcom/android/internal/os/TransferPipe;

    invoke-direct {v3}, Lcom/android/internal/os/TransferPipe;-><init>()V
    :try_end_2
    .catch Ljava/io/IOException; {:try_start_2 .. :try_end_2} :catch_1
    .catch Landroid/os/RemoteException; {:try_start_2 .. :try_end_2} :catch_0
    .catchall {:try_start_2 .. :try_end_2} :catchall_1

    .line 26693
    :try_start_3
    iget-object v4, v2, Lcom/android/server/am/ProcessRecord;->thread:Landroid/app/IApplicationThread;

    invoke-virtual {v3}, Lcom/android/internal/os/TransferPipe;->getWriteFd()Landroid/os/ParcelFileDescriptor;

    move-result-object v5

    invoke-interface {v4, v5}, Landroid/app/IApplicationThread;->stopBinderTrackingAndDump(Landroid/os/ParcelFileDescriptor;)V

    .line 26694
    invoke-virtual {p1}, Landroid/os/ParcelFileDescriptor;->getFileDescriptor()Ljava/io/FileDescriptor;

    move-result-object v4

    invoke-virtual {v3, v4}, Lcom/android/internal/os/TransferPipe;->go(Ljava/io/FileDescriptor;)V
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_0

    .line 26696
    :try_start_4
    invoke-virtual {v3}, Lcom/android/internal/os/TransferPipe;->kill()V

    .line 26697
    nop

    .line 26706
    :goto_1
    goto :goto_2

    .line 26696
    :catchall_0
    move-exception v4

    invoke-virtual {v3}, Lcom/android/internal/os/TransferPipe;->kill()V

    throw v4
    :try_end_4
    .catch Ljava/io/IOException; {:try_start_4 .. :try_end_4} :catch_1
    .catch Landroid/os/RemoteException; {:try_start_4 .. :try_end_4} :catch_0
    .catchall {:try_start_4 .. :try_end_4} :catchall_1

    .line 26702
    :catch_0
    move-exception v3

    .line 26703
    :try_start_5
    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    const-string v5, "Got a RemoteException while dumping IPC traces from "

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v4, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    const-string v2, ".  Exception: "

    invoke-virtual {v4, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v4, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v2

    invoke-virtual {v0, v2}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 26705
    invoke-virtual {v0}, Ljava/io/PrintWriter;->flush()V

    goto :goto_2

    .line 26698
    :catch_1
    move-exception v3

    .line 26699
    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    const-string v5, "Failure while dumping IPC traces from "

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v4, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    const-string v2, ".  Exception: "

    invoke-virtual {v4, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v4, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v2

    invoke-virtual {v0, v2}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 26701
    invoke-virtual {v0}, Ljava/io/PrintWriter;->flush()V

    goto :goto_1

    .line 26707
    :goto_2
    goto/16 :goto_0

    .line 26708
    :cond_1
    const/4 p1, 0x0

    .line 26709
    const/4 v0, 0x1

    monitor-exit p0
    :try_end_5
    .catchall {:try_start_5 .. :try_end_5} :catchall_1

    .line 26712
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    .line 26709
    return v0

    .line 26678
    :cond_2
    :try_start_6
    new-instance v0, Ljava/lang/IllegalArgumentException;

    const-string v1, "null fd"

    invoke-direct {v0, v1}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v0

    .line 26673
    :cond_3
    new-instance v0, Ljava/lang/SecurityException;

    const-string v1, "Requires permission android.permission.SET_ACTIVITY_WATCHER"

    invoke-direct {v0, v1}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v0

    .line 26710
    :catchall_1
    move-exception v0

    monitor-exit p0
    :try_end_6
    .catchall {:try_start_6 .. :try_end_6} :catchall_1

    :try_start_7
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw v0
    :try_end_7
    .catchall {:try_start_7 .. :try_end_7} :catchall_2

    .line 26712
    :catchall_2
    move-exception v0

    if-eqz p1, :cond_4

    .line 26714
    :try_start_8
    invoke-virtual {p1}, Landroid/os/ParcelFileDescriptor;->close()V
    :try_end_8
    .catch Ljava/io/IOException; {:try_start_8 .. :try_end_8} :catch_2

    .line 26716
    goto :goto_3

    .line 26715
    :catch_2
    move-exception p1

    .line 26716
    :cond_4
    :goto_3
    throw v0
.end method

.method public stopLocalVoiceInteraction(Landroid/os/IBinder;)V
    .locals 1
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Landroid/os/RemoteException;
        }
    .end annotation

    .line 5578
    const-class v0, Landroid/service/voice/VoiceInteractionManagerInternal;

    invoke-static {v0}, Lcom/android/server/LocalServices;->getService(Ljava/lang/Class;)Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Landroid/service/voice/VoiceInteractionManagerInternal;

    .line 5579
    invoke-virtual {v0, p1}, Landroid/service/voice/VoiceInteractionManagerInternal;->stopLocalVoiceInteraction(Landroid/os/IBinder;)V

    .line 5580
    return-void
.end method

.method public stopLockTaskModeByToken(Landroid/os/IBinder;)V
    .locals 1

    .line 11977
    monitor-enter p0

    :try_start_0
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    .line 11978
    invoke-static {p1}, Lcom/android/server/am/ActivityRecord;->forTokenLocked(Landroid/os/IBinder;)Lcom/android/server/am/ActivityRecord;

    move-result-object p1

    .line 11979
    if-nez p1, :cond_0

    .line 11980
    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    return-void

    .line 11982
    :cond_0
    :try_start_1
    invoke-virtual {p1}, Lcom/android/server/am/ActivityRecord;->getTask()Lcom/android/server/am/TaskRecord;

    move-result-object p1

    const/4 v0, 0x0

    invoke-direct {p0, p1, v0}, Lcom/android/server/am/ActivityManagerService;->stopLockTaskModeInternal(Lcom/android/server/am/TaskRecord;Z)V

    .line 11983
    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    .line 11984
    return-void

    .line 11983
    :catchall_0
    move-exception p1

    :try_start_2
    monitor-exit p0
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw p1
.end method

.method public stopService(Landroid/app/IApplicationThread;Landroid/content/Intent;Ljava/lang/String;I)I
    .locals 2

    .line 20704
    const-string/jumbo v0, "stopService"

    invoke-virtual {p0, v0}, Lcom/android/server/am/ActivityManagerService;->enforceNotIsolatedCaller(Ljava/lang/String;)V

    .line 20706
    if-eqz p2, :cond_1

    invoke-virtual {p2}, Landroid/content/Intent;->hasFileDescriptors()Z

    move-result v0

    const/4 v1, 0x1

    if-eq v0, v1, :cond_0

    goto :goto_0

    .line 20707
    :cond_0
    new-instance p1, Ljava/lang/IllegalArgumentException;

    const-string p2, "File descriptors passed in Intent"

    invoke-direct {p1, p2}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw p1

    .line 20710
    :cond_1
    :goto_0
    monitor-enter p0

    :try_start_0
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    .line 20711
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mServices:Lcom/android/server/am/ActiveServices;

    invoke-virtual {v0, p1, p2, p3, p4}, Lcom/android/server/am/ActiveServices;->stopServiceLocked(Landroid/app/IApplicationThread;Landroid/content/Intent;Ljava/lang/String;I)I

    move-result p1

    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    return p1

    .line 20712
    :catchall_0
    move-exception p1

    :try_start_1
    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw p1
.end method

.method public stopServiceToken(Landroid/content/ComponentName;Landroid/os/IBinder;I)Z
    .locals 1

    .line 20735
    monitor-enter p0

    :try_start_0
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    .line 20736
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mServices:Lcom/android/server/am/ActiveServices;

    invoke-virtual {v0, p1, p2, p3}, Lcom/android/server/am/ActiveServices;->stopServiceTokenLocked(Landroid/content/ComponentName;Landroid/os/IBinder;I)Z

    move-result p1

    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    return p1

    .line 20737
    :catchall_0
    move-exception p1

    :try_start_1
    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw p1
.end method

.method public stopSystemLockTaskMode()V
    .locals 2
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Landroid/os/RemoteException;
        }
    .end annotation

    .line 11992
    const-string v0, "android.permission.MANAGE_ACTIVITY_STACKS"

    const-string/jumbo v1, "stopSystemLockTaskMode"

    invoke-virtual {p0, v0, v1}, Lcom/android/server/am/ActivityManagerService;->enforceCallingPermission(Ljava/lang/String;Ljava/lang/String;)V

    .line 11993
    const/4 v0, 0x0

    const/4 v1, 0x1

    invoke-direct {p0, v0, v1}, Lcom/android/server/am/ActivityManagerService;->stopLockTaskModeInternal(Lcom/android/server/am/TaskRecord;Z)V

    .line 11994
    return-void
.end method

.method public stopUser(IZLandroid/app/IStopUserCallback;)I
    .locals 1

    .line 26550
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mUserController:Lcom/android/server/am/UserController;

    invoke-virtual {v0, p1, p2, p3}, Lcom/android/server/am/UserController;->stopUser(IZLandroid/app/IStopUserCallback;)I

    move-result p1

    return p1
.end method

.method public supportsLocalVoiceInteraction()Z
    .locals 1
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Landroid/os/RemoteException;
        }
    .end annotation

    .line 5584
    const-class v0, Landroid/service/voice/VoiceInteractionManagerInternal;

    invoke-static {v0}, Lcom/android/server/LocalServices;->getService(Ljava/lang/Class;)Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Landroid/service/voice/VoiceInteractionManagerInternal;

    .line 5585
    invoke-virtual {v0}, Landroid/service/voice/VoiceInteractionManagerInternal;->supportsLocalVoiceInteraction()Z

    move-result v0

    .line 5584
    return v0
.end method

.method public suppressResizeConfigChanges(Z)V
    .locals 2
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Landroid/os/RemoteException;
        }
    .end annotation

    .line 22640
    const-string v0, "android.permission.MANAGE_ACTIVITY_STACKS"

    const-string/jumbo v1, "suppressResizeConfigChanges()"

    invoke-virtual {p0, v0, v1}, Lcom/android/server/am/ActivityManagerService;->enforceCallingPermission(Ljava/lang/String;Ljava/lang/String;)V

    .line 22641
    monitor-enter p0

    :try_start_0
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    .line 22642
    iput-boolean p1, p0, Lcom/android/server/am/ActivityManagerService;->mSuppressResizeConfigChanges:Z

    .line 22643
    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    .line 22644
    return-void

    .line 22643
    :catchall_0
    move-exception p1

    :try_start_1
    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw p1
.end method

.method public switchUser(I)Z
    .locals 1

    .line 26545
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mUserController:Lcom/android/server/am/UserController;

    invoke-virtual {v0, p1}, Lcom/android/server/am/UserController;->switchUser(I)Z

    move-result p1

    return p1
.end method

.method public systemReady(Ljava/lang/Runnable;Landroid/util/TimingsTraceLog;)V
    .locals 26

    move-object/from16 v15, p0

    .line 15433
    move-object/from16 v14, p2

    const-string v0, "PhaseActivityManagerReady"

    invoke-virtual {v14, v0}, Landroid/util/TimingsTraceLog;->traceBegin(Ljava/lang/String;)V

    .line 15434
    monitor-enter p0

    :try_start_0
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    .line 15435
    iget-boolean v0, v15, Lcom/android/server/am/ActivityManagerService;->mSystemReady:Z

    if-eqz v0, :cond_1

    .line 15438
    if-eqz p1, :cond_0

    .line 15439
    invoke-interface/range {p1 .. p1}, Ljava/lang/Runnable;->run()V

    .line 15441
    :cond_0
    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_e

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    return-void

    .line 15444
    :cond_1
    :try_start_1
    iget-object v0, v15, Lcom/android/server/am/ActivityManagerService;->mContext:Landroid/content/Context;

    invoke-virtual {v0}, Landroid/content/Context;->getPackageManager()Landroid/content/pm/PackageManager;

    move-result-object v0

    const-string v2, "android.software.cant_save_state"

    invoke-virtual {v0, v2}, Landroid/content/pm/PackageManager;->hasSystemFeature(Ljava/lang/String;)Z

    move-result v0

    iput-boolean v0, v15, Lcom/android/server/am/ActivityManagerService;->mHasHeavyWeightFeature:Z

    .line 15446
    const-class v0, Lcom/android/server/DeviceIdleController$LocalService;

    .line 15447
    invoke-static {v0}, Lcom/android/server/LocalServices;->getService(Ljava/lang/Class;)Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Lcom/android/server/DeviceIdleController$LocalService;

    iput-object v0, v15, Lcom/android/server/am/ActivityManagerService;->mLocalDeviceIdleController:Lcom/android/server/DeviceIdleController$LocalService;

    .line 15448
    new-instance v0, Lcom/android/internal/app/AssistUtils;

    iget-object v2, v15, Lcom/android/server/am/ActivityManagerService;->mContext:Landroid/content/Context;

    invoke-direct {v0, v2}, Lcom/android/internal/app/AssistUtils;-><init>(Landroid/content/Context;)V

    iput-object v0, v15, Lcom/android/server/am/ActivityManagerService;->mAssistUtils:Lcom/android/internal/app/AssistUtils;

    .line 15449
    iget-object v0, v15, Lcom/android/server/am/ActivityManagerService;->mVrController:Lcom/android/server/am/VrController;

    invoke-virtual {v0}, Lcom/android/server/am/VrController;->onSystemReady()V

    .line 15451
    iget-object v0, v15, Lcom/android/server/am/ActivityManagerService;->mUserController:Lcom/android/server/am/UserController;

    invoke-virtual {v0}, Lcom/android/server/am/UserController;->onSystemReady()V

    .line 15452
    iget-object v0, v15, Lcom/android/server/am/ActivityManagerService;->mRecentTasks:Lcom/android/server/am/RecentTasks;

    invoke-virtual {v0}, Lcom/android/server/am/RecentTasks;->onSystemReadyLocked()V

    .line 15453
    iget-object v0, v15, Lcom/android/server/am/ActivityManagerService;->mAppOpsService:Lcom/android/server/AppOpsService;

    invoke-virtual {v0}, Lcom/android/server/AppOpsService;->systemReady()V

    .line 15454
    const/4 v13, 0x1

    iput-boolean v13, v15, Lcom/android/server/am/ActivityManagerService;->mSystemReady:Z

    .line 15455
    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_e

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    .line 15458
    :try_start_2
    const-string v0, "device_identifiers"

    .line 15459
    invoke-static {v0}, Landroid/os/ServiceManager;->getService(Ljava/lang/String;)Landroid/os/IBinder;

    move-result-object v0

    .line 15458
    invoke-static {v0}, Landroid/os/IDeviceIdentifiersPolicyService$Stub;->asInterface(Landroid/os/IBinder;)Landroid/os/IDeviceIdentifiersPolicyService;

    move-result-object v0

    .line 15460
    invoke-interface {v0}, Landroid/os/IDeviceIdentifiersPolicyService;->getSerial()Ljava/lang/String;

    move-result-object v0

    sput-object v0, Lcom/android/server/am/ActivityManagerService;->sTheRealBuildSerial:Ljava/lang/String;
    :try_end_2
    .catch Landroid/os/RemoteException; {:try_start_2 .. :try_end_2} :catch_0

    .line 15461
    goto :goto_0

    :catch_0
    move-exception v0

    .line 15463
    :goto_0
    nop

    .line 15464
    iget-object v2, v15, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Landroid/util/SparseArray;

    monitor-enter v2

    .line 15465
    :try_start_3
    iget-object v0, v15, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Landroid/util/SparseArray;

    invoke-virtual {v0}, Landroid/util/SparseArray;->size()I

    move-result v0

    sub-int/2addr v0, v13

    const/4 v3, 0x0

    move-object v4, v3

    :goto_1
    if-ltz v0, :cond_4

    .line 15466
    iget-object v5, v15, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Landroid/util/SparseArray;

    invoke-virtual {v5, v0}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;

    move-result-object v5

    check-cast v5, Lcom/android/server/am/ProcessRecord;

    .line 15467
    iget-object v6, v5, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    invoke-virtual {v15, v6}, Lcom/android/server/am/ActivityManagerService;->isAllowedWhileBooting(Landroid/content/pm/ApplicationInfo;)Z

    move-result v6

    if-nez v6, :cond_3

    .line 15468
    if-nez v4, :cond_2

    .line 15469
    new-instance v4, Ljava/util/ArrayList;

    invoke-direct {v4}, Ljava/util/ArrayList;-><init>()V

    .line 15471
    :cond_2
    invoke-virtual {v4, v5}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    .line 15465
    :cond_3
    add-int/lit8 v0, v0, -0x1

    goto :goto_1

    .line 15474
    :cond_4
    monitor-exit v2
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_d

    .line 15476
    monitor-enter p0

    :try_start_4
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    .line 15477
    const/4 v0, 0x0

    if-eqz v4, :cond_5

    .line 15478
    invoke-virtual {v4}, Ljava/util/ArrayList;->size()I

    move-result v2

    sub-int/2addr v2, v13

    :goto_2
    if-ltz v2, :cond_5

    .line 15479
    invoke-virtual {v4, v2}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v5

    check-cast v5, Lcom/android/server/am/ProcessRecord;

    .line 15480
    const-string v6, "ActivityManager"

    new-instance v7, Ljava/lang/StringBuilder;

    invoke-direct {v7}, Ljava/lang/StringBuilder;-><init>()V

    const-string v8, "Removing system update proc: "

    invoke-virtual {v7, v8}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v7, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    invoke-virtual {v7}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v7

    invoke-static {v6, v7}, Landroid/util/Slog;->i(Ljava/lang/String;Ljava/lang/String;)I

    .line 15481
    const-string/jumbo v6, "system update done"

    invoke-virtual {v15, v5, v13, v0, v6}, Lcom/android/server/am/ActivityManagerService;->removeProcessLocked(Lcom/android/server/am/ProcessRecord;ZZLjava/lang/String;)Z

    .line 15478
    add-int/lit8 v2, v2, -0x1

    goto :goto_2

    .line 15488
    :cond_5
    iput-boolean v13, v15, Lcom/android/server/am/ActivityManagerService;->mProcessesReady:Z

    .line 15489
    monitor-exit p0
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_b

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    .line 15491
    const-string v2, "ActivityManager"

    const-string v4, "System now ready"

    invoke-static {v2, v4}, Landroid/util/Slog;->i(Ljava/lang/String;Ljava/lang/String;)I

    .line 15492
    const/16 v2, 0xbe0

    .line 15493
    invoke-static {}, Landroid/os/SystemClock;->uptimeMillis()J

    move-result-wide v4

    .line 15492
    invoke-static {v2, v4, v5}, Landroid/util/EventLog;->writeEvent(IJ)I

    .line 15495
    monitor-enter p0

    :try_start_5
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    .line 15498
    iget v2, v15, Lcom/android/server/am/ActivityManagerService;->mFactoryTest:I

    if-ne v2, v13, :cond_8

    .line 15499
    iget-object v2, v15, Lcom/android/server/am/ActivityManagerService;->mContext:Landroid/content/Context;

    invoke-virtual {v2}, Landroid/content/Context;->getPackageManager()Landroid/content/pm/PackageManager;

    move-result-object v2

    new-instance v4, Landroid/content/Intent;

    const-string v5, "android.intent.action.FACTORY_TEST"

    invoke-direct {v4, v5}, Landroid/content/Intent;-><init>(Ljava/lang/String;)V

    const/16 v5, 0x400

    .line 15500
    invoke-virtual {v2, v4, v5}, Landroid/content/pm/PackageManager;->resolveActivity(Landroid/content/Intent;I)Landroid/content/pm/ResolveInfo;

    move-result-object v2

    .line 15502
    nop

    .line 15503
    if-eqz v2, :cond_7

    .line 15504
    iget-object v2, v2, Landroid/content/pm/ResolveInfo;->activityInfo:Landroid/content/pm/ActivityInfo;

    .line 15505
    iget-object v4, v2, Landroid/content/pm/ActivityInfo;->applicationInfo:Landroid/content/pm/ApplicationInfo;

    .line 15506
    iget v5, v4, Landroid/content/pm/ApplicationInfo;->flags:I

    and-int/2addr v5, v13

    if-eqz v5, :cond_6

    .line 15507
    const-string v5, "android.intent.action.FACTORY_TEST"

    iput-object v5, v15, Lcom/android/server/am/ActivityManagerService;->mTopAction:Ljava/lang/String;

    .line 15508
    iput-object v3, v15, Lcom/android/server/am/ActivityManagerService;->mTopData:Ljava/lang/String;

    .line 15509
    new-instance v5, Landroid/content/ComponentName;

    iget-object v4, v4, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;

    iget-object v2, v2, Landroid/content/pm/ActivityInfo;->name:Ljava/lang/String;

    invoke-direct {v5, v4, v2}, Landroid/content/ComponentName;-><init>(Ljava/lang/String;Ljava/lang/String;)V

    iput-object v5, v15, Lcom/android/server/am/ActivityManagerService;->mTopComponent:Landroid/content/ComponentName;

    .line 15515
    move-object v2, v3

    goto :goto_3

    .line 15512
    :cond_6
    iget-object v2, v15, Lcom/android/server/am/ActivityManagerService;->mContext:Landroid/content/Context;

    invoke-virtual {v2}, Landroid/content/Context;->getResources()Landroid/content/res/Resources;

    move-result-object v2

    const v4, 0x104027f

    invoke-virtual {v2, v4}, Landroid/content/res/Resources;->getText(I)Ljava/lang/CharSequence;

    move-result-object v2

    .line 15515
    :goto_3
    goto :goto_4

    .line 15516
    :cond_7
    iget-object v2, v15, Lcom/android/server/am/ActivityManagerService;->mContext:Landroid/content/Context;

    invoke-virtual {v2}, Landroid/content/Context;->getResources()Landroid/content/res/Resources;

    move-result-object v2

    const v4, 0x104027e

    invoke-virtual {v2, v4}, Landroid/content/res/Resources;->getText(I)Ljava/lang/CharSequence;

    move-result-object v2

    .line 15519
    :goto_4
    if-eqz v2, :cond_8

    .line 15520
    iput-object v3, v15, Lcom/android/server/am/ActivityManagerService;->mTopAction:Ljava/lang/String;

    .line 15521
    iput-object v3, v15, Lcom/android/server/am/ActivityManagerService;->mTopData:Ljava/lang/String;

    .line 15522
    iput-object v3, v15, Lcom/android/server/am/ActivityManagerService;->mTopComponent:Landroid/content/ComponentName;

    .line 15523
    invoke-static {}, Landroid/os/Message;->obtain()Landroid/os/Message;

    move-result-object v3

    .line 15524
    const/4 v4, 0x3

    iput v4, v3, Landroid/os/Message;->what:I

    .line 15525
    invoke-virtual {v3}, Landroid/os/Message;->getData()Landroid/os/Bundle;

    move-result-object v4

    const-string v5, "msg"

    invoke-virtual {v4, v5, v2}, Landroid/os/Bundle;->putCharSequence(Ljava/lang/String;Ljava/lang/CharSequence;)V

    .line 15526
    iget-object v2, v15, Lcom/android/server/am/ActivityManagerService;->mUiHandler:Landroid/os/Handler;

    invoke-virtual {v2, v3}, Landroid/os/Handler;->sendMessage(Landroid/os/Message;)Z

    .line 15529
    :cond_8
    monitor-exit p0
    :try_end_5
    .catchall {:try_start_5 .. :try_end_5} :catchall_9

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    .line 15531
    invoke-direct/range {p0 .. p0}, Lcom/android/server/am/ActivityManagerService;->retrieveSettings()V

    .line 15532
    iget-object v2, v15, Lcom/android/server/am/ActivityManagerService;->mUserController:Lcom/android/server/am/UserController;

    invoke-virtual {v2}, Lcom/android/server/am/UserController;->getCurrentUserId()I

    move-result v12

    .line 15533
    monitor-enter p0

    :try_start_6
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    .line 15534
    invoke-direct/range {p0 .. p0}, Lcom/android/server/am/ActivityManagerService;->readGrantedUriPermissionsLocked()V

    .line 15535
    monitor-exit p0
    :try_end_6
    .catchall {:try_start_6 .. :try_end_6} :catchall_7

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    .line 15537
    const-class v2, Landroid/os/PowerManagerInternal;

    invoke-static {v2}, Lcom/android/server/LocalServices;->getService(Ljava/lang/Class;)Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Landroid/os/PowerManagerInternal;

    .line 15538
    if-eqz v2, :cond_9

    .line 15539
    new-instance v3, Lcom/android/server/am/-$$Lambda$ActivityManagerService$eFxS8Z-_MXzP9a8ro45rBMHy3bk;

    invoke-direct {v3, v15}, Lcom/android/server/am/-$$Lambda$ActivityManagerService$eFxS8Z-_MXzP9a8ro45rBMHy3bk;-><init>(Lcom/android/server/am/ActivityManagerService;)V

    const/16 v4, 0xc

    invoke-virtual {v2, v4, v3}, Landroid/os/PowerManagerInternal;->registerLowPowerModeObserver(ILjava/util/function/Consumer;)V

    .line 15541
    nop

    .line 15542
    invoke-virtual {v2, v4}, Landroid/os/PowerManagerInternal;->getLowPowerState(I)Landroid/os/PowerSaveState;

    move-result-object v2

    iget-boolean v2, v2, Landroid/os/PowerSaveState;->batterySaverEnabled:Z

    .line 15541
    invoke-direct {v15, v2}, Lcom/android/server/am/ActivityManagerService;->updateForceBackgroundCheck(Z)V

    goto :goto_5

    .line 15544
    :cond_9
    const-string v2, "ActivityManager"

    const-string v3, "PowerManagerInternal not found."

    invoke-static {v2, v3}, Landroid/util/Slog;->wtf(Ljava/lang/String;Ljava/lang/String;)I

    .line 15547
    :goto_5
    if-eqz p1, :cond_a

    invoke-interface/range {p1 .. p1}, Ljava/lang/Runnable;->run()V

    .line 15548
    :cond_a
    const-string v1, "ActivityManagerStartApps"

    invoke-virtual {v14, v1}, Landroid/util/TimingsTraceLog;->traceBegin(Ljava/lang/String;)V

    .line 15549
    iget-object v1, v15, Lcom/android/server/am/ActivityManagerService;->mBatteryStatsService:Lcom/android/server/am/BatteryStatsService;

    const v2, 0x8007

    .line 15550
    invoke-static {v12}, Ljava/lang/Integer;->toString(I)Ljava/lang/String;

    move-result-object v3

    .line 15549
    invoke-virtual {v1, v2, v3, v12}, Lcom/android/server/am/BatteryStatsService;->noteEvent(ILjava/lang/String;I)V

    .line 15551
    iget-object v1, v15, Lcom/android/server/am/ActivityManagerService;->mBatteryStatsService:Lcom/android/server/am/BatteryStatsService;

    const v2, 0x8008

    .line 15552
    invoke-static {v12}, Ljava/lang/Integer;->toString(I)Ljava/lang/String;

    move-result-object v3

    .line 15551
    invoke-virtual {v1, v2, v3, v12}, Lcom/android/server/am/BatteryStatsService;->noteEvent(ILjava/lang/String;I)V

    .line 15553
    iget-object v1, v15, Lcom/android/server/am/ActivityManagerService;->mSystemServiceManager:Lcom/android/server/SystemServiceManager;

    invoke-virtual {v1, v12}, Lcom/android/server/SystemServiceManager;->startUser(I)V

    .line 15555
    monitor-enter p0

    :try_start_7
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    .line 15558
    const/high16 v1, 0x80000

    invoke-virtual {v15, v1}, Lcom/android/server/am/ActivityManagerService;->startPersistentApps(I)V

    .line 15561
    iput-boolean v13, v15, Lcom/android/server/am/ActivityManagerService;->mBooting:Z

    .line 15565
    invoke-static {}, Landroid/os/UserManager;->isSplitSystemUser()Z

    move-result v1

    if-eqz v1, :cond_b

    iget-object v1, v15, Lcom/android/server/am/ActivityManagerService;->mContext:Landroid/content/Context;

    .line 15566
    invoke-virtual {v1}, Landroid/content/Context;->getContentResolver()Landroid/content/ContentResolver;

    move-result-object v1

    const-string/jumbo v2, "user_setup_complete"

    invoke-static {v1, v2, v0}, Landroid/provider/Settings$Secure;->getInt(Landroid/content/ContentResolver;Ljava/lang/String;I)I

    move-result v1

    if-eqz v1, :cond_b

    .line 15568
    new-instance v1, Landroid/content/ComponentName;

    iget-object v2, v15, Lcom/android/server/am/ActivityManagerService;->mContext:Landroid/content/Context;

    const-class v3, Lcom/android/internal/app/SystemUserHomeActivity;

    invoke-direct {v1, v2, v3}, Landroid/content/ComponentName;-><init>(Landroid/content/Context;Ljava/lang/Class;)V
    :try_end_7
    .catchall {:try_start_7 .. :try_end_7} :catchall_5

    .line 15570
    :try_start_8
    invoke-static {}, Landroid/app/AppGlobals;->getPackageManager()Landroid/content/pm/IPackageManager;

    move-result-object v2

    invoke-interface {v2, v1, v13, v0, v0}, Landroid/content/pm/IPackageManager;->setComponentEnabledSetting(Landroid/content/ComponentName;III)V
    :try_end_8
    .catch Landroid/os/RemoteException; {:try_start_8 .. :try_end_8} :catch_1
    .catchall {:try_start_8 .. :try_end_8} :catchall_5

    .line 15575
    goto :goto_6

    .line 15573
    :catch_1
    move-exception v0

    .line 15574
    :try_start_9
    invoke-virtual {v0}, Landroid/os/RemoteException;->rethrowAsRuntimeException()Ljava/lang/RuntimeException;

    move-result-object v0

    throw v0

    .line 15577
    :cond_b
    :goto_6
    const-string/jumbo v0, "systemReady"

    invoke-virtual {v15, v12, v0}, Lcom/android/server/am/ActivityManagerService;->startHomeActivityLocked(ILjava/lang/String;)Z
    :try_end_9
    .catchall {:try_start_9 .. :try_end_9} :catchall_5

    .line 15580
    :try_start_a
    invoke-static {}, Landroid/app/AppGlobals;->getPackageManager()Landroid/content/pm/IPackageManager;

    move-result-object v0

    invoke-interface {v0}, Landroid/content/pm/IPackageManager;->hasSystemUidErrors()Z

    move-result v0

    if-eqz v0, :cond_c

    .line 15581
    const-string v0, "ActivityManager"

    const-string v1, "UIDs on the system are inconsistent, you need to wipe your data partition or your device will be unstable."

    invoke-static {v0, v1}, Landroid/util/Slog;->e(Ljava/lang/String;Ljava/lang/String;)I

    .line 15583
    iget-object v0, v15, Lcom/android/server/am/ActivityManagerService;->mUiHandler:Landroid/os/Handler;

    const/16 v1, 0xe

    invoke-virtual {v0, v1}, Landroid/os/Handler;->obtainMessage(I)Landroid/os/Message;

    move-result-object v0

    invoke-virtual {v0}, Landroid/os/Message;->sendToTarget()V
    :try_end_a
    .catch Landroid/os/RemoteException; {:try_start_a .. :try_end_a} :catch_2
    .catchall {:try_start_a .. :try_end_a} :catchall_5

    .line 15586
    :cond_c
    goto :goto_7

    .line 15585
    :catch_2
    move-exception v0

    .line 15588
    :goto_7
    :try_start_b
    invoke-static {}, Landroid/os/Build;->isBuildConsistent()Z

    move-result v0

    if-nez v0, :cond_d

    .line 15589
    const-string v0, "ActivityManager"

    const-string v1, "Build fingerprint is not consistent, warning user"

    invoke-static {v0, v1}, Landroid/util/Slog;->e(Ljava/lang/String;Ljava/lang/String;)I

    .line 15590
    iget-object v0, v15, Lcom/android/server/am/ActivityManagerService;->mUiHandler:Landroid/os/Handler;

    const/16 v1, 0xf

    invoke-virtual {v0, v1}, Landroid/os/Handler;->obtainMessage(I)Landroid/os/Message;

    move-result-object v0

    invoke-virtual {v0}, Landroid/os/Message;->sendToTarget()V

    .line 15593
    :cond_d
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v10
    :try_end_b
    .catchall {:try_start_b .. :try_end_b} :catchall_5

    .line 15595
    :try_start_c
    new-instance v4, Landroid/content/Intent;

    const-string v0, "android.intent.action.USER_STARTED"

    invoke-direct {v4, v0}, Landroid/content/Intent;-><init>(Ljava/lang/String;)V

    .line 15596
    const/high16 v0, 0x50000000

    invoke-virtual {v4, v0}, Landroid/content/Intent;->addFlags(I)Landroid/content/Intent;

    .line 15598
    const-string v0, "android.intent.extra.user_handle"

    invoke-virtual {v4, v0, v12}, Landroid/content/Intent;->putExtra(Ljava/lang/String;I)Landroid/content/Intent;

    .line 15599
    const/4 v2, 0x0

    const/4 v3, 0x0

    const/4 v5, 0x0

    const/4 v6, 0x0

    const/4 v7, 0x0

    const/4 v8, 0x0

    const/4 v9, 0x0

    const/4 v0, 0x0

    const/16 v16, -0x1

    const/16 v17, 0x0

    const/16 v18, 0x0

    const/16 v19, 0x0

    sget v20, Lcom/android/server/am/ActivityManagerService;->MY_PID:I
    :try_end_c
    .catch Ljava/lang/Throwable; {:try_start_c .. :try_end_c} :catch_6
    .catchall {:try_start_c .. :try_end_c} :catchall_2

    const/16 v21, 0x3e8

    move-object v1, v15

    move-wide/from16 v22, v10

    move-object v10, v0

    move/from16 v11, v16

    move/from16 v24, v12

    move-object/from16 v12, v17

    move/from16 v13, v18

    move/from16 v14, v19

    move/from16 v15, v20

    move/from16 v16, v21

    move/from16 v17, v24

    :try_start_d
    invoke-virtual/range {v1 .. v17}, Lcom/android/server/am/ActivityManagerService;->broadcastIntentLocked(Lcom/android/server/am/ProcessRecord;Ljava/lang/String;Landroid/content/Intent;Ljava/lang/String;Landroid/content/IIntentReceiver;ILjava/lang/String;Landroid/os/Bundle;[Ljava/lang/String;ILandroid/os/Bundle;ZZIII)I

    .line 15603
    new-instance v4, Landroid/content/Intent;

    const-string v0, "android.intent.action.USER_STARTING"

    invoke-direct {v4, v0}, Landroid/content/Intent;-><init>(Ljava/lang/String;)V

    .line 15604
    const/high16 v0, 0x40000000    # 2.0f

    invoke-virtual {v4, v0}, Landroid/content/Intent;->addFlags(I)Landroid/content/Intent;

    .line 15605
    const-string v0, "android.intent.extra.user_handle"
    :try_end_d
    .catch Ljava/lang/Throwable; {:try_start_d .. :try_end_d} :catch_5
    .catchall {:try_start_d .. :try_end_d} :catchall_1

    move/from16 v15, v24

    :try_start_e
    invoke-virtual {v4, v0, v15}, Landroid/content/Intent;->putExtra(Ljava/lang/String;I)Landroid/content/Intent;

    .line 15606
    const/4 v2, 0x0

    const/4 v3, 0x0

    const/4 v5, 0x0

    new-instance v6, Lcom/android/server/am/ActivityManagerService$19;
    :try_end_e
    .catch Ljava/lang/Throwable; {:try_start_e .. :try_end_e} :catch_4
    .catchall {:try_start_e .. :try_end_e} :catchall_1

    move-object/from16 v14, p0

    :try_start_f
    invoke-direct {v6, v14}, Lcom/android/server/am/ActivityManagerService$19;-><init>(Lcom/android/server/am/ActivityManagerService;)V

    const/4 v7, 0x0

    const/4 v8, 0x0

    const/4 v9, 0x0

    const-string v0, "android.permission.INTERACT_ACROSS_USERS"

    filled-new-array {v0}, [Ljava/lang/String;

    move-result-object v10

    const/4 v11, -0x1

    const/4 v12, 0x0

    const/4 v13, 0x1

    const/4 v0, 0x0

    sget v16, Lcom/android/server/am/ActivityManagerService;->MY_PID:I
    :try_end_f
    .catch Ljava/lang/Throwable; {:try_start_f .. :try_end_f} :catch_4
    .catchall {:try_start_f .. :try_end_f} :catchall_0

    const/16 v17, 0x3e8

    const/16 v18, -0x1

    move-object v1, v14

    move v14, v0

    move/from16 v25, v15

    move/from16 v15, v16

    move/from16 v16, v17

    move/from16 v17, v18

    :try_start_10
    invoke-virtual/range {v1 .. v17}, Lcom/android/server/am/ActivityManagerService;->broadcastIntentLocked(Lcom/android/server/am/ProcessRecord;Ljava/lang/String;Landroid/content/Intent;Ljava/lang/String;Landroid/content/IIntentReceiver;ILjava/lang/String;Landroid/os/Bundle;[Ljava/lang/String;ILandroid/os/Bundle;ZZIII)I
    :try_end_10
    .catch Ljava/lang/Throwable; {:try_start_10 .. :try_end_10} :catch_3
    .catchall {:try_start_10 .. :try_end_10} :catchall_1

    .line 15619
    move-wide/from16 v1, v22

    :try_start_11
    invoke-static {v1, v2}, Landroid/os/Binder;->restoreCallingIdentity(J)V
    :try_end_11
    .catchall {:try_start_11 .. :try_end_11} :catchall_3

    goto :goto_a

    .line 15616
    :catch_3
    move-exception v0

    goto :goto_8

    .line 15619
    :catchall_0
    move-exception v0

    move-wide/from16 v1, v22

    move-object v3, v14

    goto :goto_c

    .line 15616
    :catch_4
    move-exception v0

    move/from16 v25, v15

    :goto_8
    move-wide/from16 v1, v22

    goto :goto_9

    .line 15619
    :catchall_1
    move-exception v0

    move-wide/from16 v1, v22

    goto :goto_b

    .line 15616
    :catch_5
    move-exception v0

    move-wide/from16 v1, v22

    move/from16 v25, v24

    goto :goto_9

    .line 15619
    :catchall_2
    move-exception v0

    move-wide v1, v10

    move-object v3, v15

    goto :goto_c

    .line 15616
    :catch_6
    move-exception v0

    move-wide v1, v10

    move/from16 v25, v12

    .line 15617
    :goto_9
    :try_start_12
    const-string v3, "ActivityManager"

    const-string v4, "Failed sending first user broadcasts"

    invoke-static {v3, v4, v0}, Landroid/util/Slog;->wtf(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I
    :try_end_12
    .catchall {:try_start_12 .. :try_end_12} :catchall_4

    .line 15619
    :try_start_13
    invoke-static {v1, v2}, Landroid/os/Binder;->restoreCallingIdentity(J)V
    :try_end_13
    .catchall {:try_start_13 .. :try_end_13} :catchall_3

    .line 15620
    :goto_a
    nop

    .line 15621
    move-object/from16 v3, p0

    :try_start_14
    iget-object v0, v3, Lcom/android/server/am/ActivityManagerService;->mStackSupervisor:Lcom/android/server/am/ActivityStackSupervisor;

    invoke-virtual {v0}, Lcom/android/server/am/ActivityStackSupervisor;->resumeFocusedStackTopActivityLocked()Z

    .line 15622
    iget-object v0, v3, Lcom/android/server/am/ActivityManagerService;->mUserController:Lcom/android/server/am/UserController;

    const/4 v1, -0x1

    move/from16 v2, v25

    invoke-virtual {v0, v1, v2}, Lcom/android/server/am/UserController;->sendUserSwitchBroadcasts(II)V

    .line 15624
    const/16 v0, 0x1770

    const/16 v1, 0x157c

    invoke-static {v0, v1}, Lcom/android/internal/os/BinderInternal;->nSetBinderProxyCountWatermarks(II)V

    .line 15625
    const/4 v1, 0x1

    invoke-static {v1}, Lcom/android/internal/os/BinderInternal;->nSetBinderProxyCountEnabled(Z)V

    .line 15626
    new-instance v0, Lcom/android/server/am/ActivityManagerService$20;

    invoke-direct {v0, v3}, Lcom/android/server/am/ActivityManagerService$20;-><init>(Lcom/android/server/am/ActivityManagerService;)V

    iget-object v1, v3, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    invoke-static {v0, v1}, Lcom/android/internal/os/BinderInternal;->setBinderProxyCountCallback(Lcom/android/internal/os/BinderInternal$BinderProxyLimitListener;Landroid/os/Handler;)V

    .line 15641
    invoke-virtual/range {p2 .. p2}, Landroid/util/TimingsTraceLog;->traceEnd()V

    .line 15642
    invoke-virtual/range {p2 .. p2}, Landroid/util/TimingsTraceLog;->traceEnd()V

    .line 15643
    monitor-exit p0
    :try_end_14
    .catchall {:try_start_14 .. :try_end_14} :catchall_6

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    .line 15644
    return-void

    .line 15643
    :catchall_3
    move-exception v0

    move-object/from16 v3, p0

    goto :goto_d

    .line 15619
    :catchall_4
    move-exception v0

    :goto_b
    move-object/from16 v3, p0

    :goto_c
    :try_start_15
    invoke-static {v1, v2}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    throw v0

    .line 15643
    :catchall_5
    move-exception v0

    move-object v3, v15

    :goto_d
    monitor-exit p0
    :try_end_15
    .catchall {:try_start_15 .. :try_end_15} :catchall_6

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw v0

    :catchall_6
    move-exception v0

    goto :goto_d

    .line 15535
    :catchall_7
    move-exception v0

    move-object v3, v15

    :goto_e
    :try_start_16
    monitor-exit p0
    :try_end_16
    .catchall {:try_start_16 .. :try_end_16} :catchall_8

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw v0

    :catchall_8
    move-exception v0

    goto :goto_e

    .line 15529
    :catchall_9
    move-exception v0

    move-object v3, v15

    :goto_f
    :try_start_17
    monitor-exit p0
    :try_end_17
    .catchall {:try_start_17 .. :try_end_17} :catchall_a

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw v0

    :catchall_a
    move-exception v0

    goto :goto_f

    .line 15489
    :catchall_b
    move-exception v0

    move-object v3, v15

    :goto_10
    :try_start_18
    monitor-exit p0
    :try_end_18
    .catchall {:try_start_18 .. :try_end_18} :catchall_c

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw v0

    :catchall_c
    move-exception v0

    goto :goto_10

    .line 15474
    :catchall_d
    move-exception v0

    :try_start_19
    monitor-exit v2
    :try_end_19
    .catchall {:try_start_19 .. :try_end_19} :catchall_d

    throw v0

    .line 15455
    :catchall_e
    move-exception v0

    move-object v3, v15

    :goto_11
    :try_start_1a
    monitor-exit p0
    :try_end_1a
    .catchall {:try_start_1a .. :try_end_1a} :catchall_f

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw v0

    :catchall_f
    move-exception v0

    goto :goto_11
.end method

.method public takePersistableUriPermission(Landroid/net/Uri;ILjava/lang/String;I)V
    .locals 5

    .line 10629
    const/4 v0, 0x0

    if-eqz p3, :cond_0

    .line 10630
    const-string v1, "android.permission.FORCE_PERSISTABLE_URI_PERMISSIONS"

    const-string/jumbo v2, "takePersistableUriPermission"

    invoke-virtual {p0, v1, v2}, Lcom/android/server/am/ActivityManagerService;->enforceCallingPermission(Ljava/lang/String;Ljava/lang/String;)V

    .line 10632
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mPackageManagerInt:Landroid/content/pm/PackageManagerInternal;

    invoke-virtual {v1, p3, v0, p4}, Landroid/content/pm/PackageManagerInternal;->getPackageUid(Ljava/lang/String;II)I

    move-result p3

    goto :goto_0

    .line 10634
    :cond_0
    const-string/jumbo p3, "takePersistableUriPermission"

    invoke-virtual {p0, p3}, Lcom/android/server/am/ActivityManagerService;->enforceNotIsolatedCaller(Ljava/lang/String;)V

    .line 10635
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result p3

    .line 10638
    :goto_0
    const/4 v1, 0x3

    invoke-static {p2, v1}, Lcom/android/internal/util/Preconditions;->checkFlagsArgument(II)I

    .line 10641
    monitor-enter p0

    :try_start_0
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    .line 10642
    nop

    .line 10643
    new-instance v1, Lcom/android/server/am/ActivityManagerService$GrantUri;

    invoke-direct {v1, p4, p1, v0}, Lcom/android/server/am/ActivityManagerService$GrantUri;-><init>(ILandroid/net/Uri;Z)V

    .line 10645
    invoke-direct {p0, p3, v1}, Lcom/android/server/am/ActivityManagerService;->findUriPermissionLocked(ILcom/android/server/am/ActivityManagerService$GrantUri;)Lcom/android/server/am/UriPermission;

    move-result-object v2

    .line 10646
    new-instance v3, Lcom/android/server/am/ActivityManagerService$GrantUri;

    const/4 v4, 0x1

    invoke-direct {v3, p4, p1, v4}, Lcom/android/server/am/ActivityManagerService$GrantUri;-><init>(ILandroid/net/Uri;Z)V

    invoke-direct {p0, p3, v3}, Lcom/android/server/am/ActivityManagerService;->findUriPermissionLocked(ILcom/android/server/am/ActivityManagerService$GrantUri;)Lcom/android/server/am/UriPermission;

    move-result-object p1

    .line 10649
    if-eqz v2, :cond_1

    iget p4, v2, Lcom/android/server/am/UriPermission;->persistableModeFlags:I

    and-int/2addr p4, p2

    if-ne p4, p2, :cond_1

    .line 10651
    move p4, v4

    goto :goto_1

    .line 10649
    :cond_1
    nop

    .line 10651
    move p4, v0

    :goto_1
    if-eqz p1, :cond_2

    iget v3, p1, Lcom/android/server/am/UriPermission;->persistableModeFlags:I

    and-int/2addr v3, p2

    if-ne v3, p2, :cond_2

    goto :goto_2

    .line 10654
    :cond_2
    move v4, v0

    :goto_2
    if-nez p4, :cond_4

    if-eqz v4, :cond_3

    goto :goto_3

    .line 10655
    :cond_3
    new-instance p1, Ljava/lang/SecurityException;

    new-instance p2, Ljava/lang/StringBuilder;

    invoke-direct {p2}, Ljava/lang/StringBuilder;-><init>()V

    const-string p4, "No persistable permission grants found for UID "

    invoke-virtual {p2, p4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {p2, p3}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string p3, " and Uri "

    invoke-virtual {p2, p3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 10656
    invoke-virtual {v1}, Lcom/android/server/am/ActivityManagerService$GrantUri;->toSafeString()Ljava/lang/String;

    move-result-object p3

    invoke-virtual {p2, p3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {p2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object p2

    invoke-direct {p1, p2}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw p1

    .line 10659
    :cond_4
    :goto_3
    if-eqz p4, :cond_5

    .line 10660
    invoke-virtual {v2, p2}, Lcom/android/server/am/UriPermission;->takePersistableModes(I)Z

    move-result p4

    or-int/2addr v0, p4

    .line 10662
    :cond_5
    if-eqz v4, :cond_6

    .line 10663
    invoke-virtual {p1, p2}, Lcom/android/server/am/UriPermission;->takePersistableModes(I)Z

    move-result p1

    or-int/2addr v0, p1

    .line 10666
    :cond_6
    invoke-direct {p0, p3}, Lcom/android/server/am/ActivityManagerService;->maybePrunePersistedUriGrantsLocked(I)Z

    move-result p1

    or-int/2addr p1, v0

    .line 10668
    if-eqz p1, :cond_7

    .line 10669
    invoke-direct {p0}, Lcom/android/server/am/ActivityManagerService;->schedulePersistUriGrants()V

    .line 10671
    :cond_7
    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    .line 10672
    return-void

    .line 10671
    :catchall_0
    move-exception p1

    :try_start_1
    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw p1
.end method

.method tempWhitelistForPendingIntentLocked(IIIJLjava/lang/String;)V
    .locals 2
    .annotation build Lcom/android/internal/annotations/GuardedBy;
        value = "this"
    .end annotation

    .line 26109
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Landroid/util/SparseArray;

    monitor-enter v0

    .line 26110
    :try_start_0
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Landroid/util/SparseArray;

    invoke-virtual {v1, p1}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    move-result-object v1

    check-cast v1, Lcom/android/server/am/ProcessRecord;

    .line 26111
    if-nez v1, :cond_0

    .line 26112
    const-string p2, "ActivityManager"

    new-instance p3, Ljava/lang/StringBuilder;

    invoke-direct {p3}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo p4, "tempWhitelistForPendingIntentLocked() no ProcessRecord for pid "

    invoke-virtual {p3, p4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {p3, p1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {p3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object p1

    invoke-static {p2, p1}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 26114
    monitor-exit v0

    return-void

    .line 26116
    :cond_0
    iget-boolean v1, v1, Lcom/android/server/am/ProcessRecord;->whitelistManager:Z

    if-nez v1, :cond_1

    .line 26117
    const-string v1, "android.permission.CHANGE_DEVICE_IDLE_TEMP_WHITELIST"

    invoke-virtual {p0, v1, p1, p2}, Lcom/android/server/am/ActivityManagerService;->checkPermission(Ljava/lang/String;II)I

    move-result p1

    if-eqz p1, :cond_1

    .line 26123
    monitor-exit v0

    return-void

    .line 26126
    :cond_1
    monitor-exit v0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 26128
    invoke-virtual {p0, p3, p4, p5, p6}, Lcom/android/server/am/ActivityManagerService;->tempWhitelistUidLocked(IJLjava/lang/String;)V

    .line 26129
    return-void

    .line 26126
    :catchall_0
    move-exception p1

    :try_start_1
    monitor-exit v0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    throw p1
.end method

.method tempWhitelistUidLocked(IJLjava/lang/String;)V
    .locals 2
    .annotation build Lcom/android/internal/annotations/GuardedBy;
        value = "this"
    .end annotation

    .line 26136
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mPendingTempWhitelist:Landroid/util/SparseArray;

    new-instance v1, Lcom/android/server/am/ActivityManagerService$PendingTempWhitelist;

    invoke-direct {v1, p1, p2, p3, p4}, Lcom/android/server/am/ActivityManagerService$PendingTempWhitelist;-><init>(IJLjava/lang/String;)V

    invoke-virtual {v0, p1, v1}, Landroid/util/SparseArray;->put(ILjava/lang/Object;)V

    .line 26137
    const/4 p2, 0x1

    invoke-virtual {p0, p1, p2}, Lcom/android/server/am/ActivityManagerService;->setUidTempWhitelistStateLocked(IZ)V

    .line 26138
    iget-object p1, p0, Lcom/android/server/am/ActivityManagerService;->mUiHandler:Landroid/os/Handler;

    const/16 p2, 0x44

    invoke-virtual {p1, p2}, Landroid/os/Handler;->obtainMessage(I)Landroid/os/Message;

    move-result-object p1

    invoke-virtual {p1}, Landroid/os/Message;->sendToTarget()V

    .line 26139
    return-void
.end method

.method final trimApplications()V
    .locals 1

    .line 26200
    monitor-enter p0

    :try_start_0
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    .line 26201
    invoke-virtual {p0}, Lcom/android/server/am/ActivityManagerService;->trimApplicationsLocked()V

    .line 26202
    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    .line 26203
    return-void

    .line 26202
    :catchall_0
    move-exception v0

    :try_start_1
    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw v0
.end method

.method final trimApplicationsLocked()V
    .locals 10

    .line 26208
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mRemovedProcesses:Ljava/util/ArrayList;

    invoke-virtual {v0}, Ljava/util/ArrayList;->size()I

    move-result v0

    add-int/lit8 v0, v0, -0x1

    :goto_0
    if-ltz v0, :cond_4

    .line 26209
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mRemovedProcesses:Ljava/util/ArrayList;

    invoke-virtual {v1, v0}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v1

    check-cast v1, Lcom/android/server/am/ProcessRecord;

    .line 26210
    iget-object v2, v1, Lcom/android/server/am/ProcessRecord;->activities:Ljava/util/ArrayList;

    invoke-virtual {v2}, Ljava/util/ArrayList;->size()I

    move-result v2

    if-nez v2, :cond_3

    iget-object v2, v1, Lcom/android/server/am/ProcessRecord;->recentTasks:Ljava/util/ArrayList;

    invoke-virtual {v2}, Ljava/util/ArrayList;->size()I

    move-result v2

    if-nez v2, :cond_3

    iget-object v2, v1, Lcom/android/server/am/ProcessRecord;->curReceivers:Landroid/util/ArraySet;

    .line 26211
    invoke-virtual {v2}, Landroid/util/ArraySet;->isEmpty()Z

    move-result v2

    if-eqz v2, :cond_3

    iget-object v2, v1, Lcom/android/server/am/ProcessRecord;->services:Landroid/util/ArraySet;

    invoke-virtual {v2}, Landroid/util/ArraySet;->size()I

    move-result v2

    if-nez v2, :cond_3

    .line 26212
    const-string v2, "ActivityManager"

    new-instance v3, Ljava/lang/StringBuilder;

    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V

    const-string v4, "Exiting empty application process "

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 26214
    invoke-virtual {v1}, Lcom/android/server/am/ProcessRecord;->toShortString()Ljava/lang/String;

    move-result-object v4

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v4, " ("

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 26215
    iget-object v4, v1, Lcom/android/server/am/ProcessRecord;->thread:Landroid/app/IApplicationThread;

    const/4 v8, 0x0

    if-eqz v4, :cond_0

    iget-object v4, v1, Lcom/android/server/am/ProcessRecord;->thread:Landroid/app/IApplicationThread;

    invoke-interface {v4}, Landroid/app/IApplicationThread;->asBinder()Landroid/os/IBinder;

    move-result-object v4

    goto :goto_1

    :cond_0
    move-object v4, v8

    :goto_1
    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    const-string v4, ")\n"

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v3

    .line 26212
    invoke-static {v2, v3}, Landroid/util/Slog;->i(Ljava/lang/String;Ljava/lang/String;)I

    .line 26217
    iget v2, v1, Lcom/android/server/am/ProcessRecord;->pid:I

    const/4 v9, 0x0

    if-lez v2, :cond_1

    iget v2, v1, Lcom/android/server/am/ProcessRecord;->pid:I

    sget v3, Lcom/android/server/am/ActivityManagerService;->MY_PID:I

    if-eq v2, v3, :cond_1

    .line 26218
    const-string v2, "empty"

    invoke-virtual {v1, v2, v9}, Lcom/android/server/am/ProcessRecord;->kill(Ljava/lang/String;Z)V

    goto :goto_2

    .line 26219
    :cond_1
    iget-object v2, v1, Lcom/android/server/am/ProcessRecord;->thread:Landroid/app/IApplicationThread;

    if-eqz v2, :cond_2

    .line 26221
    :try_start_0
    iget-object v2, v1, Lcom/android/server/am/ProcessRecord;->thread:Landroid/app/IApplicationThread;

    invoke-interface {v2}, Landroid/app/IApplicationThread;->scheduleExit()V
    :try_end_0
    .catch Ljava/lang/Exception; {:try_start_0 .. :try_end_0} :catch_0

    .line 26224
    goto :goto_2

    .line 26222
    :catch_0
    move-exception v2

    .line 26226
    :cond_2
    :goto_2
    const/4 v4, 0x0

    const/4 v5, 0x1

    const/4 v6, -0x1

    const/4 v7, 0x0

    move-object v2, p0

    move-object v3, v1

    invoke-direct/range {v2 .. v7}, Lcom/android/server/am/ActivityManagerService;->cleanUpApplicationRecordLocked(Lcom/android/server/am/ProcessRecord;ZZIZ)Z

    .line 26227
    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mRemovedProcesses:Ljava/util/ArrayList;

    invoke-virtual {v2, v0}, Ljava/util/ArrayList;->remove(I)Ljava/lang/Object;

    .line 26229
    iget-boolean v2, v1, Lcom/android/server/am/ProcessRecord;->persistent:Z

    if-eqz v2, :cond_3

    .line 26230
    iget-object v1, v1, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    invoke-virtual {p0, v1, v8, v9, v8}, Lcom/android/server/am/ActivityManagerService;->addAppLocked(Landroid/content/pm/ApplicationInfo;Ljava/lang/String;ZLjava/lang/String;)Lcom/android/server/am/ProcessRecord;

    .line 26208
    :cond_3
    add-int/lit8 v0, v0, -0x1

    goto/16 :goto_0

    .line 26237
    :cond_4
    invoke-virtual {p0}, Lcom/android/server/am/ActivityManagerService;->updateOomAdjLocked()V

    .line 26238
    return-void
.end method

.method public unbindBackupAgent(Landroid/content/pm/ApplicationInfo;)V
    .locals 5

    .line 21011
    if-nez p1, :cond_0

    .line 21012
    const-string p1, "ActivityManager"

    const-string/jumbo v0, "unbind backup agent for null app"

    invoke-static {p1, v0}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 21013
    return-void

    .line 21018
    :cond_0
    monitor-enter p0

    const/4 v0, 0x0

    :try_start_0
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    .line 21020
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mBackupAppName:Ljava/lang/String;

    if-nez v1, :cond_1

    .line 21021
    const-string p1, "ActivityManager"

    const-string v1, "Unbinding backup agent with no active backup"

    invoke-static {p1, v1}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 21048
    :try_start_1
    iput-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mBackupTarget:Lcom/android/server/am/BackupRecord;

    .line 21049
    iput-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mBackupAppName:Ljava/lang/String;

    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_1

    .line 21022
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    return-void

    .line 21025
    :cond_1
    :try_start_2
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mBackupAppName:Ljava/lang/String;

    iget-object v2, p1, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;

    invoke-virtual {v1, v2}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v1

    if-nez v1, :cond_2

    .line 21026
    const-string v1, "ActivityManager"

    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    const-string v3, "Unbind of "

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v2, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    const-string p1, " but is not the current backup target"

    invoke-virtual {v2, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object p1

    invoke-static {v1, p1}, Landroid/util/Slog;->e(Ljava/lang/String;Ljava/lang/String;)I
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    .line 21048
    :try_start_3
    iput-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mBackupTarget:Lcom/android/server/am/BackupRecord;

    .line 21049
    iput-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mBackupAppName:Ljava/lang/String;

    monitor-exit p0
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_1

    .line 21027
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    return-void

    .line 21031
    :cond_2
    :try_start_4
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mBackupTarget:Lcom/android/server/am/BackupRecord;

    iget-object v1, v1, Lcom/android/server/am/BackupRecord;->app:Lcom/android/server/am/ProcessRecord;

    .line 21032
    const/4 v2, 0x1

    invoke-virtual {p0, v1, v2}, Lcom/android/server/am/ActivityManagerService;->updateOomAdjLocked(Lcom/android/server/am/ProcessRecord;Z)Z

    .line 21033
    const/4 v2, 0x0

    iput-boolean v2, v1, Lcom/android/server/am/ProcessRecord;->inFullBackup:Z

    .line 21035
    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mBackupTarget:Lcom/android/server/am/BackupRecord;

    const/4 v3, -0x1

    if-eqz v2, :cond_3

    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mBackupTarget:Lcom/android/server/am/BackupRecord;

    iget-object v2, v2, Lcom/android/server/am/BackupRecord;->appInfo:Landroid/content/pm/ApplicationInfo;

    iget v2, v2, Landroid/content/pm/ApplicationInfo;->uid:I

    goto :goto_0

    .line 21038
    :cond_3
    move v2, v3

    :goto_0
    iget-object v4, v1, Lcom/android/server/am/ProcessRecord;->thread:Landroid/app/IApplicationThread;
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_0

    if-eqz v4, :cond_4

    .line 21040
    :try_start_5
    iget-object v1, v1, Lcom/android/server/am/ProcessRecord;->thread:Landroid/app/IApplicationThread;

    .line 21041
    invoke-virtual {p0, p1}, Lcom/android/server/am/ActivityManagerService;->compatibilityInfoForPackageLocked(Landroid/content/pm/ApplicationInfo;)Landroid/content/res/CompatibilityInfo;

    move-result-object v4

    .line 21040
    invoke-interface {v1, p1, v4}, Landroid/app/IApplicationThread;->scheduleDestroyBackupAgent(Landroid/content/pm/ApplicationInfo;Landroid/content/res/CompatibilityInfo;)V
    :try_end_5
    .catch Ljava/lang/Exception; {:try_start_5 .. :try_end_5} :catch_0
    .catchall {:try_start_5 .. :try_end_5} :catchall_0

    .line 21045
    goto :goto_1

    .line 21042
    :catch_0
    move-exception p1

    .line 21043
    :try_start_6
    const-string v1, "ActivityManager"

    const-string v4, "Exception when unbinding backup agent:"

    invoke-static {v1, v4}, Landroid/util/Slog;->e(Ljava/lang/String;Ljava/lang/String;)I

    .line 21044
    invoke-virtual {p1}, Ljava/lang/Exception;->printStackTrace()V
    :try_end_6
    .catchall {:try_start_6 .. :try_end_6} :catchall_0

    .line 21048
    :cond_4
    :goto_1
    :try_start_7
    iput-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mBackupTarget:Lcom/android/server/am/BackupRecord;

    .line 21049
    iput-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mBackupAppName:Ljava/lang/String;

    .line 21050
    nop

    .line 21051
    monitor-exit p0
    :try_end_7
    .catchall {:try_start_7 .. :try_end_7} :catchall_1

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    .line 21053
    if-eq v2, v3, :cond_5

    .line 21054
    const-class p1, Lcom/android/server/job/JobSchedulerInternal;

    invoke-static {p1}, Lcom/android/server/LocalServices;->getService(Ljava/lang/Class;)Ljava/lang/Object;

    move-result-object p1

    check-cast p1, Lcom/android/server/job/JobSchedulerInternal;

    .line 21055
    invoke-interface {p1, v2}, Lcom/android/server/job/JobSchedulerInternal;->removeBackingUpUid(I)V

    .line 21057
    :cond_5
    return-void

    .line 21048
    :catchall_0
    move-exception p1

    :try_start_8
    iput-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mBackupTarget:Lcom/android/server/am/BackupRecord;

    .line 21049
    iput-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mBackupAppName:Ljava/lang/String;

    throw p1

    .line 21051
    :catchall_1
    move-exception p1

    monitor-exit p0
    :try_end_8
    .catchall {:try_start_8 .. :try_end_8} :catchall_1

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw p1
.end method

.method public unbindFinished(Landroid/os/IBinder;Landroid/content/Intent;Z)V
    .locals 2

    .line 20844
    if-eqz p2, :cond_1

    invoke-virtual {p2}, Landroid/content/Intent;->hasFileDescriptors()Z

    move-result v0

    const/4 v1, 0x1

    if-eq v0, v1, :cond_0

    goto :goto_0

    .line 20845
    :cond_0
    new-instance p1, Ljava/lang/IllegalArgumentException;

    const-string p2, "File descriptors passed in Intent"

    invoke-direct {p1, p2}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw p1

    .line 20848
    :cond_1
    :goto_0
    monitor-enter p0

    :try_start_0
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    .line 20849
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mServices:Lcom/android/server/am/ActiveServices;

    check-cast p1, Lcom/android/server/am/ServiceRecord;

    invoke-virtual {v0, p1, p2, p3}, Lcom/android/server/am/ActiveServices;->unbindFinishedLocked(Lcom/android/server/am/ServiceRecord;Landroid/content/Intent;Z)V

    .line 20850
    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    .line 20851
    return-void

    .line 20850
    :catchall_0
    move-exception p1

    :try_start_1
    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw p1
.end method

.method public unbindService(Landroid/app/IServiceConnection;)Z
    .locals 1

    .line 20823
    monitor-enter p0

    :try_start_0
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    .line 20824
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mServices:Lcom/android/server/am/ActiveServices;

    invoke-virtual {v0, p1}, Lcom/android/server/am/ActiveServices;->unbindServiceLocked(Landroid/app/IServiceConnection;)Z

    move-result p1

    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    return p1

    .line 20825
    :catchall_0
    move-exception p1

    :try_start_1
    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw p1
.end method

.method public final unbroadcastIntent(Landroid/app/IApplicationThread;Landroid/content/Intent;I)V
    .locals 8

    .line 22288
    if-eqz p2, :cond_1

    invoke-virtual {p2}, Landroid/content/Intent;->hasFileDescriptors()Z

    move-result p1

    const/4 v0, 0x1

    if-eq p1, v0, :cond_0

    goto :goto_0

    .line 22289
    :cond_0
    new-instance p1, Ljava/lang/IllegalArgumentException;

    const-string p2, "File descriptors passed in Intent"

    invoke-direct {p1, p2}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw p1

    .line 22292
    :cond_1
    :goto_0
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mUserController:Lcom/android/server/am/UserController;

    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result v1

    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v2

    const/4 v4, 0x1

    const/4 v5, 0x0

    const-string/jumbo v6, "removeStickyBroadcast"

    const/4 v7, 0x0

    move v3, p3

    invoke-virtual/range {v0 .. v7}, Lcom/android/server/am/UserController;->handleIncomingUser(IIIZILjava/lang/String;Ljava/lang/String;)I

    move-result p1

    .line 22295
    monitor-enter p0

    :try_start_0
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    .line 22296
    const-string p3, "android.permission.BROADCAST_STICKY"

    invoke-virtual {p0, p3}, Lcom/android/server/am/ActivityManagerService;->checkCallingPermission(Ljava/lang/String;)I

    move-result p3

    if-nez p3, :cond_6

    .line 22305
    iget-object p3, p0, Lcom/android/server/am/ActivityManagerService;->mStickyBroadcasts:Landroid/util/SparseArray;

    invoke-virtual {p3, p1}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    move-result-object p3

    check-cast p3, Landroid/util/ArrayMap;

    .line 22306
    if-eqz p3, :cond_5

    .line 22307
    invoke-virtual {p2}, Landroid/content/Intent;->getAction()Ljava/lang/String;

    move-result-object v0

    invoke-virtual {p3, v0}, Landroid/util/ArrayMap;->get(Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Ljava/util/ArrayList;

    .line 22308
    if-eqz v0, :cond_4

    .line 22309
    invoke-virtual {v0}, Ljava/util/ArrayList;->size()I

    move-result v1

    .line 22311
    const/4 v2, 0x0

    :goto_1
    if-ge v2, v1, :cond_3

    .line 22312
    invoke-virtual {v0, v2}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v3

    check-cast v3, Landroid/content/Intent;

    invoke-virtual {p2, v3}, Landroid/content/Intent;->filterEquals(Landroid/content/Intent;)Z

    move-result v3

    if-eqz v3, :cond_2

    .line 22313
    invoke-virtual {v0, v2}, Ljava/util/ArrayList;->remove(I)Ljava/lang/Object;

    .line 22314
    goto :goto_2

    .line 22311
    :cond_2
    add-int/lit8 v2, v2, 0x1

    goto :goto_1

    .line 22317
    :cond_3
    :goto_2
    invoke-virtual {v0}, Ljava/util/ArrayList;->size()I

    move-result v0

    if-gtz v0, :cond_4

    .line 22318
    invoke-virtual {p2}, Landroid/content/Intent;->getAction()Ljava/lang/String;

    move-result-object p2

    invoke-virtual {p3, p2}, Landroid/util/ArrayMap;->remove(Ljava/lang/Object;)Ljava/lang/Object;

    .line 22321
    :cond_4
    invoke-virtual {p3}, Landroid/util/ArrayMap;->size()I

    move-result p2

    if-gtz p2, :cond_5

    .line 22322
    iget-object p2, p0, Lcom/android/server/am/ActivityManagerService;->mStickyBroadcasts:Landroid/util/SparseArray;

    invoke-virtual {p2, p1}, Landroid/util/SparseArray;->remove(I)V

    .line 22325
    :cond_5
    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    .line 22326
    return-void

    .line 22298
    :cond_6
    :try_start_1
    new-instance p1, Ljava/lang/StringBuilder;

    invoke-direct {p1}, Ljava/lang/StringBuilder;-><init>()V

    const-string p2, "Permission Denial: unbroadcastIntent() from pid="

    invoke-virtual {p1, p2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 22299
    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result p2

    invoke-virtual {p1, p2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string p2, ", uid="

    invoke-virtual {p1, p2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 22300
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result p2

    invoke-virtual {p1, p2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string p2, " requires "

    invoke-virtual {p1, p2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string p2, "android.permission.BROADCAST_STICKY"

    invoke-virtual {p1, p2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {p1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object p1

    .line 22302
    const-string p2, "ActivityManager"

    invoke-static {p2, p1}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 22303
    new-instance p2, Ljava/lang/SecurityException;

    invoke-direct {p2, p1}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw p2

    .line 22325
    :catchall_0
    move-exception p1

    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw p1
.end method

.method public unhandledBack()V
    .locals 3

    .line 13474
    const-string v0, "android.permission.FORCE_BACK"

    const-string/jumbo v1, "unhandledBack()"

    invoke-virtual {p0, v0, v1}, Lcom/android/server/am/ActivityManagerService;->enforceCallingPermission(Ljava/lang/String;Ljava/lang/String;)V

    .line 13477
    monitor-enter p0

    :try_start_0
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    .line 13478
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_1

    .line 13480
    :try_start_1
    invoke-virtual {p0}, Lcom/android/server/am/ActivityManagerService;->getFocusedStack()Lcom/android/server/am/ActivityStack;

    move-result-object v2

    invoke-virtual {v2}, Lcom/android/server/am/ActivityStack;->unhandledBackLocked()V
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 13482
    :try_start_2
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 13483
    nop

    .line 13484
    monitor-exit p0
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_1

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    .line 13485
    return-void

    .line 13482
    :catchall_0
    move-exception v2

    :try_start_3
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    throw v2

    .line 13484
    :catchall_1
    move-exception v0

    monitor-exit p0
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_1

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw v0
.end method

.method public unlockUser(I[B[BLandroid/os/IProgressListener;)Z
    .locals 1

    .line 26540
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mUserController:Lcom/android/server/am/UserController;

    invoke-virtual {v0, p1, p2, p3, p4}, Lcom/android/server/am/UserController;->unlockUser(I[B[BLandroid/os/IProgressListener;)Z

    move-result p1

    return p1
.end method

.method public unregisterIntentSenderCancelListener(Landroid/content/IIntentSender;Lcom/android/internal/os/IResultReceiver;)V
    .locals 1

    .line 8768
    instance-of v0, p1, Lcom/android/server/am/PendingIntentRecord;

    if-nez v0, :cond_0

    .line 8769
    return-void

    .line 8771
    :cond_0
    monitor-enter p0

    :try_start_0
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    .line 8772
    check-cast p1, Lcom/android/server/am/PendingIntentRecord;

    invoke-virtual {p1, p2}, Lcom/android/server/am/PendingIntentRecord;->unregisterCancelListenerLocked(Lcom/android/internal/os/IResultReceiver;)V

    .line 8773
    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    .line 8774
    return-void

    .line 8773
    :catchall_0
    move-exception p1

    :try_start_1
    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw p1
.end method

.method public unregisterProcessObserver(Landroid/app/IProcessObserver;)V
    .locals 1

    .line 14495
    monitor-enter p0

    :try_start_0
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    .line 14496
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mProcessObservers:Landroid/os/RemoteCallbackList;

    invoke-virtual {v0, p1}, Landroid/os/RemoteCallbackList;->unregister(Landroid/os/IInterface;)Z

    .line 14497
    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    .line 14498
    return-void

    .line 14497
    :catchall_0
    move-exception p1

    :try_start_1
    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw p1
.end method

.method public unregisterReceiver(Landroid/content/IIntentReceiver;)V
    .locals 11

    .line 21288
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v0

    .line 21290
    nop

    .line 21292
    :try_start_0
    monitor-enter p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_1

    :try_start_1
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    .line 21293
    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mRegisteredReceivers:Ljava/util/HashMap;

    invoke-interface {p1}, Landroid/content/IIntentReceiver;->asBinder()Landroid/os/IBinder;

    move-result-object p1

    invoke-virtual {v2, p1}, Ljava/util/HashMap;->get(Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object p1

    check-cast p1, Lcom/android/server/am/ReceiverList;

    .line 21294
    const/4 v2, 0x0

    if-eqz p1, :cond_3

    .line 21295
    iget-object v10, p1, Lcom/android/server/am/ReceiverList;->curBroadcast:Lcom/android/server/am/BroadcastRecord;

    .line 21296
    if-eqz v10, :cond_0

    iget-object v3, v10, Lcom/android/server/am/BroadcastRecord;->queue:Lcom/android/server/am/BroadcastQueue;

    invoke-virtual {v3, v10}, Lcom/android/server/am/BroadcastQueue;->getMatchingOrderedReceiver(Landroid/os/IBinder;)Lcom/android/server/am/BroadcastRecord;

    move-result-object v3

    if-ne v10, v3, :cond_0

    .line 21297
    iget-object v3, v10, Lcom/android/server/am/BroadcastRecord;->queue:Lcom/android/server/am/BroadcastQueue;

    iget v5, v10, Lcom/android/server/am/BroadcastRecord;->resultCode:I

    iget-object v6, v10, Lcom/android/server/am/BroadcastRecord;->resultData:Ljava/lang/String;

    iget-object v7, v10, Lcom/android/server/am/BroadcastRecord;->resultExtras:Landroid/os/Bundle;

    iget-boolean v8, v10, Lcom/android/server/am/BroadcastRecord;->resultAbort:Z

    const/4 v9, 0x0

    move-object v4, v10

    invoke-virtual/range {v3 .. v9}, Lcom/android/server/am/BroadcastQueue;->finishReceiverLocked(Lcom/android/server/am/BroadcastRecord;ILjava/lang/String;Landroid/os/Bundle;ZZ)Z

    move-result v3

    .line 21300
    if-eqz v3, :cond_0

    .line 21301
    const/4 v3, 0x1

    .line 21302
    iget-object v4, v10, Lcom/android/server/am/BroadcastRecord;->queue:Lcom/android/server/am/BroadcastQueue;

    invoke-virtual {v4, v2}, Lcom/android/server/am/BroadcastQueue;->processNextBroadcast(Z)V

    goto :goto_0

    .line 21306
    :cond_0
    move v3, v2

    :goto_0
    iget-object v4, p1, Lcom/android/server/am/ReceiverList;->app:Lcom/android/server/am/ProcessRecord;

    if-eqz v4, :cond_1

    .line 21307
    iget-object v4, p1, Lcom/android/server/am/ReceiverList;->app:Lcom/android/server/am/ProcessRecord;

    iget-object v4, v4, Lcom/android/server/am/ProcessRecord;->receivers:Landroid/util/ArraySet;

    invoke-virtual {v4, p1}, Landroid/util/ArraySet;->remove(Ljava/lang/Object;)Z

    .line 21309
    :cond_1
    invoke-virtual {p0, p1}, Lcom/android/server/am/ActivityManagerService;->removeReceiverLocked(Lcom/android/server/am/ReceiverList;)V

    .line 21310
    iget-boolean v4, p1, Lcom/android/server/am/ReceiverList;->linkedToDeath:Z

    if-eqz v4, :cond_2

    .line 21311
    iput-boolean v2, p1, Lcom/android/server/am/ReceiverList;->linkedToDeath:Z

    .line 21312
    iget-object v4, p1, Lcom/android/server/am/ReceiverList;->receiver:Landroid/content/IIntentReceiver;

    invoke-interface {v4}, Landroid/content/IIntentReceiver;->asBinder()Landroid/os/IBinder;

    move-result-object v4

    invoke-interface {v4, p1, v2}, Landroid/os/IBinder;->unlinkToDeath(Landroid/os/IBinder$DeathRecipient;I)Z

    .line 21315
    :cond_2
    move v2, v3

    :cond_3
    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    :try_start_2
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    .line 21319
    if-eqz v2, :cond_4

    .line 21320
    invoke-virtual {p0}, Lcom/android/server/am/ActivityManagerService;->trimApplications()V
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_1

    .line 21325
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 21321
    return-void

    .line 21325
    :cond_4
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 21326
    nop

    .line 21327
    return-void

    .line 21315
    :catchall_0
    move-exception p1

    :try_start_3
    monitor-exit p0
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_0

    :try_start_4
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw p1
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_1

    .line 21325
    :catchall_1
    move-exception p1

    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    throw p1
.end method

.method public unregisterTaskStackListener(Landroid/app/ITaskStackListener;)V
    .locals 2
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Landroid/os/RemoteException;
        }
    .end annotation

    .line 3760
    const-string v0, "android.permission.MANAGE_ACTIVITY_STACKS"

    const-string/jumbo v1, "unregisterTaskStackListener()"

    invoke-virtual {p0, v0, v1}, Lcom/android/server/am/ActivityManagerService;->enforceCallerIsRecentsOrHasPermission(Ljava/lang/String;Ljava/lang/String;)V

    .line 3762
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mTaskChangeNotificationController:Lcom/android/server/am/TaskChangeNotificationController;

    invoke-virtual {v0, p1}, Lcom/android/server/am/TaskChangeNotificationController;->unregisterTaskStackListener(Landroid/app/ITaskStackListener;)V

    .line 3763
    return-void
.end method

.method public unregisterUidObserver(Landroid/app/IUidObserver;)V
    .locals 1

    .line 14528
    monitor-enter p0

    :try_start_0
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    .line 14529
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mUidObservers:Landroid/os/RemoteCallbackList;

    invoke-virtual {v0, p1}, Landroid/os/RemoteCallbackList;->unregister(Landroid/os/IInterface;)Z

    .line 14530
    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    .line 14531
    return-void

    .line 14530
    :catchall_0
    move-exception p1

    :try_start_1
    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw p1
.end method

.method public unregisterUserSwitchObserver(Landroid/app/IUserSwitchObserver;)V
    .locals 1

    .line 26599
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mUserController:Lcom/android/server/am/UserController;

    invoke-virtual {v0, p1}, Lcom/android/server/am/UserController;->unregisterUserSwitchObserver(Landroid/app/IUserSwitchObserver;)V

    .line 26600
    return-void
.end method

.method public unstableProviderDied(Landroid/os/IBinder;)V
    .locals 3

    .line 13050
    :try_start_0
    move-object v0, p1

    check-cast v0, Lcom/android/server/am/ContentProviderConnection;
    :try_end_0
    .catch Ljava/lang/ClassCastException; {:try_start_0 .. :try_end_0} :catch_0

    .line 13056
    nop

    .line 13057
    if-eqz v0, :cond_5

    .line 13063
    monitor-enter p0

    :try_start_1
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    .line 13064
    iget-object p1, v0, Lcom/android/server/am/ContentProviderConnection;->provider:Lcom/android/server/am/ContentProviderRecord;

    iget-object p1, p1, Lcom/android/server/am/ContentProviderRecord;->provider:Landroid/content/IContentProvider;

    .line 13065
    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_3

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    .line 13067
    if-nez p1, :cond_0

    .line 13069
    return-void

    .line 13073
    :cond_0
    invoke-interface {p1}, Landroid/content/IContentProvider;->asBinder()Landroid/os/IBinder;

    move-result-object v1

    invoke-interface {v1}, Landroid/os/IBinder;->pingBinder()Z

    move-result v1

    if-eqz v1, :cond_1

    .line 13075
    monitor-enter p0

    :try_start_2
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    .line 13076
    const-string p1, "ActivityManager"

    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v2, "unstableProviderDied: caller "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v2

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v2, " says "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v1, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    const-string v0, " died, but we don\'t agree"

    invoke-virtual {v1, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    invoke-static {p1, v0}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 13078
    monitor-exit p0
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    return-void

    .line 13079
    :catchall_0
    move-exception p1

    :try_start_3
    monitor-exit p0
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw p1

    .line 13083
    :cond_1
    monitor-enter p0

    :try_start_4
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    .line 13084
    iget-object v1, v0, Lcom/android/server/am/ContentProviderConnection;->provider:Lcom/android/server/am/ContentProviderRecord;

    iget-object v1, v1, Lcom/android/server/am/ContentProviderRecord;->provider:Landroid/content/IContentProvider;

    if-eq v1, p1, :cond_2

    .line 13086
    monitor-exit p0
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_2

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    return-void

    .line 13089
    :cond_2
    :try_start_5
    iget-object p1, v0, Lcom/android/server/am/ContentProviderConnection;->provider:Lcom/android/server/am/ContentProviderRecord;

    iget-object p1, p1, Lcom/android/server/am/ContentProviderRecord;->proc:Lcom/android/server/am/ProcessRecord;

    .line 13090
    if-eqz p1, :cond_4

    iget-object v0, p1, Lcom/android/server/am/ProcessRecord;->thread:Landroid/app/IApplicationThread;

    if-nez v0, :cond_3

    goto :goto_0

    .line 13097
    :cond_3
    const-string v0, "ActivityManager"

    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string v2, "Process "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget-object v2, p1, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v2, " (pid "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget v2, p1, Lcom/android/server/am/ProcessRecord;->pid:I

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v2, ") early provider death"

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    iget-object v2, p1, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget v2, v2, Landroid/content/pm/ApplicationInfo;->uid:I

    invoke-virtual {p0, v0, v1, v2}, Lcom/android/server/am/ActivityManagerService;->reportUidInfoMessageLocked(Ljava/lang/String;Ljava/lang/String;I)V

    .line 13101
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v0
    :try_end_5
    .catchall {:try_start_5 .. :try_end_5} :catchall_2

    .line 13103
    :try_start_6
    invoke-virtual {p0, p1}, Lcom/android/server/am/ActivityManagerService;->appDiedLocked(Lcom/android/server/am/ProcessRecord;)V
    :try_end_6
    .catchall {:try_start_6 .. :try_end_6} :catchall_1

    .line 13105
    :try_start_7
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 13106
    nop

    .line 13107
    monitor-exit p0
    :try_end_7
    .catchall {:try_start_7 .. :try_end_7} :catchall_2

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    .line 13108
    return-void

    .line 13105
    :catchall_1
    move-exception p1

    :try_start_8
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    throw p1

    .line 13092
    :cond_4
    :goto_0
    monitor-exit p0
    :try_end_8
    .catchall {:try_start_8 .. :try_end_8} :catchall_2

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    return-void

    .line 13107
    :catchall_2
    move-exception p1

    :try_start_9
    monitor-exit p0
    :try_end_9
    .catchall {:try_start_9 .. :try_end_9} :catchall_2

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw p1

    .line 13065
    :catchall_3
    move-exception p1

    :try_start_a
    monitor-exit p0
    :try_end_a
    .catchall {:try_start_a .. :try_end_a} :catchall_3

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw p1

    .line 13058
    :cond_5
    new-instance p1, Ljava/lang/NullPointerException;

    const-string v0, "connection is null"

    invoke-direct {p1, v0}, Ljava/lang/NullPointerException;-><init>(Ljava/lang/String;)V

    throw p1

    .line 13051
    :catch_0
    move-exception v0

    .line 13052
    new-instance v0, Ljava/lang/StringBuilder;

    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v1, "refContentProvider: "

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    const-string p1, " not a ContentProviderConnection"

    invoke-virtual {v0, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object p1

    .line 13054
    const-string v0, "ActivityManager"

    invoke-static {v0, p1}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 13055
    new-instance v0, Ljava/lang/IllegalArgumentException;

    invoke-direct {v0, p1}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v0
.end method

.method updateApplicationInfoLocked(Ljava/util/List;I)V
    .locals 11
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "(",
            "Ljava/util/List<",
            "Ljava/lang/String;",
            ">;I)V"
        }
    .end annotation

    .line 27450
    const-string v0, "android"

    invoke-interface {p1, v0}, Ljava/util/List;->contains(Ljava/lang/Object;)Z

    move-result v0

    .line 27451
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mLruProcesses:Ljava/util/ArrayList;

    invoke-virtual {v1}, Ljava/util/ArrayList;->size()I

    move-result v1

    const/4 v2, 0x1

    sub-int/2addr v1, v2

    :goto_0
    if-ltz v1, :cond_6

    .line 27452
    iget-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mLruProcesses:Ljava/util/ArrayList;

    invoke-virtual {v3, v1}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v3

    check-cast v3, Lcom/android/server/am/ProcessRecord;

    .line 27453
    iget-object v4, v3, Lcom/android/server/am/ProcessRecord;->thread:Landroid/app/IApplicationThread;

    if-nez v4, :cond_0

    .line 27454
    goto :goto_3

    .line 27457
    :cond_0
    const/4 v4, -0x1

    if-eq p2, v4, :cond_1

    iget v4, v3, Lcom/android/server/am/ProcessRecord;->userId:I

    if-eq v4, p2, :cond_1

    .line 27458
    goto :goto_3

    .line 27461
    :cond_1
    iget-object v4, v3, Lcom/android/server/am/ProcessRecord;->pkgList:Landroid/util/ArrayMap;

    invoke-virtual {v4}, Landroid/util/ArrayMap;->size()I

    move-result v4

    .line 27462
    const/4 v5, 0x0

    move v6, v5

    :goto_1
    if-ge v6, v4, :cond_5

    .line 27463
    iget-object v7, v3, Lcom/android/server/am/ProcessRecord;->pkgList:Landroid/util/ArrayMap;

    invoke-virtual {v7, v6}, Landroid/util/ArrayMap;->keyAt(I)Ljava/lang/Object;

    move-result-object v7

    check-cast v7, Ljava/lang/String;

    .line 27464
    if-nez v0, :cond_2

    invoke-interface {p1, v7}, Ljava/util/List;->contains(Ljava/lang/Object;)Z

    move-result v8

    if-eqz v8, :cond_4

    .line 27466
    :cond_2
    :try_start_0
    invoke-static {}, Landroid/app/AppGlobals;->getPackageManager()Landroid/content/pm/IPackageManager;

    move-result-object v8

    const/16 v9, 0x400

    iget v10, v3, Lcom/android/server/am/ProcessRecord;->userId:I

    .line 27467
    invoke-interface {v8, v7, v9, v10}, Landroid/content/pm/IPackageManager;->getApplicationInfo(Ljava/lang/String;II)Landroid/content/pm/ApplicationInfo;

    move-result-object v8

    .line 27468
    if-eqz v8, :cond_3

    .line 27469
    iget-object v9, v3, Lcom/android/server/am/ProcessRecord;->thread:Landroid/app/IApplicationThread;

    invoke-interface {v9, v8}, Landroid/app/IApplicationThread;->scheduleApplicationInfoChanged(Landroid/content/pm/ApplicationInfo;)V
    :try_end_0
    .catch Landroid/os/RemoteException; {:try_start_0 .. :try_end_0} :catch_0

    .line 27474
    :cond_3
    goto :goto_2

    .line 27471
    :catch_0
    move-exception v8

    .line 27472
    const-string v8, "ActivityManager"

    const-string v9, "Failed to update %s ApplicationInfo for %s"

    const/4 v10, 0x2

    new-array v10, v10, [Ljava/lang/Object;

    aput-object v7, v10, v5

    aput-object v3, v10, v2

    invoke-static {v9, v10}, Ljava/lang/String;->format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;

    move-result-object v7

    invoke-static {v8, v7}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 27462
    :cond_4
    :goto_2
    add-int/lit8 v6, v6, 0x1

    goto :goto_1

    .line 27451
    :cond_5
    :goto_3
    add-int/lit8 v1, v1, -0x1

    goto :goto_0

    .line 27478
    :cond_6
    if-eqz v0, :cond_8

    .line 27481
    invoke-static {}, Landroid/app/ActivityThread;->currentActivityThread()Landroid/app/ActivityThread;

    move-result-object p1

    invoke-virtual {p1}, Landroid/app/ActivityThread;->getExecutor()Ljava/util/concurrent/Executor;

    move-result-object p1

    .line 27482
    const-class p2, Landroid/hardware/display/DisplayManagerInternal;

    .line 27483
    invoke-static {p2}, Lcom/android/server/LocalServices;->getService(Ljava/lang/Class;)Ljava/lang/Object;

    move-result-object p2

    check-cast p2, Landroid/hardware/display/DisplayManagerInternal;

    .line 27484
    if-eqz p2, :cond_7

    .line 27485
    invoke-static {p2}, Ljava/util/Objects;->requireNonNull(Ljava/lang/Object;)Ljava/lang/Object;

    new-instance v0, Lcom/android/server/am/-$$Lambda$ActivityManagerService$gATL8uvTPRd405IfefK1RL9bNqA;

    invoke-direct {v0, p2}, Lcom/android/server/am/-$$Lambda$ActivityManagerService$gATL8uvTPRd405IfefK1RL9bNqA;-><init>(Landroid/hardware/display/DisplayManagerInternal;)V

    invoke-interface {p1, v0}, Ljava/util/concurrent/Executor;->execute(Ljava/lang/Runnable;)V

    .line 27487
    :cond_7
    iget-object p2, p0, Lcom/android/server/am/ActivityManagerService;->mWindowManager:Lcom/android/server/wm/WindowManagerService;

    if-eqz p2, :cond_8

    .line 27488
    iget-object p2, p0, Lcom/android/server/am/ActivityManagerService;->mWindowManager:Lcom/android/server/wm/WindowManagerService;

    invoke-static {p2}, Ljava/util/Objects;->requireNonNull(Ljava/lang/Object;)Ljava/lang/Object;

    new-instance v0, Lcom/android/server/am/-$$Lambda$5hokEl5hcign5FXeGZdl53qh2zg;

    invoke-direct {v0, p2}, Lcom/android/server/am/-$$Lambda$5hokEl5hcign5FXeGZdl53qh2zg;-><init>(Lcom/android/server/wm/WindowManagerService;)V

    invoke-interface {p1, v0}, Ljava/util/concurrent/Executor;->execute(Ljava/lang/Runnable;)V

    .line 27491
    :cond_8
    return-void
.end method

.method public updateConfiguration(Landroid/content/res/Configuration;)Z
    .locals 11

    .line 22734
    const-string v0, "android.permission.CHANGE_CONFIGURATION"

    const-string/jumbo v1, "updateConfiguration()"

    invoke-virtual {p0, v0, v1}, Lcom/android/server/am/ActivityManagerService;->enforceCallingPermission(Ljava/lang/String;Ljava/lang/String;)V

    .line 22736
    monitor-enter p0

    :try_start_0
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    .line 22737
    const/4 v0, 0x0

    if-nez p1, :cond_0

    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mWindowManager:Lcom/android/server/wm/WindowManagerService;

    if-eqz v1, :cond_0

    .line 22739
    iget-object p1, p0, Lcom/android/server/am/ActivityManagerService;->mWindowManager:Lcom/android/server/wm/WindowManagerService;

    invoke-virtual {p1, v0}, Lcom/android/server/wm/WindowManagerService;->computeNewConfiguration(I)Landroid/content/res/Configuration;

    move-result-object p1

    .line 22742
    :cond_0
    move-object v2, p1

    iget-object p1, p0, Lcom/android/server/am/ActivityManagerService;->mWindowManager:Lcom/android/server/wm/WindowManagerService;

    if-eqz p1, :cond_1

    .line 22744
    iget-object p1, p0, Lcom/android/server/am/ActivityManagerService;->mProcessList:Lcom/android/server/am/ProcessList;

    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mWindowManager:Lcom/android/server/wm/WindowManagerService;

    invoke-virtual {p1, v1}, Lcom/android/server/am/ProcessList;->applyDisplaySize(Lcom/android/server/wm/WindowManagerService;)V

    .line 22747
    :cond_1
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v9
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_1

    .line 22749
    if-eqz v2, :cond_2

    .line 22750
    :try_start_1
    invoke-static {v2}, Landroid/provider/Settings$System;->clearConfiguration(Landroid/content/res/Configuration;)V

    goto :goto_0

    .line 22757
    :catchall_0
    move-exception p1

    goto :goto_1

    .line 22752
    :cond_2
    :goto_0
    const/4 v3, 0x0

    const/4 v4, 0x0

    const/4 v5, 0x0

    const/16 v6, -0x2710

    const/4 v7, 0x0

    iget-object v8, p0, Lcom/android/server/am/ActivityManagerService;->mTmpUpdateConfigurationResult:Lcom/android/server/am/ActivityManagerService$UpdateConfigurationResult;

    move-object v1, p0

    invoke-direct/range {v1 .. v8}, Lcom/android/server/am/ActivityManagerService;->updateConfigurationLocked(Landroid/content/res/Configuration;Lcom/android/server/am/ActivityRecord;ZZIZLcom/android/server/am/ActivityManagerService$UpdateConfigurationResult;)Z

    .line 22755
    iget-object p1, p0, Lcom/android/server/am/ActivityManagerService;->mTmpUpdateConfigurationResult:Lcom/android/server/am/ActivityManagerService$UpdateConfigurationResult;

    iget p1, p1, Lcom/android/server/am/ActivityManagerService$UpdateConfigurationResult;->changes:I
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    if-eqz p1, :cond_3

    const/4 v0, 0x1

    nop

    .line 22757
    :cond_3
    :try_start_2
    invoke-static {v9, v10}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    monitor-exit p0
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_1

    .line 22755
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    return v0

    .line 22757
    :goto_1
    :try_start_3
    invoke-static {v9, v10}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    throw p1

    .line 22759
    :catchall_1
    move-exception p1

    monitor-exit p0
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_1

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw p1
.end method

.method updateConfigurationLocked(Landroid/content/res/Configuration;Lcom/android/server/am/ActivityRecord;Z)Z
    .locals 1

    .line 22773
    const/4 v0, 0x0

    invoke-virtual {p0, p1, p2, p3, v0}, Lcom/android/server/am/ActivityManagerService;->updateConfigurationLocked(Landroid/content/res/Configuration;Lcom/android/server/am/ActivityRecord;ZZ)Z

    move-result p1

    return p1
.end method

.method updateConfigurationLocked(Landroid/content/res/Configuration;Lcom/android/server/am/ActivityRecord;ZZ)Z
    .locals 7

    .line 22779
    const/4 v4, 0x0

    const/16 v5, -0x2710

    move-object v0, p0

    move-object v1, p1

    move-object v2, p2

    move v3, p3

    move v6, p4

    invoke-direct/range {v0 .. v6}, Lcom/android/server/am/ActivityManagerService;->updateConfigurationLocked(Landroid/content/res/Configuration;Lcom/android/server/am/ActivityRecord;ZZIZ)Z

    move-result p1

    return p1
.end method

.method updateCpuStats()V
    .locals 6

    .line 3422
    invoke-static {}, Landroid/os/SystemClock;->uptimeMillis()J

    move-result-wide v0

    .line 3423
    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mLastCpuTime:Ljava/util/concurrent/atomic/AtomicLong;

    invoke-virtual {v2}, Ljava/util/concurrent/atomic/AtomicLong;->get()J

    move-result-wide v2

    const-wide/16 v4, 0x2710

    sub-long/2addr v0, v4

    cmp-long v0, v2, v0

    if-ltz v0, :cond_0

    .line 3424
    return-void

    .line 3426
    :cond_0
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mProcessCpuMutexFree:Ljava/util/concurrent/atomic/AtomicBoolean;

    const/4 v1, 0x1

    const/4 v2, 0x0

    invoke-virtual {v0, v1, v2}, Ljava/util/concurrent/atomic/AtomicBoolean;->compareAndSet(ZZ)Z

    move-result v0

    if-eqz v0, :cond_1

    .line 3427
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mProcessCpuThread:Ljava/lang/Thread;

    monitor-enter v0

    .line 3428
    :try_start_0
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mProcessCpuThread:Ljava/lang/Thread;

    invoke-virtual {v1}, Ljava/lang/Object;->notify()V

    .line 3429
    monitor-exit v0

    goto :goto_0

    :catchall_0
    move-exception v1

    monitor-exit v0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    throw v1

    .line 3431
    :cond_1
    :goto_0
    return-void
.end method

.method updateCpuStatsNow()V
    .locals 16

    .line 3434
    move-object/from16 v0, p0

    iget-object v1, v0, Lcom/android/server/am/ActivityManagerService;->mProcessCpuTracker:Lcom/android/internal/os/ProcessCpuTracker;

    monitor-enter v1

    .line 3435
    :try_start_0
    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mProcessCpuMutexFree:Ljava/util/concurrent/atomic/AtomicBoolean;

    const/4 v3, 0x0

    invoke-virtual {v2, v3}, Ljava/util/concurrent/atomic/AtomicBoolean;->set(Z)V

    .line 3436
    invoke-static {}, Landroid/os/SystemClock;->uptimeMillis()J

    move-result-wide v4

    .line 3437
    nop

    .line 3439
    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mLastCpuTime:Ljava/util/concurrent/atomic/AtomicLong;

    .line 3440
    invoke-virtual {v2}, Ljava/util/concurrent/atomic/AtomicLong;->get()J

    move-result-wide v6

    const-wide/16 v8, 0x2710

    sub-long v8, v4, v8

    cmp-long v2, v6, v8

    const/4 v6, 0x1

    if-gez v2, :cond_1

    .line 3441
    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mLastCpuTime:Ljava/util/concurrent/atomic/AtomicLong;

    invoke-virtual {v2, v4, v5}, Ljava/util/concurrent/atomic/AtomicLong;->set(J)V

    .line 3442
    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mProcessCpuTracker:Lcom/android/internal/os/ProcessCpuTracker;

    invoke-virtual {v2}, Lcom/android/internal/os/ProcessCpuTracker;->update()V

    .line 3443
    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mProcessCpuTracker:Lcom/android/internal/os/ProcessCpuTracker;

    invoke-virtual {v2}, Lcom/android/internal/os/ProcessCpuTracker;->hasGoodLastStats()Z

    move-result v2

    if-eqz v2, :cond_1

    .line 3444
    nop

    .line 3450
    const-string/jumbo v2, "true"

    const-string v7, "events.cpu"

    invoke-static {v7}, Landroid/os/SystemProperties;->get(Ljava/lang/String;)Ljava/lang/String;

    move-result-object v7

    invoke-virtual {v2, v7}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v2

    if-eqz v2, :cond_2

    .line 3451
    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mProcessCpuTracker:Lcom/android/internal/os/ProcessCpuTracker;

    invoke-virtual {v2}, Lcom/android/internal/os/ProcessCpuTracker;->getLastUserTime()I

    move-result v2

    .line 3452
    iget-object v7, v0, Lcom/android/server/am/ActivityManagerService;->mProcessCpuTracker:Lcom/android/internal/os/ProcessCpuTracker;

    invoke-virtual {v7}, Lcom/android/internal/os/ProcessCpuTracker;->getLastSystemTime()I

    move-result v7

    .line 3453
    iget-object v8, v0, Lcom/android/server/am/ActivityManagerService;->mProcessCpuTracker:Lcom/android/internal/os/ProcessCpuTracker;

    invoke-virtual {v8}, Lcom/android/internal/os/ProcessCpuTracker;->getLastIoWaitTime()I

    move-result v8

    .line 3454
    iget-object v9, v0, Lcom/android/server/am/ActivityManagerService;->mProcessCpuTracker:Lcom/android/internal/os/ProcessCpuTracker;

    invoke-virtual {v9}, Lcom/android/internal/os/ProcessCpuTracker;->getLastIrqTime()I

    move-result v9

    .line 3455
    iget-object v10, v0, Lcom/android/server/am/ActivityManagerService;->mProcessCpuTracker:Lcom/android/internal/os/ProcessCpuTracker;

    invoke-virtual {v10}, Lcom/android/internal/os/ProcessCpuTracker;->getLastSoftIrqTime()I

    move-result v10

    .line 3456
    iget-object v11, v0, Lcom/android/server/am/ActivityManagerService;->mProcessCpuTracker:Lcom/android/internal/os/ProcessCpuTracker;

    invoke-virtual {v11}, Lcom/android/internal/os/ProcessCpuTracker;->getLastIdleTime()I

    move-result v11

    .line 3458
    add-int v12, v2, v7

    add-int/2addr v12, v8

    add-int/2addr v12, v9

    add-int/2addr v12, v10

    add-int/2addr v11, v12

    .line 3459
    if-nez v11, :cond_0

    .line 3461
    move v11, v6

    :cond_0
    const/16 v13, 0xaa1

    const/4 v14, 0x6

    new-array v14, v14, [Ljava/lang/Object;

    mul-int/lit8 v12, v12, 0x64

    div-int/2addr v12, v11

    .line 3462
    invoke-static {v12}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v12

    aput-object v12, v14, v3

    mul-int/lit8 v2, v2, 0x64

    div-int/2addr v2, v11

    .line 3463
    invoke-static {v2}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v2

    aput-object v2, v14, v6

    const/4 v2, 0x2

    mul-int/lit8 v7, v7, 0x64

    div-int/2addr v7, v11

    .line 3464
    invoke-static {v7}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v7

    aput-object v7, v14, v2

    const/4 v2, 0x3

    mul-int/lit8 v8, v8, 0x64

    div-int/2addr v8, v11

    .line 3465
    invoke-static {v8}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v7

    aput-object v7, v14, v2

    const/4 v2, 0x4

    mul-int/lit8 v9, v9, 0x64

    div-int/2addr v9, v11

    .line 3466
    invoke-static {v9}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v7

    aput-object v7, v14, v2

    const/4 v2, 0x5

    mul-int/lit8 v10, v10, 0x64

    div-int/2addr v10, v11

    .line 3467
    invoke-static {v10}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v7

    aput-object v7, v14, v2

    .line 3461
    invoke-static {v13, v14}, Landroid/util/EventLog;->writeEvent(I[Ljava/lang/Object;)I

    goto :goto_0

    .line 3472
    :cond_1
    move v6, v3

    :cond_2
    :goto_0
    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mBatteryStatsService:Lcom/android/server/am/BatteryStatsService;

    invoke-virtual {v2}, Lcom/android/server/am/BatteryStatsService;->getActiveStatistics()Lcom/android/internal/os/BatteryStatsImpl;

    move-result-object v2

    .line 3473
    monitor-enter v2
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_3

    .line 3474
    :try_start_1
    iget-object v15, v0, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Landroid/util/SparseArray;

    monitor-enter v15
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_2

    .line 3475
    if-eqz v6, :cond_b

    .line 3476
    :try_start_2
    invoke-virtual {v2}, Lcom/android/internal/os/BatteryStatsImpl;->startAddingCpuLocked()Z

    move-result v6

    if-eqz v6, :cond_b

    .line 3477
    nop

    .line 3478
    nop

    .line 3479
    iget-object v6, v0, Lcom/android/server/am/ActivityManagerService;->mProcessCpuTracker:Lcom/android/internal/os/ProcessCpuTracker;

    invoke-virtual {v6}, Lcom/android/internal/os/ProcessCpuTracker;->countStats()I

    move-result v6

    .line 3480
    move v8, v3

    move v9, v8

    :goto_1
    if-ge v3, v6, :cond_a

    .line 3481
    iget-object v7, v0, Lcom/android/server/am/ActivityManagerService;->mProcessCpuTracker:Lcom/android/internal/os/ProcessCpuTracker;

    invoke-virtual {v7, v3}, Lcom/android/internal/os/ProcessCpuTracker;->getStats(I)Lcom/android/internal/os/ProcessCpuTracker$Stats;

    move-result-object v7

    .line 3482
    iget-boolean v10, v7, Lcom/android/internal/os/ProcessCpuTracker$Stats;->working:Z

    if-nez v10, :cond_3

    .line 3483
    goto :goto_2

    .line 3485
    :cond_3
    iget-object v10, v0, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Landroid/util/SparseArray;

    iget v11, v7, Lcom/android/internal/os/ProcessCpuTracker$Stats;->pid:I

    invoke-virtual {v10, v11}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    move-result-object v10

    check-cast v10, Lcom/android/server/am/ProcessRecord;

    .line 3486
    iget v11, v7, Lcom/android/internal/os/ProcessCpuTracker$Stats;->rel_utime:I

    add-int/2addr v8, v11

    .line 3487
    iget v11, v7, Lcom/android/internal/os/ProcessCpuTracker$Stats;->rel_stime:I

    add-int/2addr v9, v11

    .line 3488
    if-eqz v10, :cond_7

    .line 3489
    iget-object v11, v10, Lcom/android/server/am/ProcessRecord;->curProcBatteryStats:Lcom/android/internal/os/BatteryStatsImpl$Uid$Proc;

    .line 3490
    if-eqz v11, :cond_4

    invoke-virtual {v11}, Lcom/android/internal/os/BatteryStatsImpl$Uid$Proc;->isActive()Z

    move-result v12

    if-nez v12, :cond_5

    .line 3491
    :cond_4
    iget-object v11, v10, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget v11, v11, Landroid/content/pm/ApplicationInfo;->uid:I

    iget-object v12, v10, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;

    invoke-virtual {v2, v11, v12}, Lcom/android/internal/os/BatteryStatsImpl;->getProcessStatsLocked(ILjava/lang/String;)Lcom/android/internal/os/BatteryStatsImpl$Uid$Proc;

    move-result-object v11

    iput-object v11, v10, Lcom/android/server/am/ProcessRecord;->curProcBatteryStats:Lcom/android/internal/os/BatteryStatsImpl$Uid$Proc;

    .line 3494
    :cond_5
    iget v12, v7, Lcom/android/internal/os/ProcessCpuTracker$Stats;->rel_utime:I

    iget v13, v7, Lcom/android/internal/os/ProcessCpuTracker$Stats;->rel_stime:I

    invoke-virtual {v11, v12, v13}, Lcom/android/internal/os/BatteryStatsImpl$Uid$Proc;->addCpuTimeLocked(II)V

    .line 3495
    iget-wide v11, v10, Lcom/android/server/am/ProcessRecord;->curCpuTime:J

    iget v13, v7, Lcom/android/internal/os/ProcessCpuTracker$Stats;->rel_utime:I

    iget v7, v7, Lcom/android/internal/os/ProcessCpuTracker$Stats;->rel_stime:I

    add-int/2addr v13, v7

    int-to-long v13, v13

    add-long/2addr v11, v13

    iput-wide v11, v10, Lcom/android/server/am/ProcessRecord;->curCpuTime:J

    .line 3496
    iget-wide v11, v10, Lcom/android/server/am/ProcessRecord;->lastCpuTime:J

    const-wide/16 v13, 0x0

    cmp-long v7, v11, v13

    if-nez v7, :cond_6

    .line 3497
    iget-wide v11, v10, Lcom/android/server/am/ProcessRecord;->curCpuTime:J

    iput-wide v11, v10, Lcom/android/server/am/ProcessRecord;->lastCpuTime:J

    .line 3499
    :cond_6
    goto :goto_2

    .line 3500
    :cond_7
    iget-object v10, v7, Lcom/android/internal/os/ProcessCpuTracker$Stats;->batteryStats:Lcom/android/internal/os/BatteryStatsImpl$Uid$Proc;

    .line 3501
    if-eqz v10, :cond_8

    invoke-virtual {v10}, Lcom/android/internal/os/BatteryStatsImpl$Uid$Proc;->isActive()Z

    move-result v11

    if-nez v11, :cond_9

    .line 3502
    :cond_8
    iget v10, v7, Lcom/android/internal/os/ProcessCpuTracker$Stats;->uid:I

    .line 3503
    invoke-virtual {v2, v10}, Lcom/android/internal/os/BatteryStatsImpl;->mapUid(I)I

    move-result v10

    iget-object v11, v7, Lcom/android/internal/os/ProcessCpuTracker$Stats;->name:Ljava/lang/String;

    .line 3502
    invoke-virtual {v2, v10, v11}, Lcom/android/internal/os/BatteryStatsImpl;->getProcessStatsLocked(ILjava/lang/String;)Lcom/android/internal/os/BatteryStatsImpl$Uid$Proc;

    move-result-object v10

    iput-object v10, v7, Lcom/android/internal/os/ProcessCpuTracker$Stats;->batteryStats:Lcom/android/internal/os/BatteryStatsImpl$Uid$Proc;

    .line 3505
    :cond_9
    iget v11, v7, Lcom/android/internal/os/ProcessCpuTracker$Stats;->rel_utime:I

    iget v7, v7, Lcom/android/internal/os/ProcessCpuTracker$Stats;->rel_stime:I

    invoke-virtual {v10, v11, v7}, Lcom/android/internal/os/BatteryStatsImpl$Uid$Proc;->addCpuTimeLocked(II)V

    .line 3480
    :goto_2
    add-int/lit8 v3, v3, 0x1

    goto :goto_1

    .line 3508
    :cond_a
    iget-object v3, v0, Lcom/android/server/am/ActivityManagerService;->mProcessCpuTracker:Lcom/android/internal/os/ProcessCpuTracker;

    invoke-virtual {v3}, Lcom/android/internal/os/ProcessCpuTracker;->getLastUserTime()I

    move-result v10

    .line 3509
    iget-object v3, v0, Lcom/android/server/am/ActivityManagerService;->mProcessCpuTracker:Lcom/android/internal/os/ProcessCpuTracker;

    invoke-virtual {v3}, Lcom/android/internal/os/ProcessCpuTracker;->getLastSystemTime()I

    move-result v11

    .line 3510
    iget-object v3, v0, Lcom/android/server/am/ActivityManagerService;->mProcessCpuTracker:Lcom/android/internal/os/ProcessCpuTracker;

    invoke-virtual {v3}, Lcom/android/internal/os/ProcessCpuTracker;->getLastIoWaitTime()I

    move-result v12

    .line 3511
    iget-object v3, v0, Lcom/android/server/am/ActivityManagerService;->mProcessCpuTracker:Lcom/android/internal/os/ProcessCpuTracker;

    invoke-virtual {v3}, Lcom/android/internal/os/ProcessCpuTracker;->getLastIrqTime()I

    move-result v13

    .line 3512
    iget-object v3, v0, Lcom/android/server/am/ActivityManagerService;->mProcessCpuTracker:Lcom/android/internal/os/ProcessCpuTracker;

    invoke-virtual {v3}, Lcom/android/internal/os/ProcessCpuTracker;->getLastSoftIrqTime()I

    move-result v14

    .line 3513
    iget-object v3, v0, Lcom/android/server/am/ActivityManagerService;->mProcessCpuTracker:Lcom/android/internal/os/ProcessCpuTracker;

    invoke-virtual {v3}, Lcom/android/internal/os/ProcessCpuTracker;->getLastIdleTime()I

    move-result v3
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    .line 3514
    move-object v7, v2

    move-object v6, v15

    move v15, v3

    :try_start_3
    invoke-virtual/range {v7 .. v15}, Lcom/android/internal/os/BatteryStatsImpl;->finishAddingCpuLocked(IIIIIIII)V

    goto :goto_3

    .line 3518
    :catchall_0
    move-exception v0

    move-object v6, v15

    goto :goto_4

    :cond_b
    move-object v6, v15

    :goto_3
    monitor-exit v6
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_1

    .line 3520
    :try_start_4
    iget-wide v6, v0, Lcom/android/server/am/ActivityManagerService;->mLastWriteTime:J

    const-wide/32 v8, 0x2932e0

    sub-long v8, v4, v8

    cmp-long v3, v6, v8

    if-gez v3, :cond_c

    .line 3521
    iput-wide v4, v0, Lcom/android/server/am/ActivityManagerService;->mLastWriteTime:J

    .line 3522
    iget-object v0, v0, Lcom/android/server/am/ActivityManagerService;->mBatteryStatsService:Lcom/android/server/am/BatteryStatsService;

    invoke-virtual {v0}, Lcom/android/server/am/BatteryStatsService;->scheduleWriteToDisk()V

    .line 3524
    :cond_c
    monitor-exit v2
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_2

    .line 3525
    :try_start_5
    monitor-exit v1
    :try_end_5
    .catchall {:try_start_5 .. :try_end_5} :catchall_3

    .line 3526
    return-void

    .line 3518
    :catchall_1
    move-exception v0

    :goto_4
    :try_start_6
    monitor-exit v6
    :try_end_6
    .catchall {:try_start_6 .. :try_end_6} :catchall_1

    :try_start_7
    throw v0

    .line 3524
    :catchall_2
    move-exception v0

    monitor-exit v2
    :try_end_7
    .catchall {:try_start_7 .. :try_end_7} :catchall_2

    :try_start_8
    throw v0

    .line 3525
    :catchall_3
    move-exception v0

    monitor-exit v1
    :try_end_8
    .catchall {:try_start_8 .. :try_end_8} :catchall_3

    throw v0
.end method

.method public updateDeviceOwner(Ljava/lang/String;)V
    .locals 2

    .line 11880
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v0

    .line 11881
    if-eqz v0, :cond_1

    const/16 v1, 0x3e8

    if-ne v0, v1, :cond_0

    goto :goto_0

    .line 11882
    :cond_0
    new-instance p1, Ljava/lang/SecurityException;

    const-string/jumbo v0, "updateDeviceOwner called from non-system process"

    invoke-direct {p1, v0}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw p1

    .line 11884
    :cond_1
    :goto_0
    monitor-enter p0

    :try_start_0
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    .line 11885
    iput-object p1, p0, Lcom/android/server/am/ActivityManagerService;->mDeviceOwnerName:Ljava/lang/String;

    .line 11886
    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    .line 11887
    return-void

    .line 11886
    :catchall_0
    move-exception p1

    :try_start_1
    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw p1
.end method

.method public updateDisplayOverrideConfiguration(Landroid/content/res/Configuration;I)Z
    .locals 10

    .line 22985
    const-string v0, "android.permission.CHANGE_CONFIGURATION"

    const-string/jumbo v1, "updateDisplayOverrideConfiguration()"

    invoke-virtual {p0, v0, v1}, Lcom/android/server/am/ActivityManagerService;->enforceCallingPermission(Ljava/lang/String;Ljava/lang/String;)V

    .line 22987
    monitor-enter p0

    :try_start_0
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    .line 22989
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mStackSupervisor:Lcom/android/server/am/ActivityStackSupervisor;

    invoke-virtual {v0, p2}, Lcom/android/server/am/ActivityStackSupervisor;->isDisplayAdded(I)Z

    move-result v0

    const/4 v1, 0x0

    if-nez v0, :cond_0

    .line 22995
    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_1

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    return v1

    .line 22998
    :cond_0
    if-nez p1, :cond_1

    :try_start_1
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mWindowManager:Lcom/android/server/wm/WindowManagerService;

    if-eqz v0, :cond_1

    .line 23000
    iget-object p1, p0, Lcom/android/server/am/ActivityManagerService;->mWindowManager:Lcom/android/server/wm/WindowManagerService;

    invoke-virtual {p1, p2}, Lcom/android/server/wm/WindowManagerService;->computeNewConfiguration(I)Landroid/content/res/Configuration;

    move-result-object p1

    .line 23003
    :cond_1
    move-object v3, p1

    iget-object p1, p0, Lcom/android/server/am/ActivityManagerService;->mWindowManager:Lcom/android/server/wm/WindowManagerService;

    if-eqz p1, :cond_2

    .line 23005
    iget-object p1, p0, Lcom/android/server/am/ActivityManagerService;->mProcessList:Lcom/android/server/am/ProcessList;

    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mWindowManager:Lcom/android/server/wm/WindowManagerService;

    invoke-virtual {p1, v0}, Lcom/android/server/am/ProcessList;->applyDisplaySize(Lcom/android/server/wm/WindowManagerService;)V

    .line 23008
    :cond_2
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v8
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_1

    .line 23010
    if-eqz v3, :cond_3

    .line 23011
    :try_start_2
    invoke-static {v3}, Landroid/provider/Settings$System;->clearConfiguration(Landroid/content/res/Configuration;)V

    goto :goto_0

    .line 23017
    :catchall_0
    move-exception p1

    goto :goto_1

    .line 23013
    :cond_3
    :goto_0
    const/4 v4, 0x0

    const/4 v5, 0x0

    iget-object v7, p0, Lcom/android/server/am/ActivityManagerService;->mTmpUpdateConfigurationResult:Lcom/android/server/am/ActivityManagerService$UpdateConfigurationResult;

    move-object v2, p0

    move v6, p2

    invoke-direct/range {v2 .. v7}, Lcom/android/server/am/ActivityManagerService;->updateDisplayOverrideConfigurationLocked(Landroid/content/res/Configuration;Lcom/android/server/am/ActivityRecord;ZILcom/android/server/am/ActivityManagerService$UpdateConfigurationResult;)Z

    .line 23015
    iget-object p1, p0, Lcom/android/server/am/ActivityManagerService;->mTmpUpdateConfigurationResult:Lcom/android/server/am/ActivityManagerService$UpdateConfigurationResult;

    iget p1, p1, Lcom/android/server/am/ActivityManagerService$UpdateConfigurationResult;->changes:I
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    if-eqz p1, :cond_4

    const/4 v1, 0x1

    nop

    .line 23017
    :cond_4
    :try_start_3
    invoke-static {v8, v9}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    monitor-exit p0
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_1

    .line 23015
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    return v1

    .line 23017
    :goto_1
    :try_start_4
    invoke-static {v8, v9}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    throw p1

    .line 23019
    :catchall_1
    move-exception p1

    monitor-exit p0
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_1

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw p1
.end method

.method updateDisplayOverrideConfigurationLocked(Landroid/content/res/Configuration;Lcom/android/server/am/ActivityRecord;ZI)Z
    .locals 6

    .line 23024
    const/4 v5, 0x0

    move-object v0, p0

    move-object v1, p1

    move-object v2, p2

    move v3, p3

    move v4, p4

    invoke-direct/range {v0 .. v5}, Lcom/android/server/am/ActivityManagerService;->updateDisplayOverrideConfigurationLocked(Landroid/content/res/Configuration;Lcom/android/server/am/ActivityRecord;ZILcom/android/server/am/ActivityManagerService$UpdateConfigurationResult;)Z

    move-result p1

    return p1
.end method

.method public updateLockTaskFeatures(II)V
    .locals 2

    .line 11905
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v0

    .line 11906
    if-eqz v0, :cond_0

    const/16 v1, 0x3e8

    if-eq v0, v1, :cond_0

    .line 11907
    const-string v0, "android.permission.UPDATE_LOCK_TASK_PACKAGES"

    const-string/jumbo v1, "updateLockTaskFeatures()"

    invoke-virtual {p0, v0, v1}, Lcom/android/server/am/ActivityManagerService;->enforceCallingPermission(Ljava/lang/String;Ljava/lang/String;)V

    .line 11910
    :cond_0
    monitor-enter p0

    :try_start_0
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    .line 11913
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mLockTaskController:Lcom/android/server/am/LockTaskController;

    invoke-virtual {v0, p1, p2}, Lcom/android/server/am/LockTaskController;->updateLockTaskFeatures(II)V

    .line 11914
    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    .line 11915
    return-void

    .line 11914
    :catchall_0
    move-exception p1

    :try_start_1
    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw p1
.end method

.method public updateLockTaskPackages(I[Ljava/lang/String;)V
    .locals 2

    .line 11891
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v0

    .line 11892
    if-eqz v0, :cond_0

    const/16 v1, 0x3e8

    if-eq v0, v1, :cond_0

    .line 11893
    const-string v0, "android.permission.UPDATE_LOCK_TASK_PACKAGES"

    const-string/jumbo v1, "updateLockTaskPackages()"

    invoke-virtual {p0, v0, v1}, Lcom/android/server/am/ActivityManagerService;->enforceCallingPermission(Ljava/lang/String;Ljava/lang/String;)V

    .line 11896
    :cond_0
    monitor-enter p0

    :try_start_0
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    .line 11899
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mLockTaskController:Lcom/android/server/am/LockTaskController;

    invoke-virtual {v0, p1, p2}, Lcom/android/server/am/LockTaskController;->updateLockTaskPackages(I[Ljava/lang/String;)V

    .line 11900
    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    .line 11901
    return-void

    .line 11900
    :catchall_0
    move-exception p1

    :try_start_1
    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw p1
.end method

.method final updateLruProcessLocked(Lcom/android/server/am/ProcessRecord;ZLcom/android/server/am/ProcessRecord;)V
    .locals 12

    .line 3902
    iget-object v0, p1, Lcom/android/server/am/ProcessRecord;->activities:Ljava/util/ArrayList;

    invoke-virtual {v0}, Ljava/util/ArrayList;->size()I

    move-result v0

    const/4 v1, 0x1

    if-gtz v0, :cond_1

    iget-boolean v0, p1, Lcom/android/server/am/ProcessRecord;->hasClientActivities:Z

    if-nez v0, :cond_1

    iget-boolean v0, p1, Lcom/android/server/am/ProcessRecord;->treatLikeActivity:Z

    if-nez v0, :cond_1

    iget-object v0, p1, Lcom/android/server/am/ProcessRecord;->recentTasks:Ljava/util/ArrayList;

    .line 3903
    invoke-virtual {v0}, Ljava/util/ArrayList;->size()I

    move-result v0

    if-lez v0, :cond_0

    goto :goto_0

    :cond_0
    const/4 v0, 0x0

    goto :goto_1

    .line 3905
    :cond_1
    :goto_0
    move v0, v1

    :goto_1
    if-nez p2, :cond_2

    if-eqz v0, :cond_2

    .line 3910
    return-void

    .line 3913
    :cond_2
    iget p2, p0, Lcom/android/server/am/ActivityManagerService;->mLruSeq:I

    add-int/2addr p2, v1

    iput p2, p0, Lcom/android/server/am/ActivityManagerService;->mLruSeq:I

    .line 3914
    invoke-static {}, Landroid/os/SystemClock;->uptimeMillis()J

    move-result-wide v10

    .line 3915
    iput-wide v10, p1, Lcom/android/server/am/ProcessRecord;->lastActivityTime:J

    .line 3919
    if-eqz v0, :cond_4

    .line 3920
    iget-object p2, p0, Lcom/android/server/am/ActivityManagerService;->mLruProcesses:Ljava/util/ArrayList;

    invoke-virtual {p2}, Ljava/util/ArrayList;->size()I

    move-result p2

    .line 3921
    if-lez p2, :cond_3

    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mLruProcesses:Ljava/util/ArrayList;

    sub-int/2addr p2, v1

    invoke-virtual {v2, p2}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object p2

    if-ne p2, p1, :cond_3

    .line 3923
    return-void

    .line 3925
    :cond_3
    goto :goto_2

    .line 3926
    :cond_4
    iget p2, p0, Lcom/android/server/am/ActivityManagerService;->mLruProcessServiceStart:I

    if-lez p2, :cond_5

    iget-object p2, p0, Lcom/android/server/am/ActivityManagerService;->mLruProcesses:Ljava/util/ArrayList;

    iget v2, p0, Lcom/android/server/am/ActivityManagerService;->mLruProcessServiceStart:I

    sub-int/2addr v2, v1

    .line 3927
    invoke-virtual {p2, v2}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object p2

    if-ne p2, p1, :cond_5

    .line 3929
    return-void

    .line 3933
    :cond_5
    :goto_2
    iget-object p2, p0, Lcom/android/server/am/ActivityManagerService;->mLruProcesses:Ljava/util/ArrayList;

    invoke-virtual {p2, p1}, Ljava/util/ArrayList;->lastIndexOf(Ljava/lang/Object;)I

    move-result p2

    .line 3935
    iget-boolean v2, p1, Lcom/android/server/am/ProcessRecord;->persistent:Z

    if-eqz v2, :cond_6

    if-ltz p2, :cond_6

    .line 3939
    return-void

    .line 3976
    :cond_6
    if-ltz p2, :cond_9

    .line 3977
    iget v2, p0, Lcom/android/server/am/ActivityManagerService;->mLruProcessActivityStart:I

    if-ge p2, v2, :cond_7

    .line 3978
    iget v2, p0, Lcom/android/server/am/ActivityManagerService;->mLruProcessActivityStart:I

    sub-int/2addr v2, v1

    iput v2, p0, Lcom/android/server/am/ActivityManagerService;->mLruProcessActivityStart:I

    .line 3980
    :cond_7
    iget v2, p0, Lcom/android/server/am/ActivityManagerService;->mLruProcessServiceStart:I

    if-ge p2, v2, :cond_8

    .line 3981
    iget v2, p0, Lcom/android/server/am/ActivityManagerService;->mLruProcessServiceStart:I

    sub-int/2addr v2, v1

    iput v2, p0, Lcom/android/server/am/ActivityManagerService;->mLruProcessServiceStart:I

    .line 3991
    :cond_8
    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mLruProcesses:Ljava/util/ArrayList;

    invoke-virtual {v2, p2}, Ljava/util/ArrayList;->remove(I)Ljava/lang/Object;

    .line 4005
    :cond_9
    if-eqz v0, :cond_e

    .line 4006
    iget-object p2, p0, Lcom/android/server/am/ActivityManagerService;->mLruProcesses:Ljava/util/ArrayList;

    invoke-virtual {p2}, Ljava/util/ArrayList;->size()I

    move-result p2

    .line 4007
    iget-object p3, p1, Lcom/android/server/am/ProcessRecord;->activities:Ljava/util/ArrayList;

    invoke-virtual {p3}, Ljava/util/ArrayList;->size()I

    move-result p3

    if-eqz p3, :cond_a

    iget-object p3, p1, Lcom/android/server/am/ProcessRecord;->recentTasks:Ljava/util/ArrayList;

    invoke-virtual {p3}, Ljava/util/ArrayList;->size()I

    move-result p3

    if-lez p3, :cond_d

    :cond_a
    iget p3, p0, Lcom/android/server/am/ActivityManagerService;->mLruProcessActivityStart:I

    add-int/lit8 v0, p2, -0x1

    if-ge p3, v0, :cond_d

    .line 4014
    iget-object p3, p0, Lcom/android/server/am/ActivityManagerService;->mLruProcesses:Ljava/util/ArrayList;

    invoke-virtual {p3, v0, p1}, Ljava/util/ArrayList;->add(ILjava/lang/Object;)V

    .line 4017
    iget-object p3, p1, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget p3, p3, Landroid/content/pm/ApplicationInfo;->uid:I

    .line 4018
    add-int/lit8 p2, p2, -0x2

    :goto_3
    iget v0, p0, Lcom/android/server/am/ActivityManagerService;->mLruProcessActivityStart:I

    if-le p2, v0, :cond_c

    .line 4019
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mLruProcesses:Ljava/util/ArrayList;

    invoke-virtual {v0, p2}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Lcom/android/server/am/ProcessRecord;

    .line 4020
    iget-object v0, v0, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget v0, v0, Landroid/content/pm/ApplicationInfo;->uid:I

    if-ne v0, p3, :cond_c

    .line 4024
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mLruProcesses:Ljava/util/ArrayList;

    add-int/lit8 v2, p2, -0x1

    invoke-virtual {v0, v2}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Lcom/android/server/am/ProcessRecord;

    iget-object v0, v0, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget v0, v0, Landroid/content/pm/ApplicationInfo;->uid:I

    if-eq v0, p3, :cond_b

    .line 4028
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mLruProcesses:Ljava/util/ArrayList;

    invoke-virtual {v0, p2}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Lcom/android/server/am/ProcessRecord;

    .line 4029
    iget-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mLruProcesses:Ljava/util/ArrayList;

    iget-object v4, p0, Lcom/android/server/am/ActivityManagerService;->mLruProcesses:Ljava/util/ArrayList;

    invoke-virtual {v4, v2}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v4

    check-cast v4, Lcom/android/server/am/ProcessRecord;

    invoke-virtual {v3, p2, v4}, Ljava/util/ArrayList;->set(ILjava/lang/Object;)Ljava/lang/Object;

    .line 4030
    iget-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mLruProcesses:Ljava/util/ArrayList;

    invoke-virtual {v3, v2, v0}, Ljava/util/ArrayList;->set(ILjava/lang/Object;)Ljava/lang/Object;

    .line 4031
    add-int/lit8 p2, p2, -0x1

    .line 4018
    :cond_b
    add-int/lit8 p2, p2, -0x1

    goto :goto_3

    .line 4038
    :cond_c
    goto :goto_4

    .line 4041
    :cond_d
    iget-object p2, p0, Lcom/android/server/am/ActivityManagerService;->mLruProcesses:Ljava/util/ArrayList;

    invoke-virtual {p2, p1}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    .line 4043
    :goto_4
    iget p2, p0, Lcom/android/server/am/ActivityManagerService;->mLruProcessServiceStart:I

    .line 4044
    goto :goto_7

    .line 4052
    :cond_e
    iget v0, p0, Lcom/android/server/am/ActivityManagerService;->mLruProcessServiceStart:I

    .line 4053
    if-eqz p3, :cond_10

    .line 4056
    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mLruProcesses:Ljava/util/ArrayList;

    invoke-virtual {v2, p3}, Ljava/util/ArrayList;->lastIndexOf(Ljava/lang/Object;)I

    move-result p3

    .line 4059
    if-gt p3, p2, :cond_f

    .line 4062
    goto :goto_5

    .line 4064
    :cond_f
    move p2, p3

    :goto_5
    if-ltz p2, :cond_10

    if-le v0, p2, :cond_10

    .line 4065
    goto :goto_6

    .line 4069
    :cond_10
    move p2, v0

    :goto_6
    iget-object p3, p0, Lcom/android/server/am/ActivityManagerService;->mLruProcesses:Ljava/util/ArrayList;

    invoke-virtual {p3, p2, p1}, Ljava/util/ArrayList;->add(ILjava/lang/Object;)V

    .line 4070
    sub-int/2addr p2, v1

    .line 4071
    iget p3, p0, Lcom/android/server/am/ActivityManagerService;->mLruProcessActivityStart:I

    add-int/2addr p3, v1

    iput p3, p0, Lcom/android/server/am/ActivityManagerService;->mLruProcessActivityStart:I

    .line 4072
    iget p3, p0, Lcom/android/server/am/ActivityManagerService;->mLruProcessServiceStart:I

    add-int/2addr p3, v1

    iput p3, p0, Lcom/android/server/am/ActivityManagerService;->mLruProcessServiceStart:I

    .line 4077
    :goto_7
    iget-object p3, p1, Lcom/android/server/am/ProcessRecord;->connections:Landroid/util/ArraySet;

    invoke-virtual {p3}, Landroid/util/ArraySet;->size()I

    move-result p3

    sub-int/2addr p3, v1

    move v6, p2

    :goto_8
    if-ltz p3, :cond_12

    .line 4078
    iget-object p2, p1, Lcom/android/server/am/ProcessRecord;->connections:Landroid/util/ArraySet;

    invoke-virtual {p2, p3}, Landroid/util/ArraySet;->valueAt(I)Ljava/lang/Object;

    move-result-object p2

    move-object v8, p2

    check-cast v8, Lcom/android/server/am/ConnectionRecord;

    .line 4079
    iget-object p2, v8, Lcom/android/server/am/ConnectionRecord;->binding:Lcom/android/server/am/AppBindRecord;

    if-eqz p2, :cond_11

    iget-boolean p2, v8, Lcom/android/server/am/ConnectionRecord;->serviceDead:Z

    if-nez p2, :cond_11

    iget-object p2, v8, Lcom/android/server/am/ConnectionRecord;->binding:Lcom/android/server/am/AppBindRecord;

    iget-object p2, p2, Lcom/android/server/am/AppBindRecord;->service:Lcom/android/server/am/ServiceRecord;

    if-eqz p2, :cond_11

    iget-object p2, v8, Lcom/android/server/am/ConnectionRecord;->binding:Lcom/android/server/am/AppBindRecord;

    iget-object p2, p2, Lcom/android/server/am/AppBindRecord;->service:Lcom/android/server/am/ServiceRecord;

    iget-object p2, p2, Lcom/android/server/am/ServiceRecord;->app:Lcom/android/server/am/ProcessRecord;

    if-eqz p2, :cond_11

    iget-object p2, v8, Lcom/android/server/am/ConnectionRecord;->binding:Lcom/android/server/am/AppBindRecord;

    iget-object p2, p2, Lcom/android/server/am/AppBindRecord;->service:Lcom/android/server/am/ServiceRecord;

    iget-object p2, p2, Lcom/android/server/am/ServiceRecord;->app:Lcom/android/server/am/ProcessRecord;

    iget p2, p2, Lcom/android/server/am/ProcessRecord;->lruSeq:I

    iget v0, p0, Lcom/android/server/am/ActivityManagerService;->mLruSeq:I

    if-eq p2, v0, :cond_11

    iget-object p2, v8, Lcom/android/server/am/ConnectionRecord;->binding:Lcom/android/server/am/AppBindRecord;

    iget-object p2, p2, Lcom/android/server/am/AppBindRecord;->service:Lcom/android/server/am/ServiceRecord;

    iget-object p2, p2, Lcom/android/server/am/ServiceRecord;->app:Lcom/android/server/am/ProcessRecord;

    iget-boolean p2, p2, Lcom/android/server/am/ProcessRecord;->persistent:Z

    if-nez p2, :cond_11

    .line 4083
    iget-object p2, v8, Lcom/android/server/am/ConnectionRecord;->binding:Lcom/android/server/am/AppBindRecord;

    iget-object p2, p2, Lcom/android/server/am/AppBindRecord;->service:Lcom/android/server/am/ServiceRecord;

    iget-object v3, p2, Lcom/android/server/am/ServiceRecord;->app:Lcom/android/server/am/ProcessRecord;

    const-string/jumbo v7, "service connection"

    move-object v2, p0

    move-wide v4, v10

    move-object v9, p1

    invoke-direct/range {v2 .. v9}, Lcom/android/server/am/ActivityManagerService;->updateLruProcessInternalLocked(Lcom/android/server/am/ProcessRecord;JILjava/lang/String;Ljava/lang/Object;Lcom/android/server/am/ProcessRecord;)I

    move-result v6

    :cond_11
    add-int/lit8 p3, p3, -0x1

    goto :goto_8

    .line 4087
    :cond_12
    iget-object p2, p1, Lcom/android/server/am/ProcessRecord;->conProviders:Ljava/util/ArrayList;

    invoke-virtual {p2}, Ljava/util/ArrayList;->size()I

    move-result p2

    sub-int/2addr p2, v1

    :goto_9
    if-ltz p2, :cond_14

    .line 4088
    iget-object p3, p1, Lcom/android/server/am/ProcessRecord;->conProviders:Ljava/util/ArrayList;

    invoke-virtual {p3, p2}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object p3

    check-cast p3, Lcom/android/server/am/ContentProviderConnection;

    iget-object v8, p3, Lcom/android/server/am/ContentProviderConnection;->provider:Lcom/android/server/am/ContentProviderRecord;

    .line 4089
    iget-object p3, v8, Lcom/android/server/am/ContentProviderRecord;->proc:Lcom/android/server/am/ProcessRecord;

    if-eqz p3, :cond_13

    iget-object p3, v8, Lcom/android/server/am/ContentProviderRecord;->proc:Lcom/android/server/am/ProcessRecord;

    iget p3, p3, Lcom/android/server/am/ProcessRecord;->lruSeq:I

    iget v0, p0, Lcom/android/server/am/ActivityManagerService;->mLruSeq:I

    if-eq p3, v0, :cond_13

    iget-object p3, v8, Lcom/android/server/am/ContentProviderRecord;->proc:Lcom/android/server/am/ProcessRecord;

    iget-boolean p3, p3, Lcom/android/server/am/ProcessRecord;->persistent:Z

    if-nez p3, :cond_13

    .line 4090
    iget-object v3, v8, Lcom/android/server/am/ContentProviderRecord;->proc:Lcom/android/server/am/ProcessRecord;

    const-string/jumbo v7, "provider reference"

    move-object v2, p0

    move-wide v4, v10

    move-object v9, p1

    invoke-direct/range {v2 .. v9}, Lcom/android/server/am/ActivityManagerService;->updateLruProcessInternalLocked(Lcom/android/server/am/ProcessRecord;JILjava/lang/String;Ljava/lang/Object;Lcom/android/server/am/ProcessRecord;)I

    move-result v6

    .line 4087
    :cond_13
    add-int/lit8 p2, p2, -0x1

    goto :goto_9

    .line 4094
    :cond_14
    return-void
.end method

.method final updateOomAdjLocked()V
    .locals 44
    .annotation build Lcom/android/internal/annotations/GuardedBy;
        value = "this"
    .end annotation

    .line 25297
    move-object/from16 v8, p0

    invoke-direct/range {p0 .. p0}, Lcom/android/server/am/ActivityManagerService;->resumedAppLocked()Lcom/android/server/am/ActivityRecord;

    move-result-object v0

    .line 25298
    if-eqz v0, :cond_0

    iget-object v0, v0, Lcom/android/server/am/ActivityRecord;->app:Lcom/android/server/am/ProcessRecord;

    goto :goto_0

    .line 25299
    :cond_0
    const/4 v0, 0x0

    :goto_0
    invoke-static {}, Landroid/os/SystemClock;->uptimeMillis()J

    move-result-wide v10

    .line 25300
    invoke-static {}, Landroid/os/SystemClock;->elapsedRealtime()J

    move-result-wide v12

    .line 25301
    const-wide/32 v14, 0x1b7740

    sub-long v16, v10, v14

    .line 25302
    iget-object v1, v8, Lcom/android/server/am/ActivityManagerService;->mLruProcesses:Ljava/util/ArrayList;

    invoke-virtual {v1}, Ljava/util/ArrayList;->size()I

    move-result v6

    .line 25311
    iget-object v1, v8, Lcom/android/server/am/ActivityManagerService;->mActiveUids:Landroid/util/SparseArray;

    invoke-virtual {v1}, Landroid/util/SparseArray;->size()I

    move-result v1

    const/4 v7, 0x1

    sub-int/2addr v1, v7

    :goto_1
    if-ltz v1, :cond_1

    .line 25312
    iget-object v2, v8, Lcom/android/server/am/ActivityManagerService;->mActiveUids:Landroid/util/SparseArray;

    invoke-virtual {v2, v1}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Lcom/android/server/am/UidRecord;

    .line 25315
    invoke-virtual {v2}, Lcom/android/server/am/UidRecord;->reset()V

    .line 25311
    add-int/lit8 v1, v1, -0x1

    goto :goto_1

    .line 25318
    :cond_1
    iget-object v1, v8, Lcom/android/server/am/ActivityManagerService;->mStackSupervisor:Lcom/android/server/am/ActivityStackSupervisor;

    invoke-virtual {v1}, Lcom/android/server/am/ActivityStackSupervisor;->rankTaskLayersIfNeeded()V

    .line 25320
    iget v1, v8, Lcom/android/server/am/ActivityManagerService;->mAdjSeq:I

    add-int/2addr v1, v7

    iput v1, v8, Lcom/android/server/am/ActivityManagerService;->mAdjSeq:I

    .line 25321
    const/4 v5, 0x0

    iput v5, v8, Lcom/android/server/am/ActivityManagerService;->mNewNumServiceProcs:I

    .line 25322
    iput v5, v8, Lcom/android/server/am/ActivityManagerService;->mNewNumAServiceProcs:I

    .line 25324
    iget-object v1, v8, Lcom/android/server/am/ActivityManagerService;->mConstants:Lcom/android/server/am/ActivityManagerConstants;

    iget v4, v1, Lcom/android/server/am/ActivityManagerConstants;->CUR_MAX_EMPTY_PROCESSES:I

    .line 25325
    iget-object v1, v8, Lcom/android/server/am/ActivityManagerService;->mConstants:Lcom/android/server/am/ActivityManagerConstants;

    iget v1, v1, Lcom/android/server/am/ActivityManagerConstants;->CUR_MAX_CACHED_PROCESSES:I

    sub-int v3, v1, v4

    .line 25331
    nop

    .line 25333
    iget v1, v8, Lcom/android/server/am/ActivityManagerService;->mNumNonCachedProcs:I

    sub-int v1, v6, v1

    iget v2, v8, Lcom/android/server/am/ActivityManagerService;->mNumCachedHiddenProcs:I

    sub-int/2addr v1, v2

    .line 25334
    if-le v1, v3, :cond_2

    .line 25341
    nop

    .line 25343
    move v1, v3

    :cond_2
    const/4 v2, 0x3

    div-int/2addr v1, v2

    .line 25344
    if-ge v1, v7, :cond_3

    .line 25345
    move v1, v7

    :cond_3
    iget v9, v8, Lcom/android/server/am/ActivityManagerService;->mNumCachedHiddenProcs:I

    if-lez v9, :cond_4

    iget v9, v8, Lcom/android/server/am/ActivityManagerService;->mNumCachedHiddenProcs:I

    goto :goto_2

    :cond_4
    move v9, v7

    :goto_2
    div-int/2addr v9, v2

    .line 25346
    if-ge v9, v7, :cond_5

    .line 25347
    move v9, v7

    .line 25348
    :cond_5
    nop

    .line 25349
    nop

    .line 25350
    nop

    .line 25351
    nop

    .line 25353
    iput v5, v8, Lcom/android/server/am/ActivityManagerService;->mNumNonCachedProcs:I

    .line 25354
    iput v5, v8, Lcom/android/server/am/ActivityManagerService;->mNumCachedHiddenProcs:I

    .line 25358
    nop

    .line 25359
    const/16 v18, 0x385

    .line 25360
    nop

    .line 25361
    const/16 v19, 0x386

    .line 25362
    nop

    .line 25363
    nop

    .line 25364
    nop

    .line 25366
    nop

    .line 25369
    add-int/lit8 v20, v6, -0x1

    move/from16 v2, v20

    :goto_3
    if-ltz v2, :cond_6

    .line 25370
    iget-object v14, v8, Lcom/android/server/am/ActivityManagerService;->mLruProcesses:Ljava/util/ArrayList;

    invoke-virtual {v14, v2}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v14

    check-cast v14, Lcom/android/server/am/ProcessRecord;

    .line 25371
    iput-boolean v5, v14, Lcom/android/server/am/ProcessRecord;->containsCycle:Z

    .line 25369
    add-int/lit8 v2, v2, -0x1

    const-wide/32 v14, 0x1b7740

    goto :goto_3

    .line 25373
    :cond_6
    const/16 v2, 0x384

    move/from16 v23, v2

    move/from16 v25, v23

    move/from16 v22, v3

    move v3, v5

    move/from16 v27, v3

    move/from16 v26, v18

    move/from16 v24, v19

    move/from16 v2, v20

    const-wide/16 v28, 0x0

    const/16 v30, 0x0

    move/from16 v18, v27

    move/from16 v19, v18

    :goto_4
    if-ltz v2, :cond_13

    .line 25374
    iget-object v5, v8, Lcom/android/server/am/ActivityManagerService;->mLruProcesses:Ljava/util/ArrayList;

    invoke-virtual {v5, v2}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v5

    check-cast v5, Lcom/android/server/am/ProcessRecord;

    .line 25375
    iget-boolean v14, v8, Lcom/android/server/am/ActivityManagerService;->mEnableBServicePropagation:Z

    if-eqz v14, :cond_a

    iget-boolean v14, v5, Lcom/android/server/am/ProcessRecord;->serviceb:Z

    if-eqz v14, :cond_a

    iget v14, v5, Lcom/android/server/am/ProcessRecord;->curAdj:I

    const/16 v15, 0x320

    if-ne v14, v15, :cond_a

    .line 25377
    add-int/lit8 v3, v3, 0x1

    .line 25378
    iget-object v14, v5, Lcom/android/server/am/ProcessRecord;->services:Landroid/util/ArraySet;

    invoke-virtual {v14}, Landroid/util/ArraySet;->size()I

    move-result v14

    sub-int/2addr v14, v7

    :goto_5
    if-ltz v14, :cond_a

    .line 25379
    iget-object v15, v5, Lcom/android/server/am/ProcessRecord;->services:Landroid/util/ArraySet;

    invoke-virtual {v15, v14}, Landroid/util/ArraySet;->valueAt(I)Ljava/lang/Object;

    move-result-object v15

    check-cast v15, Lcom/android/server/am/ServiceRecord;

    .line 25384
    invoke-static {}, Landroid/os/SystemClock;->uptimeMillis()J

    move-result-wide v32

    move/from16 v34, v1

    move/from16 v35, v2

    iget-wide v1, v15, Lcom/android/server/am/ServiceRecord;->lastActivity:J

    sub-long v32, v32, v1

    iget v1, v8, Lcom/android/server/am/ActivityManagerService;->mMinBServiceAgingTime:I

    int-to-long v1, v1

    cmp-long v1, v32, v1

    if-gez v1, :cond_7

    .line 25389
    goto :goto_7

    .line 25391
    :cond_7
    const-wide/16 v1, 0x0

    cmp-long v32, v28, v1

    if-nez v32, :cond_8

    .line 25392
    iget-wide v1, v15, Lcom/android/server/am/ServiceRecord;->lastActivity:J

    .line 25393
    nop

    .line 25378
    :goto_6
    move-wide/from16 v28, v1

    move-object/from16 v30, v5

    goto :goto_7

    .line 25394
    :cond_8
    iget-wide v1, v15, Lcom/android/server/am/ServiceRecord;->lastActivity:J

    cmp-long v1, v1, v28

    if-gez v1, :cond_9

    .line 25395
    iget-wide v1, v15, Lcom/android/server/am/ServiceRecord;->lastActivity:J

    .line 25396
    goto :goto_6

    .line 25378
    :cond_9
    :goto_7
    add-int/lit8 v14, v14, -0x1

    move/from16 v1, v34

    move/from16 v2, v35

    goto :goto_5

    .line 25403
    :cond_a
    move/from16 v34, v1

    move/from16 v35, v2

    move v14, v3

    iget-boolean v1, v5, Lcom/android/server/am/ProcessRecord;->killedByAm:Z

    if-nez v1, :cond_12

    iget-object v1, v5, Lcom/android/server/am/ProcessRecord;->thread:Landroid/app/IApplicationThread;

    if-eqz v1, :cond_12

    .line 25404
    const/4 v15, 0x0

    iput-boolean v15, v5, Lcom/android/server/am/ProcessRecord;->procStateChanged:Z

    .line 25405
    const/16 v3, 0x3e9

    const/16 v31, 0x1

    move/from16 v2, v34

    move-object v1, v8

    move v15, v2

    move/from16 v36, v14

    move/from16 v21, v35

    const/4 v14, 0x3

    move-object v2, v5

    move/from16 v14, v22

    move/from16 v37, v4

    move-object v4, v0

    move-object/from16 v38, v5

    move/from16 v5, v31

    move-wide/from16 v40, v12

    move/from16 v39, v14

    move v14, v6

    move v12, v7

    move-wide v6, v10

    invoke-direct/range {v1 .. v7}, Lcom/android/server/am/ActivityManagerService;->computeOomAdjLocked(Lcom/android/server/am/ProcessRecord;ILcom/android/server/am/ProcessRecord;ZJ)Z

    .line 25408
    move-object/from16 v5, v38

    iget-boolean v1, v5, Lcom/android/server/am/ProcessRecord;->containsCycle:Z

    or-int v1, v18, v1

    .line 25412
    iget v2, v5, Lcom/android/server/am/ProcessRecord;->curAdj:I

    if-lt v2, v3, :cond_10

    .line 25413
    iget v2, v5, Lcom/android/server/am/ProcessRecord;->curProcState:I

    packed-switch v2, :pswitch_data_0

    .line 25443
    move/from16 v2, v25

    move/from16 v3, v26

    const/16 v13, 0x38a

    move/from16 v4, v23

    iput v4, v5, Lcom/android/server/am/ProcessRecord;->curRawAdj:I

    .line 25444
    invoke-virtual {v5, v4}, Lcom/android/server/am/ProcessRecord;->modifyRawOomAdj(I)I

    move-result v6

    iput v6, v5, Lcom/android/server/am/ProcessRecord;->curAdj:I

    .line 25448
    move/from16 v5, v24

    if-eq v4, v5, :cond_11

    .line 25449
    add-int/lit8 v6, v19, 0x1

    .line 25450
    if-lt v6, v15, :cond_f

    .line 25451
    nop

    .line 25452
    nop

    .line 25453
    add-int/lit8 v4, v5, 0x2

    .line 25454
    if-le v4, v13, :cond_e

    .line 25455
    nop

    .line 25373
    move/from16 v18, v1

    move/from16 v25, v2

    move/from16 v26, v3

    move/from16 v23, v5

    move/from16 v24, v13

    goto :goto_9

    .line 25420
    :pswitch_0
    move/from16 v2, v25

    iput v2, v5, Lcom/android/server/am/ProcessRecord;->curRawAdj:I

    .line 25421
    invoke-virtual {v5, v2}, Lcom/android/server/am/ProcessRecord;->modifyRawOomAdj(I)I

    move-result v3

    iput v3, v5, Lcom/android/server/am/ProcessRecord;->curAdj:I

    .line 25425
    move/from16 v3, v26

    if-eq v2, v3, :cond_d

    .line 25426
    add-int/lit8 v4, v27, 0x1

    .line 25427
    if-lt v4, v9, :cond_c

    .line 25428
    nop

    .line 25429
    nop

    .line 25430
    add-int/lit8 v2, v3, 0x2

    .line 25431
    const/16 v13, 0x38a

    if-le v2, v13, :cond_b

    .line 25432
    nop

    .line 25373
    move/from16 v18, v1

    move/from16 v25, v3

    move/from16 v26, v13

    goto :goto_8

    :cond_b
    move/from16 v18, v1

    move/from16 v26, v2

    move/from16 v25, v3

    :goto_8
    const/16 v27, 0x0

    goto/16 :goto_c

    :cond_c
    move/from16 v18, v1

    move/from16 v25, v2

    move/from16 v26, v3

    move/from16 v27, v4

    goto :goto_c

    :cond_d
    move/from16 v4, v23

    move/from16 v5, v24

    goto :goto_a

    :cond_e
    move/from16 v18, v1

    move/from16 v25, v2

    move/from16 v26, v3

    move/from16 v24, v4

    move/from16 v23, v5

    :goto_9
    const/16 v19, 0x0

    goto :goto_c

    :cond_f
    move/from16 v18, v1

    move/from16 v25, v2

    move/from16 v26, v3

    move/from16 v23, v4

    move/from16 v24, v5

    move/from16 v19, v6

    goto :goto_c

    :cond_10
    move/from16 v4, v23

    move/from16 v5, v24

    move/from16 v2, v25

    move/from16 v3, v26

    :cond_11
    :goto_a
    move/from16 v18, v1

    goto :goto_b

    :cond_12
    move/from16 v37, v4

    move-wide/from16 v40, v12

    move/from16 v36, v14

    move/from16 v39, v22

    move/from16 v4, v23

    move/from16 v5, v24

    move/from16 v2, v25

    move/from16 v3, v26

    move/from16 v15, v34

    move/from16 v21, v35

    move v14, v6

    move v12, v7

    :goto_b
    move/from16 v25, v2

    move/from16 v26, v3

    move/from16 v23, v4

    move/from16 v24, v5

    :goto_c
    add-int/lit8 v2, v21, -0x1

    move v7, v12

    move v6, v14

    move v1, v15

    move/from16 v3, v36

    move/from16 v4, v37

    move/from16 v22, v39

    move-wide/from16 v12, v40

    const/4 v5, 0x0

    goto/16 :goto_4

    .line 25471
    :cond_13
    move/from16 v37, v4

    move v14, v6

    move-wide/from16 v40, v12

    move/from16 v39, v22

    const/16 v13, 0x38a

    move v12, v7

    .line 25472
    const/4 v1, 0x0

    :goto_d
    const/16 v9, 0xa

    if-eqz v18, :cond_19

    if-ge v1, v9, :cond_19

    .line 25473
    add-int/lit8 v9, v1, 0x1

    .line 25474
    nop

    .line 25476
    const/4 v1, 0x0

    :goto_e
    if-ge v1, v14, :cond_15

    .line 25477
    iget-object v2, v8, Lcom/android/server/am/ActivityManagerService;->mLruProcesses:Ljava/util/ArrayList;

    invoke-virtual {v2, v1}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Lcom/android/server/am/ProcessRecord;

    .line 25478
    iget-boolean v4, v2, Lcom/android/server/am/ProcessRecord;->killedByAm:Z

    if-nez v4, :cond_14

    iget-object v4, v2, Lcom/android/server/am/ProcessRecord;->thread:Landroid/app/IApplicationThread;

    if-eqz v4, :cond_14

    iget-boolean v4, v2, Lcom/android/server/am/ProcessRecord;->containsCycle:Z

    if-ne v4, v12, :cond_14

    .line 25479
    iget v4, v2, Lcom/android/server/am/ProcessRecord;->adjSeq:I

    sub-int/2addr v4, v12

    iput v4, v2, Lcom/android/server/am/ProcessRecord;->adjSeq:I

    .line 25480
    iget v4, v2, Lcom/android/server/am/ProcessRecord;->completedAdjSeq:I

    sub-int/2addr v4, v12

    iput v4, v2, Lcom/android/server/am/ProcessRecord;->completedAdjSeq:I

    .line 25476
    :cond_14
    add-int/lit8 v1, v1, 0x1

    goto :goto_e

    .line 25484
    :cond_15
    const/4 v15, 0x0

    const/16 v18, 0x0

    :goto_f
    if-ge v15, v14, :cond_18

    .line 25485
    iget-object v1, v8, Lcom/android/server/am/ActivityManagerService;->mLruProcesses:Ljava/util/ArrayList;

    invoke-virtual {v1, v15}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v1

    move-object v2, v1

    check-cast v2, Lcom/android/server/am/ProcessRecord;

    .line 25486
    iget-boolean v1, v2, Lcom/android/server/am/ProcessRecord;->killedByAm:Z

    if-nez v1, :cond_16

    iget-object v1, v2, Lcom/android/server/am/ProcessRecord;->thread:Landroid/app/IApplicationThread;

    if-eqz v1, :cond_16

    iget-boolean v1, v2, Lcom/android/server/am/ProcessRecord;->containsCycle:Z

    if-ne v1, v12, :cond_16

    .line 25488
    const/16 v4, 0x3e9

    const/4 v5, 0x1

    move-object v1, v8

    move v6, v3

    move v3, v4

    move-object v4, v0

    move/from16 v42, v9

    move v9, v6

    move-wide v6, v10

    invoke-direct/range {v1 .. v7}, Lcom/android/server/am/ActivityManagerService;->computeOomAdjLocked(Lcom/android/server/am/ProcessRecord;ILcom/android/server/am/ProcessRecord;ZJ)Z

    move-result v1

    if-eqz v1, :cond_17

    .line 25489
    nop

    .line 25484
    move/from16 v18, v12

    goto :goto_10

    :cond_16
    move/from16 v42, v9

    move v9, v3

    :cond_17
    :goto_10
    add-int/lit8 v15, v15, 0x1

    move v3, v9

    move/from16 v9, v42

    goto :goto_f

    .line 25472
    :cond_18
    move/from16 v42, v9

    move/from16 v1, v42

    goto :goto_d

    .line 25495
    :cond_19
    move v15, v9

    move v9, v3

    move/from16 v0, v20

    const/4 v6, 0x0

    const/4 v14, 0x0

    const/16 v18, 0x0

    :goto_11
    const/16 v7, 0xd

    if-ltz v0, :cond_22

    .line 25496
    iget-object v1, v8, Lcom/android/server/am/ActivityManagerService;->mLruProcesses:Ljava/util/ArrayList;

    invoke-virtual {v1, v0}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v1

    move-object v4, v1

    check-cast v4, Lcom/android/server/am/ProcessRecord;

    .line 25497
    iget-boolean v1, v4, Lcom/android/server/am/ProcessRecord;->killedByAm:Z

    if-nez v1, :cond_20

    iget-object v1, v4, Lcom/android/server/am/ProcessRecord;->thread:Landroid/app/IApplicationThread;

    if-eqz v1, :cond_20

    .line 25498
    const/4 v3, 0x1

    move-object v1, v8

    move-object v2, v4

    move-object v15, v4

    move-wide v4, v10

    move v13, v6

    move-wide/from16 v6, v40

    invoke-direct/range {v1 .. v7}, Lcom/android/server/am/ActivityManagerService;->applyOomAdjLocked(Lcom/android/server/am/ProcessRecord;ZJJ)Z

    .line 25501
    iget v1, v15, Lcom/android/server/am/ProcessRecord;->curProcState:I

    packed-switch v1, :pswitch_data_1

    .line 25524
    :pswitch_1
    move/from16 v1, v37

    move/from16 v4, v39

    const-wide/32 v2, 0x1b7740

    iget v5, v8, Lcom/android/server/am/ActivityManagerService;->mNumNonCachedProcs:I

    add-int/2addr v5, v12

    iput v5, v8, Lcom/android/server/am/ActivityManagerService;->mNumNonCachedProcs:I

    goto/16 :goto_13

    .line 25511
    :pswitch_2
    iget-object v1, v8, Lcom/android/server/am/ActivityManagerService;->mConstants:Lcom/android/server/am/ActivityManagerConstants;

    iget v1, v1, Lcom/android/server/am/ActivityManagerConstants;->CUR_TRIM_EMPTY_PROCESSES:I

    if-le v13, v1, :cond_1a

    iget-wide v1, v15, Lcom/android/server/am/ProcessRecord;->lastActivityTime:J

    cmp-long v1, v1, v16

    if-gez v1, :cond_1a

    .line 25513
    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string v2, "empty for "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-wide/32 v2, 0x1b7740

    add-long v4, v16, v2

    iget-wide v6, v15, Lcom/android/server/am/ProcessRecord;->lastActivityTime:J

    sub-long/2addr v4, v6

    const-wide/16 v6, 0x3e8

    div-long/2addr v4, v6

    invoke-virtual {v1, v4, v5}, Ljava/lang/StringBuilder;->append(J)Ljava/lang/StringBuilder;

    const-string/jumbo v4, "s"

    invoke-virtual {v1, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-virtual {v15, v1, v12}, Lcom/android/server/am/ProcessRecord;->kill(Ljava/lang/String;Z)V

    .line 25528
    move/from16 v1, v37

    goto :goto_12

    .line 25517
    :cond_1a
    const-wide/32 v2, 0x1b7740

    add-int/lit8 v6, v13, 0x1

    .line 25518
    move/from16 v1, v37

    if-le v6, v1, :cond_1b

    .line 25519
    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    const-string v5, "empty #"

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v4, v6}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v4

    invoke-virtual {v15, v4, v12}, Lcom/android/server/am/ProcessRecord;->kill(Ljava/lang/String;Z)V

    .line 25528
    :cond_1b
    move v13, v6

    :goto_12
    move/from16 v4, v39

    goto :goto_13

    .line 25504
    :pswitch_3
    move/from16 v1, v37

    const-wide/32 v2, 0x1b7740

    iget v4, v8, Lcom/android/server/am/ActivityManagerService;->mNumCachedHiddenProcs:I

    add-int/2addr v4, v12

    iput v4, v8, Lcom/android/server/am/ActivityManagerService;->mNumCachedHiddenProcs:I

    .line 25505
    add-int/lit8 v14, v14, 0x1

    .line 25506
    move/from16 v4, v39

    if-le v14, v4, :cond_1c

    .line 25507
    new-instance v5, Ljava/lang/StringBuilder;

    invoke-direct {v5}, Ljava/lang/StringBuilder;-><init>()V

    const-string v6, "cached #"

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v5, v14}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v5}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v5

    invoke-virtual {v15, v5, v12}, Lcom/android/server/am/ProcessRecord;->kill(Ljava/lang/String;Z)V

    .line 25528
    :cond_1c
    :goto_13
    iget-boolean v5, v15, Lcom/android/server/am/ProcessRecord;->isolated:Z

    if-eqz v5, :cond_1d

    iget-object v5, v15, Lcom/android/server/am/ProcessRecord;->services:Landroid/util/ArraySet;

    invoke-virtual {v5}, Landroid/util/ArraySet;->size()I

    move-result v5

    if-gtz v5, :cond_1d

    iget-object v5, v15, Lcom/android/server/am/ProcessRecord;->isolatedEntryPoint:Ljava/lang/String;

    if-nez v5, :cond_1d

    .line 25536
    const-string v5, "isolated not needed"

    invoke-virtual {v15, v5, v12}, Lcom/android/server/am/ProcessRecord;->kill(Ljava/lang/String;Z)V

    goto :goto_14

    .line 25539
    :cond_1d
    iget-object v5, v15, Lcom/android/server/am/ProcessRecord;->uidRecord:Lcom/android/server/am/UidRecord;

    .line 25540
    if-eqz v5, :cond_1f

    .line 25541
    iget-object v6, v15, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    invoke-virtual {v6}, Landroid/content/pm/ApplicationInfo;->isInstantApp()Z

    move-result v6

    iput-boolean v6, v5, Lcom/android/server/am/UidRecord;->ephemeral:Z

    .line 25542
    iget v6, v5, Lcom/android/server/am/UidRecord;->curProcState:I

    iget v7, v15, Lcom/android/server/am/ProcessRecord;->curProcState:I

    if-le v6, v7, :cond_1e

    .line 25543
    iget v6, v15, Lcom/android/server/am/ProcessRecord;->curProcState:I

    iput v6, v5, Lcom/android/server/am/UidRecord;->curProcState:I

    .line 25545
    :cond_1e
    iget-boolean v6, v15, Lcom/android/server/am/ProcessRecord;->foregroundServices:Z

    if-eqz v6, :cond_1f

    .line 25546
    iput-boolean v12, v5, Lcom/android/server/am/UidRecord;->foregroundServices:Z

    .line 25551
    :cond_1f
    :goto_14
    iget v5, v15, Lcom/android/server/am/ProcessRecord;->curProcState:I

    const/16 v6, 0xd

    if-lt v5, v6, :cond_21

    iget-boolean v5, v15, Lcom/android/server/am/ProcessRecord;->killedByAm:Z

    if-nez v5, :cond_21

    .line 25553
    add-int/lit8 v18, v18, 0x1

    goto :goto_15

    .line 25495
    :cond_20
    move v13, v6

    move/from16 v1, v37

    move/from16 v4, v39

    const-wide/32 v2, 0x1b7740

    :cond_21
    :goto_15
    move v6, v13

    add-int/lit8 v0, v0, -0x1

    move/from16 v37, v1

    move/from16 v39, v4

    const/16 v13, 0x38a

    const/16 v15, 0xa

    goto/16 :goto_11

    .line 25557
    :cond_22
    move v13, v6

    move v6, v7

    iget v0, v8, Lcom/android/server/am/ActivityManagerService;->mBServiceAppThreshold:I

    if-le v9, v0, :cond_23

    iget-boolean v0, v8, Lcom/android/server/am/ActivityManagerService;->mAllowLowerMemLevel:Z

    if-ne v12, v0, :cond_23

    move-object/from16 v0, v30

    if-eqz v0, :cond_23

    .line 25559
    iget v1, v0, Lcom/android/server/am/ProcessRecord;->pid:I

    iget-object v2, v0, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget v2, v2, Landroid/content/pm/ApplicationInfo;->uid:I

    const/16 v3, 0x38a

    invoke-static {v1, v2, v3}, Lcom/android/server/am/ProcessList;->setOomAdj(III)V

    .line 25561
    iget v1, v0, Lcom/android/server/am/ProcessRecord;->curAdj:I

    iput v1, v0, Lcom/android/server/am/ProcessRecord;->setAdj:I

    .line 25566
    :cond_23
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/am/ActivityManagerService;->incrementProcStateSeqAndNotifyAppsLocked()V

    .line 25568
    iget v0, v8, Lcom/android/server/am/ActivityManagerService;->mNewNumServiceProcs:I

    iput v0, v8, Lcom/android/server/am/ActivityManagerService;->mNumServiceProcs:I

    .line 25576
    add-int v0, v14, v13

    .line 25578
    iget-object v1, v8, Lcom/android/server/am/ActivityManagerService;->mConstants:Lcom/android/server/am/ActivityManagerConstants;

    iget v1, v1, Lcom/android/server/am/ActivityManagerConstants;->CUR_TRIM_CACHED_PROCESSES:I

    const/4 v9, 0x5

    if-gt v14, v1, :cond_26

    iget-object v1, v8, Lcom/android/server/am/ActivityManagerService;->mConstants:Lcom/android/server/am/ActivityManagerConstants;

    iget v1, v1, Lcom/android/server/am/ActivityManagerConstants;->CUR_TRIM_EMPTY_PROCESSES:I

    if-gt v13, v1, :cond_26

    .line 25580
    const/4 v1, 0x3

    if-gt v0, v1, :cond_24

    .line 25581
    nop

    .line 25596
    const/4 v0, 0x3

    goto :goto_16

    .line 25582
    :cond_24
    if-gt v0, v9, :cond_25

    .line 25583
    nop

    .line 25596
    const/4 v0, 0x2

    goto :goto_16

    .line 25585
    :cond_25
    nop

    .line 25596
    move v0, v12

    goto :goto_16

    .line 25588
    :cond_26
    nop

    .line 25596
    const/4 v0, 0x0

    :goto_16
    iget v1, v8, Lcom/android/server/am/ActivityManagerService;->mLastMemoryLevel:I

    if-le v0, v1, :cond_28

    .line 25597
    iget-boolean v1, v8, Lcom/android/server/am/ActivityManagerService;->mAllowLowerMemLevel:Z

    if-eqz v1, :cond_27

    iget-object v1, v8, Lcom/android/server/am/ActivityManagerService;->mLruProcesses:Ljava/util/ArrayList;

    invoke-virtual {v1}, Ljava/util/ArrayList;->size()I

    move-result v1

    iget v2, v8, Lcom/android/server/am/ActivityManagerService;->mLastNumProcesses:I

    if-lt v1, v2, :cond_28

    .line 25598
    :cond_27
    iget v0, v8, Lcom/android/server/am/ActivityManagerService;->mLastMemoryLevel:I

    .line 25602
    :cond_28
    iget v1, v8, Lcom/android/server/am/ActivityManagerService;->mLastMemoryLevel:I

    if-eq v0, v1, :cond_29

    .line 25603
    iget v1, v8, Lcom/android/server/am/ActivityManagerService;->mLastMemoryLevel:I

    invoke-static {v0, v1}, Lcom/android/server/am/EventLogTags;->writeAmMemFactor(II)V

    .line 25605
    :cond_29
    iput v0, v8, Lcom/android/server/am/ActivityManagerService;->mLastMemoryLevel:I

    .line 25606
    iget-object v1, v8, Lcom/android/server/am/ActivityManagerService;->mLruProcesses:Ljava/util/ArrayList;

    invoke-virtual {v1}, Ljava/util/ArrayList;->size()I

    move-result v1

    iput v1, v8, Lcom/android/server/am/ActivityManagerService;->mLastNumProcesses:I

    .line 25607
    iget-object v1, v8, Lcom/android/server/am/ActivityManagerService;->mProcessStats:Lcom/android/server/am/ProcessStatsService;

    invoke-virtual/range {p0 .. p0}, Lcom/android/server/am/ActivityManagerService;->isSleepingLocked()Z

    move-result v2

    xor-int/2addr v2, v12

    invoke-virtual {v1, v0, v2, v10, v11}, Lcom/android/server/am/ProcessStatsService;->setMemFactorLocked(IZJ)Z

    move-result v1

    .line 25608
    iget-object v2, v8, Lcom/android/server/am/ActivityManagerService;->mProcessStats:Lcom/android/server/am/ProcessStatsService;

    invoke-virtual {v2}, Lcom/android/server/am/ProcessStatsService;->getMemFactorLocked()I

    move-result v2

    .line 25609
    const/16 v3, 0x14

    if-eqz v0, :cond_3c

    .line 25610
    iget-wide v4, v8, Lcom/android/server/am/ActivityManagerService;->mLowRamStartTime:J

    const-wide/16 v13, 0x0

    cmp-long v4, v4, v13

    if-nez v4, :cond_2a

    .line 25611
    iput-wide v10, v8, Lcom/android/server/am/ActivityManagerService;->mLowRamStartTime:J

    .line 25613
    :cond_2a
    nop

    .line 25615
    packed-switch v0, :pswitch_data_2

    .line 25623
    goto :goto_17

    .line 25617
    :pswitch_4
    const/16 v9, 0xf

    .line 25618
    goto :goto_17

    .line 25620
    :pswitch_5
    nop

    .line 25621
    nop

    .line 25626
    const/16 v9, 0xa

    :goto_17
    const/4 v0, 0x3

    div-int/lit8 v4, v18, 0x3

    .line 25627
    nop

    .line 25628
    iget-object v5, v8, Lcom/android/server/am/ActivityManagerService;->mHomeProcess:Lcom/android/server/am/ProcessRecord;

    if-eqz v5, :cond_2b

    goto :goto_18

    .line 25629
    :cond_2b
    const/4 v0, 0x2

    :goto_18
    iget-object v5, v8, Lcom/android/server/am/ActivityManagerService;->mPreviousProcess:Lcom/android/server/am/ProcessRecord;

    if-eqz v5, :cond_2c

    add-int/lit8 v0, v0, 0x1

    .line 25630
    :cond_2c
    if-ge v4, v0, :cond_2d

    .line 25631
    move v4, v0

    :cond_2d
    const/16 v0, 0x50

    .line 25632
    move v13, v0

    move/from16 v5, v20

    const/4 v14, 0x0

    :goto_19
    if-ltz v5, :cond_3b

    .line 25633
    iget-object v0, v8, Lcom/android/server/am/ActivityManagerService;->mLruProcesses:Ljava/util/ArrayList;

    invoke-virtual {v0, v5}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v0

    move-object v15, v0

    check-cast v15, Lcom/android/server/am/ProcessRecord;

    .line 25634
    if-nez v1, :cond_2f

    iget-boolean v0, v15, Lcom/android/server/am/ProcessRecord;->procStateChanged:Z

    if-eqz v0, :cond_2e

    goto :goto_1a

    .line 25638
    :cond_2e
    const/4 v7, 0x0

    goto :goto_1b

    .line 25635
    :cond_2f
    :goto_1a
    invoke-direct {v8, v15, v2, v10, v11}, Lcom/android/server/am/ActivityManagerService;->setProcessTrackerStateLocked(Lcom/android/server/am/ProcessRecord;IJ)V

    .line 25636
    const/4 v7, 0x0

    iput-boolean v7, v15, Lcom/android/server/am/ProcessRecord;->procStateChanged:Z

    .line 25638
    :goto_1b
    iget v0, v15, Lcom/android/server/am/ProcessRecord;->curProcState:I

    const/16 v12, 0x28

    if-lt v0, v6, :cond_33

    iget-boolean v0, v15, Lcom/android/server/am/ProcessRecord;->killedByAm:Z

    if-nez v0, :cond_33

    .line 25640
    iget v0, v15, Lcom/android/server/am/ProcessRecord;->trimMemoryLevel:I

    if-ge v0, v13, :cond_30

    iget-object v0, v15, Lcom/android/server/am/ProcessRecord;->thread:Landroid/app/IApplicationThread;

    if-eqz v0, :cond_30

    .line 25644
    :try_start_0
    iget-object v0, v15, Lcom/android/server/am/ProcessRecord;->thread:Landroid/app/IApplicationThread;

    invoke-interface {v0, v13}, Landroid/app/IApplicationThread;->scheduleTrimMemory(I)V
    :try_end_0
    .catch Landroid/os/RemoteException; {:try_start_0 .. :try_end_0} :catch_0

    .line 25646
    goto :goto_1c

    .line 25645
    :catch_0
    move-exception v0

    .line 25661
    :cond_30
    :goto_1c
    iput v13, v15, Lcom/android/server/am/ProcessRecord;->trimMemoryLevel:I

    .line 25662
    add-int/lit8 v14, v14, 0x1

    .line 25663
    if-lt v14, v4, :cond_3a

    .line 25664
    nop

    .line 25665
    const/16 v0, 0x3c

    if-eq v13, v0, :cond_32

    const/16 v0, 0x50

    if-eq v13, v0, :cond_31

    goto :goto_1d

    .line 25667
    :cond_31
    const/16 v13, 0x3c

    .line 25668
    goto :goto_1d

    .line 25670
    :cond_32
    nop

    .line 25671
    move v13, v12

    .line 25632
    :goto_1d
    move v14, v7

    goto :goto_21

    .line 25674
    :cond_33
    iget v0, v15, Lcom/android/server/am/ProcessRecord;->curProcState:I

    const/16 v6, 0xc

    if-ne v0, v6, :cond_35

    iget-boolean v0, v15, Lcom/android/server/am/ProcessRecord;->killedByAm:Z

    if-nez v0, :cond_35

    .line 25676
    iget v0, v15, Lcom/android/server/am/ProcessRecord;->trimMemoryLevel:I

    if-ge v0, v12, :cond_34

    iget-object v0, v15, Lcom/android/server/am/ProcessRecord;->thread:Landroid/app/IApplicationThread;

    if-eqz v0, :cond_34

    .line 25682
    :try_start_1
    iget-object v0, v15, Lcom/android/server/am/ProcessRecord;->thread:Landroid/app/IApplicationThread;

    invoke-interface {v0, v12}, Landroid/app/IApplicationThread;->scheduleTrimMemory(I)V
    :try_end_1
    .catch Landroid/os/RemoteException; {:try_start_1 .. :try_end_1} :catch_1

    .line 25685
    goto :goto_1e

    .line 25684
    :catch_1
    move-exception v0

    .line 25687
    :cond_34
    :goto_1e
    iput v12, v15, Lcom/android/server/am/ProcessRecord;->trimMemoryLevel:I

    goto :goto_21

    .line 25689
    :cond_35
    iget v0, v15, Lcom/android/server/am/ProcessRecord;->curProcState:I

    const/4 v6, 0x6

    if-ge v0, v6, :cond_36

    iget-boolean v0, v15, Lcom/android/server/am/ProcessRecord;->systemNoUi:Z

    if-eqz v0, :cond_38

    :cond_36
    iget-boolean v0, v15, Lcom/android/server/am/ProcessRecord;->pendingUiClean:Z

    if-eqz v0, :cond_38

    .line 25695
    iget v0, v15, Lcom/android/server/am/ProcessRecord;->trimMemoryLevel:I

    if-ge v0, v3, :cond_37

    iget-object v0, v15, Lcom/android/server/am/ProcessRecord;->thread:Landroid/app/IApplicationThread;

    if-eqz v0, :cond_37

    .line 25700
    :try_start_2
    iget-object v0, v15, Lcom/android/server/am/ProcessRecord;->thread:Landroid/app/IApplicationThread;

    invoke-interface {v0, v3}, Landroid/app/IApplicationThread;->scheduleTrimMemory(I)V
    :try_end_2
    .catch Landroid/os/RemoteException; {:try_start_2 .. :try_end_2} :catch_2

    .line 25702
    goto :goto_1f

    .line 25701
    :catch_2
    move-exception v0

    .line 25704
    :cond_37
    :goto_1f
    iput-boolean v7, v15, Lcom/android/server/am/ProcessRecord;->pendingUiClean:Z

    .line 25706
    :cond_38
    iget v0, v15, Lcom/android/server/am/ProcessRecord;->trimMemoryLevel:I

    if-ge v0, v9, :cond_39

    iget-object v0, v15, Lcom/android/server/am/ProcessRecord;->thread:Landroid/app/IApplicationThread;

    if-eqz v0, :cond_39

    .line 25711
    :try_start_3
    iget-object v0, v15, Lcom/android/server/am/ProcessRecord;->thread:Landroid/app/IApplicationThread;

    invoke-interface {v0, v9}, Landroid/app/IApplicationThread;->scheduleTrimMemory(I)V
    :try_end_3
    .catch Landroid/os/RemoteException; {:try_start_3 .. :try_end_3} :catch_3

    .line 25713
    goto :goto_20

    .line 25712
    :catch_3
    move-exception v0

    .line 25715
    :cond_39
    :goto_20
    iput v9, v15, Lcom/android/server/am/ProcessRecord;->trimMemoryLevel:I

    .line 25632
    :cond_3a
    :goto_21
    add-int/lit8 v5, v5, -0x1

    const/16 v6, 0xd

    const/4 v12, 0x1

    goto/16 :goto_19

    .line 25718
    :cond_3b
    const/4 v7, 0x0

    goto :goto_24

    .line 25719
    :cond_3c
    const/4 v7, 0x0

    iget-wide v4, v8, Lcom/android/server/am/ActivityManagerService;->mLowRamStartTime:J

    const-wide/16 v12, 0x0

    cmp-long v0, v4, v12

    if-eqz v0, :cond_3d

    .line 25720
    iget-wide v4, v8, Lcom/android/server/am/ActivityManagerService;->mLowRamTimeSinceLastIdle:J

    iget-wide v14, v8, Lcom/android/server/am/ActivityManagerService;->mLowRamStartTime:J

    sub-long v14, v10, v14

    add-long/2addr v4, v14

    iput-wide v4, v8, Lcom/android/server/am/ActivityManagerService;->mLowRamTimeSinceLastIdle:J

    .line 25721
    iput-wide v12, v8, Lcom/android/server/am/ActivityManagerService;->mLowRamStartTime:J

    .line 25723
    :cond_3d
    move/from16 v4, v20

    :goto_22
    if-ltz v4, :cond_43

    .line 25724
    iget-object v0, v8, Lcom/android/server/am/ActivityManagerService;->mLruProcesses:Ljava/util/ArrayList;

    invoke-virtual {v0, v4}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v0

    move-object v5, v0

    check-cast v5, Lcom/android/server/am/ProcessRecord;

    .line 25725
    if-nez v1, :cond_3e

    iget-boolean v0, v5, Lcom/android/server/am/ProcessRecord;->procStateChanged:Z

    if-eqz v0, :cond_3f

    .line 25726
    :cond_3e
    invoke-direct {v8, v5, v2, v10, v11}, Lcom/android/server/am/ActivityManagerService;->setProcessTrackerStateLocked(Lcom/android/server/am/ProcessRecord;IJ)V

    .line 25727
    iput-boolean v7, v5, Lcom/android/server/am/ProcessRecord;->procStateChanged:Z

    .line 25729
    :cond_3f
    iget v0, v5, Lcom/android/server/am/ProcessRecord;->curProcState:I

    const/4 v6, 0x6

    if-ge v0, v6, :cond_40

    iget-boolean v0, v5, Lcom/android/server/am/ProcessRecord;->systemNoUi:Z

    if-eqz v0, :cond_42

    :cond_40
    iget-boolean v0, v5, Lcom/android/server/am/ProcessRecord;->pendingUiClean:Z

    if-eqz v0, :cond_42

    .line 25731
    iget v0, v5, Lcom/android/server/am/ProcessRecord;->trimMemoryLevel:I

    if-ge v0, v3, :cond_41

    iget-object v0, v5, Lcom/android/server/am/ProcessRecord;->thread:Landroid/app/IApplicationThread;

    if-eqz v0, :cond_41

    .line 25737
    :try_start_4
    iget-object v0, v5, Lcom/android/server/am/ProcessRecord;->thread:Landroid/app/IApplicationThread;

    invoke-interface {v0, v3}, Landroid/app/IApplicationThread;->scheduleTrimMemory(I)V
    :try_end_4
    .catch Landroid/os/RemoteException; {:try_start_4 .. :try_end_4} :catch_4

    .line 25740
    goto :goto_23

    .line 25739
    :catch_4
    move-exception v0

    .line 25742
    :cond_41
    :goto_23
    iput-boolean v7, v5, Lcom/android/server/am/ProcessRecord;->pendingUiClean:Z

    .line 25744
    :cond_42
    iput v7, v5, Lcom/android/server/am/ProcessRecord;->trimMemoryLevel:I

    .line 25723
    add-int/lit8 v4, v4, -0x1

    goto :goto_22

    .line 25748
    :cond_43
    :goto_24
    iget-boolean v0, v8, Lcom/android/server/am/ActivityManagerService;->mAlwaysFinishActivities:Z

    if-eqz v0, :cond_44

    .line 25751
    iget-object v0, v8, Lcom/android/server/am/ActivityManagerService;->mStackSupervisor:Lcom/android/server/am/ActivityStackSupervisor;

    const-string v2, "always-finish"

    const/4 v3, 0x0

    invoke-virtual {v0, v3, v2}, Lcom/android/server/am/ActivityStackSupervisor;->scheduleDestroyAllActivities(Lcom/android/server/am/ProcessRecord;Ljava/lang/String;)V

    goto :goto_25

    .line 25754
    :cond_44
    const/4 v3, 0x0

    :goto_25
    if-eqz v1, :cond_45

    .line 25755
    iget-object v0, v8, Lcom/android/server/am/ActivityManagerService;->mProcessStats:Lcom/android/server/am/ProcessStatsService;

    invoke-virtual {v0}, Lcom/android/server/am/ProcessStatsService;->isMemFactorLowered()Z

    move-result v0

    invoke-virtual {v8, v10, v11, v7, v0}, Lcom/android/server/am/ActivityManagerService;->requestPssAllProcsLocked(JZZ)V

    .line 25758
    :cond_45
    nop

    .line 25761
    iget-object v0, v8, Lcom/android/server/am/ActivityManagerService;->mLocalPowerManager:Landroid/os/PowerManagerInternal;

    if-eqz v0, :cond_46

    .line 25762
    iget-object v0, v8, Lcom/android/server/am/ActivityManagerService;->mLocalPowerManager:Landroid/os/PowerManagerInternal;

    invoke-virtual {v0}, Landroid/os/PowerManagerInternal;->startUidChanges()V

    .line 25764
    :cond_46
    iget-object v0, v8, Lcom/android/server/am/ActivityManagerService;->mActiveUids:Landroid/util/SparseArray;

    invoke-virtual {v0}, Landroid/util/SparseArray;->size()I

    move-result v0

    const/4 v1, 0x1

    sub-int/2addr v0, v1

    :goto_26
    if-ltz v0, :cond_56

    .line 25765
    iget-object v1, v8, Lcom/android/server/am/ActivityManagerService;->mActiveUids:Landroid/util/SparseArray;

    invoke-virtual {v1, v0}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;

    move-result-object v1

    check-cast v1, Lcom/android/server/am/UidRecord;

    .line 25766
    nop

    .line 25767
    iget v2, v1, Lcom/android/server/am/UidRecord;->curProcState:I

    const/16 v4, 0x13

    if-eq v2, v4, :cond_54

    iget v2, v1, Lcom/android/server/am/UidRecord;->setProcState:I

    iget v4, v1, Lcom/android/server/am/UidRecord;->curProcState:I

    if-ne v2, v4, :cond_47

    iget-boolean v2, v1, Lcom/android/server/am/UidRecord;->setWhitelist:Z

    iget-boolean v4, v1, Lcom/android/server/am/UidRecord;->curWhitelist:Z

    if-eq v2, v4, :cond_54

    .line 25774
    :cond_47
    iget v2, v1, Lcom/android/server/am/UidRecord;->curProcState:I

    invoke-static {v2}, Landroid/app/ActivityManager;->isProcStateBackground(I)Z

    move-result v2

    if-eqz v2, :cond_4d

    iget-boolean v2, v1, Lcom/android/server/am/UidRecord;->curWhitelist:Z

    if-nez v2, :cond_4d

    .line 25778
    iget v2, v1, Lcom/android/server/am/UidRecord;->setProcState:I

    invoke-static {v2}, Landroid/app/ActivityManager;->isProcStateBackground(I)Z

    move-result v2

    if-eqz v2, :cond_49

    iget-boolean v2, v1, Lcom/android/server/am/UidRecord;->setWhitelist:Z

    if-eqz v2, :cond_48

    goto :goto_27

    .line 25790
    :cond_48
    move-wide/from16 v4, v40

    goto :goto_28

    .line 25780
    :cond_49
    :goto_27
    move-wide/from16 v4, v40

    iput-wide v4, v1, Lcom/android/server/am/UidRecord;->lastBackgroundTime:J

    .line 25781
    iget-object v2, v8, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    const/16 v6, 0x3a

    invoke-virtual {v2, v6}, Lcom/android/server/am/ActivityManagerService$MainHandler;->hasMessages(I)Z

    move-result v2

    if-nez v2, :cond_4a

    .line 25786
    iget-object v2, v8, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    const/16 v6, 0x3a

    iget-object v9, v8, Lcom/android/server/am/ActivityManagerService;->mConstants:Lcom/android/server/am/ActivityManagerConstants;

    iget-wide v12, v9, Lcom/android/server/am/ActivityManagerConstants;->BACKGROUND_SETTLE_TIME:J

    invoke-virtual {v2, v6, v12, v13}, Lcom/android/server/am/ActivityManagerService$MainHandler;->sendEmptyMessageDelayed(IJ)Z

    .line 25790
    :cond_4a
    :goto_28
    iget-boolean v2, v1, Lcom/android/server/am/UidRecord;->idle:Z

    if-eqz v2, :cond_4c

    iget-boolean v2, v1, Lcom/android/server/am/UidRecord;->setIdle:Z

    if-nez v2, :cond_4c

    .line 25791
    nop

    .line 25792
    if-nez v3, :cond_4b

    .line 25793
    new-instance v3, Ljava/util/ArrayList;

    invoke-direct {v3}, Ljava/util/ArrayList;-><init>()V

    .line 25795
    :cond_4b
    invoke-virtual {v3, v1}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    .line 25805
    const/4 v2, 0x2

    goto :goto_29

    :cond_4c
    move v2, v7

    :goto_29
    const-wide/16 v12, 0x0

    goto :goto_2b

    .line 25798
    :cond_4d
    move-wide/from16 v4, v40

    iget-boolean v2, v1, Lcom/android/server/am/UidRecord;->idle:Z

    if-eqz v2, :cond_4e

    .line 25799
    const/4 v2, 0x4

    .line 25800
    iget v6, v1, Lcom/android/server/am/UidRecord;->uid:I

    invoke-static {v6}, Lcom/android/server/am/EventLogTags;->writeAmUidActive(I)V

    .line 25801
    iput-boolean v7, v1, Lcom/android/server/am/UidRecord;->idle:Z

    goto :goto_2a

    .line 25803
    :cond_4e
    move v2, v7

    :goto_2a
    const-wide/16 v12, 0x0

    iput-wide v12, v1, Lcom/android/server/am/UidRecord;->lastBackgroundTime:J

    .line 25805
    :goto_2b
    iget v6, v1, Lcom/android/server/am/UidRecord;->setProcState:I

    const/16 v9, 0xa

    if-le v6, v9, :cond_4f

    .line 25807
    const/4 v6, 0x1

    goto :goto_2c

    .line 25805
    :cond_4f
    nop

    .line 25807
    move v6, v7

    :goto_2c
    iget v14, v1, Lcom/android/server/am/UidRecord;->curProcState:I

    if-le v14, v9, :cond_50

    .line 25809
    const/4 v14, 0x1

    goto :goto_2d

    .line 25807
    :cond_50
    nop

    .line 25809
    move v14, v7

    :goto_2d
    if-ne v6, v14, :cond_51

    iget v6, v1, Lcom/android/server/am/UidRecord;->setProcState:I

    const/16 v15, 0x13

    if-ne v6, v15, :cond_53

    .line 25811
    :cond_51
    if-eqz v14, :cond_52

    const/16 v6, 0x8

    goto :goto_2e

    :cond_52
    const/16 v6, 0x10

    :goto_2e
    or-int/2addr v2, v6

    .line 25813
    :cond_53
    iget v6, v1, Lcom/android/server/am/UidRecord;->curProcState:I

    iput v6, v1, Lcom/android/server/am/UidRecord;->setProcState:I

    .line 25814
    iget-boolean v6, v1, Lcom/android/server/am/UidRecord;->curWhitelist:Z

    iput-boolean v6, v1, Lcom/android/server/am/UidRecord;->setWhitelist:Z

    .line 25815
    iget-boolean v6, v1, Lcom/android/server/am/UidRecord;->idle:Z

    iput-boolean v6, v1, Lcom/android/server/am/UidRecord;->setIdle:Z

    .line 25816
    const/4 v6, -0x1

    invoke-virtual {v8, v1, v6, v2}, Lcom/android/server/am/ActivityManagerService;->enqueueUidChangeLocked(Lcom/android/server/am/UidRecord;II)V

    .line 25817
    iget v2, v1, Lcom/android/server/am/UidRecord;->uid:I

    iget v6, v1, Lcom/android/server/am/UidRecord;->curProcState:I

    invoke-direct {v8, v2, v6}, Lcom/android/server/am/ActivityManagerService;->noteUidProcessState(II)V

    .line 25818
    iget-boolean v2, v1, Lcom/android/server/am/UidRecord;->foregroundServices:Z

    if-eqz v2, :cond_55

    .line 25819
    iget-object v2, v8, Lcom/android/server/am/ActivityManagerService;->mServices:Lcom/android/server/am/ActiveServices;

    invoke-virtual {v2, v1}, Lcom/android/server/am/ActiveServices;->foregroundServiceProcStateChangedLocked(Lcom/android/server/am/UidRecord;)V

    goto :goto_2f

    .line 25764
    :cond_54
    move-wide/from16 v4, v40

    const/16 v9, 0xa

    const-wide/16 v12, 0x0

    :cond_55
    :goto_2f
    add-int/lit8 v0, v0, -0x1

    move-wide/from16 v40, v4

    goto/16 :goto_26

    .line 25823
    :cond_56
    iget-object v0, v8, Lcom/android/server/am/ActivityManagerService;->mLocalPowerManager:Landroid/os/PowerManagerInternal;

    if-eqz v0, :cond_57

    .line 25824
    iget-object v0, v8, Lcom/android/server/am/ActivityManagerService;->mLocalPowerManager:Landroid/os/PowerManagerInternal;

    invoke-virtual {v0}, Landroid/os/PowerManagerInternal;->finishUidChanges()V

    .line 25827
    :cond_57
    if-eqz v3, :cond_58

    .line 25830
    invoke-virtual {v3}, Ljava/util/ArrayList;->size()I

    move-result v0

    const/4 v1, 0x1

    sub-int/2addr v0, v1

    :goto_30
    if-ltz v0, :cond_58

    .line 25831
    iget-object v1, v8, Lcom/android/server/am/ActivityManagerService;->mServices:Lcom/android/server/am/ActiveServices;

    invoke-virtual {v3, v0}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Lcom/android/server/am/UidRecord;

    iget v2, v2, Lcom/android/server/am/UidRecord;->uid:I

    invoke-virtual {v1, v2}, Lcom/android/server/am/ActiveServices;->stopInBackgroundLocked(I)V

    .line 25830
    add-int/lit8 v0, v0, -0x1

    goto :goto_30

    .line 25835
    :cond_58
    iget-object v0, v8, Lcom/android/server/am/ActivityManagerService;->mProcessStats:Lcom/android/server/am/ProcessStatsService;

    invoke-virtual {v0, v10, v11}, Lcom/android/server/am/ProcessStatsService;->shouldWriteNowLocked(J)Z

    move-result v0

    if-eqz v0, :cond_59

    .line 25836
    iget-object v0, v8, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    new-instance v1, Lcom/android/server/am/ActivityManagerService$28;

    invoke-direct {v1, v8}, Lcom/android/server/am/ActivityManagerService$28;-><init>(Lcom/android/server/am/ActivityManagerService;)V

    invoke-virtual {v0, v1}, Lcom/android/server/am/ActivityManagerService$MainHandler;->post(Ljava/lang/Runnable;)Z

    .line 25854
    :cond_59
    return-void

    nop

    :pswitch_data_0
    .packed-switch 0xf
        :pswitch_0
        :pswitch_0
        :pswitch_0
    .end packed-switch

    :pswitch_data_1
    .packed-switch 0xf
        :pswitch_3
        :pswitch_3
        :pswitch_1
        :pswitch_2
    .end packed-switch

    :pswitch_data_2
    .packed-switch 0x2
        :pswitch_5
        :pswitch_4
    .end packed-switch
.end method

.method final updateOomAdjLocked(Lcom/android/server/am/ProcessRecord;Z)Z
    .locals 9
    .annotation build Lcom/android/internal/annotations/GuardedBy;
        value = "this"
    .end annotation

    .line 25272
    invoke-direct {p0}, Lcom/android/server/am/ActivityManagerService;->resumedAppLocked()Lcom/android/server/am/ActivityRecord;

    move-result-object v0

    .line 25273
    if-eqz v0, :cond_0

    iget-object v0, v0, Lcom/android/server/am/ActivityRecord;->app:Lcom/android/server/am/ProcessRecord;

    .line 25274
    :goto_0
    move-object v4, v0

    goto :goto_1

    .line 25273
    :cond_0
    const/4 v0, 0x0

    goto :goto_0

    .line 25274
    :goto_1
    iget-boolean v0, p1, Lcom/android/server/am/ProcessRecord;->cached:Z

    .line 25276
    iget v1, p0, Lcom/android/server/am/ActivityManagerService;->mAdjSeq:I

    add-int/lit8 v1, v1, 0x1

    iput v1, p0, Lcom/android/server/am/ActivityManagerService;->mAdjSeq:I

    .line 25282
    iget v1, p1, Lcom/android/server/am/ProcessRecord;->curRawAdj:I

    const/16 v2, 0x384

    const/16 v8, 0x3e9

    if-lt v1, v2, :cond_1

    .line 25283
    iget v1, p1, Lcom/android/server/am/ProcessRecord;->curRawAdj:I

    .line 25284
    move v3, v1

    goto :goto_2

    .line 25283
    :cond_1
    nop

    .line 25284
    move v3, v8

    :goto_2
    const/4 v5, 0x0

    .line 25285
    invoke-static {}, Landroid/os/SystemClock;->uptimeMillis()J

    move-result-wide v6

    .line 25284
    move-object v1, p0

    move-object v2, p1

    invoke-direct/range {v1 .. v7}, Lcom/android/server/am/ActivityManagerService;->updateOomAdjLocked(Lcom/android/server/am/ProcessRecord;ILcom/android/server/am/ProcessRecord;ZJ)Z

    move-result v1

    .line 25286
    if-eqz p2, :cond_3

    iget-boolean p2, p1, Lcom/android/server/am/ProcessRecord;->cached:Z

    if-ne v0, p2, :cond_2

    iget p1, p1, Lcom/android/server/am/ProcessRecord;->curRawAdj:I

    if-ne p1, v8, :cond_3

    .line 25290
    :cond_2
    invoke-virtual {p0}, Lcom/android/server/am/ActivityManagerService;->updateOomAdjLocked()V

    .line 25292
    :cond_3
    return v1
.end method

.method public updatePersistentConfiguration(Landroid/content/res/Configuration;)V
    .locals 2

    .line 22675
    const-string v0, "android.permission.CHANGE_CONFIGURATION"

    const-string/jumbo v1, "updatePersistentConfiguration()"

    invoke-virtual {p0, v0, v1}, Lcom/android/server/am/ActivityManagerService;->enforceCallingPermission(Ljava/lang/String;Ljava/lang/String;)V

    .line 22676
    const-string/jumbo v0, "updatePersistentConfiguration()"

    invoke-direct {p0, v0}, Lcom/android/server/am/ActivityManagerService;->enforceWriteSettingsPermission(Ljava/lang/String;)V

    .line 22677
    if-eqz p1, :cond_0

    .line 22681
    invoke-static {}, Landroid/os/UserHandle;->getCallingUserId()I

    move-result v0

    .line 22683
    monitor-enter p0

    :try_start_0
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    .line 22684
    invoke-direct {p0, p1, v0}, Lcom/android/server/am/ActivityManagerService;->updatePersistentConfigurationLocked(Landroid/content/res/Configuration;I)V

    .line 22685
    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    .line 22686
    return-void

    .line 22685
    :catchall_0
    move-exception p1

    :try_start_1
    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw p1

    .line 22678
    :cond_0
    new-instance p1, Ljava/lang/NullPointerException;

    const-string v0, "Configuration must not be null"

    invoke-direct {p1, v0}, Ljava/lang/NullPointerException;-><init>(Ljava/lang/String;)V

    throw p1
.end method

.method final updateProcessForegroundLocked(Lcom/android/server/am/ProcessRecord;ZZ)V
    .locals 4
    .annotation build Lcom/android/internal/annotations/GuardedBy;
        value = "this"
    .end annotation

    .line 25192
    iget-boolean v0, p1, Lcom/android/server/am/ProcessRecord;->foregroundServices:Z

    if-eq p2, v0, :cond_3

    .line 25193
    iput-boolean p2, p1, Lcom/android/server/am/ProcessRecord;->foregroundServices:Z

    .line 25194
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mForegroundPackages:Lcom/android/internal/app/ProcessMap;

    iget-object v1, p1, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget-object v1, v1, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;

    iget-object v2, p1, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget v2, v2, Landroid/content/pm/ApplicationInfo;->uid:I

    invoke-virtual {v0, v1, v2}, Lcom/android/internal/app/ProcessMap;->get(Ljava/lang/String;I)Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Ljava/util/ArrayList;

    .line 25196
    if-eqz p2, :cond_1

    .line 25197
    if-nez v0, :cond_0

    .line 25198
    new-instance v0, Ljava/util/ArrayList;

    invoke-direct {v0}, Ljava/util/ArrayList;-><init>()V

    .line 25199
    iget-object p2, p0, Lcom/android/server/am/ActivityManagerService;->mForegroundPackages:Lcom/android/internal/app/ProcessMap;

    iget-object v1, p1, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget-object v1, v1, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;

    iget-object v2, p1, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget v2, v2, Landroid/content/pm/ApplicationInfo;->uid:I

    invoke-virtual {p2, v1, v2, v0}, Lcom/android/internal/app/ProcessMap;->put(Ljava/lang/String;ILjava/lang/Object;)Ljava/lang/Object;

    .line 25201
    :cond_0
    invoke-virtual {v0, p1}, Ljava/util/ArrayList;->contains(Ljava/lang/Object;)Z

    move-result p2

    if-nez p2, :cond_2

    .line 25202
    invoke-virtual {v0, p1}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    .line 25203
    iget-object p2, p0, Lcom/android/server/am/ActivityManagerService;->mBatteryStatsService:Lcom/android/server/am/BatteryStatsService;

    const v0, 0x8002

    iget-object v1, p1, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget-object v1, v1, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;

    iget-object p1, p1, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget p1, p1, Landroid/content/pm/ApplicationInfo;->uid:I

    invoke-virtual {p2, v0, v1, p1}, Lcom/android/server/am/BatteryStatsService;->noteEvent(ILjava/lang/String;I)V

    goto :goto_0

    .line 25207
    :cond_1
    if-eqz v0, :cond_2

    .line 25208
    invoke-virtual {v0, p1}, Ljava/util/ArrayList;->remove(Ljava/lang/Object;)Z

    move-result p2

    if-eqz p2, :cond_2

    .line 25209
    iget-object p2, p0, Lcom/android/server/am/ActivityManagerService;->mBatteryStatsService:Lcom/android/server/am/BatteryStatsService;

    const/16 v1, 0x4002

    iget-object v2, p1, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget-object v2, v2, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;

    iget-object v3, p1, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget v3, v3, Landroid/content/pm/ApplicationInfo;->uid:I

    invoke-virtual {p2, v1, v2, v3}, Lcom/android/server/am/BatteryStatsService;->noteEvent(ILjava/lang/String;I)V

    .line 25212
    invoke-virtual {v0}, Ljava/util/ArrayList;->size()I

    move-result p2

    if-gtz p2, :cond_2

    .line 25213
    iget-object p2, p0, Lcom/android/server/am/ActivityManagerService;->mForegroundPackages:Lcom/android/internal/app/ProcessMap;

    iget-object v0, p1, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget-object v0, v0, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;

    iget-object p1, p1, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget p1, p1, Landroid/content/pm/ApplicationInfo;->uid:I

    invoke-virtual {p2, v0, p1}, Lcom/android/internal/app/ProcessMap;->remove(Ljava/lang/String;I)Ljava/lang/Object;

    .line 25218
    :cond_2
    :goto_0
    if-eqz p3, :cond_3

    .line 25219
    invoke-virtual {p0}, Lcom/android/server/am/ActivityManagerService;->updateOomAdjLocked()V

    .line 25222
    :cond_3
    return-void
.end method

.method updateSleepIfNeededLocked()V
    .locals 3
    .annotation build Lcom/android/internal/annotations/GuardedBy;
        value = "this"
    .end annotation

    .line 13592
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mStackSupervisor:Lcom/android/server/am/ActivityStackSupervisor;

    invoke-virtual {v0}, Lcom/android/server/am/ActivityStackSupervisor;->hasAwakeDisplay()Z

    move-result v0

    .line 13593
    const/4 v1, 0x1

    xor-int/2addr v0, v1

    iget-boolean v2, p0, Lcom/android/server/am/ActivityManagerService;->mSleeping:Z

    .line 13595
    if-nez v0, :cond_1

    .line 13599
    if-eqz v2, :cond_0

    .line 13600
    const/4 v0, 0x0

    iput-boolean v0, p0, Lcom/android/server/am/ActivityManagerService;->mSleeping:Z

    .line 13601
    invoke-virtual {p0}, Lcom/android/server/am/ActivityManagerService;->startTimeTrackingFocusedActivityLocked()V

    .line 13602
    const/4 v0, 0x2

    iput v0, p0, Lcom/android/server/am/ActivityManagerService;->mTopProcessState:I

    .line 13603
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mStackSupervisor:Lcom/android/server/am/ActivityStackSupervisor;

    invoke-virtual {v0}, Lcom/android/server/am/ActivityStackSupervisor;->comeOutOfSleepIfNeededLocked()V

    .line 13605
    :cond_0
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mStackSupervisor:Lcom/android/server/am/ActivityStackSupervisor;

    invoke-virtual {v0, v1}, Lcom/android/server/am/ActivityStackSupervisor;->applySleepTokensLocked(Z)V

    .line 13606
    if-eqz v2, :cond_3

    .line 13607
    invoke-virtual {p0}, Lcom/android/server/am/ActivityManagerService;->updateOomAdjLocked()V

    goto :goto_0

    .line 13609
    :cond_1
    iget-boolean v2, p0, Lcom/android/server/am/ActivityManagerService;->mSleeping:Z

    if-nez v2, :cond_3

    if-eqz v0, :cond_3

    .line 13610
    iput-boolean v1, p0, Lcom/android/server/am/ActivityManagerService;->mSleeping:Z

    .line 13611
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mCurAppTimeTracker:Lcom/android/server/am/AppTimeTracker;

    if-eqz v0, :cond_2

    .line 13612
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mCurAppTimeTracker:Lcom/android/server/am/AppTimeTracker;

    invoke-virtual {v0}, Lcom/android/server/am/AppTimeTracker;->stop()V

    .line 13614
    :cond_2
    const/16 v0, 0xb

    iput v0, p0, Lcom/android/server/am/ActivityManagerService;->mTopProcessState:I

    .line 13615
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mStackSupervisor:Lcom/android/server/am/ActivityStackSupervisor;

    invoke-virtual {v0}, Lcom/android/server/am/ActivityStackSupervisor;->goingToSleepLocked()V

    .line 13616
    const/4 v0, 0x0

    invoke-direct {p0, v0}, Lcom/android/server/am/ActivityManagerService;->updateResumedAppTrace(Lcom/android/server/am/ActivityRecord;)V

    .line 13617
    invoke-virtual {p0}, Lcom/android/server/am/ActivityManagerService;->updateOomAdjLocked()V

    .line 13619
    :cond_3
    :goto_0
    return-void
.end method

.method updateUsageStats(Lcom/android/server/am/ActivityRecord;Z)V
    .locals 7

    .line 4763
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mBatteryStatsService:Lcom/android/server/am/BatteryStatsService;

    invoke-virtual {v0}, Lcom/android/server/am/BatteryStatsService;->getActiveStatistics()Lcom/android/internal/os/BatteryStatsImpl;

    move-result-object v0

    .line 4764
    iget-object v1, p1, Lcom/android/server/am/ActivityRecord;->app:Lcom/android/server/am/ProcessRecord;

    iget v1, v1, Lcom/android/server/am/ProcessRecord;->uid:I

    iget-object v2, p1, Lcom/android/server/am/ActivityRecord;->realActivity:Landroid/content/ComponentName;

    .line 4765
    invoke-virtual {v2}, Landroid/content/ComponentName;->getPackageName()Ljava/lang/String;

    move-result-object v2

    iget-object v3, p1, Lcom/android/server/am/ActivityRecord;->realActivity:Landroid/content/ComponentName;

    .line 4766
    invoke-virtual {v3}, Landroid/content/ComponentName;->getShortClassName()Ljava/lang/String;

    move-result-object v3

    const/4 v4, 0x1

    if-eqz p2, :cond_0

    .line 4767
    nop

    .line 4764
    move v5, v4

    goto :goto_0

    .line 4768
    :cond_0
    const/4 v5, 0x0

    .line 4764
    :goto_0
    const/16 v6, 0x2a

    invoke-static {v6, v1, v2, v3, v5}, Landroid/util/StatsLog;->write(IILjava/lang/String;Ljava/lang/String;I)I

    .line 4769
    if-eqz p2, :cond_2

    .line 4770
    iget-object p2, p0, Lcom/android/server/am/ActivityManagerService;->mUsageStatsService:Landroid/app/usage/UsageStatsManagerInternal;

    if-eqz p2, :cond_1

    .line 4771
    iget-object p2, p0, Lcom/android/server/am/ActivityManagerService;->mUsageStatsService:Landroid/app/usage/UsageStatsManagerInternal;

    iget-object v1, p1, Lcom/android/server/am/ActivityRecord;->realActivity:Landroid/content/ComponentName;

    iget v2, p1, Lcom/android/server/am/ActivityRecord;->userId:I

    invoke-virtual {p2, v1, v2, v4}, Landroid/app/usage/UsageStatsManagerInternal;->reportEvent(Landroid/content/ComponentName;II)V

    .line 4775
    :cond_1
    monitor-enter v0

    .line 4776
    :try_start_0
    iget-object p1, p1, Lcom/android/server/am/ActivityRecord;->app:Lcom/android/server/am/ProcessRecord;

    iget p1, p1, Lcom/android/server/am/ProcessRecord;->uid:I

    invoke-virtual {v0, p1}, Lcom/android/internal/os/BatteryStatsImpl;->noteActivityResumedLocked(I)V

    .line 4777
    monitor-exit v0

    goto :goto_1

    :catchall_0
    move-exception p1

    monitor-exit v0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    throw p1

    .line 4779
    :cond_2
    iget-object p2, p0, Lcom/android/server/am/ActivityManagerService;->mUsageStatsService:Landroid/app/usage/UsageStatsManagerInternal;

    if-eqz p2, :cond_3

    .line 4780
    iget-object p2, p0, Lcom/android/server/am/ActivityManagerService;->mUsageStatsService:Landroid/app/usage/UsageStatsManagerInternal;

    iget-object v1, p1, Lcom/android/server/am/ActivityRecord;->realActivity:Landroid/content/ComponentName;

    iget v2, p1, Lcom/android/server/am/ActivityRecord;->userId:I

    const/4 v3, 0x2

    invoke-virtual {p2, v1, v2, v3}, Landroid/app/usage/UsageStatsManagerInternal;->reportEvent(Landroid/content/ComponentName;II)V

    .line 4783
    :cond_3
    monitor-enter v0

    .line 4784
    :try_start_1
    iget-object p1, p1, Lcom/android/server/am/ActivityRecord;->app:Lcom/android/server/am/ProcessRecord;

    iget p1, p1, Lcom/android/server/am/ProcessRecord;->uid:I

    invoke-virtual {v0, p1}, Lcom/android/internal/os/BatteryStatsImpl;->noteActivityPausedLocked(I)V

    .line 4785
    monitor-exit v0

    .line 4787
    :goto_1
    return-void

    .line 4785
    :catchall_1
    move-exception p1

    monitor-exit v0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_1

    throw p1
.end method

.method updateUserConfigurationLocked()V
    .locals 7

    .line 22763
    new-instance v1, Landroid/content/res/Configuration;

    invoke-virtual {p0}, Lcom/android/server/am/ActivityManagerService;->getGlobalConfiguration()Landroid/content/res/Configuration;

    move-result-object v0

    invoke-direct {v1, v0}, Landroid/content/res/Configuration;-><init>(Landroid/content/res/Configuration;)V

    .line 22764
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mUserController:Lcom/android/server/am/UserController;

    invoke-virtual {v0}, Lcom/android/server/am/UserController;->getCurrentUserId()I

    move-result v5

    .line 22765
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mContext:Landroid/content/Context;

    invoke-virtual {v0}, Landroid/content/Context;->getContentResolver()Landroid/content/ContentResolver;

    move-result-object v0

    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mContext:Landroid/content/Context;

    .line 22766
    invoke-static {v2}, Landroid/provider/Settings$System;->canWrite(Landroid/content/Context;)Z

    move-result v2

    .line 22765
    invoke-static {v0, v1, v5, v2}, Landroid/provider/Settings$System;->adjustConfigurationForUser(Landroid/content/ContentResolver;Landroid/content/res/Configuration;IZ)V

    .line 22767
    const/4 v2, 0x0

    const/4 v3, 0x0

    const/4 v4, 0x0

    const/4 v6, 0x0

    move-object v0, p0

    invoke-direct/range {v0 .. v6}, Lcom/android/server/am/ActivityManagerService;->updateConfigurationLocked(Landroid/content/res/Configuration;Lcom/android/server/am/ActivityRecord;ZZIZ)Z

    .line 22769
    return-void
.end method

.method final verifyBroadcastLocked(Landroid/content/Intent;)Landroid/content/Intent;
    .locals 4

    .line 22203
    if-eqz p1, :cond_1

    invoke-virtual {p1}, Landroid/content/Intent;->hasFileDescriptors()Z

    move-result v0

    const/4 v1, 0x1

    if-eq v0, v1, :cond_0

    goto :goto_0

    .line 22204
    :cond_0
    new-instance p1, Ljava/lang/IllegalArgumentException;

    const-string v0, "File descriptors passed in Intent"

    invoke-direct {p1, v0}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw p1

    .line 22207
    :cond_1
    :goto_0
    invoke-virtual {p1}, Landroid/content/Intent;->getFlags()I

    move-result v0

    .line 22209
    iget-boolean v1, p0, Lcom/android/server/am/ActivityManagerService;->mProcessesReady:Z

    if-nez v1, :cond_4

    .line 22212
    const/high16 v1, 0x4000000

    and-int/2addr v1, v0

    if-eqz v1, :cond_2

    goto :goto_1

    .line 22214
    :cond_2
    const/high16 v1, 0x40000000    # 2.0f

    and-int/2addr v1, v0

    if-eqz v1, :cond_3

    goto :goto_1

    .line 22215
    :cond_3
    new-instance v0, Ljava/lang/StringBuilder;

    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V

    const-string v1, "Attempt to launch receivers of broadcast intent "

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    const-string p1, " before boot completion"

    invoke-virtual {v0, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object p1

    const-string v0, "ActivityManager"

    invoke-static {v0, p1}, Landroid/util/Slog;->e(Ljava/lang/String;Ljava/lang/String;)I

    .line 22217
    new-instance p1, Ljava/lang/IllegalStateException;

    const-string v0, "Cannot broadcast before boot completed"

    invoke-direct {p1, v0}, Ljava/lang/IllegalStateException;-><init>(Ljava/lang/String;)V

    throw p1

    .line 22221
    :cond_4
    :goto_1
    const/high16 v1, 0x2000000

    and-int/2addr v1, v0

    if-nez v1, :cond_7

    .line 22226
    const/high16 v1, 0x400000

    and-int/2addr v0, v1

    if-eqz v0, :cond_6

    .line 22227
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v0

    if-eqz v0, :cond_5

    const/16 v2, 0x7d0

    if-eq v0, v2, :cond_5

    .line 22232
    const-string v0, "ActivityManager"

    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    const-string v3, "Removing FLAG_RECEIVER_FROM_SHELL because caller is UID "

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 22233
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v3

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v2

    .line 22232
    invoke-static {v0, v2}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 22234
    invoke-virtual {p1, v1}, Landroid/content/Intent;->removeFlags(I)V

    goto :goto_2

    .line 22230
    :cond_5
    nop

    .line 22239
    :cond_6
    :goto_2
    return-object p1

    .line 22222
    :cond_7
    new-instance p1, Ljava/lang/IllegalArgumentException;

    const-string v0, "Can\'t use FLAG_RECEIVER_BOOT_UPGRADE here"

    invoke-direct {p1, v0}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw p1
.end method

.method public waitForBroadcastIdle(Ljava/io/PrintWriter;)V
    .locals 7

    .line 27339
    const-string v0, "android.permission.DUMP"

    const-string/jumbo v1, "waitForBroadcastIdle()"

    invoke-virtual {p0, v0, v1}, Lcom/android/server/am/ActivityManagerService;->enforceCallingPermission(Ljava/lang/String;Ljava/lang/String;)V

    .line 27341
    :goto_0
    nop

    .line 27342
    monitor-enter p0

    :try_start_0
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    .line 27343
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mBroadcastQueues:[Lcom/android/server/am/BroadcastQueue;

    array-length v1, v0

    const/4 v2, 0x0

    const/4 v3, 0x1

    move v4, v3

    move v3, v2

    :goto_1
    if-ge v3, v1, :cond_1

    aget-object v5, v0, v3

    .line 27344
    invoke-virtual {v5}, Lcom/android/server/am/BroadcastQueue;->isIdle()Z

    move-result v6

    if-nez v6, :cond_0

    .line 27345
    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    const-string v6, "Waiting for queue "

    invoke-virtual {v4, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    const-string v5, " to become idle..."

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v4

    .line 27346
    invoke-virtual {p1, v4}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 27347
    invoke-virtual {p1}, Ljava/io/PrintWriter;->flush()V

    .line 27348
    const-string v5, "ActivityManager"

    invoke-static {v5, v4}, Landroid/util/Slog;->v(Ljava/lang/String;Ljava/lang/String;)I

    .line 27349
    nop

    .line 27343
    move v4, v2

    :cond_0
    add-int/lit8 v3, v3, 0x1

    goto :goto_1

    .line 27352
    :cond_1
    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    .line 27354
    if-eqz v4, :cond_2

    .line 27356
    const-string v0, "All broadcast queues are idle!"

    invoke-virtual {p1, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 27357
    invoke-virtual {p1}, Ljava/io/PrintWriter;->flush()V

    .line 27358
    const-string p1, "ActivityManager"

    const-string v0, "All broadcast queues are idle!"

    invoke-static {p1, v0}, Landroid/util/Slog;->v(Ljava/lang/String;Ljava/lang/String;)I

    .line 27359
    return-void

    .line 27361
    :cond_2
    const-wide/16 v0, 0x3e8

    invoke-static {v0, v1}, Landroid/os/SystemClock;->sleep(J)V

    .line 27363
    goto :goto_0

    .line 27352
    :catchall_0
    move-exception p1

    :try_start_1
    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw p1
.end method

.method public waitForNetworkStateUpdate(J)V
    .locals 8

    .line 27278
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v0

    .line 27283
    monitor-enter p0

    :try_start_0
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    .line 27284
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mActiveUids:Landroid/util/SparseArray;

    invoke-virtual {v1, v0}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    move-result-object v1

    check-cast v1, Lcom/android/server/am/UidRecord;

    .line 27285
    if-nez v1, :cond_0

    .line 27286
    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_1

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    return-void

    .line 27288
    :cond_0
    :try_start_1
    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_1

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    .line 27289
    iget-object v2, v1, Lcom/android/server/am/UidRecord;->networkStateLock:Ljava/lang/Object;

    monitor-enter v2

    .line 27290
    :try_start_2
    iget-wide v3, v1, Lcom/android/server/am/UidRecord;->lastDispatchedProcStateSeq:J

    cmp-long v3, v3, p1

    if-gez v3, :cond_1

    .line 27297
    monitor-exit v2

    return-void

    .line 27299
    :cond_1
    iget-wide v3, v1, Lcom/android/server/am/UidRecord;->curProcStateSeq:J

    cmp-long v3, v3, p1

    if-lez v3, :cond_2

    .line 27305
    monitor-exit v2

    return-void

    .line 27307
    :cond_2
    iget-wide v3, v1, Lcom/android/server/am/UidRecord;->lastNetworkUpdatedProcStateSeq:J

    cmp-long v3, v3, p1

    if-ltz v3, :cond_3

    .line 27314
    monitor-exit v2
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    return-void

    .line 27321
    :cond_3
    :try_start_3
    invoke-static {}, Landroid/os/SystemClock;->uptimeMillis()J

    move-result-wide v3

    .line 27322
    const/4 v5, 0x1

    iput-boolean v5, v1, Lcom/android/server/am/UidRecord;->waitingForNetwork:Z

    .line 27323
    iget-object v5, v1, Lcom/android/server/am/UidRecord;->networkStateLock:Ljava/lang/Object;

    iget-wide v6, p0, Lcom/android/server/am/ActivityManagerService;->mWaitForNetworkTimeoutMs:J

    invoke-virtual {v5, v6, v7}, Ljava/lang/Object;->wait(J)V

    .line 27324
    const/4 v5, 0x0

    iput-boolean v5, v1, Lcom/android/server/am/UidRecord;->waitingForNetwork:Z

    .line 27325
    invoke-static {}, Landroid/os/SystemClock;->uptimeMillis()J

    move-result-wide v5

    sub-long/2addr v5, v3

    .line 27326
    iget-wide v3, p0, Lcom/android/server/am/ActivityManagerService;->mWaitForNetworkTimeoutMs:J

    cmp-long v3, v5, v3

    if-gez v3, :cond_4

    goto :goto_0

    .line 27327
    :cond_4
    const-string v3, "ActivityManager_Network"

    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    const-string v7, "Total time waited for network rules to get updated: "

    invoke-virtual {v4, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v4, v5, v6}, Ljava/lang/StringBuilder;->append(J)Ljava/lang/StringBuilder;

    const-string v5, ". Uid: "

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v4, v0}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v5, " procStateSeq: "

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v4, p1, p2}, Ljava/lang/StringBuilder;->append(J)Ljava/lang/StringBuilder;

    const-string p1, " UidRec: "

    invoke-virtual {v4, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v4, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    const-string p1, " validateUidRec: "

    invoke-virtual {v4, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget-object p1, p0, Lcom/android/server/am/ActivityManagerService;->mValidateUids:Landroid/util/SparseArray;

    .line 27330
    invoke-virtual {p1, v0}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    move-result-object p1

    invoke-virtual {v4, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object p1

    .line 27327
    invoke-static {v3, p1}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I
    :try_end_3
    .catch Ljava/lang/InterruptedException; {:try_start_3 .. :try_end_3} :catch_0
    .catchall {:try_start_3 .. :try_end_3} :catchall_0

    .line 27334
    :goto_0
    goto :goto_1

    .line 27332
    :catch_0
    move-exception p1

    .line 27333
    :try_start_4
    invoke-static {}, Ljava/lang/Thread;->currentThread()Ljava/lang/Thread;

    move-result-object p1

    invoke-virtual {p1}, Ljava/lang/Thread;->interrupt()V

    .line 27335
    :goto_1
    monitor-exit v2

    .line 27336
    return-void

    .line 27335
    :catchall_0
    move-exception p1

    monitor-exit v2
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_0

    throw p1

    .line 27288
    :catchall_1
    move-exception p1

    :try_start_5
    monitor-exit p0
    :try_end_5
    .catchall {:try_start_5 .. :try_end_5} :catchall_1

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw p1
.end method

.method public willActivityBeVisible(Landroid/os/IBinder;)Z
    .locals 1

    .line 6036
    monitor-enter p0

    :try_start_0
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    .line 6037
    invoke-static {p1}, Lcom/android/server/am/ActivityRecord;->getStackLocked(Landroid/os/IBinder;)Lcom/android/server/am/ActivityStack;

    move-result-object v0

    .line 6038
    if-eqz v0, :cond_0

    .line 6039
    invoke-virtual {v0, p1}, Lcom/android/server/am/ActivityStack;->willActivityBeVisibleLocked(Landroid/os/IBinder;)Z

    move-result p1

    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    return p1

    .line 6041
    :cond_0
    const/4 p1, 0x0

    :try_start_1
    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    return p1

    .line 6042
    :catchall_0
    move-exception p1

    :try_start_2
    monitor-exit p0
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw p1
.end method

.method writeBroadcastsToProtoLocked(Landroid/util/proto/ProtoOutputStream;)V
    .locals 24

    move-object/from16 v0, p0

    .line 18098
    move-object/from16 v9, p1

    iget-object v1, v0, Lcom/android/server/am/ActivityManagerService;->mRegisteredReceivers:Ljava/util/HashMap;

    invoke-virtual {v1}, Ljava/util/HashMap;->size()I

    move-result v1

    if-lez v1, :cond_0

    .line 18099
    iget-object v1, v0, Lcom/android/server/am/ActivityManagerService;->mRegisteredReceivers:Ljava/util/HashMap;

    invoke-virtual {v1}, Ljava/util/HashMap;->values()Ljava/util/Collection;

    move-result-object v1

    invoke-interface {v1}, Ljava/util/Collection;->iterator()Ljava/util/Iterator;

    move-result-object v1

    .line 18100
    :goto_0
    invoke-interface {v1}, Ljava/util/Iterator;->hasNext()Z

    move-result v2

    if-eqz v2, :cond_0

    .line 18101
    invoke-interface {v1}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Lcom/android/server/am/ReceiverList;

    .line 18102
    const-wide v3, 0x20b00000001L

    invoke-virtual {v2, v9, v3, v4}, Lcom/android/server/am/ReceiverList;->writeToProto(Landroid/util/proto/ProtoOutputStream;J)V

    .line 18103
    goto :goto_0

    .line 18105
    :cond_0
    iget-object v1, v0, Lcom/android/server/am/ActivityManagerService;->mReceiverResolver:Lcom/android/server/IntentResolver;

    const-wide v10, 0x10b00000002L

    invoke-virtual {v1, v9, v10, v11}, Lcom/android/server/IntentResolver;->writeToProto(Landroid/util/proto/ProtoOutputStream;J)V

    .line 18106
    iget-object v1, v0, Lcom/android/server/am/ActivityManagerService;->mBroadcastQueues:[Lcom/android/server/am/BroadcastQueue;

    array-length v2, v1

    const/4 v3, 0x0

    move v4, v3

    :goto_1
    if-ge v4, v2, :cond_1

    aget-object v5, v1, v4

    .line 18107
    const-wide v6, 0x20b00000003L

    invoke-virtual {v5, v9, v6, v7}, Lcom/android/server/am/BroadcastQueue;->writeToProto(Landroid/util/proto/ProtoOutputStream;J)V

    .line 18106
    add-int/lit8 v4, v4, 0x1

    goto :goto_1

    .line 18109
    :cond_1
    move v12, v3

    :goto_2
    iget-object v1, v0, Lcom/android/server/am/ActivityManagerService;->mStickyBroadcasts:Landroid/util/SparseArray;

    invoke-virtual {v1}, Landroid/util/SparseArray;->size()I

    move-result v1

    const-wide v13, 0x10900000001L

    if-ge v12, v1, :cond_4

    .line 18110
    const-wide v1, 0x20b00000004L

    invoke-virtual {v9, v1, v2}, Landroid/util/proto/ProtoOutputStream;->start(J)J

    move-result-wide v7

    .line 18111
    const-wide v1, 0x10500000001L

    iget-object v3, v0, Lcom/android/server/am/ActivityManagerService;->mStickyBroadcasts:Landroid/util/SparseArray;

    invoke-virtual {v3, v12}, Landroid/util/SparseArray;->keyAt(I)I

    move-result v3

    invoke-virtual {v9, v1, v2, v3}, Landroid/util/proto/ProtoOutputStream;->write(JI)V

    .line 18113
    iget-object v1, v0, Lcom/android/server/am/ActivityManagerService;->mStickyBroadcasts:Landroid/util/SparseArray;

    invoke-virtual {v1, v12}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;

    move-result-object v1

    check-cast v1, Landroid/util/ArrayMap;

    invoke-virtual {v1}, Landroid/util/ArrayMap;->entrySet()Ljava/util/Set;

    move-result-object v1

    invoke-interface {v1}, Ljava/util/Set;->iterator()Ljava/util/Iterator;

    move-result-object v15

    :goto_3
    invoke-interface {v15}, Ljava/util/Iterator;->hasNext()Z

    move-result v1

    if-eqz v1, :cond_3

    invoke-interface {v15}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v1

    check-cast v1, Ljava/util/Map$Entry;

    .line 18114
    const-wide v2, 0x20b00000002L

    invoke-virtual {v9, v2, v3}, Landroid/util/proto/ProtoOutputStream;->start(J)J

    move-result-wide v5

    .line 18115
    invoke-interface {v1}, Ljava/util/Map$Entry;->getKey()Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Ljava/lang/String;

    invoke-virtual {v9, v13, v14, v2}, Landroid/util/proto/ProtoOutputStream;->write(JLjava/lang/String;)V

    .line 18116
    invoke-interface {v1}, Ljava/util/Map$Entry;->getValue()Ljava/lang/Object;

    move-result-object v1

    check-cast v1, Ljava/util/ArrayList;

    invoke-virtual {v1}, Ljava/util/ArrayList;->iterator()Ljava/util/Iterator;

    move-result-object v3

    :goto_4
    invoke-interface {v3}, Ljava/util/Iterator;->hasNext()Z

    move-result v1

    if-eqz v1, :cond_2

    invoke-interface {v3}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v1

    check-cast v1, Landroid/content/Intent;

    .line 18117
    const-wide v16, 0x20b00000002L

    const/16 v18, 0x0

    const/16 v19, 0x1

    const/16 v20, 0x1

    const/16 v21, 0x0

    move-object v2, v9

    move-object/from16 v22, v3

    move-wide/from16 v3, v16

    move-wide v10, v5

    move/from16 v5, v18

    move/from16 v6, v19

    move-wide v13, v7

    move/from16 v7, v20

    move/from16 v8, v21

    invoke-virtual/range {v1 .. v8}, Landroid/content/Intent;->writeToProto(Landroid/util/proto/ProtoOutputStream;JZZZZ)V

    .line 18119
    nop

    .line 18116
    move-wide v5, v10

    move-wide v7, v13

    move-object/from16 v3, v22

    const-wide v10, 0x10b00000002L

    const-wide v13, 0x10900000001L

    goto :goto_4

    .line 18120
    :cond_2
    move-wide v10, v5

    move-wide v13, v7

    invoke-virtual {v9, v10, v11}, Landroid/util/proto/ProtoOutputStream;->end(J)V

    .line 18121
    nop

    .line 18113
    const-wide v10, 0x10b00000002L

    const-wide v13, 0x10900000001L

    goto :goto_3

    .line 18122
    :cond_3
    move-wide v13, v7

    invoke-virtual {v9, v13, v14}, Landroid/util/proto/ProtoOutputStream;->end(J)V

    .line 18109
    add-int/lit8 v12, v12, 0x1

    const-wide v10, 0x10b00000002L

    goto/16 :goto_2

    .line 18125
    :cond_4
    const-wide v1, 0x10b00000005L

    invoke-virtual {v9, v1, v2}, Landroid/util/proto/ProtoOutputStream;->start(J)J

    move-result-wide v1

    .line 18126
    iget-object v3, v0, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    invoke-virtual {v3}, Lcom/android/server/am/ActivityManagerService$MainHandler;->toString()Ljava/lang/String;

    move-result-object v3

    const-wide v4, 0x10900000001L

    invoke-virtual {v9, v4, v5, v3}, Landroid/util/proto/ProtoOutputStream;->write(JLjava/lang/String;)V

    .line 18127
    iget-object v0, v0, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    invoke-virtual {v0}, Lcom/android/server/am/ActivityManagerService$MainHandler;->getLooper()Landroid/os/Looper;

    move-result-object v0

    const-wide v3, 0x10b00000002L

    invoke-virtual {v0, v9, v3, v4}, Landroid/os/Looper;->writeToProto(Landroid/util/proto/ProtoOutputStream;J)V

    .line 18129
    invoke-virtual {v9, v1, v2}, Landroid/util/proto/ProtoOutputStream;->end(J)V

    .line 18130
    return-void
.end method

.method writeProcessesToGcToProto(Landroid/util/proto/ProtoOutputStream;JLjava/lang/String;)V
    .locals 10

    .line 17798
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mProcessesToGc:Ljava/util/ArrayList;

    invoke-virtual {v0}, Ljava/util/ArrayList;->size()I

    move-result v0

    if-lez v0, :cond_1

    .line 17799
    invoke-static {}, Landroid/os/SystemClock;->uptimeMillis()J

    move-result-wide v0

    .line 17800
    const/4 v2, 0x0

    :goto_0
    iget-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mProcessesToGc:Ljava/util/ArrayList;

    invoke-virtual {v3}, Ljava/util/ArrayList;->size()I

    move-result v3

    if-ge v2, v3, :cond_1

    .line 17801
    iget-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mProcessesToGc:Ljava/util/ArrayList;

    invoke-virtual {v3, v2}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v3

    check-cast v3, Lcom/android/server/am/ProcessRecord;

    .line 17802
    if-eqz p4, :cond_0

    iget-object v4, v3, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget-object v4, v4, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;

    invoke-virtual {p4, v4}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v4

    if-nez v4, :cond_0

    .line 17803
    goto :goto_1

    .line 17805
    :cond_0
    invoke-virtual {p1, p2, p3}, Landroid/util/proto/ProtoOutputStream;->start(J)J

    move-result-wide v4

    .line 17806
    const-wide v6, 0x10b00000001L

    invoke-virtual {v3, p1, v6, v7}, Lcom/android/server/am/ProcessRecord;->writeToProto(Landroid/util/proto/ProtoOutputStream;J)V

    .line 17807
    const-wide v6, 0x10800000002L

    iget-boolean v8, v3, Lcom/android/server/am/ProcessRecord;->reportLowMemory:Z

    invoke-virtual {p1, v6, v7, v8}, Landroid/util/proto/ProtoOutputStream;->write(JZ)V

    .line 17808
    const-wide v6, 0x10300000003L

    invoke-virtual {p1, v6, v7, v0, v1}, Landroid/util/proto/ProtoOutputStream;->write(JJ)V

    .line 17809
    const-wide v6, 0x10300000004L

    iget-wide v8, v3, Lcom/android/server/am/ProcessRecord;->lastRequestedGc:J

    invoke-virtual {p1, v6, v7, v8, v9}, Landroid/util/proto/ProtoOutputStream;->write(JJ)V

    .line 17810
    const-wide v6, 0x10300000005L

    iget-wide v8, v3, Lcom/android/server/am/ProcessRecord;->lastLowMemory:J

    invoke-virtual {p1, v6, v7, v8, v9}, Landroid/util/proto/ProtoOutputStream;->write(JJ)V

    .line 17811
    invoke-virtual {p1, v4, v5}, Landroid/util/proto/ProtoOutputStream;->end(J)V

    .line 17800
    :goto_1
    add-int/lit8 v2, v2, 0x1

    goto :goto_0

    .line 17814
    :cond_1
    return-void
.end method

.method writeProcessesToProtoLocked(Landroid/util/proto/ProtoOutputStream;Ljava/lang/String;)V
    .locals 21
    .annotation build Lcom/android/internal/annotations/GuardedBy;
        value = "this"
    .end annotation

    move-object/from16 v0, p0

    move-object/from16 v8, p1

    .line 17497
    move-object/from16 v9, p2

    .line 17499
    iget-object v1, v0, Lcom/android/server/am/ActivityManagerService;->mProcessNames:Lcom/android/internal/app/ProcessMap;

    invoke-virtual {v1}, Lcom/android/internal/app/ProcessMap;->getMap()Landroid/util/ArrayMap;

    move-result-object v1

    invoke-virtual {v1}, Landroid/util/ArrayMap;->size()I

    move-result v1

    .line 17500
    const/4 v2, 0x0

    const/4 v11, 0x0

    :goto_0
    const-wide v12, 0x20b00000001L

    if-ge v2, v1, :cond_3

    .line 17501
    iget-object v3, v0, Lcom/android/server/am/ActivityManagerService;->mProcessNames:Lcom/android/internal/app/ProcessMap;

    invoke-virtual {v3}, Lcom/android/internal/app/ProcessMap;->getMap()Landroid/util/ArrayMap;

    move-result-object v3

    invoke-virtual {v3, v2}, Landroid/util/ArrayMap;->valueAt(I)Ljava/lang/Object;

    move-result-object v3

    check-cast v3, Landroid/util/SparseArray;

    .line 17502
    invoke-virtual {v3}, Landroid/util/SparseArray;->size()I

    move-result v4

    .line 17503
    const/4 v5, 0x0

    :goto_1
    if-ge v5, v4, :cond_2

    .line 17504
    invoke-virtual {v3, v5}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;

    move-result-object v6

    check-cast v6, Lcom/android/server/am/ProcessRecord;

    .line 17505
    if-eqz v9, :cond_0

    iget-object v7, v6, Lcom/android/server/am/ProcessRecord;->pkgList:Landroid/util/ArrayMap;

    invoke-virtual {v7, v9}, Landroid/util/ArrayMap;->containsKey(Ljava/lang/Object;)Z

    move-result v7

    if-nez v7, :cond_0

    .line 17506
    goto :goto_2

    .line 17508
    :cond_0
    invoke-virtual {v6, v8, v12, v13}, Lcom/android/server/am/ProcessRecord;->writeToProto(Landroid/util/proto/ProtoOutputStream;J)V

    .line 17509
    iget-boolean v6, v6, Lcom/android/server/am/ProcessRecord;->persistent:Z

    if-eqz v6, :cond_1

    .line 17510
    add-int/lit8 v11, v11, 0x1

    .line 17503
    :cond_1
    :goto_2
    add-int/lit8 v5, v5, 0x1

    goto :goto_1

    .line 17500
    :cond_2
    add-int/lit8 v2, v2, 0x1

    goto :goto_0

    .line 17515
    :cond_3
    const/4 v1, 0x0

    :goto_3
    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mIsolatedProcesses:Landroid/util/SparseArray;

    invoke-virtual {v2}, Landroid/util/SparseArray;->size()I

    move-result v2

    const-wide v14, 0x20b00000002L

    if-ge v1, v2, :cond_5

    .line 17516
    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mIsolatedProcesses:Landroid/util/SparseArray;

    invoke-virtual {v2, v1}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Lcom/android/server/am/ProcessRecord;

    .line 17517
    if-eqz v9, :cond_4

    iget-object v3, v2, Lcom/android/server/am/ProcessRecord;->pkgList:Landroid/util/ArrayMap;

    invoke-virtual {v3, v9}, Landroid/util/ArrayMap;->containsKey(Ljava/lang/Object;)Z

    move-result v3

    if-nez v3, :cond_4

    .line 17518
    goto :goto_4

    .line 17520
    :cond_4
    invoke-virtual {v2, v8, v14, v15}, Lcom/android/server/am/ProcessRecord;->writeToProto(Landroid/util/proto/ProtoOutputStream;J)V

    .line 17515
    :goto_4
    add-int/lit8 v1, v1, 0x1

    goto :goto_3

    .line 17523
    :cond_5
    const/4 v1, 0x0

    :goto_5
    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mActiveInstrumentation:Ljava/util/ArrayList;

    invoke-virtual {v2}, Ljava/util/ArrayList;->size()I

    move-result v2

    if-ge v1, v2, :cond_7

    .line 17524
    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mActiveInstrumentation:Ljava/util/ArrayList;

    invoke-virtual {v2, v1}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Lcom/android/server/am/ActiveInstrumentation;

    .line 17525
    if-eqz v9, :cond_6

    iget-object v3, v2, Lcom/android/server/am/ActiveInstrumentation;->mClass:Landroid/content/ComponentName;

    invoke-virtual {v3}, Landroid/content/ComponentName;->getPackageName()Ljava/lang/String;

    move-result-object v3

    invoke-virtual {v3, v9}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v3

    if-nez v3, :cond_6

    iget-object v3, v2, Lcom/android/server/am/ActiveInstrumentation;->mTargetInfo:Landroid/content/pm/ApplicationInfo;

    iget-object v3, v3, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;

    .line 17526
    invoke-virtual {v3, v9}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v3

    if-nez v3, :cond_6

    .line 17527
    goto :goto_6

    .line 17529
    :cond_6
    const-wide v3, 0x20b00000003L

    invoke-virtual {v2, v8, v3, v4}, Lcom/android/server/am/ActiveInstrumentation;->writeToProto(Landroid/util/proto/ProtoOutputStream;J)V

    .line 17523
    :goto_6
    add-int/lit8 v1, v1, 0x1

    goto :goto_5

    .line 17532
    :cond_7
    invoke-direct {v0, v9}, Lcom/android/server/am/ActivityManagerService;->getAppId(Ljava/lang/String;)I

    move-result v1

    .line 17533
    const/4 v2, 0x0

    :goto_7
    iget-object v3, v0, Lcom/android/server/am/ActivityManagerService;->mActiveUids:Landroid/util/SparseArray;

    invoke-virtual {v3}, Landroid/util/SparseArray;->size()I

    move-result v3

    if-ge v2, v3, :cond_9

    .line 17534
    iget-object v3, v0, Lcom/android/server/am/ActivityManagerService;->mActiveUids:Landroid/util/SparseArray;

    invoke-virtual {v3, v2}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;

    move-result-object v3

    check-cast v3, Lcom/android/server/am/UidRecord;

    .line 17535
    if-eqz v9, :cond_8

    iget v4, v3, Lcom/android/server/am/UidRecord;->uid:I

    invoke-static {v4}, Landroid/os/UserHandle;->getAppId(I)I

    move-result v4

    if-eq v4, v1, :cond_8

    .line 17536
    goto :goto_8

    .line 17538
    :cond_8
    const-wide v4, 0x20b00000004L

    invoke-virtual {v3, v8, v4, v5}, Lcom/android/server/am/UidRecord;->writeToProto(Landroid/util/proto/ProtoOutputStream;J)V

    .line 17533
    :goto_8
    add-int/lit8 v2, v2, 0x1

    goto :goto_7

    .line 17541
    :cond_9
    const/4 v2, 0x0

    :goto_9
    iget-object v3, v0, Lcom/android/server/am/ActivityManagerService;->mValidateUids:Landroid/util/SparseArray;

    invoke-virtual {v3}, Landroid/util/SparseArray;->size()I

    move-result v3

    if-ge v2, v3, :cond_b

    .line 17542
    iget-object v3, v0, Lcom/android/server/am/ActivityManagerService;->mValidateUids:Landroid/util/SparseArray;

    invoke-virtual {v3, v2}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;

    move-result-object v3

    check-cast v3, Lcom/android/server/am/UidRecord;

    .line 17543
    if-eqz v9, :cond_a

    iget v4, v3, Lcom/android/server/am/UidRecord;->uid:I

    invoke-static {v4}, Landroid/os/UserHandle;->getAppId(I)I

    move-result v4

    if-eq v4, v1, :cond_a

    .line 17544
    goto :goto_a

    .line 17546
    :cond_a
    const-wide v4, 0x20b00000005L

    invoke-virtual {v3, v8, v4, v5}, Lcom/android/server/am/UidRecord;->writeToProto(Landroid/util/proto/ProtoOutputStream;J)V

    .line 17541
    :goto_a
    add-int/lit8 v2, v2, 0x1

    goto :goto_9

    .line 17549
    :cond_b
    iget-object v1, v0, Lcom/android/server/am/ActivityManagerService;->mLruProcesses:Ljava/util/ArrayList;

    invoke-virtual {v1}, Ljava/util/ArrayList;->size()I

    move-result v1

    const-wide v6, 0x10500000003L

    const-wide v4, 0x10500000002L

    const-wide v2, 0x10500000001L

    if-lez v1, :cond_c

    .line 17550
    move/from16 v16, v11

    const-wide v10, 0x10b00000006L

    invoke-virtual {v8, v10, v11}, Landroid/util/proto/ProtoOutputStream;->start(J)J

    move-result-wide v10

    .line 17551
    iget-object v1, v0, Lcom/android/server/am/ActivityManagerService;->mLruProcesses:Ljava/util/ArrayList;

    invoke-virtual {v1}, Ljava/util/ArrayList;->size()I

    move-result v1

    .line 17552
    invoke-virtual {v8, v2, v3, v1}, Landroid/util/proto/ProtoOutputStream;->write(JI)V

    .line 17553
    iget v2, v0, Lcom/android/server/am/ActivityManagerService;->mLruProcessActivityStart:I

    sub-int v2, v1, v2

    invoke-virtual {v8, v4, v5, v2}, Landroid/util/proto/ProtoOutputStream;->write(JI)V

    .line 17554
    iget v2, v0, Lcom/android/server/am/ActivityManagerService;->mLruProcessServiceStart:I

    sub-int/2addr v1, v2

    invoke-virtual {v8, v6, v7, v1}, Landroid/util/proto/ProtoOutputStream;->write(JI)V

    .line 17555
    const-wide v2, 0x20b00000004L

    iget-object v1, v0, Lcom/android/server/am/ActivityManagerService;->mLruProcesses:Ljava/util/ArrayList;

    const/16 v17, 0x0

    move-object/from16 v18, v1

    move-object v1, v8

    move-wide v14, v4

    move-object v4, v0

    move-object/from16 v5, v18

    move/from16 v6, v17

    move-object v7, v9

    invoke-static/range {v1 .. v7}, Lcom/android/server/am/ActivityManagerService;->writeProcessOomListToProto(Landroid/util/proto/ProtoOutputStream;JLcom/android/server/am/ActivityManagerService;Ljava/util/List;ZLjava/lang/String;)Z

    .line 17557
    invoke-virtual {v8, v10, v11}, Landroid/util/proto/ProtoOutputStream;->end(J)V

    goto :goto_b

    .line 17560
    :cond_c
    move-wide v14, v4

    move/from16 v16, v11

    :goto_b
    if-eqz v9, :cond_f

    .line 17561
    iget-object v1, v0, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Landroid/util/SparseArray;

    monitor-enter v1

    .line 17562
    const/4 v2, 0x0

    :goto_c
    :try_start_0
    iget-object v3, v0, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Landroid/util/SparseArray;

    invoke-virtual {v3}, Landroid/util/SparseArray;->size()I

    move-result v3

    if-ge v2, v3, :cond_e

    .line 17563
    iget-object v3, v0, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Landroid/util/SparseArray;

    invoke-virtual {v3, v2}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;

    move-result-object v3

    check-cast v3, Lcom/android/server/am/ProcessRecord;

    .line 17564
    iget-object v4, v3, Lcom/android/server/am/ProcessRecord;->pkgList:Landroid/util/ArrayMap;

    invoke-virtual {v4, v9}, Landroid/util/ArrayMap;->containsKey(Ljava/lang/Object;)Z

    move-result v4

    if-nez v4, :cond_d

    .line 17565
    goto :goto_d

    .line 17567
    :cond_d
    const-wide v4, 0x20b00000007L

    invoke-virtual {v3, v8, v4, v5}, Lcom/android/server/am/ProcessRecord;->writeToProto(Landroid/util/proto/ProtoOutputStream;J)V

    .line 17562
    :goto_d
    add-int/lit8 v2, v2, 0x1

    goto :goto_c

    .line 17569
    :cond_e
    monitor-exit v1

    goto :goto_e

    :catchall_0
    move-exception v0

    monitor-exit v1
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    throw v0

    .line 17572
    :cond_f
    :goto_e
    iget-object v1, v0, Lcom/android/server/am/ActivityManagerService;->mImportantProcesses:Landroid/util/SparseArray;

    invoke-virtual {v1}, Landroid/util/SparseArray;->size()I

    move-result v1

    if-lez v1, :cond_13

    .line 17573
    iget-object v1, v0, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Landroid/util/SparseArray;

    monitor-enter v1

    .line 17574
    const/4 v2, 0x0

    :goto_f
    :try_start_1
    iget-object v3, v0, Lcom/android/server/am/ActivityManagerService;->mImportantProcesses:Landroid/util/SparseArray;

    invoke-virtual {v3}, Landroid/util/SparseArray;->size()I

    move-result v3

    if-ge v2, v3, :cond_12

    .line 17575
    iget-object v3, v0, Lcom/android/server/am/ActivityManagerService;->mImportantProcesses:Landroid/util/SparseArray;

    invoke-virtual {v3, v2}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;

    move-result-object v3

    check-cast v3, Lcom/android/server/am/ActivityManagerService$ImportanceToken;

    .line 17576
    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Landroid/util/SparseArray;

    iget v5, v3, Lcom/android/server/am/ActivityManagerService$ImportanceToken;->pid:I

    invoke-virtual {v4, v5}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    move-result-object v4

    check-cast v4, Lcom/android/server/am/ProcessRecord;

    .line 17577
    if-eqz v9, :cond_10

    if-eqz v4, :cond_11

    iget-object v4, v4, Lcom/android/server/am/ProcessRecord;->pkgList:Landroid/util/ArrayMap;

    .line 17578
    invoke-virtual {v4, v9}, Landroid/util/ArrayMap;->containsKey(Ljava/lang/Object;)Z

    move-result v4

    if-nez v4, :cond_10

    .line 17579
    goto :goto_10

    .line 17581
    :cond_10
    const-wide v4, 0x20b00000008L

    invoke-virtual {v3, v8, v4, v5}, Lcom/android/server/am/ActivityManagerService$ImportanceToken;->writeToProto(Landroid/util/proto/ProtoOutputStream;J)V

    .line 17574
    :cond_11
    :goto_10
    add-int/lit8 v2, v2, 0x1

    goto :goto_f

    .line 17583
    :cond_12
    monitor-exit v1

    goto :goto_11

    :catchall_1
    move-exception v0

    monitor-exit v1
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_1

    throw v0

    .line 17586
    :cond_13
    :goto_11
    const/4 v1, 0x0

    :goto_12
    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mPersistentStartingProcesses:Ljava/util/ArrayList;

    invoke-virtual {v2}, Ljava/util/ArrayList;->size()I

    move-result v2

    if-ge v1, v2, :cond_15

    .line 17587
    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mPersistentStartingProcesses:Ljava/util/ArrayList;

    invoke-virtual {v2, v1}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Lcom/android/server/am/ProcessRecord;

    .line 17588
    if-eqz v9, :cond_14

    iget-object v3, v2, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget-object v3, v3, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;

    invoke-virtual {v9, v3}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v3

    if-nez v3, :cond_14

    .line 17589
    goto :goto_13

    .line 17591
    :cond_14
    const-wide v3, 0x20b00000009L

    invoke-virtual {v2, v8, v3, v4}, Lcom/android/server/am/ProcessRecord;->writeToProto(Landroid/util/proto/ProtoOutputStream;J)V

    .line 17586
    :goto_13
    add-int/lit8 v1, v1, 0x1

    goto :goto_12

    .line 17594
    :cond_15
    const/4 v1, 0x0

    :goto_14
    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mRemovedProcesses:Ljava/util/ArrayList;

    invoke-virtual {v2}, Ljava/util/ArrayList;->size()I

    move-result v2

    if-ge v1, v2, :cond_17

    .line 17595
    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mRemovedProcesses:Ljava/util/ArrayList;

    invoke-virtual {v2, v1}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Lcom/android/server/am/ProcessRecord;

    .line 17596
    if-eqz v9, :cond_16

    iget-object v3, v2, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget-object v3, v3, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;

    invoke-virtual {v9, v3}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v3

    if-nez v3, :cond_16

    .line 17597
    goto :goto_15

    .line 17599
    :cond_16
    const-wide v3, 0x20b0000000aL

    invoke-virtual {v2, v8, v3, v4}, Lcom/android/server/am/ProcessRecord;->writeToProto(Landroid/util/proto/ProtoOutputStream;J)V

    .line 17594
    :goto_15
    add-int/lit8 v1, v1, 0x1

    goto :goto_14

    .line 17602
    :cond_17
    const/4 v1, 0x0

    :goto_16
    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mProcessesOnHold:Ljava/util/ArrayList;

    invoke-virtual {v2}, Ljava/util/ArrayList;->size()I

    move-result v2

    if-ge v1, v2, :cond_19

    .line 17603
    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mProcessesOnHold:Ljava/util/ArrayList;

    invoke-virtual {v2, v1}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Lcom/android/server/am/ProcessRecord;

    .line 17604
    if-eqz v9, :cond_18

    iget-object v3, v2, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget-object v3, v3, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;

    invoke-virtual {v9, v3}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v3

    if-nez v3, :cond_18

    .line 17605
    goto :goto_17

    .line 17607
    :cond_18
    const-wide v3, 0x20b0000000bL

    invoke-virtual {v2, v8, v3, v4}, Lcom/android/server/am/ProcessRecord;->writeToProto(Landroid/util/proto/ProtoOutputStream;J)V

    .line 17602
    :goto_17
    add-int/lit8 v1, v1, 0x1

    goto :goto_16

    .line 17610
    :cond_19
    const-wide v1, 0x20b0000000cL

    invoke-virtual {v0, v8, v1, v2, v9}, Lcom/android/server/am/ActivityManagerService;->writeProcessesToGcToProto(Landroid/util/proto/ProtoOutputStream;JLjava/lang/String;)V

    .line 17611
    iget-object v1, v0, Lcom/android/server/am/ActivityManagerService;->mAppErrors:Lcom/android/server/am/AppErrors;

    const-wide v2, 0x10b0000000dL

    invoke-virtual {v1, v8, v2, v3, v9}, Lcom/android/server/am/AppErrors;->writeToProto(Landroid/util/proto/ProtoOutputStream;JLjava/lang/String;)V

    .line 17613
    if-nez v9, :cond_1a

    .line 17614
    iget-object v1, v0, Lcom/android/server/am/ActivityManagerService;->mUserController:Lcom/android/server/am/UserController;

    const-wide v2, 0x10b0000000eL

    invoke-virtual {v1, v8, v2, v3}, Lcom/android/server/am/UserController;->writeToProto(Landroid/util/proto/ProtoOutputStream;J)V

    .line 17615
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/am/ActivityManagerService;->getGlobalConfiguration()Landroid/content/res/Configuration;

    move-result-object v1

    const-wide v2, 0x10b00000013L

    invoke-virtual {v1, v8, v2, v3}, Landroid/content/res/Configuration;->writeToProto(Landroid/util/proto/ProtoOutputStream;J)V

    .line 17616
    const-wide v1, 0x10800000015L

    invoke-virtual/range {p0 .. p0}, Lcom/android/server/am/ActivityManagerService;->getFocusedStack()Lcom/android/server/am/ActivityStack;

    move-result-object v3

    iget-boolean v3, v3, Lcom/android/server/am/ActivityStack;->mConfigWillChange:Z

    invoke-virtual {v8, v1, v2, v3}, Landroid/util/proto/ProtoOutputStream;->write(JZ)V

    .line 17619
    :cond_1a
    iget-object v1, v0, Lcom/android/server/am/ActivityManagerService;->mHomeProcess:Lcom/android/server/am/ProcessRecord;

    if-eqz v1, :cond_1c

    if-eqz v9, :cond_1b

    iget-object v1, v0, Lcom/android/server/am/ActivityManagerService;->mHomeProcess:Lcom/android/server/am/ProcessRecord;

    iget-object v1, v1, Lcom/android/server/am/ProcessRecord;->pkgList:Landroid/util/ArrayMap;

    .line 17620
    invoke-virtual {v1, v9}, Landroid/util/ArrayMap;->containsKey(Ljava/lang/Object;)Z

    move-result v1

    if-eqz v1, :cond_1c

    .line 17621
    :cond_1b
    iget-object v1, v0, Lcom/android/server/am/ActivityManagerService;->mHomeProcess:Lcom/android/server/am/ProcessRecord;

    const-wide v2, 0x10b0000000fL

    invoke-virtual {v1, v8, v2, v3}, Lcom/android/server/am/ProcessRecord;->writeToProto(Landroid/util/proto/ProtoOutputStream;J)V

    .line 17624
    :cond_1c
    iget-object v1, v0, Lcom/android/server/am/ActivityManagerService;->mPreviousProcess:Lcom/android/server/am/ProcessRecord;

    if-eqz v1, :cond_1e

    if-eqz v9, :cond_1d

    iget-object v1, v0, Lcom/android/server/am/ActivityManagerService;->mPreviousProcess:Lcom/android/server/am/ProcessRecord;

    iget-object v1, v1, Lcom/android/server/am/ProcessRecord;->pkgList:Landroid/util/ArrayMap;

    .line 17625
    invoke-virtual {v1, v9}, Landroid/util/ArrayMap;->containsKey(Ljava/lang/Object;)Z

    move-result v1

    if-eqz v1, :cond_1e

    .line 17626
    :cond_1d
    iget-object v1, v0, Lcom/android/server/am/ActivityManagerService;->mPreviousProcess:Lcom/android/server/am/ProcessRecord;

    const-wide v2, 0x10b00000010L

    invoke-virtual {v1, v8, v2, v3}, Lcom/android/server/am/ProcessRecord;->writeToProto(Landroid/util/proto/ProtoOutputStream;J)V

    .line 17627
    const-wide v1, 0x10300000011L

    iget-wide v3, v0, Lcom/android/server/am/ActivityManagerService;->mPreviousProcessVisibleTime:J

    invoke-virtual {v8, v1, v2, v3, v4}, Landroid/util/proto/ProtoOutputStream;->write(JJ)V

    .line 17630
    :cond_1e
    iget-object v1, v0, Lcom/android/server/am/ActivityManagerService;->mHeavyWeightProcess:Lcom/android/server/am/ProcessRecord;

    if-eqz v1, :cond_20

    if-eqz v9, :cond_1f

    iget-object v1, v0, Lcom/android/server/am/ActivityManagerService;->mHeavyWeightProcess:Lcom/android/server/am/ProcessRecord;

    iget-object v1, v1, Lcom/android/server/am/ProcessRecord;->pkgList:Landroid/util/ArrayMap;

    .line 17631
    invoke-virtual {v1, v9}, Landroid/util/ArrayMap;->containsKey(Ljava/lang/Object;)Z

    move-result v1

    if-eqz v1, :cond_20

    .line 17632
    :cond_1f
    iget-object v1, v0, Lcom/android/server/am/ActivityManagerService;->mHeavyWeightProcess:Lcom/android/server/am/ProcessRecord;

    const-wide v2, 0x10b00000012L

    invoke-virtual {v1, v8, v2, v3}, Lcom/android/server/am/ProcessRecord;->writeToProto(Landroid/util/proto/ProtoOutputStream;J)V

    .line 17635
    :cond_20
    iget-object v1, v0, Lcom/android/server/am/ActivityManagerService;->mCompatModePackages:Lcom/android/server/am/CompatModePackages;

    invoke-virtual {v1}, Lcom/android/server/am/CompatModePackages;->getPackages()Ljava/util/HashMap;

    move-result-object v1

    invoke-virtual {v1}, Ljava/util/HashMap;->entrySet()Ljava/util/Set;

    move-result-object v1

    invoke-interface {v1}, Ljava/util/Set;->iterator()Ljava/util/Iterator;

    move-result-object v1

    :goto_18
    invoke-interface {v1}, Ljava/util/Iterator;->hasNext()Z

    move-result v2

    const-wide v3, 0x10900000001L

    if-eqz v2, :cond_23

    invoke-interface {v1}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Ljava/util/Map$Entry;

    .line 17636
    invoke-interface {v2}, Ljava/util/Map$Entry;->getKey()Ljava/lang/Object;

    move-result-object v5

    check-cast v5, Ljava/lang/String;

    .line 17637
    invoke-interface {v2}, Ljava/util/Map$Entry;->getValue()Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Ljava/lang/Integer;

    invoke-virtual {v2}, Ljava/lang/Integer;->intValue()I

    move-result v2

    .line 17638
    if-eqz v9, :cond_21

    invoke-virtual {v9, v5}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v6

    if-eqz v6, :cond_22

    .line 17639
    :cond_21
    const-wide v6, 0x20b00000016L

    invoke-virtual {v8, v6, v7}, Landroid/util/proto/ProtoOutputStream;->start(J)J

    move-result-wide v6

    .line 17640
    invoke-virtual {v8, v3, v4, v5}, Landroid/util/proto/ProtoOutputStream;->write(JLjava/lang/String;)V

    .line 17641
    invoke-virtual {v8, v14, v15, v2}, Landroid/util/proto/ProtoOutputStream;->write(JI)V

    .line 17642
    invoke-virtual {v8, v6, v7}, Landroid/util/proto/ProtoOutputStream;->end(J)V

    .line 17644
    :cond_22
    goto :goto_18

    .line 17646
    :cond_23
    iget-object v1, v0, Lcom/android/server/am/ActivityManagerService;->mUidObservers:Landroid/os/RemoteCallbackList;

    invoke-virtual {v1}, Landroid/os/RemoteCallbackList;->getRegisteredCallbackCount()I

    move-result v1

    .line 17647
    const/4 v2, 0x0

    :goto_19
    if-ge v2, v1, :cond_26

    .line 17648
    iget-object v5, v0, Lcom/android/server/am/ActivityManagerService;->mUidObservers:Landroid/os/RemoteCallbackList;

    .line 17649
    invoke-virtual {v5, v2}, Landroid/os/RemoteCallbackList;->getRegisteredCallbackCookie(I)Ljava/lang/Object;

    move-result-object v5

    check-cast v5, Lcom/android/server/am/ActivityManagerService$UidObserverRegistration;

    .line 17650
    if-eqz v9, :cond_24

    iget-object v6, v5, Lcom/android/server/am/ActivityManagerService$UidObserverRegistration;->pkg:Ljava/lang/String;

    invoke-virtual {v9, v6}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v6

    if-eqz v6, :cond_25

    .line 17651
    :cond_24
    const-wide v6, 0x20b00000017L

    invoke-virtual {v5, v8, v6, v7}, Lcom/android/server/am/ActivityManagerService$UidObserverRegistration;->writeToProto(Landroid/util/proto/ProtoOutputStream;J)V

    .line 17647
    :cond_25
    add-int/lit8 v2, v2, 0x1

    goto :goto_19

    .line 17655
    :cond_26
    iget-object v1, v0, Lcom/android/server/am/ActivityManagerService;->mDeviceIdleWhitelist:[I

    array-length v2, v1

    const/4 v5, 0x0

    :goto_1a
    if-ge v5, v2, :cond_27

    aget v6, v1, v5

    .line 17656
    const-wide v10, 0x20500000018L

    invoke-virtual {v8, v10, v11, v6}, Landroid/util/proto/ProtoOutputStream;->write(JI)V

    .line 17655
    add-int/lit8 v5, v5, 0x1

    goto :goto_1a

    .line 17659
    :cond_27
    iget-object v1, v0, Lcom/android/server/am/ActivityManagerService;->mDeviceIdleTempWhitelist:[I

    array-length v2, v1

    const/4 v5, 0x0

    :goto_1b
    if-ge v5, v2, :cond_28

    aget v6, v1, v5

    .line 17660
    const-wide v10, 0x20500000019L

    invoke-virtual {v8, v10, v11, v6}, Landroid/util/proto/ProtoOutputStream;->write(JI)V

    .line 17659
    add-int/lit8 v5, v5, 0x1

    goto :goto_1b

    .line 17663
    :cond_28
    iget-object v1, v0, Lcom/android/server/am/ActivityManagerService;->mPendingTempWhitelist:Landroid/util/SparseArray;

    invoke-virtual {v1}, Landroid/util/SparseArray;->size()I

    move-result v1

    if-lez v1, :cond_29

    .line 17664
    const/4 v1, 0x0

    :goto_1c
    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mPendingTempWhitelist:Landroid/util/SparseArray;

    invoke-virtual {v2}, Landroid/util/SparseArray;->size()I

    move-result v2

    if-ge v1, v2, :cond_29

    .line 17665
    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mPendingTempWhitelist:Landroid/util/SparseArray;

    invoke-virtual {v2, v1}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Lcom/android/server/am/ActivityManagerService$PendingTempWhitelist;

    const-wide v5, 0x20b0000001aL

    invoke-virtual {v2, v8, v5, v6}, Lcom/android/server/am/ActivityManagerService$PendingTempWhitelist;->writeToProto(Landroid/util/proto/ProtoOutputStream;J)V

    .line 17664
    add-int/lit8 v1, v1, 0x1

    goto :goto_1c

    .line 17670
    :cond_29
    const-wide v1, 0x10800000004L

    const-wide v5, 0x10800000003L

    if-nez v9, :cond_2c

    .line 17671
    const-wide v14, 0x10b0000001bL

    invoke-virtual {v8, v14, v15}, Landroid/util/proto/ProtoOutputStream;->start(J)J

    move-result-wide v14

    .line 17672
    const-wide v12, 0x10e00000001L

    iget v7, v0, Lcom/android/server/am/ActivityManagerService;->mWakefulness:I

    .line 17673
    invoke-static {v7}, Landroid/os/PowerManagerInternal;->wakefulnessToProtoEnum(I)I

    move-result v7

    .line 17672
    invoke-virtual {v8, v12, v13, v7}, Landroid/util/proto/ProtoOutputStream;->write(JI)V

    .line 17674
    iget-object v7, v0, Lcom/android/server/am/ActivityManagerService;->mStackSupervisor:Lcom/android/server/am/ActivityStackSupervisor;

    iget-object v7, v7, Lcom/android/server/am/ActivityStackSupervisor;->mSleepTokens:Ljava/util/ArrayList;

    invoke-virtual {v7}, Ljava/util/ArrayList;->iterator()Ljava/util/Iterator;

    move-result-object v7

    :goto_1d
    invoke-interface {v7}, Ljava/util/Iterator;->hasNext()Z

    move-result v12

    if-eqz v12, :cond_2a

    invoke-interface {v7}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v12

    check-cast v12, Landroid/app/ActivityManagerInternal$SleepToken;

    .line 17675
    const-wide v10, 0x20900000002L

    invoke-virtual {v12}, Ljava/lang/Object;->toString()Ljava/lang/String;

    move-result-object v12

    invoke-virtual {v8, v10, v11, v12}, Landroid/util/proto/ProtoOutputStream;->write(JLjava/lang/String;)V

    .line 17676
    goto :goto_1d

    .line 17677
    :cond_2a
    iget-boolean v7, v0, Lcom/android/server/am/ActivityManagerService;->mSleeping:Z

    invoke-virtual {v8, v5, v6, v7}, Landroid/util/proto/ProtoOutputStream;->write(JZ)V

    .line 17678
    iget-boolean v7, v0, Lcom/android/server/am/ActivityManagerService;->mShuttingDown:Z

    invoke-virtual {v8, v1, v2, v7}, Landroid/util/proto/ProtoOutputStream;->write(JZ)V

    .line 17679
    const-wide v10, 0x10800000005L

    iget-boolean v7, v0, Lcom/android/server/am/ActivityManagerService;->mTestPssMode:Z

    invoke-virtual {v8, v10, v11, v7}, Landroid/util/proto/ProtoOutputStream;->write(JZ)V

    .line 17680
    invoke-virtual {v8, v14, v15}, Landroid/util/proto/ProtoOutputStream;->end(J)V

    .line 17682
    iget-object v7, v0, Lcom/android/server/am/ActivityManagerService;->mRunningVoice:Landroid/service/voice/IVoiceInteractionSession;

    if-eqz v7, :cond_2b

    .line 17683
    const-wide v10, 0x10b0000001cL

    invoke-virtual {v8, v10, v11}, Landroid/util/proto/ProtoOutputStream;->start(J)J

    move-result-wide v10

    .line 17684
    iget-object v7, v0, Lcom/android/server/am/ActivityManagerService;->mRunningVoice:Landroid/service/voice/IVoiceInteractionSession;

    invoke-virtual {v7}, Ljava/lang/Object;->toString()Ljava/lang/String;

    move-result-object v7

    invoke-virtual {v8, v3, v4, v7}, Landroid/util/proto/ProtoOutputStream;->write(JLjava/lang/String;)V

    .line 17685
    iget-object v7, v0, Lcom/android/server/am/ActivityManagerService;->mVoiceWakeLock:Landroid/os/PowerManager$WakeLock;

    const-wide v12, 0x10b00000002L

    invoke-virtual {v7, v8, v12, v13}, Landroid/os/PowerManager$WakeLock;->writeToProto(Landroid/util/proto/ProtoOutputStream;J)V

    .line 17686
    invoke-virtual {v8, v10, v11}, Landroid/util/proto/ProtoOutputStream;->end(J)V

    .line 17689
    :cond_2b
    iget-object v7, v0, Lcom/android/server/am/ActivityManagerService;->mVrController:Lcom/android/server/am/VrController;

    const-wide v10, 0x10b0000001dL

    invoke-virtual {v7, v8, v10, v11}, Lcom/android/server/am/VrController;->writeToProto(Landroid/util/proto/ProtoOutputStream;J)V

    .line 17692
    :cond_2c
    iget-object v7, v0, Lcom/android/server/am/ActivityManagerService;->mDebugApp:Ljava/lang/String;

    const-wide v10, 0x10900000002L

    if-nez v7, :cond_2d

    iget-object v7, v0, Lcom/android/server/am/ActivityManagerService;->mOrigDebugApp:Ljava/lang/String;

    if-nez v7, :cond_2d

    iget-boolean v7, v0, Lcom/android/server/am/ActivityManagerService;->mDebugTransient:Z

    if-nez v7, :cond_2d

    iget-boolean v7, v0, Lcom/android/server/am/ActivityManagerService;->mOrigWaitForDebugger:Z

    if-eqz v7, :cond_2f

    .line 17694
    :cond_2d
    if-eqz v9, :cond_2e

    iget-object v7, v0, Lcom/android/server/am/ActivityManagerService;->mDebugApp:Ljava/lang/String;

    invoke-virtual {v9, v7}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v7

    if-nez v7, :cond_2e

    iget-object v7, v0, Lcom/android/server/am/ActivityManagerService;->mOrigDebugApp:Ljava/lang/String;

    .line 17695
    invoke-virtual {v9, v7}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v7

    if-eqz v7, :cond_2f

    .line 17696
    :cond_2e
    const-wide v12, 0x10b0000001eL

    invoke-virtual {v8, v12, v13}, Landroid/util/proto/ProtoOutputStream;->start(J)J

    move-result-wide v12

    .line 17697
    iget-object v7, v0, Lcom/android/server/am/ActivityManagerService;->mDebugApp:Ljava/lang/String;

    invoke-virtual {v8, v3, v4, v7}, Landroid/util/proto/ProtoOutputStream;->write(JLjava/lang/String;)V

    .line 17698
    iget-object v7, v0, Lcom/android/server/am/ActivityManagerService;->mOrigDebugApp:Ljava/lang/String;

    invoke-virtual {v8, v10, v11, v7}, Landroid/util/proto/ProtoOutputStream;->write(JLjava/lang/String;)V

    .line 17699
    iget-boolean v7, v0, Lcom/android/server/am/ActivityManagerService;->mDebugTransient:Z

    invoke-virtual {v8, v5, v6, v7}, Landroid/util/proto/ProtoOutputStream;->write(JZ)V

    .line 17700
    iget-boolean v5, v0, Lcom/android/server/am/ActivityManagerService;->mOrigWaitForDebugger:Z

    invoke-virtual {v8, v1, v2, v5}, Landroid/util/proto/ProtoOutputStream;->write(JZ)V

    .line 17701
    invoke-virtual {v8, v12, v13}, Landroid/util/proto/ProtoOutputStream;->end(J)V

    .line 17705
    :cond_2f
    iget-object v1, v0, Lcom/android/server/am/ActivityManagerService;->mCurAppTimeTracker:Lcom/android/server/am/AppTimeTracker;

    if-eqz v1, :cond_30

    .line 17706
    iget-object v1, v0, Lcom/android/server/am/ActivityManagerService;->mCurAppTimeTracker:Lcom/android/server/am/AppTimeTracker;

    const-wide v5, 0x10b0000001fL

    const/4 v2, 0x1

    invoke-virtual {v1, v8, v5, v6, v2}, Lcom/android/server/am/AppTimeTracker;->writeToProto(Landroid/util/proto/ProtoOutputStream;JZ)V

    .line 17709
    :cond_30
    iget-object v1, v0, Lcom/android/server/am/ActivityManagerService;->mMemWatchProcesses:Lcom/android/internal/app/ProcessMap;

    invoke-virtual {v1}, Lcom/android/internal/app/ProcessMap;->getMap()Landroid/util/ArrayMap;

    move-result-object v1

    invoke-virtual {v1}, Landroid/util/ArrayMap;->size()I

    move-result v1

    if-lez v1, :cond_33

    .line 17710
    const-wide v1, 0x10b00000020L

    invoke-virtual {v8, v1, v2}, Landroid/util/proto/ProtoOutputStream;->start(J)J

    move-result-wide v1

    .line 17711
    iget-object v7, v0, Lcom/android/server/am/ActivityManagerService;->mMemWatchProcesses:Lcom/android/internal/app/ProcessMap;

    invoke-virtual {v7}, Lcom/android/internal/app/ProcessMap;->getMap()Landroid/util/ArrayMap;

    move-result-object v7

    .line 17712
    const/4 v12, 0x0

    :goto_1e
    invoke-virtual {v7}, Landroid/util/ArrayMap;->size()I

    move-result v13

    if-ge v12, v13, :cond_32

    .line 17713
    invoke-virtual {v7, v12}, Landroid/util/ArrayMap;->keyAt(I)Ljava/lang/Object;

    move-result-object v13

    check-cast v13, Ljava/lang/String;

    .line 17714
    invoke-virtual {v7, v12}, Landroid/util/ArrayMap;->valueAt(I)Ljava/lang/Object;

    move-result-object v14

    check-cast v14, Landroid/util/SparseArray;

    .line 17715
    const-wide v5, 0x20b00000001L

    invoke-virtual {v8, v5, v6}, Landroid/util/proto/ProtoOutputStream;->start(J)J

    move-result-wide v10

    .line 17716
    invoke-virtual {v8, v3, v4, v13}, Landroid/util/proto/ProtoOutputStream;->write(JLjava/lang/String;)V

    .line 17717
    const/4 v13, 0x0

    :goto_1f
    invoke-virtual {v14}, Landroid/util/SparseArray;->size()I

    move-result v15

    if-ge v13, v15, :cond_31

    .line 17718
    const-wide v5, 0x20b00000002L

    invoke-virtual {v8, v5, v6}, Landroid/util/proto/ProtoOutputStream;->start(J)J

    move-result-wide v3

    .line 17719
    invoke-virtual {v14, v13}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;

    move-result-object v15

    check-cast v15, Landroid/util/Pair;

    .line 17720
    invoke-virtual {v14, v13}, Landroid/util/SparseArray;->keyAt(I)I

    move-result v5

    move-object/from16 v19, v7

    const-wide v6, 0x10500000001L

    invoke-virtual {v8, v6, v7, v5}, Landroid/util/proto/ProtoOutputStream;->write(JI)V

    .line 17721
    iget-object v5, v15, Landroid/util/Pair;->first:Ljava/lang/Object;

    check-cast v5, Ljava/lang/Long;

    .line 17722
    invoke-virtual {v5}, Ljava/lang/Long;->longValue()J

    move-result-wide v6

    new-instance v5, Ljava/lang/StringBuilder;

    invoke-direct {v5}, Ljava/lang/StringBuilder;-><init>()V

    invoke-static {v6, v7, v5}, Landroid/util/DebugUtils;->sizeValueToString(JLjava/lang/StringBuilder;)Ljava/lang/String;

    move-result-object v5

    .line 17721
    const-wide v6, 0x10900000002L

    invoke-virtual {v8, v6, v7, v5}, Landroid/util/proto/ProtoOutputStream;->write(JLjava/lang/String;)V

    .line 17723
    const-wide v5, 0x10900000003L

    iget-object v7, v15, Landroid/util/Pair;->second:Ljava/lang/Object;

    check-cast v7, Ljava/lang/String;

    invoke-virtual {v8, v5, v6, v7}, Landroid/util/proto/ProtoOutputStream;->write(JLjava/lang/String;)V

    .line 17724
    invoke-virtual {v8, v3, v4}, Landroid/util/proto/ProtoOutputStream;->end(J)V

    .line 17717
    add-int/lit8 v13, v13, 0x1

    move-object/from16 v7, v19

    const-wide v3, 0x10900000001L

    const-wide v5, 0x20b00000001L

    goto :goto_1f

    .line 17726
    :cond_31
    move-object/from16 v19, v7

    invoke-virtual {v8, v10, v11}, Landroid/util/proto/ProtoOutputStream;->end(J)V

    .line 17712
    add-int/lit8 v12, v12, 0x1

    const-wide v3, 0x10900000001L

    const-wide v10, 0x10900000002L

    goto/16 :goto_1e

    .line 17729
    :cond_32
    const-wide v3, 0x10b00000002L

    invoke-virtual {v8, v3, v4}, Landroid/util/proto/ProtoOutputStream;->start(J)J

    move-result-wide v5

    .line 17730
    iget-object v3, v0, Lcom/android/server/am/ActivityManagerService;->mMemWatchDumpProcName:Ljava/lang/String;

    const-wide v10, 0x10900000001L

    invoke-virtual {v8, v10, v11, v3}, Landroid/util/proto/ProtoOutputStream;->write(JLjava/lang/String;)V

    .line 17731
    iget-object v3, v0, Lcom/android/server/am/ActivityManagerService;->mMemWatchDumpFile:Ljava/lang/String;

    const-wide v10, 0x10900000002L

    invoke-virtual {v8, v10, v11, v3}, Landroid/util/proto/ProtoOutputStream;->write(JLjava/lang/String;)V

    .line 17732
    iget v3, v0, Lcom/android/server/am/ActivityManagerService;->mMemWatchDumpPid:I

    const-wide v10, 0x10500000003L

    invoke-virtual {v8, v10, v11, v3}, Landroid/util/proto/ProtoOutputStream;->write(JI)V

    .line 17733
    iget v3, v0, Lcom/android/server/am/ActivityManagerService;->mMemWatchDumpUid:I

    const-wide v10, 0x10500000004L

    invoke-virtual {v8, v10, v11, v3}, Landroid/util/proto/ProtoOutputStream;->write(JI)V

    .line 17734
    invoke-virtual {v8, v5, v6}, Landroid/util/proto/ProtoOutputStream;->end(J)V

    .line 17736
    invoke-virtual {v8, v1, v2}, Landroid/util/proto/ProtoOutputStream;->end(J)V

    .line 17739
    :cond_33
    iget-object v1, v0, Lcom/android/server/am/ActivityManagerService;->mTrackAllocationApp:Ljava/lang/String;

    if-eqz v1, :cond_35

    .line 17740
    if-eqz v9, :cond_34

    iget-object v1, v0, Lcom/android/server/am/ActivityManagerService;->mTrackAllocationApp:Ljava/lang/String;

    invoke-virtual {v9, v1}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v1

    if-eqz v1, :cond_35

    .line 17741
    :cond_34
    const-wide v1, 0x10900000021L

    iget-object v3, v0, Lcom/android/server/am/ActivityManagerService;->mTrackAllocationApp:Ljava/lang/String;

    invoke-virtual {v8, v1, v2, v3}, Landroid/util/proto/ProtoOutputStream;->write(JLjava/lang/String;)V

    .line 17745
    :cond_35
    iget-object v1, v0, Lcom/android/server/am/ActivityManagerService;->mProfileApp:Ljava/lang/String;

    if-nez v1, :cond_36

    iget-object v1, v0, Lcom/android/server/am/ActivityManagerService;->mProfileProc:Lcom/android/server/am/ProcessRecord;

    if-nez v1, :cond_36

    iget-object v1, v0, Lcom/android/server/am/ActivityManagerService;->mProfilerInfo:Landroid/app/ProfilerInfo;

    if-eqz v1, :cond_39

    iget-object v1, v0, Lcom/android/server/am/ActivityManagerService;->mProfilerInfo:Landroid/app/ProfilerInfo;

    iget-object v1, v1, Landroid/app/ProfilerInfo;->profileFile:Ljava/lang/String;

    if-nez v1, :cond_36

    iget-object v1, v0, Lcom/android/server/am/ActivityManagerService;->mProfilerInfo:Landroid/app/ProfilerInfo;

    iget-object v1, v1, Landroid/app/ProfilerInfo;->profileFd:Landroid/os/ParcelFileDescriptor;

    if-eqz v1, :cond_39

    .line 17747
    :cond_36
    if-eqz v9, :cond_37

    iget-object v1, v0, Lcom/android/server/am/ActivityManagerService;->mProfileApp:Ljava/lang/String;

    invoke-virtual {v9, v1}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v1

    if-eqz v1, :cond_39

    .line 17748
    :cond_37
    const-wide v1, 0x10b00000022L

    invoke-virtual {v8, v1, v2}, Landroid/util/proto/ProtoOutputStream;->start(J)J

    move-result-wide v1

    .line 17749
    iget-object v3, v0, Lcom/android/server/am/ActivityManagerService;->mProfileApp:Ljava/lang/String;

    const-wide v4, 0x10900000001L

    invoke-virtual {v8, v4, v5, v3}, Landroid/util/proto/ProtoOutputStream;->write(JLjava/lang/String;)V

    .line 17750
    iget-object v3, v0, Lcom/android/server/am/ActivityManagerService;->mProfileProc:Lcom/android/server/am/ProcessRecord;

    const-wide v4, 0x10b00000002L

    invoke-virtual {v3, v8, v4, v5}, Lcom/android/server/am/ProcessRecord;->writeToProto(Landroid/util/proto/ProtoOutputStream;J)V

    .line 17751
    iget-object v3, v0, Lcom/android/server/am/ActivityManagerService;->mProfilerInfo:Landroid/app/ProfilerInfo;

    if-eqz v3, :cond_38

    .line 17752
    iget-object v3, v0, Lcom/android/server/am/ActivityManagerService;->mProfilerInfo:Landroid/app/ProfilerInfo;

    const-wide v4, 0x10b00000003L

    invoke-virtual {v3, v8, v4, v5}, Landroid/app/ProfilerInfo;->writeToProto(Landroid/util/proto/ProtoOutputStream;J)V

    .line 17753
    iget v3, v0, Lcom/android/server/am/ActivityManagerService;->mProfileType:I

    const-wide v4, 0x10500000004L

    invoke-virtual {v8, v4, v5, v3}, Landroid/util/proto/ProtoOutputStream;->write(JI)V

    .line 17755
    :cond_38
    invoke-virtual {v8, v1, v2}, Landroid/util/proto/ProtoOutputStream;->end(J)V

    .line 17759
    :cond_39
    if-eqz v9, :cond_3a

    iget-object v1, v0, Lcom/android/server/am/ActivityManagerService;->mNativeDebuggingApp:Ljava/lang/String;

    invoke-virtual {v9, v1}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v1

    if-eqz v1, :cond_3b

    .line 17760
    :cond_3a
    const-wide v1, 0x10900000023L

    iget-object v3, v0, Lcom/android/server/am/ActivityManagerService;->mNativeDebuggingApp:Ljava/lang/String;

    invoke-virtual {v8, v1, v2, v3}, Landroid/util/proto/ProtoOutputStream;->write(JLjava/lang/String;)V

    .line 17763
    :cond_3b
    if-nez v9, :cond_3d

    .line 17764
    const-wide v1, 0x10800000024L

    iget-boolean v3, v0, Lcom/android/server/am/ActivityManagerService;->mAlwaysFinishActivities:Z

    invoke-virtual {v8, v1, v2, v3}, Landroid/util/proto/ProtoOutputStream;->write(JZ)V

    .line 17765
    iget-object v1, v0, Lcom/android/server/am/ActivityManagerService;->mController:Landroid/app/IActivityController;

    if-eqz v1, :cond_3c

    .line 17766
    const-wide v1, 0x10b00000025L

    invoke-virtual {v8, v1, v2}, Landroid/util/proto/ProtoOutputStream;->start(J)J

    move-result-wide v1

    .line 17767
    iget-object v3, v0, Lcom/android/server/am/ActivityManagerService;->mController:Landroid/app/IActivityController;

    invoke-virtual {v3}, Ljava/lang/Object;->toString()Ljava/lang/String;

    move-result-object v3

    const-wide v4, 0x10900000001L

    invoke-virtual {v8, v4, v5, v3}, Landroid/util/proto/ProtoOutputStream;->write(JLjava/lang/String;)V

    .line 17768
    const-wide v3, 0x10800000002L

    iget-boolean v5, v0, Lcom/android/server/am/ActivityManagerService;->mControllerIsAMonkey:Z

    invoke-virtual {v8, v3, v4, v5}, Landroid/util/proto/ProtoOutputStream;->write(JZ)V

    .line 17769
    invoke-virtual {v8, v1, v2}, Landroid/util/proto/ProtoOutputStream;->end(J)V

    .line 17771
    :cond_3c
    const-wide v1, 0x10500000026L

    move/from16 v11, v16

    invoke-virtual {v8, v1, v2, v11}, Landroid/util/proto/ProtoOutputStream;->write(JI)V

    .line 17772
    const-wide v1, 0x10800000027L

    iget-boolean v3, v0, Lcom/android/server/am/ActivityManagerService;->mProcessesReady:Z

    invoke-virtual {v8, v1, v2, v3}, Landroid/util/proto/ProtoOutputStream;->write(JZ)V

    .line 17773
    const-wide v1, 0x10800000028L

    iget-boolean v3, v0, Lcom/android/server/am/ActivityManagerService;->mSystemReady:Z

    invoke-virtual {v8, v1, v2, v3}, Landroid/util/proto/ProtoOutputStream;->write(JZ)V

    .line 17774
    const-wide v1, 0x10800000029L

    iget-boolean v3, v0, Lcom/android/server/am/ActivityManagerService;->mBooted:Z

    invoke-virtual {v8, v1, v2, v3}, Landroid/util/proto/ProtoOutputStream;->write(JZ)V

    .line 17775
    const-wide v1, 0x1050000002aL

    iget v3, v0, Lcom/android/server/am/ActivityManagerService;->mFactoryTest:I

    invoke-virtual {v8, v1, v2, v3}, Landroid/util/proto/ProtoOutputStream;->write(JI)V

    .line 17776
    const-wide v1, 0x1080000002bL

    iget-boolean v3, v0, Lcom/android/server/am/ActivityManagerService;->mBooting:Z

    invoke-virtual {v8, v1, v2, v3}, Landroid/util/proto/ProtoOutputStream;->write(JZ)V

    .line 17777
    const-wide v1, 0x1080000002cL

    iget-boolean v3, v0, Lcom/android/server/am/ActivityManagerService;->mCallFinishBooting:Z

    invoke-virtual {v8, v1, v2, v3}, Landroid/util/proto/ProtoOutputStream;->write(JZ)V

    .line 17778
    const-wide v1, 0x1080000002dL

    iget-boolean v3, v0, Lcom/android/server/am/ActivityManagerService;->mBootAnimationComplete:Z

    invoke-virtual {v8, v1, v2, v3}, Landroid/util/proto/ProtoOutputStream;->write(JZ)V

    .line 17779
    const-wide v1, 0x1030000002eL

    iget-wide v3, v0, Lcom/android/server/am/ActivityManagerService;->mLastPowerCheckUptime:J

    invoke-virtual {v8, v1, v2, v3, v4}, Landroid/util/proto/ProtoOutputStream;->write(JJ)V

    .line 17780
    iget-object v1, v0, Lcom/android/server/am/ActivityManagerService;->mStackSupervisor:Lcom/android/server/am/ActivityStackSupervisor;

    iget-object v1, v1, Lcom/android/server/am/ActivityStackSupervisor;->mGoingToSleep:Landroid/os/PowerManager$WakeLock;

    const-wide v2, 0x10b0000002fL

    invoke-virtual {v1, v8, v2, v3}, Landroid/os/PowerManager$WakeLock;->writeToProto(Landroid/util/proto/ProtoOutputStream;J)V

    .line 17781
    iget-object v1, v0, Lcom/android/server/am/ActivityManagerService;->mStackSupervisor:Lcom/android/server/am/ActivityStackSupervisor;

    iget-object v1, v1, Lcom/android/server/am/ActivityStackSupervisor;->mLaunchingActivity:Landroid/os/PowerManager$WakeLock;

    const-wide v2, 0x10b00000030L

    invoke-virtual {v1, v8, v2, v3}, Landroid/os/PowerManager$WakeLock;->writeToProto(Landroid/util/proto/ProtoOutputStream;J)V

    .line 17782
    const-wide v1, 0x10500000031L

    iget v3, v0, Lcom/android/server/am/ActivityManagerService;->mAdjSeq:I

    invoke-virtual {v8, v1, v2, v3}, Landroid/util/proto/ProtoOutputStream;->write(JI)V

    .line 17783
    const-wide v1, 0x10500000032L

    iget v3, v0, Lcom/android/server/am/ActivityManagerService;->mLruSeq:I

    invoke-virtual {v8, v1, v2, v3}, Landroid/util/proto/ProtoOutputStream;->write(JI)V

    .line 17784
    const-wide v1, 0x10500000033L

    iget v3, v0, Lcom/android/server/am/ActivityManagerService;->mNumNonCachedProcs:I

    invoke-virtual {v8, v1, v2, v3}, Landroid/util/proto/ProtoOutputStream;->write(JI)V

    .line 17785
    const-wide v1, 0x10500000035L

    iget v3, v0, Lcom/android/server/am/ActivityManagerService;->mNumServiceProcs:I

    invoke-virtual {v8, v1, v2, v3}, Landroid/util/proto/ProtoOutputStream;->write(JI)V

    .line 17786
    const-wide v1, 0x10500000036L

    iget v3, v0, Lcom/android/server/am/ActivityManagerService;->mNewNumServiceProcs:I

    invoke-virtual {v8, v1, v2, v3}, Landroid/util/proto/ProtoOutputStream;->write(JI)V

    .line 17787
    const-wide v1, 0x10800000037L

    iget-boolean v3, v0, Lcom/android/server/am/ActivityManagerService;->mAllowLowerMemLevel:Z

    invoke-virtual {v8, v1, v2, v3}, Landroid/util/proto/ProtoOutputStream;->write(JZ)V

    .line 17788
    const-wide v1, 0x10500000038L

    iget v3, v0, Lcom/android/server/am/ActivityManagerService;->mLastMemoryLevel:I

    invoke-virtual {v8, v1, v2, v3}, Landroid/util/proto/ProtoOutputStream;->write(JI)V

    .line 17789
    const-wide v1, 0x10500000039L

    iget v3, v0, Lcom/android/server/am/ActivityManagerService;->mLastNumProcesses:I

    invoke-virtual {v8, v1, v2, v3}, Landroid/util/proto/ProtoOutputStream;->write(JI)V

    .line 17790
    invoke-static {}, Landroid/os/SystemClock;->uptimeMillis()J

    move-result-wide v9

    .line 17791
    const-wide v2, 0x10b0000003aL

    iget-wide v4, v0, Lcom/android/server/am/ActivityManagerService;->mLastIdleTime:J

    move-object v1, v8

    move-wide v6, v9

    invoke-static/range {v1 .. v7}, Landroid/util/proto/ProtoUtils;->toDuration(Landroid/util/proto/ProtoOutputStream;JJJ)V

    .line 17792
    const-wide v1, 0x1030000003bL

    invoke-direct {v0, v9, v10}, Lcom/android/server/am/ActivityManagerService;->getLowRamTimeSinceIdle(J)J

    move-result-wide v3

    invoke-virtual {v8, v1, v2, v3, v4}, Landroid/util/proto/ProtoOutputStream;->write(JJ)V

    .line 17795
    :cond_3d
    return-void
.end method
